"use strict";var Sse=Object.create;var J$=Object.defineProperty;var Mse=Object.getOwnPropertyDescriptor;var Pse=Object.getOwnPropertyNames;var Ese=Object.getPrototypeOf,Ose=Object.prototype.hasOwnProperty;var RD=(r,e)=>()=>(r&&(e=r(r=0)),e);var p=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),kse=(r,e)=>{for(var t in e)J$(r,t,{get:e[t],enumerable:!0})},kL=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Pse(e))!Ose.call(r,i)&&i!==t&&J$(r,i,{get:()=>e[i],enumerable:!(n=Mse(e,i))||n.enumerable});return r};var bD=(r,e,t)=>(t=r!=null?Sse(Ese(r)):{},kL(e||!r||!r.__esModule?J$(t,"default",{value:r,enumerable:!0}):t,r)),Ise=r=>kL(J$({},"__esModule",{value:!0}),r);var Bg=p(AD=>{var Q$=class extends Error{constructor(e,t,n){super(n),Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.code=t,this.exitCode=e,this.nestedError=void 0}},CD=class extends Q${constructor(e){super(1,"commander.invalidArgument",e),Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name}};AD.CommanderError=Q$;AD.InvalidArgumentError=CD});var Z$=p(DD=>{var{InvalidArgumentError:Fse}=Bg(),wD=class{constructor(e,t){switch(this.description=t||"",this.variadic=!1,this.parseArg=void 0,this.defaultValue=void 0,this.defaultValueDescription=void 0,this.argChoices=void 0,e[0]){case"<":this.required=!0,this._name=e.slice(1,-1);break;case"[":this.required=!1,this._name=e.slice(1,-1);break;default:this.required=!0,this._name=e;break}this._name.length>3&&this._name.slice(-3)==="..."&&(this.variadic=!0,this._name=this._name.slice(0,-3))}name(){return this._name}_concatValue(e,t){return t===this.defaultValue||!Array.isArray(t)?[e]:t.concat(e)}default(e,t){return this.defaultValue=e,this.defaultValueDescription=t,this}argParser(e){return this.parseArg=e,this}choices(e){return this.argChoices=e.slice(),this.parseArg=(t,n)=>{if(!this.argChoices.includes(t))throw new Fse(`Allowed choices are ${this.argChoices.join(", ")}.`);return this.variadic?this._concatValue(t,n):t},this}argRequired(){return this.required=!0,this}argOptional(){return this.required=!1,this}};function Nse(r){let e=r.name()+(r.variadic===!0?"...":"");return r.required?"<"+e+">":"["+e+"]"}DD.Argument=wD;DD.humanReadableArgName=Nse});var MD=p(IL=>{var{humanReadableArgName:qse}=Z$(),SD=class{constructor(){this.helpWidth=void 0,this.sortSubcommands=!1,this.sortOptions=!1,this.showGlobalOptions=!1}visibleCommands(e){let t=e.commands.filter(n=>!n._hidden);if(e._hasImplicitHelpCommand()){let[,n,i]=e._helpCommandnameAndArgs.match(/([^ ]+) *(.*)/),a=e.createCommand(n).helpOption(!1);a.description(e._helpCommandDescription),i&&a.arguments(i),t.push(a)}return this.sortSubcommands&&t.sort((n,i)=>n.name().localeCompare(i.name())),t}compareOptions(e,t){let n=i=>i.short?i.short.replace(/^-/,""):i.long.replace(/^--/,"");return n(e).localeCompare(n(t))}visibleOptions(e){let t=e.options.filter(a=>!a.hidden),n=e._hasHelpOption&&e._helpShortFlag&&!e._findOption(e._helpShortFlag),i=e._hasHelpOption&&!e._findOption(e._helpLongFlag);if(n||i){let a;n?i?a=e.createOption(e._helpFlags,e._helpDescription):a=e.createOption(e._helpShortFlag,e._helpDescription):a=e.createOption(e._helpLongFlag,e._helpDescription),t.push(a)}return this.sortOptions&&t.sort(this.compareOptions),t}visibleGlobalOptions(e){if(!this.showGlobalOptions)return[];let t=[];for(let n=e.parent;n;n=n.parent){let i=n.options.filter(a=>!a.hidden);t.push(...i)}return this.sortOptions&&t.sort(this.compareOptions),t}visibleArguments(e){return e._argsDescription&&e._args.forEach(t=>{t.description=t.description||e._argsDescription[t.name()]||""}),e._args.find(t=>t.description)?e._args:[]}subcommandTerm(e){let t=e._args.map(n=>qse(n)).join(" ");return e._name+(e._aliases[0]?"|"+e._aliases[0]:"")+(e.options.length?" [options]":"")+(t?" "+t:"")}optionTerm(e){return e.flags}argumentTerm(e){return e.name()}longestSubcommandTermLength(e,t){return t.visibleCommands(e).reduce((n,i)=>Math.max(n,t.subcommandTerm(i).length),0)}longestOptionTermLength(e,t){return t.visibleOptions(e).reduce((n,i)=>Math.max(n,t.optionTerm(i).length),0)}longestGlobalOptionTermLength(e,t){return t.visibleGlobalOptions(e).reduce((n,i)=>Math.max(n,t.optionTerm(i).length),0)}longestArgumentTermLength(e,t){return t.visibleArguments(e).reduce((n,i)=>Math.max(n,t.argumentTerm(i).length),0)}commandUsage(e){let t=e._name;e._aliases[0]&&(t=t+"|"+e._aliases[0]);let n="";for(let i=e.parent;i;i=i.parent)n=i.name()+" "+n;return n+t+" "+e.usage()}commandDescription(e){return e.description()}subcommandDescription(e){return e.summary()||e.description()}optionDescription(e){let t=[];return e.argChoices&&t.push(`choices: ${e.argChoices.map(n=>JSON.stringify(n)).join(", ")}`),e.defaultValue!==void 0&&(e.required||e.optional||e.isBoolean()&&typeof e.defaultValue=="boolean")&&t.push(`default: ${e.defaultValueDescription||JSON.stringify(e.defaultValue)}`),e.presetArg!==void 0&&e.optional&&t.push(`preset: ${JSON.stringify(e.presetArg)}`),e.envVar!==void 0&&t.push(`env: ${e.envVar}`),t.length>0?`${e.description} (${t.join(", ")})`:e.description}argumentDescription(e){let t=[];if(e.argChoices&&t.push(`choices: ${e.argChoices.map(n=>JSON.stringify(n)).join(", ")}`),e.defaultValue!==void 0&&t.push(`default: ${e.defaultValueDescription||JSON.stringify(e.defaultValue)}`),t.length>0){let n=`(${t.join(", ")})`;return e.description?`${e.description} ${n}`:n}return e.description}formatHelp(e,t){let n=t.padWidth(e,t),i=t.helpWidth||80,a=2,s=2;function o(y,_){if(_){let w=`${y.padEnd(n+s)}${_}`;return t.wrap(w,i-a,n+s)}return y}function u(y){return y.join(`
`).replace(/^/gm," ".repeat(a))}let c=[`Usage: ${t.commandUsage(e)}`,""],f=t.commandDescription(e);f.length>0&&(c=c.concat([t.wrap(f,i,0),""]));let d=t.visibleArguments(e).map(y=>o(t.argumentTerm(y),t.argumentDescription(y)));d.length>0&&(c=c.concat(["Arguments:",u(d),""]));let m=t.visibleOptions(e).map(y=>o(t.optionTerm(y),t.optionDescription(y)));if(m.length>0&&(c=c.concat(["Options:",u(m),""])),this.showGlobalOptions){let y=t.visibleGlobalOptions(e).map(_=>o(t.optionTerm(_),t.optionDescription(_)));y.length>0&&(c=c.concat(["Global Options:",u(y),""]))}let h=t.visibleCommands(e).map(y=>o(t.subcommandTerm(y),t.subcommandDescription(y)));return h.length>0&&(c=c.concat(["Commands:",u(h),""])),c.join(`
`)}padWidth(e,t){return Math.max(t.longestOptionTermLength(e,t),t.longestGlobalOptionTermLength(e,t),t.longestSubcommandTermLength(e,t),t.longestArgumentTermLength(e,t))}wrap(e,t,n,i=40){let a=" \\f\\t\\v\xA0\u1680\u2000-\u200A\u202F\u205F\u3000\uFEFF",s=new RegExp(`[\\n][${a}]+`);if(e.match(s))return e;let o=t-n;if(o<i)return e;let u=e.slice(0,n),c=e.slice(n).replace(`\r
`,`
`),f=" ".repeat(n),m="\\s\u200B",h=new RegExp(`
|.{1,${o-1}}([${m}]|$)|[^${m}]+?([${m}]|$)`,"g"),y=c.match(h)||[];return u+y.map((_,w)=>_===`
`?"":(w>0?f:"")+_.trimEnd()).join(`
`)}};IL.Help=SD});var OD=p(eT=>{var{InvalidArgumentError:xse}=Bg(),PD=class{constructor(e,t){this.flags=e,this.description=t||"",this.required=e.includes("<"),this.optional=e.includes("["),this.variadic=/\w\.\.\.[>\]]$/.test(e),this.mandatory=!1;let n=FL(e);this.short=n.shortFlag,this.long=n.longFlag,this.negate=!1,this.long&&(this.negate=this.long.startsWith("--no-")),this.defaultValue=void 0,this.defaultValueDescription=void 0,this.presetArg=void 0,this.envVar=void 0,this.parseArg=void 0,this.hidden=!1,this.argChoices=void 0,this.conflictsWith=[],this.implied=void 0}default(e,t){return this.defaultValue=e,this.defaultValueDescription=t,this}preset(e){return this.presetArg=e,this}conflicts(e){return this.conflictsWith=this.conflictsWith.concat(e),this}implies(e){let t=e;return typeof e=="string"&&(t={[e]:!0}),this.implied=Object.assign(this.implied||{},t),this}env(e){return this.envVar=e,this}argParser(e){return this.parseArg=e,this}makeOptionMandatory(e=!0){return this.mandatory=!!e,this}hideHelp(e=!0){return this.hidden=!!e,this}_concatValue(e,t){return t===this.defaultValue||!Array.isArray(t)?[e]:t.concat(e)}choices(e){return this.argChoices=e.slice(),this.parseArg=(t,n)=>{if(!this.argChoices.includes(t))throw new xse(`Allowed choices are ${this.argChoices.join(", ")}.`);return this.variadic?this._concatValue(t,n):t},this}name(){return this.long?this.long.replace(/^--/,""):this.short.replace(/^-/,"")}attributeName(){return Lse(this.name().replace(/^no-/,""))}is(e){return this.short===e||this.long===e}isBoolean(){return!this.required&&!this.optional&&!this.negate}},ED=class{constructor(e){this.positiveOptions=new Map,this.negativeOptions=new Map,this.dualOptions=new Set,e.forEach(t=>{t.negate?this.negativeOptions.set(t.attributeName(),t):this.positiveOptions.set(t.attributeName(),t)}),this.negativeOptions.forEach((t,n)=>{this.positiveOptions.has(n)&&this.dualOptions.add(n)})}valueFromOption(e,t){let n=t.attributeName();if(!this.dualOptions.has(n))return!0;let i=this.negativeOptions.get(n).presetArg,a=i!==void 0?i:!1;return t.negate===(a===e)}};function Lse(r){return r.split("-").reduce((e,t)=>e+t[0].toUpperCase()+t.slice(1))}function FL(r){let e,t,n=r.split(/[ |,]+/);return n.length>1&&!/^[[<]/.test(n[1])&&(e=n.shift()),t=n.shift(),!e&&/^-[^-]$/.test(t)&&(e=t,t=void 0),{shortFlag:e,longFlag:t}}eT.Option=PD;eT.splitOptionFlags=FL;eT.DualOptions=ED});var qL=p(NL=>{function jse(r,e){if(Math.abs(r.length-e.length)>3)return Math.max(r.length,e.length);let t=[];for(let n=0;n<=r.length;n++)t[n]=[n];for(let n=0;n<=e.length;n++)t[0][n]=n;for(let n=1;n<=e.length;n++)for(let i=1;i<=r.length;i++){let a=1;r[i-1]===e[n-1]?a=0:a=1,t[i][n]=Math.min(t[i-1][n]+1,t[i][n-1]+1,t[i-1][n-1]+a),i>1&&n>1&&r[i-1]===e[n-2]&&r[i-2]===e[n-1]&&(t[i][n]=Math.min(t[i][n],t[i-2][n-2]+1))}return t[r.length][e.length]}function Use(r,e){if(!e||e.length===0)return"";e=Array.from(new Set(e));let t=r.startsWith("--");t&&(r=r.slice(2),e=e.map(s=>s.slice(2)));let n=[],i=3,a=.4;return e.forEach(s=>{if(s.length<=1)return;let o=jse(r,s),u=Math.max(r.length,s.length);(u-o)/u>a&&(o<i?(i=o,n=[s]):o===i&&n.push(s))}),n.sort((s,o)=>s.localeCompare(o)),t&&(n=n.map(s=>`--${s}`)),n.length>1?`
(Did you mean one of ${n.join(", ")}?)`:n.length===1?`
(Did you mean ${n[0]}?)`:""}NL.suggestSimilar=Use});var GL=p(BL=>{var Bse=require("events").EventEmitter,kD=require("child_process"),El=require("path"),ID=require("fs"),pr=require("process"),{Argument:Gse,humanReadableArgName:Kse}=Z$(),{CommanderError:FD}=Bg(),{Help:Hse}=MD(),{Option:xL,splitOptionFlags:Vse,DualOptions:Wse}=OD(),{suggestSimilar:LL}=qL(),Kg=class extends Bse{constructor(e){super(),this.commands=[],this.options=[],this.parent=null,this._allowUnknownOption=!1,this._allowExcessArguments=!0,this._args=[],this.args=[],this.rawArgs=[],this.processedArgs=[],this._scriptPath=null,this._name=e||"",this._optionValues={},this._optionValueSources={},this._storeOptionsAsProperties=!1,this._actionHandler=null,this._executableHandler=!1,this._executableFile=null,this._executableDir=null,this._defaultCommandName=null,this._exitCallback=null,this._aliases=[],this._combineFlagAndOptionalValue=!0,this._description="",this._summary="",this._argsDescription=void 0,this._enablePositionalOptions=!1,this._passThroughOptions=!1,this._lifeCycleHooks={},this._showHelpAfterError=!1,this._showSuggestionAfterError=!0,this._outputConfiguration={writeOut:t=>pr.stdout.write(t),writeErr:t=>pr.stderr.write(t),getOutHelpWidth:()=>pr.stdout.isTTY?pr.stdout.columns:void 0,getErrHelpWidth:()=>pr.stderr.isTTY?pr.stderr.columns:void 0,outputError:(t,n)=>n(t)},this._hidden=!1,this._hasHelpOption=!0,this._helpFlags="-h, --help",this._helpDescription="display help for command",this._helpShortFlag="-h",this._helpLongFlag="--help",this._addImplicitHelpCommand=void 0,this._helpCommandName="help",this._helpCommandnameAndArgs="help [command]",this._helpCommandDescription="display help for command",this._helpConfiguration={}}copyInheritedSettings(e){return this._outputConfiguration=e._outputConfiguration,this._hasHelpOption=e._hasHelpOption,this._helpFlags=e._helpFlags,this._helpDescription=e._helpDescription,this._helpShortFlag=e._helpShortFlag,this._helpLongFlag=e._helpLongFlag,this._helpCommandName=e._helpCommandName,this._helpCommandnameAndArgs=e._helpCommandnameAndArgs,this._helpCommandDescription=e._helpCommandDescription,this._helpConfiguration=e._helpConfiguration,this._exitCallback=e._exitCallback,this._storeOptionsAsProperties=e._storeOptionsAsProperties,this._combineFlagAndOptionalValue=e._combineFlagAndOptionalValue,this._allowExcessArguments=e._allowExcessArguments,this._enablePositionalOptions=e._enablePositionalOptions,this._showHelpAfterError=e._showHelpAfterError,this._showSuggestionAfterError=e._showSuggestionAfterError,this}command(e,t,n){let i=t,a=n;typeof i=="object"&&i!==null&&(a=i,i=null),a=a||{};let[,s,o]=e.match(/([^ ]+) *(.*)/),u=this.createCommand(s);return i&&(u.description(i),u._executableHandler=!0),a.isDefault&&(this._defaultCommandName=u._name),u._hidden=!!(a.noHelp||a.hidden),u._executableFile=a.executableFile||null,o&&u.arguments(o),this.commands.push(u),u.parent=this,u.copyInheritedSettings(this),i?this:u}createCommand(e){return new Kg(e)}createHelp(){return Object.assign(new Hse,this.configureHelp())}configureHelp(e){return e===void 0?this._helpConfiguration:(this._helpConfiguration=e,this)}configureOutput(e){return e===void 0?this._outputConfiguration:(Object.assign(this._outputConfiguration,e),this)}showHelpAfterError(e=!0){return typeof e!="string"&&(e=!!e),this._showHelpAfterError=e,this}showSuggestionAfterError(e=!0){return this._showSuggestionAfterError=!!e,this}addCommand(e,t){if(!e._name)throw new Error(`Command passed to .addCommand() must have a name
- specify the name in Command constructor or using .name()`);return t=t||{},t.isDefault&&(this._defaultCommandName=e._name),(t.noHelp||t.hidden)&&(e._hidden=!0),this.commands.push(e),e.parent=this,this}createArgument(e,t){return new Gse(e,t)}argument(e,t,n,i){let a=this.createArgument(e,t);return typeof n=="function"?a.default(i).argParser(n):a.default(n),this.addArgument(a),this}arguments(e){return e.split(/ +/).forEach(t=>{this.argument(t)}),this}addArgument(e){let t=this._args.slice(-1)[0];if(t&&t.variadic)throw new Error(`only the last argument can be variadic '${t.name()}'`);if(e.required&&e.defaultValue!==void 0&&e.parseArg===void 0)throw new Error(`a default value for a required argument is never used: '${e.name()}'`);return this._args.push(e),this}addHelpCommand(e,t){return e===!1?this._addImplicitHelpCommand=!1:(this._addImplicitHelpCommand=!0,typeof e=="string"&&(this._helpCommandName=e.split(" ")[0],this._helpCommandnameAndArgs=e),this._helpCommandDescription=t||this._helpCommandDescription),this}_hasImplicitHelpCommand(){return this._addImplicitHelpCommand===void 0?this.commands.length&&!this._actionHandler&&!this._findCommand("help"):this._addImplicitHelpCommand}hook(e,t){let n=["preSubcommand","preAction","postAction"];if(!n.includes(e))throw new Error(`Unexpected value for event passed to hook : '${e}'.
Expecting one of '${n.join("', '")}'`);return this._lifeCycleHooks[e]?this._lifeCycleHooks[e].push(t):this._lifeCycleHooks[e]=[t],this}exitOverride(e){return e?this._exitCallback=e:this._exitCallback=t=>{if(t.code!=="commander.executeSubCommandAsync")throw t},this}_exit(e,t,n){this._exitCallback&&this._exitCallback(new FD(e,t,n)),pr.exit(e)}action(e){let t=n=>{let i=this._args.length,a=n.slice(0,i);return this._storeOptionsAsProperties?a[i]=this:a[i]=this.opts(),a.push(this),e.apply(this,a)};return this._actionHandler=t,this}createOption(e,t){return new xL(e,t)}addOption(e){let t=e.name(),n=e.attributeName();if(e.negate){let a=e.long.replace(/^--no-/,"--");this._findOption(a)||this.setOptionValueWithSource(n,e.defaultValue===void 0?!0:e.defaultValue,"default")}else e.defaultValue!==void 0&&this.setOptionValueWithSource(n,e.defaultValue,"default");this.options.push(e);let i=(a,s,o)=>{a==null&&e.presetArg!==void 0&&(a=e.presetArg);let u=this.getOptionValue(n);if(a!==null&&e.parseArg)try{a=e.parseArg(a,u)}catch(c){if(c.code==="commander.invalidArgument"){let f=`${s} ${c.message}`;this.error(f,{exitCode:c.exitCode,code:c.code})}throw c}else a!==null&&e.variadic&&(a=e._concatValue(a,u));a==null&&(e.negate?a=!1:e.isBoolean()||e.optional?a=!0:a=""),this.setOptionValueWithSource(n,a,o)};return this.on("option:"+t,a=>{let s=`error: option '${e.flags}' argument '${a}' is invalid.`;i(a,s,"cli")}),e.envVar&&this.on("optionEnv:"+t,a=>{let s=`error: option '${e.flags}' value '${a}' from env '${e.envVar}' is invalid.`;i(a,s,"env")}),this}_optionEx(e,t,n,i,a){if(typeof t=="object"&&t instanceof xL)throw new Error("To add an Option object use addOption() instead of option() or requiredOption()");let s=this.createOption(t,n);if(s.makeOptionMandatory(!!e.mandatory),typeof i=="function")s.default(a).argParser(i);else if(i instanceof RegExp){let o=i;i=(u,c)=>{let f=o.exec(u);return f?f[0]:c},s.default(a).argParser(i)}else s.default(i);return this.addOption(s)}option(e,t,n,i){return this._optionEx({},e,t,n,i)}requiredOption(e,t,n,i){return this._optionEx({mandatory:!0},e,t,n,i)}combineFlagAndOptionalValue(e=!0){return this._combineFlagAndOptionalValue=!!e,this}allowUnknownOption(e=!0){return this._allowUnknownOption=!!e,this}allowExcessArguments(e=!0){return this._allowExcessArguments=!!e,this}enablePositionalOptions(e=!0){return this._enablePositionalOptions=!!e,this}passThroughOptions(e=!0){if(this._passThroughOptions=!!e,this.parent&&e&&!this.parent._enablePositionalOptions)throw new Error("passThroughOptions can not be used without turning on enablePositionalOptions for parent command(s)");return this}storeOptionsAsProperties(e=!0){if(this._storeOptionsAsProperties=!!e,this.options.length)throw new Error("call .storeOptionsAsProperties() before adding options");return this}getOptionValue(e){return this._storeOptionsAsProperties?this[e]:this._optionValues[e]}setOptionValue(e,t){return this.setOptionValueWithSource(e,t,void 0)}setOptionValueWithSource(e,t,n){return this._storeOptionsAsProperties?this[e]=t:this._optionValues[e]=t,this._optionValueSources[e]=n,this}getOptionValueSource(e){return this._optionValueSources[e]}getOptionValueSourceWithGlobals(e){let t;return Gg(this).forEach(n=>{n.getOptionValueSource(e)!==void 0&&(t=n.getOptionValueSource(e))}),t}_prepareUserArgs(e,t){if(e!==void 0&&!Array.isArray(e))throw new Error("first parameter to parse must be array or undefined");t=t||{},e===void 0&&(e=pr.argv,pr.versions&&pr.versions.electron&&(t.from="electron")),this.rawArgs=e.slice();let n;switch(t.from){case void 0:case"node":this._scriptPath=e[1],n=e.slice(2);break;case"electron":pr.defaultApp?(this._scriptPath=e[1],n=e.slice(2)):n=e.slice(1);break;case"user":n=e.slice(0);break;default:throw new Error(`unexpected parse option { from: '${t.from}' }`)}return!this._name&&this._scriptPath&&this.nameFromFilename(this._scriptPath),this._name=this._name||"program",n}parse(e,t){let n=this._prepareUserArgs(e,t);return this._parseCommand([],n),this}async parseAsync(e,t){let n=this._prepareUserArgs(e,t);return await this._parseCommand([],n),this}_executeSubCommand(e,t){t=t.slice();let n=!1,i=[".js",".ts",".tsx",".mjs",".cjs"];function a(f,d){let m=El.resolve(f,d);if(ID.existsSync(m))return m;if(i.includes(El.extname(d)))return;let h=i.find(y=>ID.existsSync(`${m}${y}`));if(h)return`${m}${h}`}this._checkForMissingMandatoryOptions(),this._checkForConflictingOptions();let s=e._executableFile||`${this._name}-${e._name}`,o=this._executableDir||"";if(this._scriptPath){let f;try{f=ID.realpathSync(this._scriptPath)}catch{f=this._scriptPath}o=El.resolve(El.dirname(f),o)}if(o){let f=a(o,s);if(!f&&!e._executableFile&&this._scriptPath){let d=El.basename(this._scriptPath,El.extname(this._scriptPath));d!==this._name&&(f=a(o,`${d}-${e._name}`))}s=f||s}n=i.includes(El.extname(s));let u;pr.platform!=="win32"?n?(t.unshift(s),t=UL(pr.execArgv).concat(t),u=kD.spawn(pr.argv[0],t,{stdio:"inherit"})):u=kD.spawn(s,t,{stdio:"inherit"}):(t.unshift(s),t=UL(pr.execArgv).concat(t),u=kD.spawn(pr.execPath,t,{stdio:"inherit"})),u.killed||["SIGUSR1","SIGUSR2","SIGTERM","SIGINT","SIGHUP"].forEach(d=>{pr.on(d,()=>{u.killed===!1&&u.exitCode===null&&u.kill(d)})});let c=this._exitCallback;c?u.on("close",()=>{c(new FD(pr.exitCode||0,"commander.executeSubCommandAsync","(close)"))}):u.on("close",pr.exit.bind(pr)),u.on("error",f=>{if(f.code==="ENOENT"){let d=o?`searched for local subcommand relative to directory '${o}'`:"no directory for search for local subcommand, use .executableDir() to supply a custom directory",m=`'${s}' does not exist
 - if '${e._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead
 - if the default executable name is not suitable, use the executableFile option to supply a custom name or path
 - ${d}`;throw new Error(m)}else if(f.code==="EACCES")throw new Error(`'${s}' not executable`);if(!c)pr.exit(1);else{let d=new FD(1,"commander.executeSubCommandAsync","(error)");d.nestedError=f,c(d)}}),this.runningCommand=u}_dispatchSubcommand(e,t,n){let i=this._findCommand(e);i||this.help({error:!0});let a;return a=this._chainOrCallSubCommandHook(a,i,"preSubcommand"),a=this._chainOrCall(a,()=>{if(i._executableHandler)this._executeSubCommand(i,t.concat(n));else return i._parseCommand(t,n)}),a}_checkNumberOfArguments(){this._args.forEach((e,t)=>{e.required&&this.args[t]==null&&this.missingArgument(e.name())}),!(this._args.length>0&&this._args[this._args.length-1].variadic)&&this.args.length>this._args.length&&this._excessArguments(this.args)}_processArguments(){let e=(n,i,a)=>{let s=i;if(i!==null&&n.parseArg)try{s=n.parseArg(i,a)}catch(o){if(o.code==="commander.invalidArgument"){let u=`error: command-argument value '${i}' is invalid for argument '${n.name()}'. ${o.message}`;this.error(u,{exitCode:o.exitCode,code:o.code})}throw o}return s};this._checkNumberOfArguments();let t=[];this._args.forEach((n,i)=>{let a=n.defaultValue;n.variadic?i<this.args.length?(a=this.args.slice(i),n.parseArg&&(a=a.reduce((s,o)=>e(n,o,s),n.defaultValue))):a===void 0&&(a=[]):i<this.args.length&&(a=this.args[i],n.parseArg&&(a=e(n,a,n.defaultValue))),t[i]=a}),this.processedArgs=t}_chainOrCall(e,t){return e&&e.then&&typeof e.then=="function"?e.then(()=>t()):t()}_chainOrCallHooks(e,t){let n=e,i=[];return Gg(this).reverse().filter(a=>a._lifeCycleHooks[t]!==void 0).forEach(a=>{a._lifeCycleHooks[t].forEach(s=>{i.push({hookedCommand:a,callback:s})})}),t==="postAction"&&i.reverse(),i.forEach(a=>{n=this._chainOrCall(n,()=>a.callback(a.hookedCommand,this))}),n}_chainOrCallSubCommandHook(e,t,n){let i=e;return this._lifeCycleHooks[n]!==void 0&&this._lifeCycleHooks[n].forEach(a=>{i=this._chainOrCall(i,()=>a(this,t))}),i}_parseCommand(e,t){let n=this.parseOptions(t);if(this._parseOptionsEnv(),this._parseOptionsImplied(),e=e.concat(n.operands),t=n.unknown,this.args=e.concat(t),e&&this._findCommand(e[0]))return this._dispatchSubcommand(e[0],e.slice(1),t);if(this._hasImplicitHelpCommand()&&e[0]===this._helpCommandName)return e.length===1&&this.help(),this._dispatchSubcommand(e[1],[],[this._helpLongFlag]);if(this._defaultCommandName)return jL(this,t),this._dispatchSubcommand(this._defaultCommandName,e,t);this.commands.length&&this.args.length===0&&!this._actionHandler&&!this._defaultCommandName&&this.help({error:!0}),jL(this,n.unknown),this._checkForMissingMandatoryOptions(),this._checkForConflictingOptions();let i=()=>{n.unknown.length>0&&this.unknownOption(n.unknown[0])},a=`command:${this.name()}`;if(this._actionHandler){i(),this._processArguments();let s;return s=this._chainOrCallHooks(s,"preAction"),s=this._chainOrCall(s,()=>this._actionHandler(this.processedArgs)),this.parent&&(s=this._chainOrCall(s,()=>{this.parent.emit(a,e,t)})),s=this._chainOrCallHooks(s,"postAction"),s}if(this.parent&&this.parent.listenerCount(a))i(),this._processArguments(),this.parent.emit(a,e,t);else if(e.length){if(this._findCommand("*"))return this._dispatchSubcommand("*",e,t);this.listenerCount("command:*")?this.emit("command:*",e,t):this.commands.length?this.unknownCommand():(i(),this._processArguments())}else this.commands.length?(i(),this.help({error:!0})):(i(),this._processArguments())}_findCommand(e){if(e)return this.commands.find(t=>t._name===e||t._aliases.includes(e))}_findOption(e){return this.options.find(t=>t.is(e))}_checkForMissingMandatoryOptions(){for(let e=this;e;e=e.parent)e.options.forEach(t=>{t.mandatory&&e.getOptionValue(t.attributeName())===void 0&&e.missingMandatoryOptionValue(t)})}_checkForConflictingLocalOptions(){let e=this.options.filter(n=>{let i=n.attributeName();return this.getOptionValue(i)===void 0?!1:this.getOptionValueSource(i)!=="default"});e.filter(n=>n.conflictsWith.length>0).forEach(n=>{let i=e.find(a=>n.conflictsWith.includes(a.attributeName()));i&&this._conflictingOption(n,i)})}_checkForConflictingOptions(){for(let e=this;e;e=e.parent)e._checkForConflictingLocalOptions()}parseOptions(e){let t=[],n=[],i=t,a=e.slice();function s(u){return u.length>1&&u[0]==="-"}let o=null;for(;a.length;){let u=a.shift();if(u==="--"){i===n&&i.push(u),i.push(...a);break}if(o&&!s(u)){this.emit(`option:${o.name()}`,u);continue}if(o=null,s(u)){let c=this._findOption(u);if(c){if(c.required){let f=a.shift();f===void 0&&this.optionMissingArgument(c),this.emit(`option:${c.name()}`,f)}else if(c.optional){let f=null;a.length>0&&!s(a[0])&&(f=a.shift()),this.emit(`option:${c.name()}`,f)}else this.emit(`option:${c.name()}`);o=c.variadic?c:null;continue}}if(u.length>2&&u[0]==="-"&&u[1]!=="-"){let c=this._findOption(`-${u[1]}`);if(c){c.required||c.optional&&this._combineFlagAndOptionalValue?this.emit(`option:${c.name()}`,u.slice(2)):(this.emit(`option:${c.name()}`),a.unshift(`-${u.slice(2)}`));continue}}if(/^--[^=]+=/.test(u)){let c=u.indexOf("="),f=this._findOption(u.slice(0,c));if(f&&(f.required||f.optional)){this.emit(`option:${f.name()}`,u.slice(c+1));continue}}if(s(u)&&(i=n),(this._enablePositionalOptions||this._passThroughOptions)&&t.length===0&&n.length===0){if(this._findCommand(u)){t.push(u),a.length>0&&n.push(...a);break}else if(u===this._helpCommandName&&this._hasImplicitHelpCommand()){t.push(u),a.length>0&&t.push(...a);break}else if(this._defaultCommandName){n.push(u),a.length>0&&n.push(...a);break}}if(this._passThroughOptions){i.push(u),a.length>0&&i.push(...a);break}i.push(u)}return{operands:t,unknown:n}}opts(){if(this._storeOptionsAsProperties){let e={},t=this.options.length;for(let n=0;n<t;n++){let i=this.options[n].attributeName();e[i]=i===this._versionOptionName?this._version:this[i]}return e}return this._optionValues}optsWithGlobals(){return Gg(this).reduce((e,t)=>Object.assign(e,t.opts()),{})}error(e,t){this._outputConfiguration.outputError(`${e}
`,this._outputConfiguration.writeErr),typeof this._showHelpAfterError=="string"?this._outputConfiguration.writeErr(`${this._showHelpAfterError}
`):this._showHelpAfterError&&(this._outputConfiguration.writeErr(`
`),this.outputHelp({error:!0}));let n=t||{},i=n.exitCode||1,a=n.code||"commander.error";this._exit(i,a,e)}_parseOptionsEnv(){this.options.forEach(e=>{if(e.envVar&&e.envVar in pr.env){let t=e.attributeName();(this.getOptionValue(t)===void 0||["default","config","env"].includes(this.getOptionValueSource(t)))&&(e.required||e.optional?this.emit(`optionEnv:${e.name()}`,pr.env[e.envVar]):this.emit(`optionEnv:${e.name()}`))}})}_parseOptionsImplied(){let e=new Wse(this.options),t=n=>this.getOptionValue(n)!==void 0&&!["default","implied"].includes(this.getOptionValueSource(n));this.options.filter(n=>n.implied!==void 0&&t(n.attributeName())&&e.valueFromOption(this.getOptionValue(n.attributeName()),n)).forEach(n=>{Object.keys(n.implied).filter(i=>!t(i)).forEach(i=>{this.setOptionValueWithSource(i,n.implied[i],"implied")})})}missingArgument(e){let t=`error: missing required argument '${e}'`;this.error(t,{code:"commander.missingArgument"})}optionMissingArgument(e){let t=`error: option '${e.flags}' argument missing`;this.error(t,{code:"commander.optionMissingArgument"})}missingMandatoryOptionValue(e){let t=`error: required option '${e.flags}' not specified`;this.error(t,{code:"commander.missingMandatoryOptionValue"})}_conflictingOption(e,t){let n=s=>{let o=s.attributeName(),u=this.getOptionValue(o),c=this.options.find(d=>d.negate&&o===d.attributeName()),f=this.options.find(d=>!d.negate&&o===d.attributeName());return c&&(c.presetArg===void 0&&u===!1||c.presetArg!==void 0&&u===c.presetArg)?c:f||s},i=s=>{let o=n(s),u=o.attributeName();return this.getOptionValueSource(u)==="env"?`environment variable '${o.envVar}'`:`option '${o.flags}'`},a=`error: ${i(e)} cannot be used with ${i(t)}`;this.error(a,{code:"commander.conflictingOption"})}unknownOption(e){if(this._allowUnknownOption)return;let t="";if(e.startsWith("--")&&this._showSuggestionAfterError){let i=[],a=this;do{let s=a.createHelp().visibleOptions(a).filter(o=>o.long).map(o=>o.long);i=i.concat(s),a=a.parent}while(a&&!a._enablePositionalOptions);t=LL(e,i)}let n=`error: unknown option '${e}'${t}`;this.error(n,{code:"commander.unknownOption"})}_excessArguments(e){if(this._allowExcessArguments)return;let t=this._args.length,n=t===1?"":"s",a=`error: too many arguments${this.parent?` for '${this.name()}'`:""}. Expected ${t} argument${n} but got ${e.length}.`;this.error(a,{code:"commander.excessArguments"})}unknownCommand(){let e=this.args[0],t="";if(this._showSuggestionAfterError){let i=[];this.createHelp().visibleCommands(this).forEach(a=>{i.push(a.name()),a.alias()&&i.push(a.alias())}),t=LL(e,i)}let n=`error: unknown command '${e}'${t}`;this.error(n,{code:"commander.unknownCommand"})}version(e,t,n){if(e===void 0)return this._version;this._version=e,t=t||"-V, --version",n=n||"output the version number";let i=this.createOption(t,n);return this._versionOptionName=i.attributeName(),this.options.push(i),this.on("option:"+i.name(),()=>{this._outputConfiguration.writeOut(`${e}
`),this._exit(0,"commander.version",e)}),this}description(e,t){return e===void 0&&t===void 0?this._description:(this._description=e,t&&(this._argsDescription=t),this)}summary(e){return e===void 0?this._summary:(this._summary=e,this)}alias(e){if(e===void 0)return this._aliases[0];let t=this;if(this.commands.length!==0&&this.commands[this.commands.length-1]._executableHandler&&(t=this.commands[this.commands.length-1]),e===t._name)throw new Error("Command alias can't be the same as its name");return t._aliases.push(e),this}aliases(e){return e===void 0?this._aliases:(e.forEach(t=>this.alias(t)),this)}usage(e){if(e===void 0){if(this._usage)return this._usage;let t=this._args.map(n=>Kse(n));return[].concat(this.options.length||this._hasHelpOption?"[options]":[],this.commands.length?"[command]":[],this._args.length?t:[]).join(" ")}return this._usage=e,this}name(e){return e===void 0?this._name:(this._name=e,this)}nameFromFilename(e){return this._name=El.basename(e,El.extname(e)),this}executableDir(e){return e===void 0?this._executableDir:(this._executableDir=e,this)}helpInformation(e){let t=this.createHelp();return t.helpWidth===void 0&&(t.helpWidth=e&&e.error?this._outputConfiguration.getErrHelpWidth():this._outputConfiguration.getOutHelpWidth()),t.formatHelp(this,t)}_getHelpContext(e){e=e||{};let t={error:!!e.error},n;return t.error?n=i=>this._outputConfiguration.writeErr(i):n=i=>this._outputConfiguration.writeOut(i),t.write=e.write||n,t.command=this,t}outputHelp(e){let t;typeof e=="function"&&(t=e,e=void 0);let n=this._getHelpContext(e);Gg(this).reverse().forEach(a=>a.emit("beforeAllHelp",n)),this.emit("beforeHelp",n);let i=this.helpInformation(n);if(t&&(i=t(i),typeof i!="string"&&!Buffer.isBuffer(i)))throw new Error("outputHelp callback must return a string or a Buffer");n.write(i),this.emit(this._helpLongFlag),this.emit("afterHelp",n),Gg(this).forEach(a=>a.emit("afterAllHelp",n))}helpOption(e,t){if(typeof e=="boolean")return this._hasHelpOption=e,this;this._helpFlags=e||this._helpFlags,this._helpDescription=t||this._helpDescription;let n=Vse(this._helpFlags);return this._helpShortFlag=n.shortFlag,this._helpLongFlag=n.longFlag,this}help(e){this.outputHelp(e);let t=pr.exitCode||0;t===0&&e&&typeof e!="function"&&e.error&&(t=1),this._exit(t,"commander.help","(outputHelp)")}addHelpText(e,t){let n=["beforeAll","before","after","afterAll"];if(!n.includes(e))throw new Error(`Unexpected value for position to addHelpText.
Expecting one of '${n.join("', '")}'`);let i=`${e}Help`;return this.on(i,a=>{let s;typeof t=="function"?s=t({error:a.error,command:a.command}):s=t,s&&a.write(`${s}
`)}),this}};function jL(r,e){r._hasHelpOption&&e.find(n=>n===r._helpLongFlag||n===r._helpShortFlag)&&(r.outputHelp(),r._exit(0,"commander.helpDisplayed","(outputHelp)"))}function UL(r){return r.map(e=>{if(!e.startsWith("--inspect"))return e;let t,n="127.0.0.1",i="9229",a;return(a=e.match(/^(--inspect(-brk)?)$/))!==null?t=a[1]:(a=e.match(/^(--inspect(-brk|-port)?)=([^:]+)$/))!==null?(t=a[1],/^\d+$/.test(a[3])?i=a[3]:n=a[3]):(a=e.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/))!==null&&(t=a[1],n=a[3],i=a[4]),t&&i!=="0"?`${t}=${n}:${parseInt(i)+1}`:e})}function Gg(r){let e=[];for(let t=r;t;t=t.parent)e.push(t);return e}BL.Command=Kg});var WL=p((Za,VL)=>{var{Argument:zse}=Z$(),{Command:KL}=GL(),{CommanderError:Yse,InvalidArgumentError:HL}=Bg(),{Help:Xse}=MD(),{Option:Jse}=OD();Za=VL.exports=new KL;Za.program=Za;Za.Argument=zse;Za.Command=KL;Za.CommanderError=Yse;Za.Help=Xse;Za.InvalidArgumentError=HL;Za.InvalidOptionArgumentError=HL;Za.Option=Jse});var tT=p(Vr=>{"use strict";Object.defineProperty(Vr,"__esModule",{value:!0});Vr.thenable=Vr.typedArray=Vr.stringArray=Vr.array=Vr.func=Vr.error=Vr.number=Vr.string=Vr.boolean=void 0;function Qse(r){return r===!0||r===!1}Vr.boolean=Qse;function zL(r){return typeof r=="string"||r instanceof String}Vr.string=zL;function Zse(r){return typeof r=="number"||r instanceof Number}Vr.number=Zse;function eoe(r){return r instanceof Error}Vr.error=eoe;function YL(r){return typeof r=="function"}Vr.func=YL;function XL(r){return Array.isArray(r)}Vr.array=XL;function toe(r){return XL(r)&&r.every(e=>zL(e))}Vr.stringArray=toe;function roe(r,e){return Array.isArray(r)&&r.every(e)}Vr.typedArray=roe;function noe(r){return r&&YL(r.then)}Vr.thenable=noe});var Ol=p(xD=>{"use strict";Object.defineProperty(xD,"__esModule",{value:!0});var ND;function qD(){if(ND===void 0)throw new Error("No runtime abstraction layer installed");return ND}(function(r){function e(t){if(t===void 0)throw new Error("No runtime abstraction layer provided");ND=t}r.install=e})(qD||(qD={}));xD.default=qD});var LD=p(Hg=>{"use strict";Object.defineProperty(Hg,"__esModule",{value:!0});Hg.Disposable=void 0;var ioe;(function(r){function e(t){return{dispose:t}}r.create=e})(ioe=Hg.Disposable||(Hg.Disposable={}))});var JL=p(rT=>{"use strict";Object.defineProperty(rT,"__esModule",{value:!0});rT.AbstractMessageBuffer=void 0;var aoe=13,soe=10,ooe=`\r
`,jD=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encoding(){return this._encoding}append(e){let t=typeof e=="string"?this.fromString(e,this._encoding):e;this._chunks.push(t),this._totalLength+=t.byteLength}tryReadHeaders(){if(this._chunks.length===0)return;let e=0,t=0,n=0,i=0;e:for(;t<this._chunks.length;){let u=this._chunks[t];n=0;t:for(;n<u.length;){switch(u[n]){case aoe:switch(e){case 0:e=1;break;case 2:e=3;break;default:e=0}break;case soe:switch(e){case 1:e=2;break;case 3:e=4,n++;break e;default:e=0}break;default:e=0}n++}i+=u.byteLength,t++}if(e!==4)return;let a=this._read(i+n),s=new Map,o=this.toString(a,"ascii").split(ooe);if(o.length<2)return s;for(let u=0;u<o.length-2;u++){let c=o[u],f=c.indexOf(":");if(f===-1)throw new Error("Message header must separate key and value using :");let d=c.substr(0,f),m=c.substr(f+1).trim();s.set(d,m)}return s}tryReadBody(e){if(!(this._totalLength<e))return this._read(e)}get numberOfBytes(){return this._totalLength}_read(e){if(e===0)return this.emptyBuffer();if(e>this._totalLength)throw new Error("Cannot read so many bytes!");if(this._chunks[0].byteLength===e){let a=this._chunks[0];return this._chunks.shift(),this._totalLength-=e,this.asNative(a)}if(this._chunks[0].byteLength>e){let a=this._chunks[0],s=this.asNative(a,e);return this._chunks[0]=a.slice(e),this._totalLength-=e,s}let t=this.allocNative(e),n=0,i=0;for(;e>0;){let a=this._chunks[i];if(a.byteLength>e){let s=a.slice(0,e);t.set(s,n),n+=e,this._chunks[i]=a.slice(e),this._totalLength-=e,e-=e}else t.set(a,n),n+=a.byteLength,this._chunks.shift(),this._totalLength-=a.byteLength,e-=a.byteLength}return t}};rT.AbstractMessageBuffer=jD});var ej=p(KD=>{"use strict";Object.defineProperty(KD,"__esModule",{value:!0});var loe=Ol(),QL=require("util"),Kc=LD(),uoe=JL(),ty=class extends uoe.AbstractMessageBuffer{constructor(e="utf-8"){super(e)}emptyBuffer(){return ty.emptyBuffer}fromString(e,t){return Buffer.from(e,t)}toString(e,t){return e instanceof Buffer?e.toString(t):new QL.TextDecoder(t).decode(e)}asNative(e,t){return t===void 0?e instanceof Buffer?e:Buffer.from(e):e instanceof Buffer?e.slice(0,t):Buffer.from(e,0,t)}allocNative(e){return Buffer.allocUnsafe(e)}};ty.emptyBuffer=Buffer.allocUnsafe(0);var UD=class{constructor(e){this.stream=e}onClose(e){return this.stream.on("close",e),Kc.Disposable.create(()=>this.stream.off("close",e))}onError(e){return this.stream.on("error",e),Kc.Disposable.create(()=>this.stream.off("error",e))}onEnd(e){return this.stream.on("end",e),Kc.Disposable.create(()=>this.stream.off("end",e))}onData(e){return this.stream.on("data",e),Kc.Disposable.create(()=>this.stream.off("data",e))}},BD=class{constructor(e){this.stream=e}onClose(e){return this.stream.on("close",e),Kc.Disposable.create(()=>this.stream.off("close",e))}onError(e){return this.stream.on("error",e),Kc.Disposable.create(()=>this.stream.off("error",e))}onEnd(e){return this.stream.on("end",e),Kc.Disposable.create(()=>this.stream.off("end",e))}write(e,t){return new Promise((n,i)=>{let a=s=>{s==null?n():i(s)};typeof e=="string"?this.stream.write(e,t,a):this.stream.write(e,a)})}end(){this.stream.end()}},ZL=Object.freeze({messageBuffer:Object.freeze({create:r=>new ty(r)}),applicationJson:Object.freeze({encoder:Object.freeze({name:"application/json",encode:(r,e)=>{try{return Promise.resolve(Buffer.from(JSON.stringify(r,void 0,0),e.charset))}catch(t){return Promise.reject(t)}}}),decoder:Object.freeze({name:"application/json",decode:(r,e)=>{try{return r instanceof Buffer?Promise.resolve(JSON.parse(r.toString(e.charset))):Promise.resolve(JSON.parse(new QL.TextDecoder(e.charset).decode(r)))}catch(t){return Promise.reject(t)}}})}),stream:Object.freeze({asReadableStream:r=>new UD(r),asWritableStream:r=>new BD(r)}),console,timer:Object.freeze({setTimeout(r,e,...t){let n=setTimeout(r,e,...t);return{dispose:()=>clearTimeout(n)}},setImmediate(r,...e){let t=setImmediate(r,...e);return{dispose:()=>clearImmediate(t)}},setInterval(r,e,...t){let n=setInterval(r,e,...t);return{dispose:()=>clearInterval(n)}}})});function GD(){return ZL}(function(r){function e(){loe.default.install(ZL)}r.install=e})(GD||(GD={}));KD.default=GD});var ry=p(Ln=>{"use strict";Object.defineProperty(Ln,"__esModule",{value:!0});Ln.stringArray=Ln.array=Ln.func=Ln.error=Ln.number=Ln.string=Ln.boolean=void 0;function coe(r){return r===!0||r===!1}Ln.boolean=coe;function tj(r){return typeof r=="string"||r instanceof String}Ln.string=tj;function foe(r){return typeof r=="number"||r instanceof Number}Ln.number=foe;function doe(r){return r instanceof Error}Ln.error=doe;function poe(r){return typeof r=="function"}Ln.func=poe;function rj(r){return Array.isArray(r)}Ln.array=rj;function moe(r){return rj(r)&&r.every(e=>tj(e))}Ln.stringArray=moe});var pS=p(Te=>{"use strict";Object.defineProperty(Te,"__esModule",{value:!0});Te.Message=Te.NotificationType9=Te.NotificationType8=Te.NotificationType7=Te.NotificationType6=Te.NotificationType5=Te.NotificationType4=Te.NotificationType3=Te.NotificationType2=Te.NotificationType1=Te.NotificationType0=Te.NotificationType=Te.RequestType9=Te.RequestType8=Te.RequestType7=Te.RequestType6=Te.RequestType5=Te.RequestType4=Te.RequestType3=Te.RequestType2=Te.RequestType1=Te.RequestType=Te.RequestType0=Te.AbstractMessageSignature=Te.ParameterStructures=Te.ResponseError=Te.ErrorCodes=void 0;var Hc=ry(),nj;(function(r){r.ParseError=-32700,r.InvalidRequest=-32600,r.MethodNotFound=-32601,r.InvalidParams=-32602,r.InternalError=-32603,r.jsonrpcReservedErrorRangeStart=-32099,r.serverErrorStart=-32099,r.MessageWriteError=-32099,r.MessageReadError=-32098,r.PendingResponseRejected=-32097,r.ConnectionInactive=-32096,r.ServerNotInitialized=-32002,r.UnknownErrorCode=-32001,r.jsonrpcReservedErrorRangeEnd=-32e3,r.serverErrorEnd=-32e3})(nj=Te.ErrorCodes||(Te.ErrorCodes={}));var Vg=class extends Error{constructor(e,t,n){super(t),this.code=Hc.number(e)?e:nj.UnknownErrorCode,this.data=n,Object.setPrototypeOf(this,Vg.prototype)}toJson(){let e={code:this.code,message:this.message};return this.data!==void 0&&(e.data=this.data),e}};Te.ResponseError=Vg;var hn=class{constructor(e){this.kind=e}static is(e){return e===hn.auto||e===hn.byName||e===hn.byPosition}toString(){return this.kind}};Te.ParameterStructures=hn;hn.auto=new hn("auto");hn.byPosition=new hn("byPosition");hn.byName=new hn("byName");var lr=class{constructor(e,t){this.method=e,this.numberOfParams=t}get parameterStructures(){return hn.auto}};Te.AbstractMessageSignature=lr;var HD=class extends lr{constructor(e){super(e,0)}};Te.RequestType0=HD;var VD=class extends lr{constructor(e,t=hn.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};Te.RequestType=VD;var WD=class extends lr{constructor(e,t=hn.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};Te.RequestType1=WD;var zD=class extends lr{constructor(e){super(e,2)}};Te.RequestType2=zD;var YD=class extends lr{constructor(e){super(e,3)}};Te.RequestType3=YD;var XD=class extends lr{constructor(e){super(e,4)}};Te.RequestType4=XD;var JD=class extends lr{constructor(e){super(e,5)}};Te.RequestType5=JD;var QD=class extends lr{constructor(e){super(e,6)}};Te.RequestType6=QD;var ZD=class extends lr{constructor(e){super(e,7)}};Te.RequestType7=ZD;var eS=class extends lr{constructor(e){super(e,8)}};Te.RequestType8=eS;var tS=class extends lr{constructor(e){super(e,9)}};Te.RequestType9=tS;var rS=class extends lr{constructor(e,t=hn.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};Te.NotificationType=rS;var nS=class extends lr{constructor(e){super(e,0)}};Te.NotificationType0=nS;var iS=class extends lr{constructor(e,t=hn.auto){super(e,1),this._parameterStructures=t}get parameterStructures(){return this._parameterStructures}};Te.NotificationType1=iS;var aS=class extends lr{constructor(e){super(e,2)}};Te.NotificationType2=aS;var sS=class extends lr{constructor(e){super(e,3)}};Te.NotificationType3=sS;var oS=class extends lr{constructor(e){super(e,4)}};Te.NotificationType4=oS;var lS=class extends lr{constructor(e){super(e,5)}};Te.NotificationType5=lS;var uS=class extends lr{constructor(e){super(e,6)}};Te.NotificationType6=uS;var cS=class extends lr{constructor(e){super(e,7)}};Te.NotificationType7=cS;var fS=class extends lr{constructor(e){super(e,8)}};Te.NotificationType8=fS;var dS=class extends lr{constructor(e){super(e,9)}};Te.NotificationType9=dS;var yoe;(function(r){function e(i){let a=i;return a&&Hc.string(a.method)&&(Hc.string(a.id)||Hc.number(a.id))}r.isRequest=e;function t(i){let a=i;return a&&Hc.string(a.method)&&i.id===void 0}r.isNotification=t;function n(i){let a=i;return a&&(a.result!==void 0||!!a.error)&&(Hc.string(a.id)||Hc.number(a.id)||a.id===null)}r.isResponse=n})(yoe=Te.Message||(Te.Message={}))});var yS=p(kl=>{"use strict";var ij;Object.defineProperty(kl,"__esModule",{value:!0});kl.LRUCache=kl.LinkedMap=kl.Touch=void 0;var oi;(function(r){r.None=0,r.First=1,r.AsOld=r.First,r.Last=2,r.AsNew=r.Last})(oi=kl.Touch||(kl.Touch={}));var nT=class{constructor(){this[ij]="LinkedMap",this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){return this._head?.value}get last(){return this._tail?.value}has(e){return this._map.has(e)}get(e,t=oi.None){let n=this._map.get(e);if(n)return t!==oi.None&&this.touch(n,t),n.value}set(e,t,n=oi.None){let i=this._map.get(e);if(i)i.value=t,n!==oi.None&&this.touch(i,n);else{switch(i={key:e,value:t,next:void 0,previous:void 0},n){case oi.None:this.addItemLast(i);break;case oi.First:this.addItemFirst(i);break;case oi.Last:this.addItemLast(i);break;default:this.addItemLast(i);break}this._map.set(e,i),this._size++}return this}delete(e){return!!this.remove(e)}remove(e){let t=this._map.get(e);if(t)return this._map.delete(e),this.removeItem(t),this._size--,t.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");let e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){let n=this._state,i=this._head;for(;i;){if(t?e.bind(t)(i.value,i.key,this):e(i.value,i.key,this),this._state!==n)throw new Error("LinkedMap got modified during iteration.");i=i.next}}keys(){let e=this._state,t=this._head,n={[Symbol.iterator]:()=>n,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(t){let i={value:t.key,done:!1};return t=t.next,i}else return{value:void 0,done:!0}}};return n}values(){let e=this._state,t=this._head,n={[Symbol.iterator]:()=>n,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(t){let i={value:t.value,done:!1};return t=t.next,i}else return{value:void 0,done:!0}}};return n}entries(){let e=this._state,t=this._head,n={[Symbol.iterator]:()=>n,next:()=>{if(this._state!==e)throw new Error("LinkedMap got modified during iteration.");if(t){let i={value:[t.key,t.value],done:!1};return t=t.next,i}else return{value:void 0,done:!0}}};return n}[(ij=Symbol.toStringTag,Symbol.iterator)](){return this.entries()}trimOld(e){if(e>=this.size)return;if(e===0){this.clear();return}let t=this._head,n=this.size;for(;t&&n>e;)this._map.delete(t.key),t=t.next,n--;this._head=t,this._size=n,t&&(t.previous=void 0),this._state++}addItemFirst(e){if(!this._head&&!this._tail)this._tail=e;else if(this._head)e.next=this._head,this._head.previous=e;else throw new Error("Invalid list");this._head=e,this._state++}addItemLast(e){if(!this._head&&!this._tail)this._head=e;else if(this._tail)e.previous=this._tail,this._tail.next=e;else throw new Error("Invalid list");this._tail=e,this._state++}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head){if(!e.next)throw new Error("Invalid list");e.next.previous=void 0,this._head=e.next}else if(e===this._tail){if(!e.previous)throw new Error("Invalid list");e.previous.next=void 0,this._tail=e.previous}else{let t=e.next,n=e.previous;if(!t||!n)throw new Error("Invalid list");t.previous=n,n.next=t}e.next=void 0,e.previous=void 0,this._state++}touch(e,t){if(!this._head||!this._tail)throw new Error("Invalid list");if(!(t!==oi.First&&t!==oi.Last)){if(t===oi.First){if(e===this._head)return;let n=e.next,i=e.previous;e===this._tail?(i.next=void 0,this._tail=i):(n.previous=i,i.next=n),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e,this._state++}else if(t===oi.Last){if(e===this._tail)return;let n=e.next,i=e.previous;e===this._head?(n.previous=void 0,this._head=n):(n.previous=i,i.next=n),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e,this._state++}}}toJSON(){let e=[];return this.forEach((t,n)=>{e.push([n,t])}),e}fromJSON(e){this.clear();for(let[t,n]of e)this.set(t,n)}};kl.LinkedMap=nT;var mS=class extends nT{constructor(e,t=1){super(),this._limit=e,this._ratio=Math.min(Math.max(0,t),1)}get limit(){return this._limit}set limit(e){this._limit=e,this.checkTrim()}get ratio(){return this._ratio}set ratio(e){this._ratio=Math.min(Math.max(0,e),1),this.checkTrim()}get(e,t=oi.AsNew){return super.get(e,t)}peek(e){return super.get(e,oi.None)}set(e,t){return super.set(e,t,oi.Last),this.checkTrim(),this}checkTrim(){this.size>this._limit&&this.trimOld(Math.round(this._limit*this._ratio))}};kl.LRUCache=mS});var iy=p(Vc=>{"use strict";Object.defineProperty(Vc,"__esModule",{value:!0});Vc.Emitter=Vc.Event=void 0;var hoe=Ol(),goe;(function(r){let e={dispose(){}};r.None=function(){return e}})(goe=Vc.Event||(Vc.Event={}));var hS=class{add(e,t=null,n){this._callbacks||(this._callbacks=[],this._contexts=[]),this._callbacks.push(e),this._contexts.push(t),Array.isArray(n)&&n.push({dispose:()=>this.remove(e,t)})}remove(e,t=null){if(!this._callbacks)return;let n=!1;for(let i=0,a=this._callbacks.length;i<a;i++)if(this._callbacks[i]===e)if(this._contexts[i]===t){this._callbacks.splice(i,1),this._contexts.splice(i,1);return}else n=!0;if(n)throw new Error("When adding a listener with a context, you should remove it with the same context")}invoke(...e){if(!this._callbacks)return[];let t=[],n=this._callbacks.slice(0),i=this._contexts.slice(0);for(let a=0,s=n.length;a<s;a++)try{t.push(n[a].apply(i[a],e))}catch(o){(0,hoe.default)().console.error(o)}return t}isEmpty(){return!this._callbacks||this._callbacks.length===0}dispose(){this._callbacks=void 0,this._contexts=void 0}},ny=class{constructor(e){this._options=e}get event(){return this._event||(this._event=(e,t,n)=>{this._callbacks||(this._callbacks=new hS),this._options&&this._options.onFirstListenerAdd&&this._callbacks.isEmpty()&&this._options.onFirstListenerAdd(this),this._callbacks.add(e,t);let i={dispose:()=>{this._callbacks&&(this._callbacks.remove(e,t),i.dispose=ny._noop,this._options&&this._options.onLastListenerRemove&&this._callbacks.isEmpty()&&this._options.onLastListenerRemove(this))}};return Array.isArray(n)&&n.push(i),i}),this._event}fire(e){this._callbacks&&this._callbacks.invoke.call(this._callbacks,e)}dispose(){this._callbacks&&(this._callbacks.dispose(),this._callbacks=void 0)}};Vc.Emitter=ny;ny._noop=function(){}});var $S=p(Wc=>{"use strict";Object.defineProperty(Wc,"__esModule",{value:!0});Wc.CancellationTokenSource=Wc.CancellationToken=void 0;var voe=Ol(),_oe=ry(),gS=iy(),vS;(function(r){r.None=Object.freeze({isCancellationRequested:!1,onCancellationRequested:gS.Event.None}),r.Cancelled=Object.freeze({isCancellationRequested:!0,onCancellationRequested:gS.Event.None});function e(t){let n=t;return n&&(n===r.None||n===r.Cancelled||_oe.boolean(n.isCancellationRequested)&&!!n.onCancellationRequested)}r.is=e})(vS=Wc.CancellationToken||(Wc.CancellationToken={}));var $oe=Object.freeze(function(r,e){let t=(0,voe.default)().timer.setTimeout(r.bind(e),0);return{dispose(){t.dispose()}}}),iT=class{constructor(){this._isCancelled=!1}cancel(){this._isCancelled||(this._isCancelled=!0,this._emitter&&(this._emitter.fire(void 0),this.dispose()))}get isCancellationRequested(){return this._isCancelled}get onCancellationRequested(){return this._isCancelled?$oe:(this._emitter||(this._emitter=new gS.Emitter),this._emitter.event)}dispose(){this._emitter&&(this._emitter.dispose(),this._emitter=void 0)}},_S=class{get token(){return this._token||(this._token=new iT),this._token}cancel(){this._token?this._token.cancel():this._token=vS.Cancelled}dispose(){this._token?this._token instanceof iT&&this._token.dispose():this._token=vS.None}};Wc.CancellationTokenSource=_S});var aj=p(Il=>{"use strict";Object.defineProperty(Il,"__esModule",{value:!0});Il.ReadableStreamMessageReader=Il.AbstractMessageReader=Il.MessageReader=void 0;var RS=Ol(),ay=ry(),TS=iy(),Toe;(function(r){function e(t){let n=t;return n&&ay.func(n.listen)&&ay.func(n.dispose)&&ay.func(n.onError)&&ay.func(n.onClose)&&ay.func(n.onPartialMessage)}r.is=e})(Toe=Il.MessageReader||(Il.MessageReader={}));var aT=class{constructor(){this.errorEmitter=new TS.Emitter,this.closeEmitter=new TS.Emitter,this.partialMessageEmitter=new TS.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e){this.errorEmitter.fire(this.asError(e))}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}get onPartialMessage(){return this.partialMessageEmitter.event}firePartialMessage(e){this.partialMessageEmitter.fire(e)}asError(e){return e instanceof Error?e:new Error(`Reader received error. Reason: ${ay.string(e.message)?e.message:"unknown"}`)}};Il.AbstractMessageReader=aT;var bS;(function(r){function e(t){let n,i,a,s=new Map,o,u=new Map;if(t===void 0||typeof t=="string")n=t??"utf-8";else{if(n=t.charset??"utf-8",t.contentDecoder!==void 0&&(a=t.contentDecoder,s.set(a.name,a)),t.contentDecoders!==void 0)for(let c of t.contentDecoders)s.set(c.name,c);if(t.contentTypeDecoder!==void 0&&(o=t.contentTypeDecoder,u.set(o.name,o)),t.contentTypeDecoders!==void 0)for(let c of t.contentTypeDecoders)u.set(c.name,c)}return o===void 0&&(o=(0,RS.default)().applicationJson.decoder,u.set(o.name,o)),{charset:n,contentDecoder:a,contentDecoders:s,contentTypeDecoder:o,contentTypeDecoders:u}}r.fromOptions=e})(bS||(bS={}));var CS=class extends aT{constructor(e,t){super(),this.readable=e,this.options=bS.fromOptions(t),this.buffer=(0,RS.default)().messageBuffer.create(this.options.charset),this._partialMessageTimeout=1e4,this.nextMessageLength=-1,this.messageToken=0}set partialMessageTimeout(e){this._partialMessageTimeout=e}get partialMessageTimeout(){return this._partialMessageTimeout}listen(e){this.nextMessageLength=-1,this.messageToken=0,this.partialMessageTimer=void 0,this.callback=e;let t=this.readable.onData(n=>{this.onData(n)});return this.readable.onError(n=>this.fireError(n)),this.readable.onClose(()=>this.fireClose()),t}onData(e){for(this.buffer.append(e);;){if(this.nextMessageLength===-1){let i=this.buffer.tryReadHeaders();if(!i)return;let a=i.get("Content-Length");if(!a)throw new Error("Header must provide a Content-Length property.");let s=parseInt(a);if(isNaN(s))throw new Error("Content-Length value must be a number.");this.nextMessageLength=s}let t=this.buffer.tryReadBody(this.nextMessageLength);if(t===void 0){this.setPartialMessageTimer();return}this.clearPartialMessageTimer(),this.nextMessageLength=-1;let n;this.options.contentDecoder!==void 0?n=this.options.contentDecoder.decode(t):n=Promise.resolve(t),n.then(i=>{this.options.contentTypeDecoder.decode(i,this.options).then(a=>{this.callback(a)},a=>{this.fireError(a)})},i=>{this.fireError(i)})}}clearPartialMessageTimer(){this.partialMessageTimer&&(this.partialMessageTimer.dispose(),this.partialMessageTimer=void 0)}setPartialMessageTimer(){this.clearPartialMessageTimer(),!(this._partialMessageTimeout<=0)&&(this.partialMessageTimer=(0,RS.default)().timer.setTimeout((e,t)=>{this.partialMessageTimer=void 0,e===this.messageToken&&(this.firePartialMessage({messageToken:e,waitingTime:t}),this.setPartialMessageTimer())},this._partialMessageTimeout,this.messageToken,this._partialMessageTimeout))}};Il.ReadableStreamMessageReader=CS});var sj=p(sT=>{"use strict";Object.defineProperty(sT,"__esModule",{value:!0});sT.Semaphore=void 0;var Roe=Ol(),AS=class{constructor(e=1){if(e<=0)throw new Error("Capacity must be greater than 0");this._capacity=e,this._active=0,this._waiting=[]}lock(e){return new Promise((t,n)=>{this._waiting.push({thunk:e,resolve:t,reject:n}),this.runNext()})}get active(){return this._active}runNext(){this._waiting.length===0||this._active===this._capacity||(0,Roe.default)().timer.setImmediate(()=>this.doRunNext())}doRunNext(){if(this._waiting.length===0||this._active===this._capacity)return;let e=this._waiting.shift();if(this._active++,this._active>this._capacity)throw new Error("To many thunks active");try{let t=e.thunk();t instanceof Promise?t.then(n=>{this._active--,e.resolve(n),this.runNext()},n=>{this._active--,e.reject(n),this.runNext()}):(this._active--,e.resolve(t),this.runNext())}catch(t){this._active--,e.reject(t),this.runNext()}}};sT.Semaphore=AS});var cj=p(Fl=>{"use strict";Object.defineProperty(Fl,"__esModule",{value:!0});Fl.WriteableStreamMessageWriter=Fl.AbstractMessageWriter=Fl.MessageWriter=void 0;var oj=Ol(),Wg=ry(),boe=sj(),lj=iy(),Coe="Content-Length: ",uj=`\r
`,Aoe;(function(r){function e(t){let n=t;return n&&Wg.func(n.dispose)&&Wg.func(n.onClose)&&Wg.func(n.onError)&&Wg.func(n.write)}r.is=e})(Aoe=Fl.MessageWriter||(Fl.MessageWriter={}));var oT=class{constructor(){this.errorEmitter=new lj.Emitter,this.closeEmitter=new lj.Emitter}dispose(){this.errorEmitter.dispose(),this.closeEmitter.dispose()}get onError(){return this.errorEmitter.event}fireError(e,t,n){this.errorEmitter.fire([this.asError(e),t,n])}get onClose(){return this.closeEmitter.event}fireClose(){this.closeEmitter.fire(void 0)}asError(e){return e instanceof Error?e:new Error(`Writer received error. Reason: ${Wg.string(e.message)?e.message:"unknown"}`)}};Fl.AbstractMessageWriter=oT;var wS;(function(r){function e(t){return t===void 0||typeof t=="string"?{charset:t??"utf-8",contentTypeEncoder:(0,oj.default)().applicationJson.encoder}:{charset:t.charset??"utf-8",contentEncoder:t.contentEncoder,contentTypeEncoder:t.contentTypeEncoder??(0,oj.default)().applicationJson.encoder}}r.fromOptions=e})(wS||(wS={}));var DS=class extends oT{constructor(e,t){super(),this.writable=e,this.options=wS.fromOptions(t),this.errorCount=0,this.writeSemaphore=new boe.Semaphore(1),this.writable.onError(n=>this.fireError(n)),this.writable.onClose(()=>this.fireClose())}async write(e){return this.writeSemaphore.lock(async()=>this.options.contentTypeEncoder.encode(e,this.options).then(n=>this.options.contentEncoder!==void 0?this.options.contentEncoder.encode(n):n).then(n=>{let i=[];return i.push(Coe,n.byteLength.toString(),uj),i.push(uj),this.doWrite(e,i,n)},n=>{throw this.fireError(n),n}))}async doWrite(e,t,n){try{return await this.writable.write(t.join(""),"ascii"),this.writable.write(n)}catch(i){return this.handleError(i,e),Promise.reject(i)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){this.writable.end()}};Fl.WriteableStreamMessageWriter=DS});var hj=p(Me=>{"use strict";Object.defineProperty(Me,"__esModule",{value:!0});Me.createMessageConnection=Me.ConnectionOptions=Me.CancellationStrategy=Me.CancellationSenderStrategy=Me.CancellationReceiverStrategy=Me.ConnectionStrategy=Me.ConnectionError=Me.ConnectionErrors=Me.LogTraceNotification=Me.SetTraceNotification=Me.TraceFormat=Me.TraceValues=Me.Trace=Me.NullLogger=Me.ProgressType=Me.ProgressToken=void 0;var fj=Ol(),cn=ry(),ke=pS(),dj=yS(),zg=iy(),SS=$S(),Xg;(function(r){r.type=new ke.NotificationType("$/cancelRequest")})(Xg||(Xg={}));var pj;(function(r){function e(t){return typeof t=="string"||typeof t=="number"}r.is=e})(pj=Me.ProgressToken||(Me.ProgressToken={}));var Yg;(function(r){r.type=new ke.NotificationType("$/progress")})(Yg||(Yg={}));var MS=class{constructor(){}};Me.ProgressType=MS;var PS;(function(r){function e(t){return cn.func(t)}r.is=e})(PS||(PS={}));Me.NullLogger=Object.freeze({error:()=>{},warn:()=>{},info:()=>{},log:()=>{}});var Lt;(function(r){r[r.Off=0]="Off",r[r.Messages=1]="Messages",r[r.Compact=2]="Compact",r[r.Verbose=3]="Verbose"})(Lt=Me.Trace||(Me.Trace={}));var woe;(function(r){r.Off="off",r.Messages="messages",r.Compact="compact",r.Verbose="verbose"})(woe=Me.TraceValues||(Me.TraceValues={}));(function(r){function e(n){if(!cn.string(n))return r.Off;switch(n=n.toLowerCase(),n){case"off":return r.Off;case"messages":return r.Messages;case"compact":return r.Compact;case"verbose":return r.Verbose;default:return r.Off}}r.fromString=e;function t(n){switch(n){case r.Off:return"off";case r.Messages:return"messages";case r.Compact:return"compact";case r.Verbose:return"verbose";default:return"off"}}r.toString=t})(Lt=Me.Trace||(Me.Trace={}));var es;(function(r){r.Text="text",r.JSON="json"})(es=Me.TraceFormat||(Me.TraceFormat={}));(function(r){function e(t){return cn.string(t)?(t=t.toLowerCase(),t==="json"?r.JSON:r.Text):r.Text}r.fromString=e})(es=Me.TraceFormat||(Me.TraceFormat={}));var mj;(function(r){r.type=new ke.NotificationType("$/setTrace")})(mj=Me.SetTraceNotification||(Me.SetTraceNotification={}));var ES;(function(r){r.type=new ke.NotificationType("$/logTrace")})(ES=Me.LogTraceNotification||(Me.LogTraceNotification={}));var lT;(function(r){r[r.Closed=1]="Closed",r[r.Disposed=2]="Disposed",r[r.AlreadyListening=3]="AlreadyListening"})(lT=Me.ConnectionErrors||(Me.ConnectionErrors={}));var yu=class extends Error{constructor(e,t){super(t),this.code=e,Object.setPrototypeOf(this,yu.prototype)}};Me.ConnectionError=yu;var yj;(function(r){function e(t){let n=t;return n&&cn.func(n.cancelUndispatched)}r.is=e})(yj=Me.ConnectionStrategy||(Me.ConnectionStrategy={}));var OS;(function(r){r.Message=Object.freeze({createCancellationTokenSource(t){return new SS.CancellationTokenSource}});function e(t){let n=t;return n&&cn.func(n.createCancellationTokenSource)}r.is=e})(OS=Me.CancellationReceiverStrategy||(Me.CancellationReceiverStrategy={}));var kS;(function(r){r.Message=Object.freeze({sendCancellation(t,n){return t.sendNotification(Xg.type,{id:n})},cleanup(t){}});function e(t){let n=t;return n&&cn.func(n.sendCancellation)&&cn.func(n.cleanup)}r.is=e})(kS=Me.CancellationSenderStrategy||(Me.CancellationSenderStrategy={}));var IS;(function(r){r.Message=Object.freeze({receiver:OS.Message,sender:kS.Message});function e(t){let n=t;return n&&OS.is(n.receiver)&&kS.is(n.sender)}r.is=e})(IS=Me.CancellationStrategy||(Me.CancellationStrategy={}));var Doe;(function(r){function e(t){let n=t;return n&&(IS.is(n.cancellationStrategy)||yj.is(n.connectionStrategy))}r.is=e})(Doe=Me.ConnectionOptions||(Me.ConnectionOptions={}));var ts;(function(r){r[r.New=1]="New",r[r.Listening=2]="Listening",r[r.Closed=3]="Closed",r[r.Disposed=4]="Disposed"})(ts||(ts={}));function Soe(r,e,t,n){let i=t!==void 0?t:Me.NullLogger,a=0,s=0,o=0,u="2.0",c,f=new Map,d,m=new Map,h=new Map,y,_=new dj.LinkedMap,w=new Map,S=new Set,C=new Map,b=Lt.Off,I=es.Text,L,W=ts.New,_e=new zg.Emitter,Je=new zg.Emitter,Ye=new zg.Emitter,or=new zg.Emitter,he=new zg.Emitter,tt=n&&n.cancellationStrategy?n.cancellationStrategy:IS.Message;function z(M){if(M===null)throw new Error("Can't send requests with id null since the response can't be correlated.");return"req-"+M.toString()}function H(M){return M===null?"res-unknown-"+(++o).toString():"res-"+M.toString()}function ne(){return"not-"+(++s).toString()}function me(M,K){ke.Message.isRequest(K)?M.set(z(K.id),K):ke.Message.isResponse(K)?M.set(H(K.id),K):M.set(ne(),K)}function Ge(M){}function Ke(){return W===ts.Listening}function Se(){return W===ts.Closed}function Sr(){return W===ts.Disposed}function fr(){(W===ts.New||W===ts.Listening)&&(W=ts.Closed,Je.fire(void 0))}function un(M){_e.fire([M,void 0,void 0])}function Wa(M){_e.fire(M)}r.onClose(fr),r.onError(un),e.onClose(fr),e.onError(Wa);function Gi(){y||_.size===0||(y=(0,fj.default)().timer.setImmediate(()=>{y=void 0,zm()}))}function zm(){if(_.size===0)return;let M=_.shift();try{ke.Message.isRequest(M)?Ym(M):ke.Message.isNotification(M)?Jm(M):ke.Message.isResponse(M)?Xm(M):jg(M)}finally{Gi()}}let si=M=>{try{if(ke.Message.isNotification(M)&&M.method===Xg.type.method){let K=M.params.id,ie=z(K),ge=_.get(ie);if(ke.Message.isRequest(ge)){let zt=n?.connectionStrategy,dr=zt&&zt.cancelUndispatched?zt.cancelUndispatched(ge,Ge):void 0;if(dr&&(dr.error!==void 0||dr.result!==void 0)){_.delete(ie),C.delete(K),dr.id=ge.id,Hs(dr,M.method,Date.now()),e.write(dr).catch(()=>i.error("Sending response for canceled message failed."));return}}let Wt=C.get(K);if(Wt!==void 0){Wt.cancel(),Vs(M);return}else S.add(K)}me(_,M)}finally{Gi()}};function Ym(M){if(Sr())return;function K(pt,er,_t){let Lr={jsonrpc:u,id:M.id};pt instanceof ke.ResponseError?Lr.error=pt.toJson():Lr.result=pt===void 0?null:pt,Hs(Lr,er,_t),e.write(Lr).catch(()=>i.error("Sending response failed."))}function ie(pt,er,_t){let Lr={jsonrpc:u,id:M.id,error:pt.toJson()};Hs(Lr,er,_t),e.write(Lr).catch(()=>i.error("Sending response failed."))}function ge(pt,er,_t){pt===void 0&&(pt=null);let Lr={jsonrpc:u,id:M.id,result:pt};Hs(Lr,er,_t),e.write(Lr).catch(()=>i.error("Sending response failed."))}Bc(M);let Wt=f.get(M.method),zt,dr;Wt&&(zt=Wt.type,dr=Wt.handler);let Hr=Date.now();if(dr||c){let pt=M.id??String(Date.now()),er=tt.receiver.createCancellationTokenSource(pt);M.id!==null&&S.has(M.id)&&er.cancel(),M.id!==null&&C.set(pt,er);try{let _t;if(dr)if(M.params===void 0){if(zt!==void 0&&zt.numberOfParams!==0){ie(new ke.ResponseError(ke.ErrorCodes.InvalidParams,`Request ${M.method} defines ${zt.numberOfParams} params but received none.`),M.method,Hr);return}_t=dr(er.token)}else if(Array.isArray(M.params)){if(zt!==void 0&&zt.parameterStructures===ke.ParameterStructures.byName){ie(new ke.ResponseError(ke.ErrorCodes.InvalidParams,`Request ${M.method} defines parameters by name but received parameters by position`),M.method,Hr);return}_t=dr(...M.params,er.token)}else{if(zt!==void 0&&zt.parameterStructures===ke.ParameterStructures.byPosition){ie(new ke.ResponseError(ke.ErrorCodes.InvalidParams,`Request ${M.method} defines parameters by position but received parameters by name`),M.method,Hr);return}_t=dr(M.params,er.token)}else c&&(_t=c(M.method,M.params,er.token));let Lr=_t;_t?Lr.then?Lr.then(xn=>{C.delete(pt),K(xn,M.method,Hr)},xn=>{C.delete(pt),xn instanceof ke.ResponseError?ie(xn,M.method,Hr):xn&&cn.string(xn.message)?ie(new ke.ResponseError(ke.ErrorCodes.InternalError,`Request ${M.method} failed with message: ${xn.message}`),M.method,Hr):ie(new ke.ResponseError(ke.ErrorCodes.InternalError,`Request ${M.method} failed unexpectedly without providing any details.`),M.method,Hr)}):(C.delete(pt),K(_t,M.method,Hr)):(C.delete(pt),ge(_t,M.method,Hr))}catch(_t){C.delete(pt),_t instanceof ke.ResponseError?K(_t,M.method,Hr):_t&&cn.string(_t.message)?ie(new ke.ResponseError(ke.ErrorCodes.InternalError,`Request ${M.method} failed with message: ${_t.message}`),M.method,Hr):ie(new ke.ResponseError(ke.ErrorCodes.InternalError,`Request ${M.method} failed unexpectedly without providing any details.`),M.method,Hr)}}else ie(new ke.ResponseError(ke.ErrorCodes.MethodNotFound,`Unhandled method ${M.method}`),M.method,Hr)}function Xm(M){if(!Sr())if(M.id===null)M.error?i.error(`Received response message without id: Error is: 
${JSON.stringify(M.error,void 0,4)}`):i.error("Received response message without id. No further error information provided.");else{let K=M.id,ie=w.get(K);if(Gc(M,ie),ie!==void 0){w.delete(K);try{if(M.error){let ge=M.error;ie.reject(new ke.ResponseError(ge.code,ge.message,ge.data))}else if(M.result!==void 0)ie.resolve(M.result);else throw new Error("Should never happen.")}catch(ge){ge.message?i.error(`Response handler '${ie.method}' failed with message: ${ge.message}`):i.error(`Response handler '${ie.method}' failed unexpectedly.`)}}}}function Jm(M){if(Sr())return;let K,ie;if(M.method===Xg.type.method){let ge=M.params.id;S.delete(ge),Vs(M);return}else{let ge=m.get(M.method);ge&&(ie=ge.handler,K=ge.type)}if(ie||d)try{if(Vs(M),ie)if(M.params===void 0)K!==void 0&&K.numberOfParams!==0&&K.parameterStructures!==ke.ParameterStructures.byName&&i.error(`Notification ${M.method} defines ${K.numberOfParams} params but received none.`),ie();else if(Array.isArray(M.params)){let ge=M.params;M.method===Yg.type.method&&ge.length===2&&pj.is(ge[0])?ie({token:ge[0],value:ge[1]}):(K!==void 0&&(K.parameterStructures===ke.ParameterStructures.byName&&i.error(`Notification ${M.method} defines parameters by name but received parameters by position`),K.numberOfParams!==M.params.length&&i.error(`Notification ${M.method} defines ${K.numberOfParams} params but received ${ge.length} arguments`)),ie(...ge))}else K!==void 0&&K.parameterStructures===ke.ParameterStructures.byPosition&&i.error(`Notification ${M.method} defines parameters by position but received parameters by name`),ie(M.params);else d&&d(M.method,M.params)}catch(ge){ge.message?i.error(`Notification handler '${M.method}' failed with message: ${ge.message}`):i.error(`Notification handler '${M.method}' failed unexpectedly.`)}else Ye.fire(M)}function jg(M){if(!M){i.error("Received empty message.");return}i.error(`Received message which is neither a response nor a notification message:
${JSON.stringify(M,null,4)}`);let K=M;if(cn.string(K.id)||cn.number(K.id)){let ie=K.id,ge=w.get(ie);ge&&ge.reject(new Error("The received response has neither a result nor an error property."))}}function xr(M){if(M!=null)switch(b){case Lt.Verbose:return JSON.stringify(M,null,4);case Lt.Compact:return JSON.stringify(M);default:return}}function Sl(M){if(!(b===Lt.Off||!L))if(I===es.Text){let K;(b===Lt.Verbose||b===Lt.Compact)&&M.params&&(K=`Params: ${xr(M.params)}

`),L.log(`Sending request '${M.method} - (${M.id})'.`,K)}else ma("send-request",M)}function Ug(M){if(!(b===Lt.Off||!L))if(I===es.Text){let K;(b===Lt.Verbose||b===Lt.Compact)&&(M.params?K=`Params: ${xr(M.params)}

`:K=`No parameters provided.

`),L.log(`Sending notification '${M.method}'.`,K)}else ma("send-notification",M)}function Hs(M,K,ie){if(!(b===Lt.Off||!L))if(I===es.Text){let ge;(b===Lt.Verbose||b===Lt.Compact)&&(M.error&&M.error.data?ge=`Error data: ${xr(M.error.data)}

`:M.result?ge=`Result: ${xr(M.result)}

`:M.error===void 0&&(ge=`No result returned.

`)),L.log(`Sending response '${K} - (${M.id})'. Processing request took ${Date.now()-ie}ms`,ge)}else ma("send-response",M)}function Bc(M){if(!(b===Lt.Off||!L))if(I===es.Text){let K;(b===Lt.Verbose||b===Lt.Compact)&&M.params&&(K=`Params: ${xr(M.params)}

`),L.log(`Received request '${M.method} - (${M.id})'.`,K)}else ma("receive-request",M)}function Vs(M){if(!(b===Lt.Off||!L||M.method===ES.type.method))if(I===es.Text){let K;(b===Lt.Verbose||b===Lt.Compact)&&(M.params?K=`Params: ${xr(M.params)}

`:K=`No parameters provided.

`),L.log(`Received notification '${M.method}'.`,K)}else ma("receive-notification",M)}function Gc(M,K){if(!(b===Lt.Off||!L))if(I===es.Text){let ie;if((b===Lt.Verbose||b===Lt.Compact)&&(M.error&&M.error.data?ie=`Error data: ${xr(M.error.data)}

`:M.result?ie=`Result: ${xr(M.result)}

`:M.error===void 0&&(ie=`No result returned.

`)),K){let ge=M.error?` Request failed: ${M.error.message} (${M.error.code}).`:"";L.log(`Received response '${K.method} - (${M.id})' in ${Date.now()-K.timerStart}ms.${ge}`,ie)}else L.log(`Received response ${M.id} without active response promise.`,ie)}else ma("receive-response",M)}function ma(M,K){if(!L||b===Lt.Off)return;let ie={isLSPMessage:!0,type:M,message:K,timestamp:Date.now()};L.log(ie)}function za(){if(Se())throw new yu(lT.Closed,"Connection is closed.");if(Sr())throw new yu(lT.Disposed,"Connection is disposed.")}function Qm(){if(Ke())throw new yu(lT.AlreadyListening,"Connection is already listening")}function Zm(){if(!Ke())throw new Error("Call listen() first.")}function Ki(M){return M===void 0?null:M}function Ws(M){if(M!==null)return M}function yn(M){return M!=null&&!Array.isArray(M)&&typeof M=="object"}function Ya(M,K){switch(M){case ke.ParameterStructures.auto:return yn(K)?Ws(K):[Ki(K)];case ke.ParameterStructures.byName:if(!yn(K))throw new Error("Received parameters by name but param is not an object literal.");return Ws(K);case ke.ParameterStructures.byPosition:return[Ki(K)];default:throw new Error(`Unknown parameter structure ${M.toString()}`)}}function Xa(M,K){let ie,ge=M.numberOfParams;switch(ge){case 0:ie=void 0;break;case 1:ie=Ya(M.parameterStructures,K[0]);break;default:ie=[];for(let Wt=0;Wt<K.length&&Wt<ge;Wt++)ie.push(Ki(K[Wt]));if(K.length<ge)for(let Wt=K.length;Wt<ge;Wt++)ie.push(null);break}return ie}let zs={sendNotification:(M,...K)=>{za();let ie,ge;if(cn.string(M)){ie=M;let zt=K[0],dr=0,Hr=ke.ParameterStructures.auto;ke.ParameterStructures.is(zt)&&(dr=1,Hr=zt);let pt=K.length,er=pt-dr;switch(er){case 0:ge=void 0;break;case 1:ge=Ya(Hr,K[dr]);break;default:if(Hr===ke.ParameterStructures.byName)throw new Error(`Received ${er} parameters for 'by Name' notification parameter structure.`);ge=K.slice(dr,pt).map(_t=>Ki(_t));break}}else{let zt=K;ie=M.method,ge=Xa(M,zt)}let Wt={jsonrpc:u,method:ie,params:ge};return Ug(Wt),e.write(Wt).catch(()=>i.error("Sending notification failed."))},onNotification:(M,K)=>{za();let ie;return cn.func(M)?d=M:K&&(cn.string(M)?(ie=M,m.set(M,{type:void 0,handler:K})):(ie=M.method,m.set(M.method,{type:M,handler:K}))),{dispose:()=>{ie!==void 0?m.delete(ie):d=void 0}}},onProgress:(M,K,ie)=>{if(h.has(K))throw new Error(`Progress handler for token ${K} already registered`);return h.set(K,ie),{dispose:()=>{h.delete(K)}}},sendProgress:(M,K,ie)=>zs.sendNotification(Yg.type,{token:K,value:ie}),onUnhandledProgress:or.event,sendRequest:(M,...K)=>{za(),Zm();let ie,ge,Wt;if(cn.string(M)){ie=M;let pt=K[0],er=K[K.length-1],_t=0,Lr=ke.ParameterStructures.auto;ke.ParameterStructures.is(pt)&&(_t=1,Lr=pt);let xn=K.length;SS.CancellationToken.is(er)&&(xn=xn-1,Wt=er);let Ml=xn-_t;switch(Ml){case 0:ge=void 0;break;case 1:ge=Ya(Lr,K[_t]);break;default:if(Lr===ke.ParameterStructures.byName)throw new Error(`Received ${Ml} parameters for 'by Name' request parameter structure.`);ge=K.slice(_t,xn).map(Ys=>Ki(Ys));break}}else{let pt=K;ie=M.method,ge=Xa(M,pt);let er=M.numberOfParams;Wt=SS.CancellationToken.is(pt[er])?pt[er]:void 0}let zt=a++,dr;return Wt&&(dr=Wt.onCancellationRequested(()=>{let pt=tt.sender.sendCancellation(zs,zt);return pt===void 0?(i.log(`Received no promise from cancellation strategy when cancelling id ${zt}`),Promise.resolve()):pt.catch(()=>{i.log(`Sending cancellation messages for id ${zt} failed`)})})),new Promise((pt,er)=>{let _t={jsonrpc:u,id:zt,method:ie,params:ge},Lr=Ys=>{pt(Ys),tt.sender.cleanup(zt),dr?.dispose()},xn=Ys=>{er(Ys),tt.sender.cleanup(zt),dr?.dispose()},Ml={method:ie,timerStart:Date.now(),resolve:Lr,reject:xn};Sl(_t);try{e.write(_t).catch(()=>i.error("Sending request failed."))}catch(Ys){Ml.reject(new ke.ResponseError(ke.ErrorCodes.MessageWriteError,Ys.message?Ys.message:"Unknown reason")),Ml=null}Ml&&w.set(zt,Ml)})},onRequest:(M,K)=>{za();let ie=null;return PS.is(M)?(ie=void 0,c=M):cn.string(M)?(ie=null,K!==void 0&&(ie=M,f.set(M,{handler:K,type:void 0}))):K!==void 0&&(ie=M.method,f.set(M.method,{type:M,handler:K})),{dispose:()=>{ie!==null&&(ie!==void 0?f.delete(ie):c=void 0)}}},hasPendingResponse:()=>w.size>0,trace:async(M,K,ie)=>{let ge=!1,Wt=es.Text;ie!==void 0&&(cn.boolean(ie)?ge=ie:(ge=ie.sendNotification||!1,Wt=ie.traceFormat||es.Text)),b=M,I=Wt,b===Lt.Off?L=void 0:L=K,ge&&!Se()&&!Sr()&&await zs.sendNotification(mj.type,{value:Lt.toString(M)})},onError:_e.event,onClose:Je.event,onUnhandledNotification:Ye.event,onDispose:he.event,end:()=>{e.end()},dispose:()=>{if(Sr())return;W=ts.Disposed,he.fire(void 0);let M=new ke.ResponseError(ke.ErrorCodes.PendingResponseRejected,"Pending response rejected since connection got disposed");for(let K of w.values())K.reject(M);w=new Map,C=new Map,S=new Set,_=new dj.LinkedMap,cn.func(e.dispose)&&e.dispose(),cn.func(r.dispose)&&r.dispose()},listen:()=>{za(),Qm(),W=ts.Listening,r.listen(si)},inspect:()=>{(0,fj.default)().console.log("inspect")}};return zs.onNotification(ES.type,M=>{if(b===Lt.Off||!L)return;let K=b===Lt.Verbose||b===Lt.Compact;L.log(M.message,K?M.verbose:void 0)}),zs.onNotification(Yg.type,M=>{let K=h.get(M.token);K?K(M.value):or.fire(M)}),zs}Me.createMessageConnection=Soe});var xS=p(B=>{"use strict";Object.defineProperty(B,"__esModule",{value:!0});B.TraceFormat=B.TraceValues=B.Trace=B.ProgressType=B.ProgressToken=B.createMessageConnection=B.NullLogger=B.ConnectionOptions=B.ConnectionStrategy=B.WriteableStreamMessageWriter=B.AbstractMessageWriter=B.MessageWriter=B.ReadableStreamMessageReader=B.AbstractMessageReader=B.MessageReader=B.CancellationToken=B.CancellationTokenSource=B.Emitter=B.Event=B.Disposable=B.LRUCache=B.Touch=B.LinkedMap=B.ParameterStructures=B.NotificationType9=B.NotificationType8=B.NotificationType7=B.NotificationType6=B.NotificationType5=B.NotificationType4=B.NotificationType3=B.NotificationType2=B.NotificationType1=B.NotificationType0=B.NotificationType=B.ErrorCodes=B.ResponseError=B.RequestType9=B.RequestType8=B.RequestType7=B.RequestType6=B.RequestType5=B.RequestType4=B.RequestType3=B.RequestType2=B.RequestType1=B.RequestType0=B.RequestType=B.Message=B.RAL=void 0;B.CancellationStrategy=B.CancellationSenderStrategy=B.CancellationReceiverStrategy=B.ConnectionError=B.ConnectionErrors=B.LogTraceNotification=B.SetTraceNotification=void 0;var rr=pS();Object.defineProperty(B,"Message",{enumerable:!0,get:function(){return rr.Message}});Object.defineProperty(B,"RequestType",{enumerable:!0,get:function(){return rr.RequestType}});Object.defineProperty(B,"RequestType0",{enumerable:!0,get:function(){return rr.RequestType0}});Object.defineProperty(B,"RequestType1",{enumerable:!0,get:function(){return rr.RequestType1}});Object.defineProperty(B,"RequestType2",{enumerable:!0,get:function(){return rr.RequestType2}});Object.defineProperty(B,"RequestType3",{enumerable:!0,get:function(){return rr.RequestType3}});Object.defineProperty(B,"RequestType4",{enumerable:!0,get:function(){return rr.RequestType4}});Object.defineProperty(B,"RequestType5",{enumerable:!0,get:function(){return rr.RequestType5}});Object.defineProperty(B,"RequestType6",{enumerable:!0,get:function(){return rr.RequestType6}});Object.defineProperty(B,"RequestType7",{enumerable:!0,get:function(){return rr.RequestType7}});Object.defineProperty(B,"RequestType8",{enumerable:!0,get:function(){return rr.RequestType8}});Object.defineProperty(B,"RequestType9",{enumerable:!0,get:function(){return rr.RequestType9}});Object.defineProperty(B,"ResponseError",{enumerable:!0,get:function(){return rr.ResponseError}});Object.defineProperty(B,"ErrorCodes",{enumerable:!0,get:function(){return rr.ErrorCodes}});Object.defineProperty(B,"NotificationType",{enumerable:!0,get:function(){return rr.NotificationType}});Object.defineProperty(B,"NotificationType0",{enumerable:!0,get:function(){return rr.NotificationType0}});Object.defineProperty(B,"NotificationType1",{enumerable:!0,get:function(){return rr.NotificationType1}});Object.defineProperty(B,"NotificationType2",{enumerable:!0,get:function(){return rr.NotificationType2}});Object.defineProperty(B,"NotificationType3",{enumerable:!0,get:function(){return rr.NotificationType3}});Object.defineProperty(B,"NotificationType4",{enumerable:!0,get:function(){return rr.NotificationType4}});Object.defineProperty(B,"NotificationType5",{enumerable:!0,get:function(){return rr.NotificationType5}});Object.defineProperty(B,"NotificationType6",{enumerable:!0,get:function(){return rr.NotificationType6}});Object.defineProperty(B,"NotificationType7",{enumerable:!0,get:function(){return rr.NotificationType7}});Object.defineProperty(B,"NotificationType8",{enumerable:!0,get:function(){return rr.NotificationType8}});Object.defineProperty(B,"NotificationType9",{enumerable:!0,get:function(){return rr.NotificationType9}});Object.defineProperty(B,"ParameterStructures",{enumerable:!0,get:function(){return rr.ParameterStructures}});var FS=yS();Object.defineProperty(B,"LinkedMap",{enumerable:!0,get:function(){return FS.LinkedMap}});Object.defineProperty(B,"LRUCache",{enumerable:!0,get:function(){return FS.LRUCache}});Object.defineProperty(B,"Touch",{enumerable:!0,get:function(){return FS.Touch}});var Moe=LD();Object.defineProperty(B,"Disposable",{enumerable:!0,get:function(){return Moe.Disposable}});var gj=iy();Object.defineProperty(B,"Event",{enumerable:!0,get:function(){return gj.Event}});Object.defineProperty(B,"Emitter",{enumerable:!0,get:function(){return gj.Emitter}});var vj=$S();Object.defineProperty(B,"CancellationTokenSource",{enumerable:!0,get:function(){return vj.CancellationTokenSource}});Object.defineProperty(B,"CancellationToken",{enumerable:!0,get:function(){return vj.CancellationToken}});var NS=aj();Object.defineProperty(B,"MessageReader",{enumerable:!0,get:function(){return NS.MessageReader}});Object.defineProperty(B,"AbstractMessageReader",{enumerable:!0,get:function(){return NS.AbstractMessageReader}});Object.defineProperty(B,"ReadableStreamMessageReader",{enumerable:!0,get:function(){return NS.ReadableStreamMessageReader}});var qS=cj();Object.defineProperty(B,"MessageWriter",{enumerable:!0,get:function(){return qS.MessageWriter}});Object.defineProperty(B,"AbstractMessageWriter",{enumerable:!0,get:function(){return qS.AbstractMessageWriter}});Object.defineProperty(B,"WriteableStreamMessageWriter",{enumerable:!0,get:function(){return qS.WriteableStreamMessageWriter}});var jn=hj();Object.defineProperty(B,"ConnectionStrategy",{enumerable:!0,get:function(){return jn.ConnectionStrategy}});Object.defineProperty(B,"ConnectionOptions",{enumerable:!0,get:function(){return jn.ConnectionOptions}});Object.defineProperty(B,"NullLogger",{enumerable:!0,get:function(){return jn.NullLogger}});Object.defineProperty(B,"createMessageConnection",{enumerable:!0,get:function(){return jn.createMessageConnection}});Object.defineProperty(B,"ProgressToken",{enumerable:!0,get:function(){return jn.ProgressToken}});Object.defineProperty(B,"ProgressType",{enumerable:!0,get:function(){return jn.ProgressType}});Object.defineProperty(B,"Trace",{enumerable:!0,get:function(){return jn.Trace}});Object.defineProperty(B,"TraceValues",{enumerable:!0,get:function(){return jn.TraceValues}});Object.defineProperty(B,"TraceFormat",{enumerable:!0,get:function(){return jn.TraceFormat}});Object.defineProperty(B,"SetTraceNotification",{enumerable:!0,get:function(){return jn.SetTraceNotification}});Object.defineProperty(B,"LogTraceNotification",{enumerable:!0,get:function(){return jn.LogTraceNotification}});Object.defineProperty(B,"ConnectionErrors",{enumerable:!0,get:function(){return jn.ConnectionErrors}});Object.defineProperty(B,"ConnectionError",{enumerable:!0,get:function(){return jn.ConnectionError}});Object.defineProperty(B,"CancellationReceiverStrategy",{enumerable:!0,get:function(){return jn.CancellationReceiverStrategy}});Object.defineProperty(B,"CancellationSenderStrategy",{enumerable:!0,get:function(){return jn.CancellationSenderStrategy}});Object.defineProperty(B,"CancellationStrategy",{enumerable:!0,get:function(){return jn.CancellationStrategy}});var Poe=Ol();B.RAL=Poe.default});var Nl=p(St=>{"use strict";var Eoe=St&&St.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Ooe=St&&St.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Eoe(e,r,t)};Object.defineProperty(St,"__esModule",{value:!0});St.createMessageConnection=St.createServerSocketTransport=St.createClientSocketTransport=St.createServerPipeTransport=St.createClientPipeTransport=St.generateRandomPipeName=St.StreamMessageWriter=St.StreamMessageReader=St.SocketMessageWriter=St.SocketMessageReader=St.IPCMessageWriter=St.IPCMessageReader=void 0;var sy=ej();sy.default.install();var Xs=xS(),_j=require("path"),koe=require("os"),Ioe=require("crypto"),fT=require("net");Ooe(xS(),St);var LS=class extends Xs.AbstractMessageReader{constructor(e){super(),this.process=e;let t=this.process;t.on("error",n=>this.fireError(n)),t.on("close",()=>this.fireClose())}listen(e){return this.process.on("message",e),Xs.Disposable.create(()=>this.process.off("message",e))}};St.IPCMessageReader=LS;var jS=class extends Xs.AbstractMessageWriter{constructor(e){super(),this.process=e,this.errorCount=0;let t=this.process;t.on("error",n=>this.fireError(n)),t.on("close",()=>this.fireClose)}write(e){try{return typeof this.process.send=="function"&&this.process.send(e,void 0,void 0,t=>{t?(this.errorCount++,this.handleError(t,e)):this.errorCount=0}),Promise.resolve()}catch(t){return this.handleError(t,e),Promise.reject(t)}}handleError(e,t){this.errorCount++,this.fireError(e,t,this.errorCount)}end(){}};St.IPCMessageWriter=jS;var zc=class extends Xs.ReadableStreamMessageReader{constructor(e,t="utf-8"){super((0,sy.default)().stream.asReadableStream(e),t)}};St.SocketMessageReader=zc;var Yc=class extends Xs.WriteableStreamMessageWriter{constructor(e,t){super((0,sy.default)().stream.asWritableStream(e),t),this.socket=e}dispose(){super.dispose(),this.socket.destroy()}};St.SocketMessageWriter=Yc;var uT=class extends Xs.ReadableStreamMessageReader{constructor(e,t){super((0,sy.default)().stream.asReadableStream(e),t)}};St.StreamMessageReader=uT;var cT=class extends Xs.WriteableStreamMessageWriter{constructor(e,t){super((0,sy.default)().stream.asWritableStream(e),t)}};St.StreamMessageWriter=cT;var $j=process.env.XDG_RUNTIME_DIR,Foe=new Map([["linux",107],["darwin",103]]);function Noe(){let r=(0,Ioe.randomBytes)(21).toString("hex");if(process.platform==="win32")return`\\\\.\\pipe\\vscode-jsonrpc-${r}-sock`;let e;$j?e=_j.join($j,`vscode-ipc-${r}.sock`):e=_j.join(koe.tmpdir(),`vscode-${r}.sock`);let t=Foe.get(process.platform);return t!==void 0&&e.length>=t&&(0,sy.default)().console.warn(`WARNING: IPC handle "${e}" is longer than ${t} characters.`),e}St.generateRandomPipeName=Noe;function qoe(r,e="utf-8"){let t,n=new Promise((i,a)=>{t=i});return new Promise((i,a)=>{let s=(0,fT.createServer)(o=>{s.close(),t([new zc(o,e),new Yc(o,e)])});s.on("error",a),s.listen(r,()=>{s.removeListener("error",a),i({onConnected:()=>n})})})}St.createClientPipeTransport=qoe;function xoe(r,e="utf-8"){let t=(0,fT.createConnection)(r);return[new zc(t,e),new Yc(t,e)]}St.createServerPipeTransport=xoe;function Loe(r,e="utf-8"){let t,n=new Promise((i,a)=>{t=i});return new Promise((i,a)=>{let s=(0,fT.createServer)(o=>{s.close(),t([new zc(o,e),new Yc(o,e)])});s.on("error",a),s.listen(r,"127.0.0.1",()=>{s.removeListener("error",a),i({onConnected:()=>n})})})}St.createClientSocketTransport=Loe;function joe(r,e="utf-8"){let t=(0,fT.createConnection)(r,"127.0.0.1");return[new zc(t,e),new Yc(t,e)]}St.createServerSocketTransport=joe;function Uoe(r){let e=r;return e.read!==void 0&&e.addListener!==void 0}function Boe(r){let e=r;return e.write!==void 0&&e.addListener!==void 0}function Goe(r,e,t,n){t||(t=Xs.NullLogger);let i=Uoe(r)?new uT(r):r,a=Boe(e)?new cT(e):e;return Xs.ConnectionStrategy.is(n)&&(n={connectionStrategy:n}),(0,Xs.createMessageConnection)(i,a,t,n)}St.createMessageConnection=Goe});var US=p((eit,Tj)=>{"use strict";Tj.exports=Nl()});var oy=p((Rj,dT)=>{(function(r){if(typeof dT=="object"&&typeof dT.exports=="object"){var e=r(require,Rj);e!==void 0&&(dT.exports=e)}else typeof define=="function"&&define.amd&&define(["require","exports"],r)})(function(r,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextDocument=e.EOL=e.WorkspaceFolder=e.InlayHint=e.InlayHintLabelPart=e.InlayHintKind=e.InlineValueContext=e.InlineValueEvaluatableExpression=e.InlineValueVariableLookup=e.InlineValueText=e.SemanticTokens=e.SemanticTokenModifiers=e.SemanticTokenTypes=e.SelectionRange=e.DocumentLink=e.FormattingOptions=e.CodeLens=e.CodeAction=e.CodeActionContext=e.CodeActionTriggerKind=e.CodeActionKind=e.DocumentSymbol=e.WorkspaceSymbol=e.SymbolInformation=e.SymbolTag=e.SymbolKind=e.DocumentHighlight=e.DocumentHighlightKind=e.SignatureInformation=e.ParameterInformation=e.Hover=e.MarkedString=e.CompletionList=e.CompletionItem=e.CompletionItemLabelDetails=e.InsertTextMode=e.InsertReplaceEdit=e.CompletionItemTag=e.InsertTextFormat=e.CompletionItemKind=e.MarkupContent=e.MarkupKind=e.TextDocumentItem=e.OptionalVersionedTextDocumentIdentifier=e.VersionedTextDocumentIdentifier=e.TextDocumentIdentifier=e.WorkspaceChange=e.WorkspaceEdit=e.DeleteFile=e.RenameFile=e.CreateFile=e.TextDocumentEdit=e.AnnotatedTextEdit=e.ChangeAnnotationIdentifier=e.ChangeAnnotation=e.TextEdit=e.Command=e.Diagnostic=e.CodeDescription=e.DiagnosticTag=e.DiagnosticSeverity=e.DiagnosticRelatedInformation=e.FoldingRange=e.FoldingRangeKind=e.ColorPresentation=e.ColorInformation=e.Color=e.LocationLink=e.Location=e.Range=e.Position=e.uinteger=e.integer=e.URI=e.DocumentUri=void 0;var t;(function(v){function P(E){return typeof E=="string"}v.is=P})(t=e.DocumentUri||(e.DocumentUri={}));var n;(function(v){function P(E){return typeof E=="string"}v.is=P})(n=e.URI||(e.URI={}));var i;(function(v){v.MIN_VALUE=-2147483648,v.MAX_VALUE=2147483647;function P(E){return typeof E=="number"&&v.MIN_VALUE<=E&&E<=v.MAX_VALUE}v.is=P})(i=e.integer||(e.integer={}));var a;(function(v){v.MIN_VALUE=0,v.MAX_VALUE=2147483647;function P(E){return typeof E=="number"&&v.MIN_VALUE<=E&&E<=v.MAX_VALUE}v.is=P})(a=e.uinteger||(e.uinteger={}));var s;(function(v){function P(R,g){return R===Number.MAX_VALUE&&(R=a.MAX_VALUE),g===Number.MAX_VALUE&&(g=a.MAX_VALUE),{line:R,character:g}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&F.uinteger(g.line)&&F.uinteger(g.character)}v.is=E})(s=e.Position||(e.Position={}));var o;(function(v){function P(R,g,N,G){if(F.uinteger(R)&&F.uinteger(g)&&F.uinteger(N)&&F.uinteger(G))return{start:s.create(R,g),end:s.create(N,G)};if(s.is(R)&&s.is(g))return{start:R,end:g};throw new Error("Range#create called with invalid arguments[".concat(R,", ").concat(g,", ").concat(N,", ").concat(G,"]"))}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&s.is(g.start)&&s.is(g.end)}v.is=E})(o=e.Range||(e.Range={}));var u;(function(v){function P(R,g){return{uri:R,range:g}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&o.is(g.range)&&(F.string(g.uri)||F.undefined(g.uri))}v.is=E})(u=e.Location||(e.Location={}));var c;(function(v){function P(R,g,N,G){return{targetUri:R,targetRange:g,targetSelectionRange:N,originSelectionRange:G}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&o.is(g.targetRange)&&F.string(g.targetUri)&&o.is(g.targetSelectionRange)&&(o.is(g.originSelectionRange)||F.undefined(g.originSelectionRange))}v.is=E})(c=e.LocationLink||(e.LocationLink={}));var f;(function(v){function P(R,g,N,G){return{red:R,green:g,blue:N,alpha:G}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&F.numberRange(g.red,0,1)&&F.numberRange(g.green,0,1)&&F.numberRange(g.blue,0,1)&&F.numberRange(g.alpha,0,1)}v.is=E})(f=e.Color||(e.Color={}));var d;(function(v){function P(R,g){return{range:R,color:g}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&o.is(g.range)&&f.is(g.color)}v.is=E})(d=e.ColorInformation||(e.ColorInformation={}));var m;(function(v){function P(R,g,N){return{label:R,textEdit:g,additionalTextEdits:N}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&F.string(g.label)&&(F.undefined(g.textEdit)||L.is(g))&&(F.undefined(g.additionalTextEdits)||F.typedArray(g.additionalTextEdits,L.is))}v.is=E})(m=e.ColorPresentation||(e.ColorPresentation={}));var h;(function(v){v.Comment="comment",v.Imports="imports",v.Region="region"})(h=e.FoldingRangeKind||(e.FoldingRangeKind={}));var y;(function(v){function P(R,g,N,G,Ue,Mr){var tr={startLine:R,endLine:g};return F.defined(N)&&(tr.startCharacter=N),F.defined(G)&&(tr.endCharacter=G),F.defined(Ue)&&(tr.kind=Ue),F.defined(Mr)&&(tr.collapsedText=Mr),tr}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&F.uinteger(g.startLine)&&F.uinteger(g.startLine)&&(F.undefined(g.startCharacter)||F.uinteger(g.startCharacter))&&(F.undefined(g.endCharacter)||F.uinteger(g.endCharacter))&&(F.undefined(g.kind)||F.string(g.kind))}v.is=E})(y=e.FoldingRange||(e.FoldingRange={}));var _;(function(v){function P(R,g){return{location:R,message:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&u.is(g.location)&&F.string(g.message)}v.is=E})(_=e.DiagnosticRelatedInformation||(e.DiagnosticRelatedInformation={}));var w;(function(v){v.Error=1,v.Warning=2,v.Information=3,v.Hint=4})(w=e.DiagnosticSeverity||(e.DiagnosticSeverity={}));var S;(function(v){v.Unnecessary=1,v.Deprecated=2})(S=e.DiagnosticTag||(e.DiagnosticTag={}));var C;(function(v){function P(E){var R=E;return F.objectLiteral(R)&&F.string(R.href)}v.is=P})(C=e.CodeDescription||(e.CodeDescription={}));var b;(function(v){function P(R,g,N,G,Ue,Mr){var tr={range:R,message:g};return F.defined(N)&&(tr.severity=N),F.defined(G)&&(tr.code=G),F.defined(Ue)&&(tr.source=Ue),F.defined(Mr)&&(tr.relatedInformation=Mr),tr}v.create=P;function E(R){var g,N=R;return F.defined(N)&&o.is(N.range)&&F.string(N.message)&&(F.number(N.severity)||F.undefined(N.severity))&&(F.integer(N.code)||F.string(N.code)||F.undefined(N.code))&&(F.undefined(N.codeDescription)||F.string((g=N.codeDescription)===null||g===void 0?void 0:g.href))&&(F.string(N.source)||F.undefined(N.source))&&(F.undefined(N.relatedInformation)||F.typedArray(N.relatedInformation,_.is))}v.is=E})(b=e.Diagnostic||(e.Diagnostic={}));var I;(function(v){function P(R,g){for(var N=[],G=2;G<arguments.length;G++)N[G-2]=arguments[G];var Ue={title:R,command:g};return F.defined(N)&&N.length>0&&(Ue.arguments=N),Ue}v.create=P;function E(R){var g=R;return F.defined(g)&&F.string(g.title)&&F.string(g.command)}v.is=E})(I=e.Command||(e.Command={}));var L;(function(v){function P(N,G){return{range:N,newText:G}}v.replace=P;function E(N,G){return{range:{start:N,end:N},newText:G}}v.insert=E;function R(N){return{range:N,newText:""}}v.del=R;function g(N){var G=N;return F.objectLiteral(G)&&F.string(G.newText)&&o.is(G.range)}v.is=g})(L=e.TextEdit||(e.TextEdit={}));var W;(function(v){function P(R,g,N){var G={label:R};return g!==void 0&&(G.needsConfirmation=g),N!==void 0&&(G.description=N),G}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&F.string(g.label)&&(F.boolean(g.needsConfirmation)||g.needsConfirmation===void 0)&&(F.string(g.description)||g.description===void 0)}v.is=E})(W=e.ChangeAnnotation||(e.ChangeAnnotation={}));var _e;(function(v){function P(E){var R=E;return F.string(R)}v.is=P})(_e=e.ChangeAnnotationIdentifier||(e.ChangeAnnotationIdentifier={}));var Je;(function(v){function P(N,G,Ue){return{range:N,newText:G,annotationId:Ue}}v.replace=P;function E(N,G,Ue){return{range:{start:N,end:N},newText:G,annotationId:Ue}}v.insert=E;function R(N,G){return{range:N,newText:"",annotationId:G}}v.del=R;function g(N){var G=N;return L.is(G)&&(W.is(G.annotationId)||_e.is(G.annotationId))}v.is=g})(Je=e.AnnotatedTextEdit||(e.AnnotatedTextEdit={}));var Ye;(function(v){function P(R,g){return{textDocument:R,edits:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&Se.is(g.textDocument)&&Array.isArray(g.edits)}v.is=E})(Ye=e.TextDocumentEdit||(e.TextDocumentEdit={}));var or;(function(v){function P(R,g,N){var G={kind:"create",uri:R};return g!==void 0&&(g.overwrite!==void 0||g.ignoreIfExists!==void 0)&&(G.options=g),N!==void 0&&(G.annotationId=N),G}v.create=P;function E(R){var g=R;return g&&g.kind==="create"&&F.string(g.uri)&&(g.options===void 0||(g.options.overwrite===void 0||F.boolean(g.options.overwrite))&&(g.options.ignoreIfExists===void 0||F.boolean(g.options.ignoreIfExists)))&&(g.annotationId===void 0||_e.is(g.annotationId))}v.is=E})(or=e.CreateFile||(e.CreateFile={}));var he;(function(v){function P(R,g,N,G){var Ue={kind:"rename",oldUri:R,newUri:g};return N!==void 0&&(N.overwrite!==void 0||N.ignoreIfExists!==void 0)&&(Ue.options=N),G!==void 0&&(Ue.annotationId=G),Ue}v.create=P;function E(R){var g=R;return g&&g.kind==="rename"&&F.string(g.oldUri)&&F.string(g.newUri)&&(g.options===void 0||(g.options.overwrite===void 0||F.boolean(g.options.overwrite))&&(g.options.ignoreIfExists===void 0||F.boolean(g.options.ignoreIfExists)))&&(g.annotationId===void 0||_e.is(g.annotationId))}v.is=E})(he=e.RenameFile||(e.RenameFile={}));var tt;(function(v){function P(R,g,N){var G={kind:"delete",uri:R};return g!==void 0&&(g.recursive!==void 0||g.ignoreIfNotExists!==void 0)&&(G.options=g),N!==void 0&&(G.annotationId=N),G}v.create=P;function E(R){var g=R;return g&&g.kind==="delete"&&F.string(g.uri)&&(g.options===void 0||(g.options.recursive===void 0||F.boolean(g.options.recursive))&&(g.options.ignoreIfNotExists===void 0||F.boolean(g.options.ignoreIfNotExists)))&&(g.annotationId===void 0||_e.is(g.annotationId))}v.is=E})(tt=e.DeleteFile||(e.DeleteFile={}));var z;(function(v){function P(E){var R=E;return R&&(R.changes!==void 0||R.documentChanges!==void 0)&&(R.documentChanges===void 0||R.documentChanges.every(function(g){return F.string(g.kind)?or.is(g)||he.is(g)||tt.is(g):Ye.is(g)}))}v.is=P})(z=e.WorkspaceEdit||(e.WorkspaceEdit={}));var H=function(){function v(P,E){this.edits=P,this.changeAnnotations=E}return v.prototype.insert=function(P,E,R){var g,N;if(R===void 0?g=L.insert(P,E):_e.is(R)?(N=R,g=Je.insert(P,E,R)):(this.assertChangeAnnotations(this.changeAnnotations),N=this.changeAnnotations.manage(R),g=Je.insert(P,E,N)),this.edits.push(g),N!==void 0)return N},v.prototype.replace=function(P,E,R){var g,N;if(R===void 0?g=L.replace(P,E):_e.is(R)?(N=R,g=Je.replace(P,E,R)):(this.assertChangeAnnotations(this.changeAnnotations),N=this.changeAnnotations.manage(R),g=Je.replace(P,E,N)),this.edits.push(g),N!==void 0)return N},v.prototype.delete=function(P,E){var R,g;if(E===void 0?R=L.del(P):_e.is(E)?(g=E,R=Je.del(P,E)):(this.assertChangeAnnotations(this.changeAnnotations),g=this.changeAnnotations.manage(E),R=Je.del(P,g)),this.edits.push(R),g!==void 0)return g},v.prototype.add=function(P){this.edits.push(P)},v.prototype.all=function(){return this.edits},v.prototype.clear=function(){this.edits.splice(0,this.edits.length)},v.prototype.assertChangeAnnotations=function(P){if(P===void 0)throw new Error("Text edit change is not configured to manage change annotations.")},v}(),ne=function(){function v(P){this._annotations=P===void 0?Object.create(null):P,this._counter=0,this._size=0}return v.prototype.all=function(){return this._annotations},Object.defineProperty(v.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),v.prototype.manage=function(P,E){var R;if(_e.is(P)?R=P:(R=this.nextId(),E=P),this._annotations[R]!==void 0)throw new Error("Id ".concat(R," is already in use."));if(E===void 0)throw new Error("No annotation provided for id ".concat(R));return this._annotations[R]=E,this._size++,R},v.prototype.nextId=function(){return this._counter++,this._counter.toString()},v}(),me=function(){function v(P){var E=this;this._textEditChanges=Object.create(null),P!==void 0?(this._workspaceEdit=P,P.documentChanges?(this._changeAnnotations=new ne(P.changeAnnotations),P.changeAnnotations=this._changeAnnotations.all(),P.documentChanges.forEach(function(R){if(Ye.is(R)){var g=new H(R.edits,E._changeAnnotations);E._textEditChanges[R.textDocument.uri]=g}})):P.changes&&Object.keys(P.changes).forEach(function(R){var g=new H(P.changes[R]);E._textEditChanges[R]=g})):this._workspaceEdit={}}return Object.defineProperty(v.prototype,"edit",{get:function(){return this.initDocumentChanges(),this._changeAnnotations!==void 0&&(this._changeAnnotations.size===0?this._workspaceEdit.changeAnnotations=void 0:this._workspaceEdit.changeAnnotations=this._changeAnnotations.all()),this._workspaceEdit},enumerable:!1,configurable:!0}),v.prototype.getTextEditChange=function(P){if(Se.is(P)){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var E={uri:P.uri,version:P.version},R=this._textEditChanges[E.uri];if(!R){var g=[],N={textDocument:E,edits:g};this._workspaceEdit.documentChanges.push(N),R=new H(g,this._changeAnnotations),this._textEditChanges[E.uri]=R}return R}else{if(this.initChanges(),this._workspaceEdit.changes===void 0)throw new Error("Workspace edit is not configured for normal text edit changes.");var R=this._textEditChanges[P];if(!R){var g=[];this._workspaceEdit.changes[P]=g,R=new H(g),this._textEditChanges[P]=R}return R}},v.prototype.initDocumentChanges=function(){this._workspaceEdit.documentChanges===void 0&&this._workspaceEdit.changes===void 0&&(this._changeAnnotations=new ne,this._workspaceEdit.documentChanges=[],this._workspaceEdit.changeAnnotations=this._changeAnnotations.all())},v.prototype.initChanges=function(){this._workspaceEdit.documentChanges===void 0&&this._workspaceEdit.changes===void 0&&(this._workspaceEdit.changes=Object.create(null))},v.prototype.createFile=function(P,E,R){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var g;W.is(E)||_e.is(E)?g=E:R=E;var N,G;if(g===void 0?N=or.create(P,R):(G=_e.is(g)?g:this._changeAnnotations.manage(g),N=or.create(P,R,G)),this._workspaceEdit.documentChanges.push(N),G!==void 0)return G},v.prototype.renameFile=function(P,E,R,g){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var N;W.is(R)||_e.is(R)?N=R:g=R;var G,Ue;if(N===void 0?G=he.create(P,E,g):(Ue=_e.is(N)?N:this._changeAnnotations.manage(N),G=he.create(P,E,g,Ue)),this._workspaceEdit.documentChanges.push(G),Ue!==void 0)return Ue},v.prototype.deleteFile=function(P,E,R){if(this.initDocumentChanges(),this._workspaceEdit.documentChanges===void 0)throw new Error("Workspace edit is not configured for document changes.");var g;W.is(E)||_e.is(E)?g=E:R=E;var N,G;if(g===void 0?N=tt.create(P,R):(G=_e.is(g)?g:this._changeAnnotations.manage(g),N=tt.create(P,R,G)),this._workspaceEdit.documentChanges.push(N),G!==void 0)return G},v}();e.WorkspaceChange=me;var Ge;(function(v){function P(R){return{uri:R}}v.create=P;function E(R){var g=R;return F.defined(g)&&F.string(g.uri)}v.is=E})(Ge=e.TextDocumentIdentifier||(e.TextDocumentIdentifier={}));var Ke;(function(v){function P(R,g){return{uri:R,version:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&F.string(g.uri)&&F.integer(g.version)}v.is=E})(Ke=e.VersionedTextDocumentIdentifier||(e.VersionedTextDocumentIdentifier={}));var Se;(function(v){function P(R,g){return{uri:R,version:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&F.string(g.uri)&&(g.version===null||F.integer(g.version))}v.is=E})(Se=e.OptionalVersionedTextDocumentIdentifier||(e.OptionalVersionedTextDocumentIdentifier={}));var Sr;(function(v){function P(R,g,N,G){return{uri:R,languageId:g,version:N,text:G}}v.create=P;function E(R){var g=R;return F.defined(g)&&F.string(g.uri)&&F.string(g.languageId)&&F.integer(g.version)&&F.string(g.text)}v.is=E})(Sr=e.TextDocumentItem||(e.TextDocumentItem={}));var fr;(function(v){v.PlainText="plaintext",v.Markdown="markdown";function P(E){var R=E;return R===v.PlainText||R===v.Markdown}v.is=P})(fr=e.MarkupKind||(e.MarkupKind={}));var un;(function(v){function P(E){var R=E;return F.objectLiteral(E)&&fr.is(R.kind)&&F.string(R.value)}v.is=P})(un=e.MarkupContent||(e.MarkupContent={}));var Wa;(function(v){v.Text=1,v.Method=2,v.Function=3,v.Constructor=4,v.Field=5,v.Variable=6,v.Class=7,v.Interface=8,v.Module=9,v.Property=10,v.Unit=11,v.Value=12,v.Enum=13,v.Keyword=14,v.Snippet=15,v.Color=16,v.File=17,v.Reference=18,v.Folder=19,v.EnumMember=20,v.Constant=21,v.Struct=22,v.Event=23,v.Operator=24,v.TypeParameter=25})(Wa=e.CompletionItemKind||(e.CompletionItemKind={}));var Gi;(function(v){v.PlainText=1,v.Snippet=2})(Gi=e.InsertTextFormat||(e.InsertTextFormat={}));var zm;(function(v){v.Deprecated=1})(zm=e.CompletionItemTag||(e.CompletionItemTag={}));var si;(function(v){function P(R,g,N){return{newText:R,insert:g,replace:N}}v.create=P;function E(R){var g=R;return g&&F.string(g.newText)&&o.is(g.insert)&&o.is(g.replace)}v.is=E})(si=e.InsertReplaceEdit||(e.InsertReplaceEdit={}));var Ym;(function(v){v.asIs=1,v.adjustIndentation=2})(Ym=e.InsertTextMode||(e.InsertTextMode={}));var Xm;(function(v){function P(E){var R=E;return R&&(F.string(R.detail)||R.detail===void 0)&&(F.string(R.description)||R.description===void 0)}v.is=P})(Xm=e.CompletionItemLabelDetails||(e.CompletionItemLabelDetails={}));var Jm;(function(v){function P(E){return{label:E}}v.create=P})(Jm=e.CompletionItem||(e.CompletionItem={}));var jg;(function(v){function P(E,R){return{items:E||[],isIncomplete:!!R}}v.create=P})(jg=e.CompletionList||(e.CompletionList={}));var xr;(function(v){function P(R){return R.replace(/[\\`*_{}[\]()#+\-.!]/g,"\\$&")}v.fromPlainText=P;function E(R){var g=R;return F.string(g)||F.objectLiteral(g)&&F.string(g.language)&&F.string(g.value)}v.is=E})(xr=e.MarkedString||(e.MarkedString={}));var Sl;(function(v){function P(E){var R=E;return!!R&&F.objectLiteral(R)&&(un.is(R.contents)||xr.is(R.contents)||F.typedArray(R.contents,xr.is))&&(E.range===void 0||o.is(E.range))}v.is=P})(Sl=e.Hover||(e.Hover={}));var Ug;(function(v){function P(E,R){return R?{label:E,documentation:R}:{label:E}}v.create=P})(Ug=e.ParameterInformation||(e.ParameterInformation={}));var Hs;(function(v){function P(E,R){for(var g=[],N=2;N<arguments.length;N++)g[N-2]=arguments[N];var G={label:E};return F.defined(R)&&(G.documentation=R),F.defined(g)?G.parameters=g:G.parameters=[],G}v.create=P})(Hs=e.SignatureInformation||(e.SignatureInformation={}));var Bc;(function(v){v.Text=1,v.Read=2,v.Write=3})(Bc=e.DocumentHighlightKind||(e.DocumentHighlightKind={}));var Vs;(function(v){function P(E,R){var g={range:E};return F.number(R)&&(g.kind=R),g}v.create=P})(Vs=e.DocumentHighlight||(e.DocumentHighlight={}));var Gc;(function(v){v.File=1,v.Module=2,v.Namespace=3,v.Package=4,v.Class=5,v.Method=6,v.Property=7,v.Field=8,v.Constructor=9,v.Enum=10,v.Interface=11,v.Function=12,v.Variable=13,v.Constant=14,v.String=15,v.Number=16,v.Boolean=17,v.Array=18,v.Object=19,v.Key=20,v.Null=21,v.EnumMember=22,v.Struct=23,v.Event=24,v.Operator=25,v.TypeParameter=26})(Gc=e.SymbolKind||(e.SymbolKind={}));var ma;(function(v){v.Deprecated=1})(ma=e.SymbolTag||(e.SymbolTag={}));var za;(function(v){function P(E,R,g,N,G){var Ue={name:E,kind:R,location:{uri:N,range:g}};return G&&(Ue.containerName=G),Ue}v.create=P})(za=e.SymbolInformation||(e.SymbolInformation={}));var Qm;(function(v){function P(E,R,g,N){return N!==void 0?{name:E,kind:R,location:{uri:g,range:N}}:{name:E,kind:R,location:{uri:g}}}v.create=P})(Qm=e.WorkspaceSymbol||(e.WorkspaceSymbol={}));var Zm;(function(v){function P(R,g,N,G,Ue,Mr){var tr={name:R,detail:g,kind:N,range:G,selectionRange:Ue};return Mr!==void 0&&(tr.children=Mr),tr}v.create=P;function E(R){var g=R;return g&&F.string(g.name)&&F.number(g.kind)&&o.is(g.range)&&o.is(g.selectionRange)&&(g.detail===void 0||F.string(g.detail))&&(g.deprecated===void 0||F.boolean(g.deprecated))&&(g.children===void 0||Array.isArray(g.children))&&(g.tags===void 0||Array.isArray(g.tags))}v.is=E})(Zm=e.DocumentSymbol||(e.DocumentSymbol={}));var Ki;(function(v){v.Empty="",v.QuickFix="quickfix",v.Refactor="refactor",v.RefactorExtract="refactor.extract",v.RefactorInline="refactor.inline",v.RefactorRewrite="refactor.rewrite",v.Source="source",v.SourceOrganizeImports="source.organizeImports",v.SourceFixAll="source.fixAll"})(Ki=e.CodeActionKind||(e.CodeActionKind={}));var Ws;(function(v){v.Invoked=1,v.Automatic=2})(Ws=e.CodeActionTriggerKind||(e.CodeActionTriggerKind={}));var yn;(function(v){function P(R,g,N){var G={diagnostics:R};return g!=null&&(G.only=g),N!=null&&(G.triggerKind=N),G}v.create=P;function E(R){var g=R;return F.defined(g)&&F.typedArray(g.diagnostics,b.is)&&(g.only===void 0||F.typedArray(g.only,F.string))&&(g.triggerKind===void 0||g.triggerKind===Ws.Invoked||g.triggerKind===Ws.Automatic)}v.is=E})(yn=e.CodeActionContext||(e.CodeActionContext={}));var Ya;(function(v){function P(R,g,N){var G={title:R},Ue=!0;return typeof g=="string"?(Ue=!1,G.kind=g):I.is(g)?G.command=g:G.edit=g,Ue&&N!==void 0&&(G.kind=N),G}v.create=P;function E(R){var g=R;return g&&F.string(g.title)&&(g.diagnostics===void 0||F.typedArray(g.diagnostics,b.is))&&(g.kind===void 0||F.string(g.kind))&&(g.edit!==void 0||g.command!==void 0)&&(g.command===void 0||I.is(g.command))&&(g.isPreferred===void 0||F.boolean(g.isPreferred))&&(g.edit===void 0||z.is(g.edit))}v.is=E})(Ya=e.CodeAction||(e.CodeAction={}));var Xa;(function(v){function P(R,g){var N={range:R};return F.defined(g)&&(N.data=g),N}v.create=P;function E(R){var g=R;return F.defined(g)&&o.is(g.range)&&(F.undefined(g.command)||I.is(g.command))}v.is=E})(Xa=e.CodeLens||(e.CodeLens={}));var zs;(function(v){function P(R,g){return{tabSize:R,insertSpaces:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&F.uinteger(g.tabSize)&&F.boolean(g.insertSpaces)}v.is=E})(zs=e.FormattingOptions||(e.FormattingOptions={}));var M;(function(v){function P(R,g,N){return{range:R,target:g,data:N}}v.create=P;function E(R){var g=R;return F.defined(g)&&o.is(g.range)&&(F.undefined(g.target)||F.string(g.target))}v.is=E})(M=e.DocumentLink||(e.DocumentLink={}));var K;(function(v){function P(R,g){return{range:R,parent:g}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&o.is(g.range)&&(g.parent===void 0||v.is(g.parent))}v.is=E})(K=e.SelectionRange||(e.SelectionRange={}));var ie;(function(v){v.namespace="namespace",v.type="type",v.class="class",v.enum="enum",v.interface="interface",v.struct="struct",v.typeParameter="typeParameter",v.parameter="parameter",v.variable="variable",v.property="property",v.enumMember="enumMember",v.event="event",v.function="function",v.method="method",v.macro="macro",v.keyword="keyword",v.modifier="modifier",v.comment="comment",v.string="string",v.number="number",v.regexp="regexp",v.operator="operator",v.decorator="decorator"})(ie=e.SemanticTokenTypes||(e.SemanticTokenTypes={}));var ge;(function(v){v.declaration="declaration",v.definition="definition",v.readonly="readonly",v.static="static",v.deprecated="deprecated",v.abstract="abstract",v.async="async",v.modification="modification",v.documentation="documentation",v.defaultLibrary="defaultLibrary"})(ge=e.SemanticTokenModifiers||(e.SemanticTokenModifiers={}));var Wt;(function(v){function P(E){var R=E;return F.objectLiteral(R)&&(R.resultId===void 0||typeof R.resultId=="string")&&Array.isArray(R.data)&&(R.data.length===0||typeof R.data[0]=="number")}v.is=P})(Wt=e.SemanticTokens||(e.SemanticTokens={}));var zt;(function(v){function P(R,g){return{range:R,text:g}}v.create=P;function E(R){var g=R;return g!=null&&o.is(g.range)&&F.string(g.text)}v.is=E})(zt=e.InlineValueText||(e.InlineValueText={}));var dr;(function(v){function P(R,g,N){return{range:R,variableName:g,caseSensitiveLookup:N}}v.create=P;function E(R){var g=R;return g!=null&&o.is(g.range)&&F.boolean(g.caseSensitiveLookup)&&(F.string(g.variableName)||g.variableName===void 0)}v.is=E})(dr=e.InlineValueVariableLookup||(e.InlineValueVariableLookup={}));var Hr;(function(v){function P(R,g){return{range:R,expression:g}}v.create=P;function E(R){var g=R;return g!=null&&o.is(g.range)&&(F.string(g.expression)||g.expression===void 0)}v.is=E})(Hr=e.InlineValueEvaluatableExpression||(e.InlineValueEvaluatableExpression={}));var pt;(function(v){function P(R,g){return{frameId:R,stoppedLocation:g}}v.create=P;function E(R){var g=R;return F.defined(g)&&o.is(R.stoppedLocation)}v.is=E})(pt=e.InlineValueContext||(e.InlineValueContext={}));var er;(function(v){v.Type=1,v.Parameter=2;function P(E){return E===1||E===2}v.is=P})(er=e.InlayHintKind||(e.InlayHintKind={}));var _t;(function(v){function P(R){return{value:R}}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&(g.tooltip===void 0||F.string(g.tooltip)||un.is(g.tooltip))&&(g.location===void 0||u.is(g.location))&&(g.command===void 0||I.is(g.command))}v.is=E})(_t=e.InlayHintLabelPart||(e.InlayHintLabelPart={}));var Lr;(function(v){function P(R,g,N){var G={position:R,label:g};return N!==void 0&&(G.kind=N),G}v.create=P;function E(R){var g=R;return F.objectLiteral(g)&&s.is(g.position)&&(F.string(g.label)||F.typedArray(g.label,_t.is))&&(g.kind===void 0||er.is(g.kind))&&g.textEdits===void 0||F.typedArray(g.textEdits,L.is)&&(g.tooltip===void 0||F.string(g.tooltip)||un.is(g.tooltip))&&(g.paddingLeft===void 0||F.boolean(g.paddingLeft))&&(g.paddingRight===void 0||F.boolean(g.paddingRight))}v.is=E})(Lr=e.InlayHint||(e.InlayHint={}));var xn;(function(v){function P(E){var R=E;return F.objectLiteral(R)&&n.is(R.uri)&&F.string(R.name)}v.is=P})(xn=e.WorkspaceFolder||(e.WorkspaceFolder={})),e.EOL=[`
`,`\r
`,"\r"];var Ml;(function(v){function P(N,G,Ue,Mr){return new Ys(N,G,Ue,Mr)}v.create=P;function E(N){var G=N;return!!(F.defined(G)&&F.string(G.uri)&&(F.undefined(G.languageId)||F.string(G.languageId))&&F.uinteger(G.lineCount)&&F.func(G.getText)&&F.func(G.positionAt)&&F.func(G.offsetAt))}v.is=E;function R(N,G){for(var Ue=N.getText(),Mr=g(G,function(ey,X$){var OL=ey.range.start.line-X$.range.start.line;return OL===0?ey.range.start.character-X$.range.start.character:OL}),tr=Ue.length,Ja=Mr.length-1;Ja>=0;Ja--){var Qa=Mr[Ja],Pl=N.offsetAt(Qa.range.start),mt=N.offsetAt(Qa.range.end);if(mt<=tr)Ue=Ue.substring(0,Pl)+Qa.newText+Ue.substring(mt,Ue.length);else throw new Error("Overlapping edit");tr=Pl}return Ue}v.applyEdits=R;function g(N,G){if(N.length<=1)return N;var Ue=N.length/2|0,Mr=N.slice(0,Ue),tr=N.slice(Ue);g(Mr,G),g(tr,G);for(var Ja=0,Qa=0,Pl=0;Ja<Mr.length&&Qa<tr.length;){var mt=G(Mr[Ja],tr[Qa]);mt<=0?N[Pl++]=Mr[Ja++]:N[Pl++]=tr[Qa++]}for(;Ja<Mr.length;)N[Pl++]=Mr[Ja++];for(;Qa<tr.length;)N[Pl++]=tr[Qa++];return N}})(Ml=e.TextDocument||(e.TextDocument={}));var Ys=function(){function v(P,E,R,g){this._uri=P,this._languageId=E,this._version=R,this._content=g,this._lineOffsets=void 0}return Object.defineProperty(v.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(v.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(v.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),v.prototype.getText=function(P){if(P){var E=this.offsetAt(P.start),R=this.offsetAt(P.end);return this._content.substring(E,R)}return this._content},v.prototype.update=function(P,E){this._content=P.text,this._version=E,this._lineOffsets=void 0},v.prototype.getLineOffsets=function(){if(this._lineOffsets===void 0){for(var P=[],E=this._content,R=!0,g=0;g<E.length;g++){R&&(P.push(g),R=!1);var N=E.charAt(g);R=N==="\r"||N===`
`,N==="\r"&&g+1<E.length&&E.charAt(g+1)===`
`&&g++}R&&E.length>0&&P.push(E.length),this._lineOffsets=P}return this._lineOffsets},v.prototype.positionAt=function(P){P=Math.max(Math.min(P,this._content.length),0);var E=this.getLineOffsets(),R=0,g=E.length;if(g===0)return s.create(0,P);for(;R<g;){var N=Math.floor((R+g)/2);E[N]>P?g=N:R=N+1}var G=R-1;return s.create(G,P-E[G])},v.prototype.offsetAt=function(P){var E=this.getLineOffsets();if(P.line>=E.length)return this._content.length;if(P.line<0)return 0;var R=E[P.line],g=P.line+1<E.length?E[P.line+1]:this._content.length;return Math.max(Math.min(R+P.character,g),R)},Object.defineProperty(v.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),v}(),F;(function(v){var P=Object.prototype.toString;function E(mt){return typeof mt<"u"}v.defined=E;function R(mt){return typeof mt>"u"}v.undefined=R;function g(mt){return mt===!0||mt===!1}v.boolean=g;function N(mt){return P.call(mt)==="[object String]"}v.string=N;function G(mt){return P.call(mt)==="[object Number]"}v.number=G;function Ue(mt,ey,X$){return P.call(mt)==="[object Number]"&&ey<=mt&&mt<=X$}v.numberRange=Ue;function Mr(mt){return P.call(mt)==="[object Number]"&&-2147483648<=mt&&mt<=2147483647}v.integer=Mr;function tr(mt){return P.call(mt)==="[object Number]"&&0<=mt&&mt<=2147483647}v.uinteger=tr;function Ja(mt){return P.call(mt)==="[object Function]"}v.func=Ja;function Qa(mt){return mt!==null&&typeof mt=="object"}v.objectLiteral=Qa;function Pl(mt,ey){return Array.isArray(mt)&&mt.every(ey)}v.typedArray=Pl})(F||(F={}))})});var Ar=p(li=>{"use strict";Object.defineProperty(li,"__esModule",{value:!0});li.ProtocolNotificationType=li.ProtocolNotificationType0=li.ProtocolRequestType=li.ProtocolRequestType0=li.RegistrationType=li.MessageDirection=void 0;var ly=Nl(),Koe;(function(r){r.clientToServer="clientToServer",r.serverToClient="serverToClient",r.both="both"})(Koe=li.MessageDirection||(li.MessageDirection={}));var BS=class{constructor(e){this.method=e}};li.RegistrationType=BS;var GS=class extends ly.RequestType0{constructor(e){super(e)}};li.ProtocolRequestType0=GS;var KS=class extends ly.RequestType{constructor(e){super(e,ly.ParameterStructures.byName)}};li.ProtocolRequestType=KS;var HS=class extends ly.NotificationType0{constructor(e){super(e)}};li.ProtocolNotificationType0=HS;var VS=class extends ly.NotificationType{constructor(e){super(e,ly.ParameterStructures.byName)}};li.ProtocolNotificationType=VS});var pT=p(Wr=>{"use strict";Object.defineProperty(Wr,"__esModule",{value:!0});Wr.objectLiteral=Wr.typedArray=Wr.stringArray=Wr.array=Wr.func=Wr.error=Wr.number=Wr.string=Wr.boolean=void 0;function Hoe(r){return r===!0||r===!1}Wr.boolean=Hoe;function bj(r){return typeof r=="string"||r instanceof String}Wr.string=bj;function Voe(r){return typeof r=="number"||r instanceof Number}Wr.number=Voe;function Woe(r){return r instanceof Error}Wr.error=Woe;function zoe(r){return typeof r=="function"}Wr.func=zoe;function Cj(r){return Array.isArray(r)}Wr.array=Cj;function Yoe(r){return Cj(r)&&r.every(e=>bj(e))}Wr.stringArray=Yoe;function Xoe(r,e){return Array.isArray(r)&&r.every(e)}Wr.typedArray=Xoe;function Joe(r){return r!==null&&typeof r=="object"}Wr.objectLiteral=Joe});var wj=p(Jg=>{"use strict";Object.defineProperty(Jg,"__esModule",{value:!0});Jg.ImplementationRequest=void 0;var Aj=Ar(),Qoe;(function(r){r.method="textDocument/implementation",r.messageDirection=Aj.MessageDirection.clientToServer,r.type=new Aj.ProtocolRequestType(r.method)})(Qoe=Jg.ImplementationRequest||(Jg.ImplementationRequest={}))});var Sj=p(Qg=>{"use strict";Object.defineProperty(Qg,"__esModule",{value:!0});Qg.TypeDefinitionRequest=void 0;var Dj=Ar(),Zoe;(function(r){r.method="textDocument/typeDefinition",r.messageDirection=Dj.MessageDirection.clientToServer,r.type=new Dj.ProtocolRequestType(r.method)})(Zoe=Qg.TypeDefinitionRequest||(Qg.TypeDefinitionRequest={}))});var Mj=p(hu=>{"use strict";Object.defineProperty(hu,"__esModule",{value:!0});hu.DidChangeWorkspaceFoldersNotification=hu.WorkspaceFoldersRequest=void 0;var mT=Ar(),ele;(function(r){r.method="workspace/workspaceFolders",r.messageDirection=mT.MessageDirection.serverToClient,r.type=new mT.ProtocolRequestType0(r.method)})(ele=hu.WorkspaceFoldersRequest||(hu.WorkspaceFoldersRequest={}));var tle;(function(r){r.method="workspace/didChangeWorkspaceFolders",r.messageDirection=mT.MessageDirection.clientToServer,r.type=new mT.ProtocolNotificationType(r.method)})(tle=hu.DidChangeWorkspaceFoldersNotification||(hu.DidChangeWorkspaceFoldersNotification={}))});var Ej=p(Zg=>{"use strict";Object.defineProperty(Zg,"__esModule",{value:!0});Zg.ConfigurationRequest=void 0;var Pj=Ar(),rle;(function(r){r.method="workspace/configuration",r.messageDirection=Pj.MessageDirection.serverToClient,r.type=new Pj.ProtocolRequestType(r.method)})(rle=Zg.ConfigurationRequest||(Zg.ConfigurationRequest={}))});var Oj=p(gu=>{"use strict";Object.defineProperty(gu,"__esModule",{value:!0});gu.ColorPresentationRequest=gu.DocumentColorRequest=void 0;var yT=Ar(),nle;(function(r){r.method="textDocument/documentColor",r.messageDirection=yT.MessageDirection.clientToServer,r.type=new yT.ProtocolRequestType(r.method)})(nle=gu.DocumentColorRequest||(gu.DocumentColorRequest={}));var ile;(function(r){r.method="textDocument/colorPresentation",r.messageDirection=yT.MessageDirection.clientToServer,r.type=new yT.ProtocolRequestType(r.method)})(ile=gu.ColorPresentationRequest||(gu.ColorPresentationRequest={}))});var Ij=p(ev=>{"use strict";Object.defineProperty(ev,"__esModule",{value:!0});ev.FoldingRangeRequest=void 0;var kj=Ar(),ale;(function(r){r.method="textDocument/foldingRange",r.messageDirection=kj.MessageDirection.clientToServer,r.type=new kj.ProtocolRequestType(r.method)})(ale=ev.FoldingRangeRequest||(ev.FoldingRangeRequest={}))});var Nj=p(tv=>{"use strict";Object.defineProperty(tv,"__esModule",{value:!0});tv.DeclarationRequest=void 0;var Fj=Ar(),sle;(function(r){r.method="textDocument/declaration",r.messageDirection=Fj.MessageDirection.clientToServer,r.type=new Fj.ProtocolRequestType(r.method)})(sle=tv.DeclarationRequest||(tv.DeclarationRequest={}))});var xj=p(rv=>{"use strict";Object.defineProperty(rv,"__esModule",{value:!0});rv.SelectionRangeRequest=void 0;var qj=Ar(),ole;(function(r){r.method="textDocument/selectionRange",r.messageDirection=qj.MessageDirection.clientToServer,r.type=new qj.ProtocolRequestType(r.method)})(ole=rv.SelectionRangeRequest||(rv.SelectionRangeRequest={}))});var Lj=p(rs=>{"use strict";Object.defineProperty(rs,"__esModule",{value:!0});rs.WorkDoneProgressCancelNotification=rs.WorkDoneProgressCreateRequest=rs.WorkDoneProgress=void 0;var lle=Nl(),hT=Ar(),ule;(function(r){r.type=new lle.ProgressType;function e(t){return t===r.type}r.is=e})(ule=rs.WorkDoneProgress||(rs.WorkDoneProgress={}));var cle;(function(r){r.method="window/workDoneProgress/create",r.messageDirection=hT.MessageDirection.serverToClient,r.type=new hT.ProtocolRequestType(r.method)})(cle=rs.WorkDoneProgressCreateRequest||(rs.WorkDoneProgressCreateRequest={}));var fle;(function(r){r.method="window/workDoneProgress/cancel",r.messageDirection=hT.MessageDirection.clientToServer,r.type=new hT.ProtocolNotificationType(r.method)})(fle=rs.WorkDoneProgressCancelNotification||(rs.WorkDoneProgressCancelNotification={}))});var jj=p(ns=>{"use strict";Object.defineProperty(ns,"__esModule",{value:!0});ns.CallHierarchyOutgoingCallsRequest=ns.CallHierarchyIncomingCallsRequest=ns.CallHierarchyPrepareRequest=void 0;var uy=Ar(),dle;(function(r){r.method="textDocument/prepareCallHierarchy",r.messageDirection=uy.MessageDirection.clientToServer,r.type=new uy.ProtocolRequestType(r.method)})(dle=ns.CallHierarchyPrepareRequest||(ns.CallHierarchyPrepareRequest={}));var ple;(function(r){r.method="callHierarchy/incomingCalls",r.messageDirection=uy.MessageDirection.clientToServer,r.type=new uy.ProtocolRequestType(r.method)})(ple=ns.CallHierarchyIncomingCallsRequest||(ns.CallHierarchyIncomingCallsRequest={}));var mle;(function(r){r.method="callHierarchy/outgoingCalls",r.messageDirection=uy.MessageDirection.clientToServer,r.type=new uy.ProtocolRequestType(r.method)})(mle=ns.CallHierarchyOutgoingCallsRequest||(ns.CallHierarchyOutgoingCallsRequest={}))});var Uj=p(zr=>{"use strict";Object.defineProperty(zr,"__esModule",{value:!0});zr.SemanticTokensRefreshRequest=zr.SemanticTokensRangeRequest=zr.SemanticTokensDeltaRequest=zr.SemanticTokensRequest=zr.SemanticTokensRegistrationType=zr.TokenFormat=void 0;var ql=Ar(),yle;(function(r){r.Relative="relative"})(yle=zr.TokenFormat||(zr.TokenFormat={}));var gT;(function(r){r.method="textDocument/semanticTokens",r.type=new ql.RegistrationType(r.method)})(gT=zr.SemanticTokensRegistrationType||(zr.SemanticTokensRegistrationType={}));var hle;(function(r){r.method="textDocument/semanticTokens/full",r.messageDirection=ql.MessageDirection.clientToServer,r.type=new ql.ProtocolRequestType(r.method),r.registrationMethod=gT.method})(hle=zr.SemanticTokensRequest||(zr.SemanticTokensRequest={}));var gle;(function(r){r.method="textDocument/semanticTokens/full/delta",r.messageDirection=ql.MessageDirection.clientToServer,r.type=new ql.ProtocolRequestType(r.method),r.registrationMethod=gT.method})(gle=zr.SemanticTokensDeltaRequest||(zr.SemanticTokensDeltaRequest={}));var vle;(function(r){r.method="textDocument/semanticTokens/range",r.messageDirection=ql.MessageDirection.clientToServer,r.type=new ql.ProtocolRequestType(r.method),r.registrationMethod=gT.method})(vle=zr.SemanticTokensRangeRequest||(zr.SemanticTokensRangeRequest={}));var _le;(function(r){r.method="workspace/semanticTokens/refresh",r.messageDirection=ql.MessageDirection.clientToServer,r.type=new ql.ProtocolRequestType0(r.method)})(_le=zr.SemanticTokensRefreshRequest||(zr.SemanticTokensRefreshRequest={}))});var Gj=p(nv=>{"use strict";Object.defineProperty(nv,"__esModule",{value:!0});nv.ShowDocumentRequest=void 0;var Bj=Ar(),$le;(function(r){r.method="window/showDocument",r.messageDirection=Bj.MessageDirection.serverToClient,r.type=new Bj.ProtocolRequestType(r.method)})($le=nv.ShowDocumentRequest||(nv.ShowDocumentRequest={}))});var Hj=p(iv=>{"use strict";Object.defineProperty(iv,"__esModule",{value:!0});iv.LinkedEditingRangeRequest=void 0;var Kj=Ar(),Tle;(function(r){r.method="textDocument/linkedEditingRange",r.messageDirection=Kj.MessageDirection.clientToServer,r.type=new Kj.ProtocolRequestType(r.method)})(Tle=iv.LinkedEditingRangeRequest||(iv.LinkedEditingRangeRequest={}))});var Vj=p(wr=>{"use strict";Object.defineProperty(wr,"__esModule",{value:!0});wr.WillDeleteFilesRequest=wr.DidDeleteFilesNotification=wr.DidRenameFilesNotification=wr.WillRenameFilesRequest=wr.DidCreateFilesNotification=wr.WillCreateFilesRequest=wr.FileOperationPatternKind=void 0;var ya=Ar(),Rle;(function(r){r.file="file",r.folder="folder"})(Rle=wr.FileOperationPatternKind||(wr.FileOperationPatternKind={}));var ble;(function(r){r.method="workspace/willCreateFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolRequestType(r.method)})(ble=wr.WillCreateFilesRequest||(wr.WillCreateFilesRequest={}));var Cle;(function(r){r.method="workspace/didCreateFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolNotificationType(r.method)})(Cle=wr.DidCreateFilesNotification||(wr.DidCreateFilesNotification={}));var Ale;(function(r){r.method="workspace/willRenameFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolRequestType(r.method)})(Ale=wr.WillRenameFilesRequest||(wr.WillRenameFilesRequest={}));var wle;(function(r){r.method="workspace/didRenameFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolNotificationType(r.method)})(wle=wr.DidRenameFilesNotification||(wr.DidRenameFilesNotification={}));var Dle;(function(r){r.method="workspace/didDeleteFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolNotificationType(r.method)})(Dle=wr.DidDeleteFilesNotification||(wr.DidDeleteFilesNotification={}));var Sle;(function(r){r.method="workspace/willDeleteFiles",r.messageDirection=ya.MessageDirection.clientToServer,r.type=new ya.ProtocolRequestType(r.method)})(Sle=wr.WillDeleteFilesRequest||(wr.WillDeleteFilesRequest={}))});var zj=p(is=>{"use strict";Object.defineProperty(is,"__esModule",{value:!0});is.MonikerRequest=is.MonikerKind=is.UniquenessLevel=void 0;var Wj=Ar(),Mle;(function(r){r.document="document",r.project="project",r.group="group",r.scheme="scheme",r.global="global"})(Mle=is.UniquenessLevel||(is.UniquenessLevel={}));var Ple;(function(r){r.$import="import",r.$export="export",r.local="local"})(Ple=is.MonikerKind||(is.MonikerKind={}));var Ele;(function(r){r.method="textDocument/moniker",r.messageDirection=Wj.MessageDirection.clientToServer,r.type=new Wj.ProtocolRequestType(r.method)})(Ele=is.MonikerRequest||(is.MonikerRequest={}))});var Yj=p(as=>{"use strict";Object.defineProperty(as,"__esModule",{value:!0});as.TypeHierarchySubtypesRequest=as.TypeHierarchySupertypesRequest=as.TypeHierarchyPrepareRequest=void 0;var cy=Ar(),Ole;(function(r){r.method="textDocument/prepareTypeHierarchy",r.messageDirection=cy.MessageDirection.clientToServer,r.type=new cy.ProtocolRequestType(r.method)})(Ole=as.TypeHierarchyPrepareRequest||(as.TypeHierarchyPrepareRequest={}));var kle;(function(r){r.method="typeHierarchy/supertypes",r.messageDirection=cy.MessageDirection.clientToServer,r.type=new cy.ProtocolRequestType(r.method)})(kle=as.TypeHierarchySupertypesRequest||(as.TypeHierarchySupertypesRequest={}));var Ile;(function(r){r.method="typeHierarchy/subtypes",r.messageDirection=cy.MessageDirection.clientToServer,r.type=new cy.ProtocolRequestType(r.method)})(Ile=as.TypeHierarchySubtypesRequest||(as.TypeHierarchySubtypesRequest={}))});var Xj=p(vu=>{"use strict";Object.defineProperty(vu,"__esModule",{value:!0});vu.InlineValueRefreshRequest=vu.InlineValueRequest=void 0;var vT=Ar(),Fle;(function(r){r.method="textDocument/inlineValue",r.messageDirection=vT.MessageDirection.clientToServer,r.type=new vT.ProtocolRequestType(r.method)})(Fle=vu.InlineValueRequest||(vu.InlineValueRequest={}));var Nle;(function(r){r.method="workspace/inlineValue/refresh",r.messageDirection=vT.MessageDirection.clientToServer,r.type=new vT.ProtocolRequestType0(r.method)})(Nle=vu.InlineValueRefreshRequest||(vu.InlineValueRefreshRequest={}))});var Jj=p(ss=>{"use strict";Object.defineProperty(ss,"__esModule",{value:!0});ss.InlayHintRefreshRequest=ss.InlayHintResolveRequest=ss.InlayHintRequest=void 0;var fy=Ar(),qle;(function(r){r.method="textDocument/inlayHint",r.messageDirection=fy.MessageDirection.clientToServer,r.type=new fy.ProtocolRequestType(r.method)})(qle=ss.InlayHintRequest||(ss.InlayHintRequest={}));var xle;(function(r){r.method="inlayHint/resolve",r.messageDirection=fy.MessageDirection.clientToServer,r.type=new fy.ProtocolRequestType(r.method)})(xle=ss.InlayHintResolveRequest||(ss.InlayHintResolveRequest={}));var Lle;(function(r){r.method="workspace/inlayHint/refresh",r.messageDirection=fy.MessageDirection.clientToServer,r.type=new fy.ProtocolRequestType0(r.method)})(Lle=ss.InlayHintRefreshRequest||(ss.InlayHintRefreshRequest={}))});var Zj=p(Sn=>{"use strict";Object.defineProperty(Sn,"__esModule",{value:!0});Sn.DiagnosticRefreshRequest=Sn.WorkspaceDiagnosticRequest=Sn.DocumentDiagnosticRequest=Sn.DocumentDiagnosticReportKind=Sn.DiagnosticServerCancellationData=void 0;var Qj=Nl(),jle=pT(),dy=Ar(),Ule;(function(r){function e(t){let n=t;return n&&jle.boolean(n.retriggerRequest)}r.is=e})(Ule=Sn.DiagnosticServerCancellationData||(Sn.DiagnosticServerCancellationData={}));var Ble;(function(r){r.Full="full",r.Unchanged="unchanged"})(Ble=Sn.DocumentDiagnosticReportKind||(Sn.DocumentDiagnosticReportKind={}));var Gle;(function(r){r.method="textDocument/diagnostic",r.messageDirection=dy.MessageDirection.clientToServer,r.type=new dy.ProtocolRequestType(r.method),r.partialResult=new Qj.ProgressType})(Gle=Sn.DocumentDiagnosticRequest||(Sn.DocumentDiagnosticRequest={}));var Kle;(function(r){r.method="workspace/diagnostic",r.messageDirection=dy.MessageDirection.clientToServer,r.type=new dy.ProtocolRequestType(r.method),r.partialResult=new Qj.ProgressType})(Kle=Sn.WorkspaceDiagnosticRequest||(Sn.WorkspaceDiagnosticRequest={}));var Hle;(function(r){r.method="workspace/diagnostic/refresh",r.messageDirection=dy.MessageDirection.clientToServer,r.type=new dy.ProtocolRequestType0(r.method)})(Hle=Sn.DiagnosticRefreshRequest||(Sn.DiagnosticRefreshRequest={}))});var rU=p(Rt=>{"use strict";Object.defineProperty(Rt,"__esModule",{value:!0});Rt.DidCloseNotebookDocumentNotification=Rt.DidSaveNotebookDocumentNotification=Rt.DidChangeNotebookDocumentNotification=Rt.NotebookCellArrayChange=Rt.DidOpenNotebookDocumentNotification=Rt.NotebookDocumentSyncRegistrationType=Rt.NotebookDocument=Rt.NotebookCell=Rt.ExecutionSummary=Rt.NotebookCellKind=void 0;var av=oy(),os=pT(),Js=Ar(),eU;(function(r){r.Markup=1,r.Code=2;function e(t){return t===1||t===2}r.is=e})(eU=Rt.NotebookCellKind||(Rt.NotebookCellKind={}));var tU;(function(r){function e(i,a){let s={executionOrder:i};return(a===!0||a===!1)&&(s.success=a),s}r.create=e;function t(i){let a=i;return os.objectLiteral(a)&&av.uinteger.is(a.executionOrder)&&(a.success===void 0||os.boolean(a.success))}r.is=t;function n(i,a){return i===a?!0:i==null||a===null||a===void 0?!1:i.executionOrder===a.executionOrder&&i.success===a.success}r.equals=n})(tU=Rt.ExecutionSummary||(Rt.ExecutionSummary={}));var WS;(function(r){function e(a,s){return{kind:a,document:s}}r.create=e;function t(a){let s=a;return os.objectLiteral(s)&&eU.is(s.kind)&&av.DocumentUri.is(s.document)&&(s.metadata===void 0||os.objectLiteral(s.metadata))}r.is=t;function n(a,s){let o=new Set;return a.document!==s.document&&o.add("document"),a.kind!==s.kind&&o.add("kind"),a.executionSummary!==s.executionSummary&&o.add("executionSummary"),(a.metadata!==void 0||s.metadata!==void 0)&&!i(a.metadata,s.metadata)&&o.add("metadata"),(a.executionSummary!==void 0||s.executionSummary!==void 0)&&!tU.equals(a.executionSummary,s.executionSummary)&&o.add("executionSummary"),o}r.diff=n;function i(a,s){if(a===s)return!0;if(a==null||s===null||s===void 0||typeof a!=typeof s||typeof a!="object")return!1;let o=Array.isArray(a),u=Array.isArray(s);if(o!==u)return!1;if(o&&u){if(a.length!==s.length)return!1;for(let c=0;c<a.length;c++)if(!i(a[c],s[c]))return!1}if(os.objectLiteral(a)&&os.objectLiteral(s)){let c=Object.keys(a),f=Object.keys(s);if(c.length!==f.length||(c.sort(),f.sort(),!i(c,f)))return!1;for(let d=0;d<c.length;d++){let m=c[d];if(!i(a[m],s[m]))return!1}}return!0}})(WS=Rt.NotebookCell||(Rt.NotebookCell={}));var Vle;(function(r){function e(n,i,a,s){return{uri:n,notebookType:i,version:a,cells:s}}r.create=e;function t(n){let i=n;return os.objectLiteral(i)&&os.string(i.uri)&&av.integer.is(i.version)&&os.typedArray(i.cells,WS.is)}r.is=t})(Vle=Rt.NotebookDocument||(Rt.NotebookDocument={}));var sv;(function(r){r.method="notebookDocument/sync",r.messageDirection=Js.MessageDirection.clientToServer,r.type=new Js.RegistrationType(r.method)})(sv=Rt.NotebookDocumentSyncRegistrationType||(Rt.NotebookDocumentSyncRegistrationType={}));var Wle;(function(r){r.method="notebookDocument/didOpen",r.messageDirection=Js.MessageDirection.clientToServer,r.type=new Js.ProtocolNotificationType(r.method),r.registrationMethod=sv.method})(Wle=Rt.DidOpenNotebookDocumentNotification||(Rt.DidOpenNotebookDocumentNotification={}));var zle;(function(r){function e(n){let i=n;return os.objectLiteral(i)&&av.uinteger.is(i.start)&&av.uinteger.is(i.deleteCount)&&(i.cells===void 0||os.typedArray(i.cells,WS.is))}r.is=e;function t(n,i,a){let s={start:n,deleteCount:i};return a!==void 0&&(s.cells=a),s}r.create=t})(zle=Rt.NotebookCellArrayChange||(Rt.NotebookCellArrayChange={}));var Yle;(function(r){r.method="notebookDocument/didChange",r.messageDirection=Js.MessageDirection.clientToServer,r.type=new Js.ProtocolNotificationType(r.method),r.registrationMethod=sv.method})(Yle=Rt.DidChangeNotebookDocumentNotification||(Rt.DidChangeNotebookDocumentNotification={}));var Xle;(function(r){r.method="notebookDocument/didSave",r.messageDirection=Js.MessageDirection.clientToServer,r.type=new Js.ProtocolNotificationType(r.method),r.registrationMethod=sv.method})(Xle=Rt.DidSaveNotebookDocumentNotification||(Rt.DidSaveNotebookDocumentNotification={}));var Jle;(function(r){r.method="notebookDocument/didClose",r.messageDirection=Js.MessageDirection.clientToServer,r.type=new Js.ProtocolNotificationType(r.method),r.registrationMethod=sv.method})(Jle=Rt.DidCloseNotebookDocumentNotification||(Rt.DidCloseNotebookDocumentNotification={}))});var fU=p($=>{"use strict";Object.defineProperty($,"__esModule",{value:!0});$.WorkspaceSymbolRequest=$.CodeActionResolveRequest=$.CodeActionRequest=$.DocumentSymbolRequest=$.DocumentHighlightRequest=$.ReferencesRequest=$.DefinitionRequest=$.SignatureHelpRequest=$.SignatureHelpTriggerKind=$.HoverRequest=$.CompletionResolveRequest=$.CompletionRequest=$.CompletionTriggerKind=$.PublishDiagnosticsNotification=$.WatchKind=$.RelativePattern=$.FileChangeType=$.DidChangeWatchedFilesNotification=$.WillSaveTextDocumentWaitUntilRequest=$.WillSaveTextDocumentNotification=$.TextDocumentSaveReason=$.DidSaveTextDocumentNotification=$.DidCloseTextDocumentNotification=$.DidChangeTextDocumentNotification=$.TextDocumentContentChangeEvent=$.DidOpenTextDocumentNotification=$.TextDocumentSyncKind=$.TelemetryEventNotification=$.LogMessageNotification=$.ShowMessageRequest=$.ShowMessageNotification=$.MessageType=$.DidChangeConfigurationNotification=$.ExitNotification=$.ShutdownRequest=$.InitializedNotification=$.InitializeErrorCodes=$.InitializeRequest=$.WorkDoneProgressOptions=$.TextDocumentRegistrationOptions=$.StaticRegistrationOptions=$.PositionEncodingKind=$.FailureHandlingKind=$.ResourceOperationKind=$.UnregistrationRequest=$.RegistrationRequest=$.DocumentSelector=$.NotebookCellTextDocumentFilter=$.NotebookDocumentFilter=$.TextDocumentFilter=void 0;$.TypeHierarchySubtypesRequest=$.TypeHierarchyPrepareRequest=$.MonikerRequest=$.MonikerKind=$.UniquenessLevel=$.WillDeleteFilesRequest=$.DidDeleteFilesNotification=$.WillRenameFilesRequest=$.DidRenameFilesNotification=$.WillCreateFilesRequest=$.DidCreateFilesNotification=$.FileOperationPatternKind=$.LinkedEditingRangeRequest=$.ShowDocumentRequest=$.SemanticTokensRegistrationType=$.SemanticTokensRefreshRequest=$.SemanticTokensRangeRequest=$.SemanticTokensDeltaRequest=$.SemanticTokensRequest=$.TokenFormat=$.CallHierarchyPrepareRequest=$.CallHierarchyOutgoingCallsRequest=$.CallHierarchyIncomingCallsRequest=$.WorkDoneProgressCancelNotification=$.WorkDoneProgressCreateRequest=$.WorkDoneProgress=$.SelectionRangeRequest=$.DeclarationRequest=$.FoldingRangeRequest=$.ColorPresentationRequest=$.DocumentColorRequest=$.ConfigurationRequest=$.DidChangeWorkspaceFoldersNotification=$.WorkspaceFoldersRequest=$.TypeDefinitionRequest=$.ImplementationRequest=$.ApplyWorkspaceEditRequest=$.ExecuteCommandRequest=$.PrepareRenameRequest=$.RenameRequest=$.PrepareSupportDefaultBehavior=$.DocumentOnTypeFormattingRequest=$.DocumentRangeFormattingRequest=$.DocumentFormattingRequest=$.DocumentLinkResolveRequest=$.DocumentLinkRequest=$.CodeLensRefreshRequest=$.CodeLensResolveRequest=$.CodeLensRequest=$.WorkspaceSymbolResolveRequest=void 0;$.DidCloseNotebookDocumentNotification=$.DidSaveNotebookDocumentNotification=$.DidChangeNotebookDocumentNotification=$.NotebookCellArrayChange=$.DidOpenNotebookDocumentNotification=$.NotebookDocumentSyncRegistrationType=$.NotebookDocument=$.NotebookCell=$.ExecutionSummary=$.NotebookCellKind=$.DiagnosticRefreshRequest=$.WorkspaceDiagnosticRequest=$.DocumentDiagnosticRequest=$.DocumentDiagnosticReportKind=$.DiagnosticServerCancellationData=$.InlayHintRefreshRequest=$.InlayHintResolveRequest=$.InlayHintRequest=$.InlineValueRefreshRequest=$.InlineValueRequest=$.TypeHierarchySupertypesRequest=void 0;var Q=Ar(),nU=oy(),Mn=pT(),Qle=wj();Object.defineProperty($,"ImplementationRequest",{enumerable:!0,get:function(){return Qle.ImplementationRequest}});var Zle=Sj();Object.defineProperty($,"TypeDefinitionRequest",{enumerable:!0,get:function(){return Zle.TypeDefinitionRequest}});var iU=Mj();Object.defineProperty($,"WorkspaceFoldersRequest",{enumerable:!0,get:function(){return iU.WorkspaceFoldersRequest}});Object.defineProperty($,"DidChangeWorkspaceFoldersNotification",{enumerable:!0,get:function(){return iU.DidChangeWorkspaceFoldersNotification}});var eue=Ej();Object.defineProperty($,"ConfigurationRequest",{enumerable:!0,get:function(){return eue.ConfigurationRequest}});var aU=Oj();Object.defineProperty($,"DocumentColorRequest",{enumerable:!0,get:function(){return aU.DocumentColorRequest}});Object.defineProperty($,"ColorPresentationRequest",{enumerable:!0,get:function(){return aU.ColorPresentationRequest}});var tue=Ij();Object.defineProperty($,"FoldingRangeRequest",{enumerable:!0,get:function(){return tue.FoldingRangeRequest}});var rue=Nj();Object.defineProperty($,"DeclarationRequest",{enumerable:!0,get:function(){return rue.DeclarationRequest}});var nue=xj();Object.defineProperty($,"SelectionRangeRequest",{enumerable:!0,get:function(){return nue.SelectionRangeRequest}});var zS=Lj();Object.defineProperty($,"WorkDoneProgress",{enumerable:!0,get:function(){return zS.WorkDoneProgress}});Object.defineProperty($,"WorkDoneProgressCreateRequest",{enumerable:!0,get:function(){return zS.WorkDoneProgressCreateRequest}});Object.defineProperty($,"WorkDoneProgressCancelNotification",{enumerable:!0,get:function(){return zS.WorkDoneProgressCancelNotification}});var YS=jj();Object.defineProperty($,"CallHierarchyIncomingCallsRequest",{enumerable:!0,get:function(){return YS.CallHierarchyIncomingCallsRequest}});Object.defineProperty($,"CallHierarchyOutgoingCallsRequest",{enumerable:!0,get:function(){return YS.CallHierarchyOutgoingCallsRequest}});Object.defineProperty($,"CallHierarchyPrepareRequest",{enumerable:!0,get:function(){return YS.CallHierarchyPrepareRequest}});var py=Uj();Object.defineProperty($,"TokenFormat",{enumerable:!0,get:function(){return py.TokenFormat}});Object.defineProperty($,"SemanticTokensRequest",{enumerable:!0,get:function(){return py.SemanticTokensRequest}});Object.defineProperty($,"SemanticTokensDeltaRequest",{enumerable:!0,get:function(){return py.SemanticTokensDeltaRequest}});Object.defineProperty($,"SemanticTokensRangeRequest",{enumerable:!0,get:function(){return py.SemanticTokensRangeRequest}});Object.defineProperty($,"SemanticTokensRefreshRequest",{enumerable:!0,get:function(){return py.SemanticTokensRefreshRequest}});Object.defineProperty($,"SemanticTokensRegistrationType",{enumerable:!0,get:function(){return py.SemanticTokensRegistrationType}});var iue=Gj();Object.defineProperty($,"ShowDocumentRequest",{enumerable:!0,get:function(){return iue.ShowDocumentRequest}});var aue=Hj();Object.defineProperty($,"LinkedEditingRangeRequest",{enumerable:!0,get:function(){return aue.LinkedEditingRangeRequest}});var Xc=Vj();Object.defineProperty($,"FileOperationPatternKind",{enumerable:!0,get:function(){return Xc.FileOperationPatternKind}});Object.defineProperty($,"DidCreateFilesNotification",{enumerable:!0,get:function(){return Xc.DidCreateFilesNotification}});Object.defineProperty($,"WillCreateFilesRequest",{enumerable:!0,get:function(){return Xc.WillCreateFilesRequest}});Object.defineProperty($,"DidRenameFilesNotification",{enumerable:!0,get:function(){return Xc.DidRenameFilesNotification}});Object.defineProperty($,"WillRenameFilesRequest",{enumerable:!0,get:function(){return Xc.WillRenameFilesRequest}});Object.defineProperty($,"DidDeleteFilesNotification",{enumerable:!0,get:function(){return Xc.DidDeleteFilesNotification}});Object.defineProperty($,"WillDeleteFilesRequest",{enumerable:!0,get:function(){return Xc.WillDeleteFilesRequest}});var XS=zj();Object.defineProperty($,"UniquenessLevel",{enumerable:!0,get:function(){return XS.UniquenessLevel}});Object.defineProperty($,"MonikerKind",{enumerable:!0,get:function(){return XS.MonikerKind}});Object.defineProperty($,"MonikerRequest",{enumerable:!0,get:function(){return XS.MonikerRequest}});var JS=Yj();Object.defineProperty($,"TypeHierarchyPrepareRequest",{enumerable:!0,get:function(){return JS.TypeHierarchyPrepareRequest}});Object.defineProperty($,"TypeHierarchySubtypesRequest",{enumerable:!0,get:function(){return JS.TypeHierarchySubtypesRequest}});Object.defineProperty($,"TypeHierarchySupertypesRequest",{enumerable:!0,get:function(){return JS.TypeHierarchySupertypesRequest}});var sU=Xj();Object.defineProperty($,"InlineValueRequest",{enumerable:!0,get:function(){return sU.InlineValueRequest}});Object.defineProperty($,"InlineValueRefreshRequest",{enumerable:!0,get:function(){return sU.InlineValueRefreshRequest}});var QS=Jj();Object.defineProperty($,"InlayHintRequest",{enumerable:!0,get:function(){return QS.InlayHintRequest}});Object.defineProperty($,"InlayHintResolveRequest",{enumerable:!0,get:function(){return QS.InlayHintResolveRequest}});Object.defineProperty($,"InlayHintRefreshRequest",{enumerable:!0,get:function(){return QS.InlayHintRefreshRequest}});var ov=Zj();Object.defineProperty($,"DiagnosticServerCancellationData",{enumerable:!0,get:function(){return ov.DiagnosticServerCancellationData}});Object.defineProperty($,"DocumentDiagnosticReportKind",{enumerable:!0,get:function(){return ov.DocumentDiagnosticReportKind}});Object.defineProperty($,"DocumentDiagnosticRequest",{enumerable:!0,get:function(){return ov.DocumentDiagnosticRequest}});Object.defineProperty($,"WorkspaceDiagnosticRequest",{enumerable:!0,get:function(){return ov.WorkspaceDiagnosticRequest}});Object.defineProperty($,"DiagnosticRefreshRequest",{enumerable:!0,get:function(){return ov.DiagnosticRefreshRequest}});var Qs=rU();Object.defineProperty($,"NotebookCellKind",{enumerable:!0,get:function(){return Qs.NotebookCellKind}});Object.defineProperty($,"ExecutionSummary",{enumerable:!0,get:function(){return Qs.ExecutionSummary}});Object.defineProperty($,"NotebookCell",{enumerable:!0,get:function(){return Qs.NotebookCell}});Object.defineProperty($,"NotebookDocument",{enumerable:!0,get:function(){return Qs.NotebookDocument}});Object.defineProperty($,"NotebookDocumentSyncRegistrationType",{enumerable:!0,get:function(){return Qs.NotebookDocumentSyncRegistrationType}});Object.defineProperty($,"DidOpenNotebookDocumentNotification",{enumerable:!0,get:function(){return Qs.DidOpenNotebookDocumentNotification}});Object.defineProperty($,"NotebookCellArrayChange",{enumerable:!0,get:function(){return Qs.NotebookCellArrayChange}});Object.defineProperty($,"DidChangeNotebookDocumentNotification",{enumerable:!0,get:function(){return Qs.DidChangeNotebookDocumentNotification}});Object.defineProperty($,"DidSaveNotebookDocumentNotification",{enumerable:!0,get:function(){return Qs.DidSaveNotebookDocumentNotification}});Object.defineProperty($,"DidCloseNotebookDocumentNotification",{enumerable:!0,get:function(){return Qs.DidCloseNotebookDocumentNotification}});var oU;(function(r){function e(t){let n=t;return Mn.string(n.language)||Mn.string(n.scheme)||Mn.string(n.pattern)}r.is=e})(oU=$.TextDocumentFilter||($.TextDocumentFilter={}));var lU;(function(r){function e(t){let n=t;return Mn.objectLiteral(n)&&(Mn.string(n.notebookType)||Mn.string(n.scheme)||Mn.string(n.pattern))}r.is=e})(lU=$.NotebookDocumentFilter||($.NotebookDocumentFilter={}));var uU;(function(r){function e(t){let n=t;return Mn.objectLiteral(n)&&(Mn.string(n.notebook)||lU.is(n.notebook))&&(n.language===void 0||Mn.string(n.language))}r.is=e})(uU=$.NotebookCellTextDocumentFilter||($.NotebookCellTextDocumentFilter={}));var cU;(function(r){function e(t){if(!Array.isArray(t))return!1;for(let n of t)if(!Mn.string(n)&&!oU.is(n)&&!uU.is(n))return!1;return!0}r.is=e})(cU=$.DocumentSelector||($.DocumentSelector={}));var sue;(function(r){r.method="client/registerCapability",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolRequestType(r.method)})(sue=$.RegistrationRequest||($.RegistrationRequest={}));var oue;(function(r){r.method="client/unregisterCapability",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolRequestType(r.method)})(oue=$.UnregistrationRequest||($.UnregistrationRequest={}));var lue;(function(r){r.Create="create",r.Rename="rename",r.Delete="delete"})(lue=$.ResourceOperationKind||($.ResourceOperationKind={}));var uue;(function(r){r.Abort="abort",r.Transactional="transactional",r.TextOnlyTransactional="textOnlyTransactional",r.Undo="undo"})(uue=$.FailureHandlingKind||($.FailureHandlingKind={}));var cue;(function(r){r.UTF8="utf-8",r.UTF16="utf-16",r.UTF32="utf-32"})(cue=$.PositionEncodingKind||($.PositionEncodingKind={}));var fue;(function(r){function e(t){let n=t;return n&&Mn.string(n.id)&&n.id.length>0}r.hasId=e})(fue=$.StaticRegistrationOptions||($.StaticRegistrationOptions={}));var due;(function(r){function e(t){let n=t;return n&&(n.documentSelector===null||cU.is(n.documentSelector))}r.is=e})(due=$.TextDocumentRegistrationOptions||($.TextDocumentRegistrationOptions={}));var pue;(function(r){function e(n){let i=n;return Mn.objectLiteral(i)&&(i.workDoneProgress===void 0||Mn.boolean(i.workDoneProgress))}r.is=e;function t(n){let i=n;return i&&Mn.boolean(i.workDoneProgress)}r.hasWorkDoneProgress=t})(pue=$.WorkDoneProgressOptions||($.WorkDoneProgressOptions={}));var mue;(function(r){r.method="initialize",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(mue=$.InitializeRequest||($.InitializeRequest={}));var yue;(function(r){r.unknownProtocolVersion=1})(yue=$.InitializeErrorCodes||($.InitializeErrorCodes={}));var hue;(function(r){r.method="initialized",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(hue=$.InitializedNotification||($.InitializedNotification={}));var gue;(function(r){r.method="shutdown",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType0(r.method)})(gue=$.ShutdownRequest||($.ShutdownRequest={}));var vue;(function(r){r.method="exit",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType0(r.method)})(vue=$.ExitNotification||($.ExitNotification={}));var _ue;(function(r){r.method="workspace/didChangeConfiguration",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(_ue=$.DidChangeConfigurationNotification||($.DidChangeConfigurationNotification={}));var $ue;(function(r){r.Error=1,r.Warning=2,r.Info=3,r.Log=4})($ue=$.MessageType||($.MessageType={}));var Tue;(function(r){r.method="window/showMessage",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolNotificationType(r.method)})(Tue=$.ShowMessageNotification||($.ShowMessageNotification={}));var Rue;(function(r){r.method="window/showMessageRequest",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolRequestType(r.method)})(Rue=$.ShowMessageRequest||($.ShowMessageRequest={}));var bue;(function(r){r.method="window/logMessage",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolNotificationType(r.method)})(bue=$.LogMessageNotification||($.LogMessageNotification={}));var Cue;(function(r){r.method="telemetry/event",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolNotificationType(r.method)})(Cue=$.TelemetryEventNotification||($.TelemetryEventNotification={}));var Aue;(function(r){r.None=0,r.Full=1,r.Incremental=2})(Aue=$.TextDocumentSyncKind||($.TextDocumentSyncKind={}));var wue;(function(r){r.method="textDocument/didOpen",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(wue=$.DidOpenTextDocumentNotification||($.DidOpenTextDocumentNotification={}));var Due;(function(r){function e(n){let i=n;return i!=null&&typeof i.text=="string"&&i.range!==void 0&&(i.rangeLength===void 0||typeof i.rangeLength=="number")}r.isIncremental=e;function t(n){let i=n;return i!=null&&typeof i.text=="string"&&i.range===void 0&&i.rangeLength===void 0}r.isFull=t})(Due=$.TextDocumentContentChangeEvent||($.TextDocumentContentChangeEvent={}));var Sue;(function(r){r.method="textDocument/didChange",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(Sue=$.DidChangeTextDocumentNotification||($.DidChangeTextDocumentNotification={}));var Mue;(function(r){r.method="textDocument/didClose",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(Mue=$.DidCloseTextDocumentNotification||($.DidCloseTextDocumentNotification={}));var Pue;(function(r){r.method="textDocument/didSave",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(Pue=$.DidSaveTextDocumentNotification||($.DidSaveTextDocumentNotification={}));var Eue;(function(r){r.Manual=1,r.AfterDelay=2,r.FocusOut=3})(Eue=$.TextDocumentSaveReason||($.TextDocumentSaveReason={}));var Oue;(function(r){r.method="textDocument/willSave",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(Oue=$.WillSaveTextDocumentNotification||($.WillSaveTextDocumentNotification={}));var kue;(function(r){r.method="textDocument/willSaveWaitUntil",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(kue=$.WillSaveTextDocumentWaitUntilRequest||($.WillSaveTextDocumentWaitUntilRequest={}));var Iue;(function(r){r.method="workspace/didChangeWatchedFiles",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolNotificationType(r.method)})(Iue=$.DidChangeWatchedFilesNotification||($.DidChangeWatchedFilesNotification={}));var Fue;(function(r){r.Created=1,r.Changed=2,r.Deleted=3})(Fue=$.FileChangeType||($.FileChangeType={}));var Nue;(function(r){function e(t){let n=t;return Mn.objectLiteral(n)&&(nU.URI.is(n.baseUri)||nU.WorkspaceFolder.is(n.baseUri))&&Mn.string(n.pattern)}r.is=e})(Nue=$.RelativePattern||($.RelativePattern={}));var que;(function(r){r.Create=1,r.Change=2,r.Delete=4})(que=$.WatchKind||($.WatchKind={}));var xue;(function(r){r.method="textDocument/publishDiagnostics",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolNotificationType(r.method)})(xue=$.PublishDiagnosticsNotification||($.PublishDiagnosticsNotification={}));var Lue;(function(r){r.Invoked=1,r.TriggerCharacter=2,r.TriggerForIncompleteCompletions=3})(Lue=$.CompletionTriggerKind||($.CompletionTriggerKind={}));var jue;(function(r){r.method="textDocument/completion",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(jue=$.CompletionRequest||($.CompletionRequest={}));var Uue;(function(r){r.method="completionItem/resolve",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Uue=$.CompletionResolveRequest||($.CompletionResolveRequest={}));var Bue;(function(r){r.method="textDocument/hover",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Bue=$.HoverRequest||($.HoverRequest={}));var Gue;(function(r){r.Invoked=1,r.TriggerCharacter=2,r.ContentChange=3})(Gue=$.SignatureHelpTriggerKind||($.SignatureHelpTriggerKind={}));var Kue;(function(r){r.method="textDocument/signatureHelp",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Kue=$.SignatureHelpRequest||($.SignatureHelpRequest={}));var Hue;(function(r){r.method="textDocument/definition",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Hue=$.DefinitionRequest||($.DefinitionRequest={}));var Vue;(function(r){r.method="textDocument/references",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Vue=$.ReferencesRequest||($.ReferencesRequest={}));var Wue;(function(r){r.method="textDocument/documentHighlight",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Wue=$.DocumentHighlightRequest||($.DocumentHighlightRequest={}));var zue;(function(r){r.method="textDocument/documentSymbol",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(zue=$.DocumentSymbolRequest||($.DocumentSymbolRequest={}));var Yue;(function(r){r.method="textDocument/codeAction",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Yue=$.CodeActionRequest||($.CodeActionRequest={}));var Xue;(function(r){r.method="codeAction/resolve",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Xue=$.CodeActionResolveRequest||($.CodeActionResolveRequest={}));var Jue;(function(r){r.method="workspace/symbol",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Jue=$.WorkspaceSymbolRequest||($.WorkspaceSymbolRequest={}));var Que;(function(r){r.method="workspaceSymbol/resolve",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Que=$.WorkspaceSymbolResolveRequest||($.WorkspaceSymbolResolveRequest={}));var Zue;(function(r){r.method="textDocument/codeLens",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(Zue=$.CodeLensRequest||($.CodeLensRequest={}));var ece;(function(r){r.method="codeLens/resolve",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(ece=$.CodeLensResolveRequest||($.CodeLensResolveRequest={}));var tce;(function(r){r.method="workspace/codeLens/refresh",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolRequestType0(r.method)})(tce=$.CodeLensRefreshRequest||($.CodeLensRefreshRequest={}));var rce;(function(r){r.method="textDocument/documentLink",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(rce=$.DocumentLinkRequest||($.DocumentLinkRequest={}));var nce;(function(r){r.method="documentLink/resolve",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(nce=$.DocumentLinkResolveRequest||($.DocumentLinkResolveRequest={}));var ice;(function(r){r.method="textDocument/formatting",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(ice=$.DocumentFormattingRequest||($.DocumentFormattingRequest={}));var ace;(function(r){r.method="textDocument/rangeFormatting",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(ace=$.DocumentRangeFormattingRequest||($.DocumentRangeFormattingRequest={}));var sce;(function(r){r.method="textDocument/onTypeFormatting",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(sce=$.DocumentOnTypeFormattingRequest||($.DocumentOnTypeFormattingRequest={}));var oce;(function(r){r.Identifier=1})(oce=$.PrepareSupportDefaultBehavior||($.PrepareSupportDefaultBehavior={}));var lce;(function(r){r.method="textDocument/rename",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(lce=$.RenameRequest||($.RenameRequest={}));var uce;(function(r){r.method="textDocument/prepareRename",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(uce=$.PrepareRenameRequest||($.PrepareRenameRequest={}));var cce;(function(r){r.method="workspace/executeCommand",r.messageDirection=Q.MessageDirection.clientToServer,r.type=new Q.ProtocolRequestType(r.method)})(cce=$.ExecuteCommandRequest||($.ExecuteCommandRequest={}));var fce;(function(r){r.method="workspace/applyEdit",r.messageDirection=Q.MessageDirection.serverToClient,r.type=new Q.ProtocolRequestType("workspace/applyEdit")})(fce=$.ApplyWorkspaceEditRequest||($.ApplyWorkspaceEditRequest={}))});var pU=p(_T=>{"use strict";Object.defineProperty(_T,"__esModule",{value:!0});_T.createProtocolConnection=void 0;var dU=Nl();function dce(r,e,t,n){return dU.ConnectionStrategy.is(n)&&(n={connectionStrategy:n}),(0,dU.createMessageConnection)(r,e,t,n)}_T.createProtocolConnection=dce});var mU=p(ui=>{"use strict";var pce=ui&&ui.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),$T=ui&&ui.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&pce(e,r,t)};Object.defineProperty(ui,"__esModule",{value:!0});ui.LSPErrorCodes=ui.createProtocolConnection=void 0;$T(Nl(),ui);$T(oy(),ui);$T(Ar(),ui);$T(fU(),ui);var mce=pU();Object.defineProperty(ui,"createProtocolConnection",{enumerable:!0,get:function(){return mce.createProtocolConnection}});var yce;(function(r){r.lspReservedErrorRangeStart=-32899,r.RequestFailed=-32803,r.ServerCancelled=-32802,r.ContentModified=-32801,r.RequestCancelled=-32800,r.lspReservedErrorRangeEnd=-32800})(yce=ui.LSPErrorCodes||(ui.LSPErrorCodes={}))});var Yr=p(Zs=>{"use strict";var hce=Zs&&Zs.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),yU=Zs&&Zs.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&hce(e,r,t)};Object.defineProperty(Zs,"__esModule",{value:!0});Zs.createProtocolConnection=void 0;var gce=US();yU(US(),Zs);yU(mU(),Zs);function vce(r,e,t,n){return(0,gce.createMessageConnection)(r,e,t,n)}Zs.createProtocolConnection=vce});var ZS=p(ha=>{"use strict";Object.defineProperty(ha,"__esModule",{value:!0});ha.generateUuid=ha.parse=ha.isUUID=ha.v4=ha.empty=void 0;var lv=class{constructor(e){this._value=e}asHex(){return this._value}equals(e){return this.asHex()===e.asHex()}},He=class extends lv{constructor(){super([He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),"-",He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),"-","4",He._randomHex(),He._randomHex(),He._randomHex(),"-",He._oneOf(He._timeHighBits),He._randomHex(),He._randomHex(),He._randomHex(),"-",He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex(),He._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return He._oneOf(He._chars)}};He._chars=["0","1","2","3","4","5","6","6","7","8","9","a","b","c","d","e","f"];He._timeHighBits=["8","9","a","b"];ha.empty=new lv("00000000-0000-0000-0000-000000000000");function hU(){return new He}ha.v4=hU;var _ce=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function gU(r){return _ce.test(r)}ha.isUUID=gU;function $ce(r){if(!gU(r))throw new Error("invalid uuid");return new lv(r)}ha.parse=$ce;function Tce(){return hU().asHex()}ha.generateUuid=Tce});var vU=p($u=>{"use strict";Object.defineProperty($u,"__esModule",{value:!0});$u.attachPartialResult=$u.ProgressFeature=$u.attachWorkDone=void 0;var _u=Yr(),Rce=ZS(),eo=class{constructor(e,t){this._connection=e,this._token=t,eo.Instances.set(this._token,this)}begin(e,t,n,i){let a={kind:"begin",title:e,percentage:t,message:n,cancellable:i};this._connection.sendProgress(_u.WorkDoneProgress.type,this._token,a)}report(e,t){let n={kind:"report"};typeof e=="number"?(n.percentage=e,t!==void 0&&(n.message=t)):n.message=e,this._connection.sendProgress(_u.WorkDoneProgress.type,this._token,n)}done(){eo.Instances.delete(this._token),this._connection.sendProgress(_u.WorkDoneProgress.type,this._token,{kind:"end"})}};eo.Instances=new Map;var TT=class extends eo{constructor(e,t){super(e,t),this._source=new _u.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose(),super.done()}cancel(){this._source.cancel()}},uv=class{constructor(){}begin(){}report(){}done(){}},RT=class extends uv{constructor(){super(),this._source=new _u.CancellationTokenSource}get token(){return this._source.token}done(){this._source.dispose()}cancel(){this._source.cancel()}};function bce(r,e){if(e===void 0||e.workDoneToken===void 0)return new uv;let t=e.workDoneToken;return delete e.workDoneToken,new eo(r,t)}$u.attachWorkDone=bce;var Cce=r=>class extends r{constructor(){super(),this._progressSupported=!1}initialize(e){super.initialize(e),e?.window?.workDoneProgress===!0&&(this._progressSupported=!0,this.connection.onNotification(_u.WorkDoneProgressCancelNotification.type,t=>{let n=eo.Instances.get(t.token);(n instanceof TT||n instanceof RT)&&n.cancel()}))}attachWorkDoneProgress(e){return e===void 0?new uv:new eo(this.connection,e)}createWorkDoneProgress(){if(this._progressSupported){let e=(0,Rce.generateUuid)();return this.connection.sendRequest(_u.WorkDoneProgressCreateRequest.type,{token:e}).then(()=>new TT(this.connection,e))}else return Promise.resolve(new RT)}};$u.ProgressFeature=Cce;var eM;(function(r){r.type=new _u.ProgressType})(eM||(eM={}));var tM=class{constructor(e,t){this._connection=e,this._token=t}report(e){this._connection.sendProgress(eM.type,this._token,e)}};function Ace(r,e){if(e===void 0||e.partialResultToken===void 0)return;let t=e.partialResultToken;return delete e.partialResultToken,new tM(r,t)}$u.attachPartialResult=Ace});var _U=p(bT=>{"use strict";Object.defineProperty(bT,"__esModule",{value:!0});bT.ConfigurationFeature=void 0;var wce=Yr(),Dce=tT(),Sce=r=>class extends r{getConfiguration(e){return e?Dce.string(e)?this._getConfiguration({section:e}):this._getConfiguration(e):this._getConfiguration({})}_getConfiguration(e){let t={items:Array.isArray(e)?e:[e]};return this.connection.sendRequest(wce.ConfigurationRequest.type,t).then(n=>Array.isArray(n)?Array.isArray(e)?n:n[0]:Array.isArray(e)?[]:null)}};bT.ConfigurationFeature=Sce});var $U=p(AT=>{"use strict";Object.defineProperty(AT,"__esModule",{value:!0});AT.WorkspaceFoldersFeature=void 0;var CT=Yr(),Mce=r=>class extends r{constructor(){super(),this._notificationIsAutoRegistered=!1}initialize(e){super.initialize(e);let t=e.workspace;t&&t.workspaceFolders&&(this._onDidChangeWorkspaceFolders=new CT.Emitter,this.connection.onNotification(CT.DidChangeWorkspaceFoldersNotification.type,n=>{this._onDidChangeWorkspaceFolders.fire(n.event)}))}fillServerCapabilities(e){super.fillServerCapabilities(e);let t=e.workspace?.workspaceFolders?.changeNotifications;this._notificationIsAutoRegistered=t===!0||typeof t=="string"}getWorkspaceFolders(){return this.connection.sendRequest(CT.WorkspaceFoldersRequest.type)}get onDidChangeWorkspaceFolders(){if(!this._onDidChangeWorkspaceFolders)throw new Error("Client doesn't support sending workspace folder change events.");return!this._notificationIsAutoRegistered&&!this._unregistration&&(this._unregistration=this.connection.client.register(CT.DidChangeWorkspaceFoldersNotification.type)),this._onDidChangeWorkspaceFolders.event}};AT.WorkspaceFoldersFeature=Mce});var TU=p(wT=>{"use strict";Object.defineProperty(wT,"__esModule",{value:!0});wT.CallHierarchyFeature=void 0;var rM=Yr(),Pce=r=>class extends r{get callHierarchy(){return{onPrepare:e=>this.connection.onRequest(rM.CallHierarchyPrepareRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)),onIncomingCalls:e=>{let t=rM.CallHierarchyIncomingCallsRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))},onOutgoingCalls:e=>{let t=rM.CallHierarchyOutgoingCallsRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))}}}};wT.CallHierarchyFeature=Pce});var iM=p(Tu=>{"use strict";Object.defineProperty(Tu,"__esModule",{value:!0});Tu.SemanticTokensBuilder=Tu.SemanticTokensDiff=Tu.SemanticTokensFeature=void 0;var DT=Yr(),Ece=r=>class extends r{get semanticTokens(){return{refresh:()=>this.connection.sendRequest(DT.SemanticTokensRefreshRequest.type),on:e=>{let t=DT.SemanticTokensRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))},onDelta:e=>{let t=DT.SemanticTokensDeltaRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))},onRange:e=>{let t=DT.SemanticTokensRangeRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))}}}};Tu.SemanticTokensFeature=Ece;var ST=class{constructor(e,t){this.originalSequence=e,this.modifiedSequence=t}computeDiff(){let e=this.originalSequence.length,t=this.modifiedSequence.length,n=0;for(;n<t&&n<e&&this.originalSequence[n]===this.modifiedSequence[n];)n++;if(n<t&&n<e){let i=e-1,a=t-1;for(;i>=n&&a>=n&&this.originalSequence[i]===this.modifiedSequence[a];)i--,a--;(i<n||a<n)&&(i++,a++);let s=i-n+1,o=this.modifiedSequence.slice(n,a+1);return o.length===1&&o[0]===this.originalSequence[i]?[{start:n,deleteCount:s-1}]:[{start:n,deleteCount:s,data:o}]}else return n<t?[{start:n,deleteCount:0,data:this.modifiedSequence.slice(n)}]:n<e?[{start:n,deleteCount:e-n}]:[]}};Tu.SemanticTokensDiff=ST;var nM=class{constructor(){this._prevData=void 0,this.initialize()}initialize(){this._id=Date.now(),this._prevLine=0,this._prevChar=0,this._data=[],this._dataLen=0}push(e,t,n,i,a){let s=e,o=t;this._dataLen>0&&(s-=this._prevLine,s===0&&(o-=this._prevChar)),this._data[this._dataLen++]=s,this._data[this._dataLen++]=o,this._data[this._dataLen++]=n,this._data[this._dataLen++]=i,this._data[this._dataLen++]=a,this._prevLine=e,this._prevChar=t}get id(){return this._id.toString()}previousResult(e){this.id===e&&(this._prevData=this._data),this.initialize()}build(){return this._prevData=void 0,{resultId:this.id,data:this._data}}canBuildEdits(){return this._prevData!==void 0}buildEdits(){return this._prevData!==void 0?{resultId:this.id,edits:new ST(this._prevData,this._data).computeDiff()}:this.build()}};Tu.SemanticTokensBuilder=nM});var RU=p(MT=>{"use strict";Object.defineProperty(MT,"__esModule",{value:!0});MT.ShowDocumentFeature=void 0;var Oce=Yr(),kce=r=>class extends r{showDocument(e){return this.connection.sendRequest(Oce.ShowDocumentRequest.type,e)}};MT.ShowDocumentFeature=kce});var bU=p(PT=>{"use strict";Object.defineProperty(PT,"__esModule",{value:!0});PT.FileOperationsFeature=void 0;var my=Yr(),Ice=r=>class extends r{onDidCreateFiles(e){return this.connection.onNotification(my.DidCreateFilesNotification.type,t=>{e(t)})}onDidRenameFiles(e){return this.connection.onNotification(my.DidRenameFilesNotification.type,t=>{e(t)})}onDidDeleteFiles(e){return this.connection.onNotification(my.DidDeleteFilesNotification.type,t=>{e(t)})}onWillCreateFiles(e){return this.connection.onRequest(my.WillCreateFilesRequest.type,(t,n)=>e(t,n))}onWillRenameFiles(e){return this.connection.onRequest(my.WillRenameFilesRequest.type,(t,n)=>e(t,n))}onWillDeleteFiles(e){return this.connection.onRequest(my.WillDeleteFilesRequest.type,(t,n)=>e(t,n))}};PT.FileOperationsFeature=Ice});var CU=p(ET=>{"use strict";Object.defineProperty(ET,"__esModule",{value:!0});ET.LinkedEditingRangeFeature=void 0;var Fce=Yr(),Nce=r=>class extends r{onLinkedEditingRange(e){return this.connection.onRequest(Fce.LinkedEditingRangeRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0))}};ET.LinkedEditingRangeFeature=Nce});var AU=p(OT=>{"use strict";Object.defineProperty(OT,"__esModule",{value:!0});OT.TypeHierarchyFeature=void 0;var aM=Yr(),qce=r=>class extends r{get typeHierarchy(){return{onPrepare:e=>this.connection.onRequest(aM.TypeHierarchyPrepareRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t),void 0)),onSupertypes:e=>{let t=aM.TypeHierarchySupertypesRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))},onSubtypes:e=>{let t=aM.TypeHierarchySubtypesRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))}}}};OT.TypeHierarchyFeature=qce});var DU=p(kT=>{"use strict";Object.defineProperty(kT,"__esModule",{value:!0});kT.InlineValueFeature=void 0;var wU=Yr(),xce=r=>class extends r{get inlineValue(){return{refresh:()=>this.connection.sendRequest(wU.InlineValueRefreshRequest.type),on:e=>this.connection.onRequest(wU.InlineValueRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t)))}}};kT.InlineValueFeature=xce});var SU=p(IT=>{"use strict";Object.defineProperty(IT,"__esModule",{value:!0});IT.InlayHintFeature=void 0;var sM=Yr(),Lce=r=>class extends r{get inlayHint(){return{refresh:()=>this.connection.sendRequest(sM.InlayHintRefreshRequest.type),on:e=>this.connection.onRequest(sM.InlayHintRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t))),resolve:e=>this.connection.onRequest(sM.InlayHintResolveRequest.type,(t,n)=>e(t,n))}}};IT.InlayHintFeature=Lce});var MU=p(FT=>{"use strict";Object.defineProperty(FT,"__esModule",{value:!0});FT.DiagnosticFeature=void 0;var cv=Yr(),jce=r=>class extends r{get diagnostics(){return{refresh:()=>this.connection.sendRequest(cv.DiagnosticRefreshRequest.type),on:e=>this.connection.onRequest(cv.DocumentDiagnosticRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t),this.attachPartialResultProgress(cv.DocumentDiagnosticRequest.partialResult,t))),onWorkspace:e=>this.connection.onRequest(cv.WorkspaceDiagnosticRequest.type,(t,n)=>e(t,n,this.attachWorkDoneProgress(t),this.attachPartialResultProgress(cv.WorkspaceDiagnosticRequest.partialResult,t)))}}};FT.DiagnosticFeature=jce});var lM=p(NT=>{"use strict";Object.defineProperty(NT,"__esModule",{value:!0});NT.TextDocuments=void 0;var Jc=Yr(),oM=class{constructor(e){this._configuration=e,this._syncedDocuments=new Map,this._onDidChangeContent=new Jc.Emitter,this._onDidOpen=new Jc.Emitter,this._onDidClose=new Jc.Emitter,this._onDidSave=new Jc.Emitter,this._onWillSave=new Jc.Emitter}get onDidOpen(){return this._onDidOpen.event}get onDidChangeContent(){return this._onDidChangeContent.event}get onWillSave(){return this._onWillSave.event}onWillSaveWaitUntil(e){this._willSaveWaitUntil=e}get onDidSave(){return this._onDidSave.event}get onDidClose(){return this._onDidClose.event}get(e){return this._syncedDocuments.get(e)}all(){return Array.from(this._syncedDocuments.values())}keys(){return Array.from(this._syncedDocuments.keys())}listen(e){e.__textDocumentSync=Jc.TextDocumentSyncKind.Incremental;let t=[];return t.push(e.onDidOpenTextDocument(n=>{let i=n.textDocument,a=this._configuration.create(i.uri,i.languageId,i.version,i.text);this._syncedDocuments.set(i.uri,a);let s=Object.freeze({document:a});this._onDidOpen.fire(s),this._onDidChangeContent.fire(s)})),t.push(e.onDidChangeTextDocument(n=>{let i=n.textDocument,a=n.contentChanges;if(a.length===0)return;let{version:s}=i;if(s==null)throw new Error(`Received document change event for ${i.uri} without valid version identifier`);let o=this._syncedDocuments.get(i.uri);o!==void 0&&(o=this._configuration.update(o,a,s),this._syncedDocuments.set(i.uri,o),this._onDidChangeContent.fire(Object.freeze({document:o})))})),t.push(e.onDidCloseTextDocument(n=>{let i=this._syncedDocuments.get(n.textDocument.uri);i!==void 0&&(this._syncedDocuments.delete(n.textDocument.uri),this._onDidClose.fire(Object.freeze({document:i})))})),t.push(e.onWillSaveTextDocument(n=>{let i=this._syncedDocuments.get(n.textDocument.uri);i!==void 0&&this._onWillSave.fire(Object.freeze({document:i,reason:n.reason}))})),t.push(e.onWillSaveTextDocumentWaitUntil((n,i)=>{let a=this._syncedDocuments.get(n.textDocument.uri);return a!==void 0&&this._willSaveWaitUntil?this._willSaveWaitUntil(Object.freeze({document:a,reason:n.reason}),i):[]})),t.push(e.onDidSaveTextDocument(n=>{let i=this._syncedDocuments.get(n.textDocument.uri);i!==void 0&&this._onDidSave.fire(Object.freeze({document:i}))})),Jc.Disposable.create(()=>{t.forEach(n=>n.dispose())})}};NT.TextDocuments=oM});var cM=p(yy=>{"use strict";Object.defineProperty(yy,"__esModule",{value:!0});yy.NotebookDocuments=yy.NotebookSyncFeature=void 0;var ga=Yr(),PU=lM(),Uce=r=>class extends r{get synchronization(){return{onDidOpenNotebookDocument:e=>this.connection.onNotification(ga.DidOpenNotebookDocumentNotification.type,t=>{e(t)}),onDidChangeNotebookDocument:e=>this.connection.onNotification(ga.DidChangeNotebookDocumentNotification.type,t=>{e(t)}),onDidSaveNotebookDocument:e=>this.connection.onNotification(ga.DidSaveNotebookDocumentNotification.type,t=>{e(t)}),onDidCloseNotebookDocument:e=>this.connection.onNotification(ga.DidCloseNotebookDocumentNotification.type,t=>{e(t)})}}};yy.NotebookSyncFeature=Uce;var Ru=class{onDidOpenTextDocument(e){return this.openHandler=e,ga.Disposable.create(()=>{this.openHandler=void 0})}openTextDocument(e){this.openHandler&&this.openHandler(e)}onDidChangeTextDocument(e){return this.changeHandler=e,ga.Disposable.create(()=>{this.changeHandler=e})}changeTextDocument(e){this.changeHandler&&this.changeHandler(e)}onDidCloseTextDocument(e){return this.closeHandler=e,ga.Disposable.create(()=>{this.closeHandler=void 0})}closeTextDocument(e){this.closeHandler&&this.closeHandler(e)}onWillSaveTextDocument(){return Ru.NULL_DISPOSE}onWillSaveTextDocumentWaitUntil(){return Ru.NULL_DISPOSE}onDidSaveTextDocument(){return Ru.NULL_DISPOSE}};Ru.NULL_DISPOSE=Object.freeze({dispose:()=>{}});var uM=class{constructor(e){e instanceof PU.TextDocuments?this._cellTextDocuments=e:this._cellTextDocuments=new PU.TextDocuments(e),this.notebookDocuments=new Map,this.notebookCellMap=new Map,this._onDidOpen=new ga.Emitter,this._onDidChange=new ga.Emitter,this._onDidSave=new ga.Emitter,this._onDidClose=new ga.Emitter}get cellTextDocuments(){return this._cellTextDocuments}getCellTextDocument(e){return this._cellTextDocuments.get(e.document)}getNotebookDocument(e){return this.notebookDocuments.get(e)}getNotebookCell(e){let t=this.notebookCellMap.get(e);return t&&t[0]}findNotebookDocumentForCell(e){let t=typeof e=="string"?e:e.document,n=this.notebookCellMap.get(t);return n&&n[1]}get onDidOpen(){return this._onDidOpen.event}get onDidSave(){return this._onDidSave.event}get onDidChange(){return this._onDidChange.event}get onDidClose(){return this._onDidClose.event}listen(e){let t=new Ru,n=[];return n.push(this.cellTextDocuments.listen(t)),n.push(e.notebooks.synchronization.onDidOpenNotebookDocument(i=>{this.notebookDocuments.set(i.notebookDocument.uri,i.notebookDocument);for(let a of i.cellTextDocuments)t.openTextDocument({textDocument:a});this.updateCellMap(i.notebookDocument),this._onDidOpen.fire(i.notebookDocument)})),n.push(e.notebooks.synchronization.onDidChangeNotebookDocument(i=>{let a=this.notebookDocuments.get(i.notebookDocument.uri);if(a===void 0)return;a.version=i.notebookDocument.version;let s=a.metadata,o=!1,u=i.change;u.metadata!==void 0&&(o=!0,a.metadata=u.metadata);let c=[],f=[],d=[],m=[];if(u.cells!==void 0){let S=u.cells;if(S.structure!==void 0){let C=S.structure.array;if(a.cells.splice(C.start,C.deleteCount,...C.cells!==void 0?C.cells:[]),S.structure.didOpen!==void 0)for(let b of S.structure.didOpen)t.openTextDocument({textDocument:b}),c.push(b.uri);if(S.structure.didClose)for(let b of S.structure.didClose)t.closeTextDocument({textDocument:b}),f.push(b.uri)}if(S.data!==void 0){let C=new Map(S.data.map(b=>[b.document,b]));for(let b=0;b<=a.cells.length;b++){let I=C.get(a.cells[b].document);if(I!==void 0){let L=a.cells.splice(b,1,I);if(d.push({old:L[0],new:I}),C.delete(I.document),C.size===0)break}}}if(S.textContent!==void 0)for(let C of S.textContent)t.changeTextDocument({textDocument:C.document,contentChanges:C.changes}),m.push(C.document.uri)}this.updateCellMap(a);let h={notebookDocument:a};o&&(h.metadata={old:s,new:a.metadata});let y=[];for(let S of c)y.push(this.getNotebookCell(S));let _=[];for(let S of f)_.push(this.getNotebookCell(S));let w=[];for(let S of m)w.push(this.getNotebookCell(S));(y.length>0||_.length>0||d.length>0||w.length>0)&&(h.cells={added:y,removed:_,changed:{data:d,textContent:w}}),(h.metadata!==void 0||h.cells!==void 0)&&this._onDidChange.fire(h)})),n.push(e.notebooks.synchronization.onDidSaveNotebookDocument(i=>{let a=this.notebookDocuments.get(i.notebookDocument.uri);a!==void 0&&this._onDidSave.fire(a)})),n.push(e.notebooks.synchronization.onDidCloseNotebookDocument(i=>{let a=this.notebookDocuments.get(i.notebookDocument.uri);if(a!==void 0){this._onDidClose.fire(a);for(let s of i.cellTextDocuments)t.closeTextDocument({textDocument:s});this.notebookDocuments.delete(i.notebookDocument.uri);for(let s of a.cells)this.notebookCellMap.delete(s.document)}})),ga.Disposable.create(()=>{n.forEach(i=>i.dispose())})}updateCellMap(e){for(let t of e.cells)this.notebookCellMap.set(t.document,[t,e])}};yy.NotebookDocuments=uM});var EU=p(qT=>{"use strict";Object.defineProperty(qT,"__esModule",{value:!0});qT.MonikerFeature=void 0;var Bce=Yr(),Gce=r=>class extends r{get moniker(){return{on:e=>{let t=Bce.MonikerRequest.type;return this.connection.onRequest(t,(n,i)=>e(n,i,this.attachWorkDoneProgress(n),this.attachPartialResultProgress(t,n)))}}}};qT.MonikerFeature=Gce});var hM=p(gt=>{"use strict";Object.defineProperty(gt,"__esModule",{value:!0});gt.createConnection=gt.combineFeatures=gt.combineNotebooksFeatures=gt.combineLanguagesFeatures=gt.combineWorkspaceFeatures=gt.combineWindowFeatures=gt.combineClientFeatures=gt.combineTracerFeatures=gt.combineTelemetryFeatures=gt.combineConsoleFeatures=gt._NotebooksImpl=gt._LanguagesImpl=gt.BulkUnregistration=gt.BulkRegistration=gt.ErrorMessageTracker=void 0;var fe=Yr(),va=tT(),dM=ZS(),xe=vU(),Kce=_U(),Hce=$U(),Vce=TU(),Wce=iM(),zce=RU(),Yce=bU(),Xce=CU(),Jce=AU(),Qce=DU(),Zce=SU(),efe=MU(),tfe=cM(),rfe=EU();function fM(r){if(r!==null)return r}var pM=class{constructor(){this._messages=Object.create(null)}add(e){let t=this._messages[e];t||(t=0),t++,this._messages[e]=t}sendErrors(e){Object.keys(this._messages).forEach(t=>{e.window.showErrorMessage(t)})}};gt.ErrorMessageTracker=pM;var xT=class{constructor(){}rawAttach(e){this._rawConnection=e}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}fillServerCapabilities(e){}initialize(e){}error(e){this.send(fe.MessageType.Error,e)}warn(e){this.send(fe.MessageType.Warning,e)}info(e){this.send(fe.MessageType.Info,e)}log(e){this.send(fe.MessageType.Log,e)}send(e,t){this._rawConnection&&this._rawConnection.sendNotification(fe.LogMessageNotification.type,{type:e,message:t}).catch(()=>{(0,fe.RAL)().console.error("Sending log message failed")})}},mM=class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}showErrorMessage(e,...t){let n={type:fe.MessageType.Error,message:e,actions:t};return this.connection.sendRequest(fe.ShowMessageRequest.type,n).then(fM)}showWarningMessage(e,...t){let n={type:fe.MessageType.Warning,message:e,actions:t};return this.connection.sendRequest(fe.ShowMessageRequest.type,n).then(fM)}showInformationMessage(e,...t){let n={type:fe.MessageType.Info,message:e,actions:t};return this.connection.sendRequest(fe.ShowMessageRequest.type,n).then(fM)}},OU=(0,zce.ShowDocumentFeature)((0,xe.ProgressFeature)(mM)),nfe;(function(r){function e(){return new LT}r.create=e})(nfe=gt.BulkRegistration||(gt.BulkRegistration={}));var LT=class{constructor(){this._registrations=[],this._registered=new Set}add(e,t){let n=va.string(e)?e:e.method;if(this._registered.has(n))throw new Error(`${n} is already added to this registration`);let i=dM.generateUuid();this._registrations.push({id:i,method:n,registerOptions:t||{}}),this._registered.add(n)}asRegistrationParams(){return{registrations:this._registrations}}},ife;(function(r){function e(){return new fv(void 0,[])}r.create=e})(ife=gt.BulkUnregistration||(gt.BulkUnregistration={}));var fv=class{constructor(e,t){this._connection=e,this._unregistrations=new Map,t.forEach(n=>{this._unregistrations.set(n.method,n)})}get isAttached(){return!!this._connection}attach(e){this._connection=e}add(e){this._unregistrations.set(e.method,e)}dispose(){let e=[];for(let n of this._unregistrations.values())e.push(n);let t={unregisterations:e};this._connection.sendRequest(fe.UnregistrationRequest.type,t).catch(()=>{this._connection.console.info("Bulk unregistration failed.")})}disposeSingle(e){let t=va.string(e)?e:e.method,n=this._unregistrations.get(t);if(!n)return!1;let i={unregisterations:[n]};return this._connection.sendRequest(fe.UnregistrationRequest.type,i).then(()=>{this._unregistrations.delete(t)},a=>{this._connection.console.info(`Un-registering request handler for ${n.id} failed.`)}),!0}},jT=class{attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}register(e,t,n){return e instanceof LT?this.registerMany(e):e instanceof fv?this.registerSingle1(e,t,n):this.registerSingle2(e,t)}registerSingle1(e,t,n){let i=va.string(t)?t:t.method,a=dM.generateUuid(),s={registrations:[{id:a,method:i,registerOptions:n||{}}]};return e.isAttached||e.attach(this.connection),this.connection.sendRequest(fe.RegistrationRequest.type,s).then(o=>(e.add({id:a,method:i}),e),o=>(this.connection.console.info(`Registering request handler for ${i} failed.`),Promise.reject(o)))}registerSingle2(e,t){let n=va.string(e)?e:e.method,i=dM.generateUuid(),a={registrations:[{id:i,method:n,registerOptions:t||{}}]};return this.connection.sendRequest(fe.RegistrationRequest.type,a).then(s=>fe.Disposable.create(()=>{this.unregisterSingle(i,n).catch(()=>{this.connection.console.info(`Un-registering capability with id ${i} failed.`)})}),s=>(this.connection.console.info(`Registering request handler for ${n} failed.`),Promise.reject(s)))}unregisterSingle(e,t){let n={unregisterations:[{id:e,method:t}]};return this.connection.sendRequest(fe.UnregistrationRequest.type,n).catch(()=>{this.connection.console.info(`Un-registering request handler for ${e} failed.`)})}registerMany(e){let t=e.asRegistrationParams();return this.connection.sendRequest(fe.RegistrationRequest.type,t).then(()=>new fv(this._connection,t.registrations.map(n=>({id:n.id,method:n.method}))),n=>(this.connection.console.info("Bulk registration failed."),Promise.reject(n)))}},yM=class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}applyEdit(e){function t(i){return i&&!!i.edit}let n=t(e)?e:{edit:e};return this.connection.sendRequest(fe.ApplyWorkspaceEditRequest.type,n)}},kU=(0,Yce.FileOperationsFeature)((0,Hce.WorkspaceFoldersFeature)((0,Kce.ConfigurationFeature)(yM))),UT=class{constructor(){this._trace=fe.Trace.Off}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}set trace(e){this._trace=e}log(e,t){this._trace!==fe.Trace.Off&&this.connection.sendNotification(fe.LogTraceNotification.type,{message:e,verbose:this._trace===fe.Trace.Verbose?t:void 0}).catch(()=>{})}},BT=class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}logEvent(e){this.connection.sendNotification(fe.TelemetryEventNotification.type,e).catch(()=>{this.connection.console.log("Sending TelemetryEventNotification failed")})}},GT=class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}attachWorkDoneProgress(e){return(0,xe.attachWorkDone)(this.connection,e)}attachPartialResultProgress(e,t){return(0,xe.attachPartialResult)(this.connection,t)}};gt._LanguagesImpl=GT;var IU=(0,rfe.MonikerFeature)((0,efe.DiagnosticFeature)((0,Zce.InlayHintFeature)((0,Qce.InlineValueFeature)((0,Jce.TypeHierarchyFeature)((0,Xce.LinkedEditingRangeFeature)((0,Wce.SemanticTokensFeature)((0,Vce.CallHierarchyFeature)(GT)))))))),KT=class{constructor(){}attach(e){this._connection=e}get connection(){if(!this._connection)throw new Error("Remote is not attached to a connection yet.");return this._connection}initialize(e){}fillServerCapabilities(e){}attachWorkDoneProgress(e){return(0,xe.attachWorkDone)(this.connection,e)}attachPartialResultProgress(e,t){return(0,xe.attachPartialResult)(this.connection,t)}};gt._NotebooksImpl=KT;var FU=(0,tfe.NotebookSyncFeature)(KT);function NU(r,e){return function(t){return e(r(t))}}gt.combineConsoleFeatures=NU;function qU(r,e){return function(t){return e(r(t))}}gt.combineTelemetryFeatures=qU;function xU(r,e){return function(t){return e(r(t))}}gt.combineTracerFeatures=xU;function LU(r,e){return function(t){return e(r(t))}}gt.combineClientFeatures=LU;function jU(r,e){return function(t){return e(r(t))}}gt.combineWindowFeatures=jU;function UU(r,e){return function(t){return e(r(t))}}gt.combineWorkspaceFeatures=UU;function BU(r,e){return function(t){return e(r(t))}}gt.combineLanguagesFeatures=BU;function GU(r,e){return function(t){return e(r(t))}}gt.combineNotebooksFeatures=GU;function afe(r,e){function t(i,a,s){return i&&a?s(i,a):i||a}return{__brand:"features",console:t(r.console,e.console,NU),tracer:t(r.tracer,e.tracer,xU),telemetry:t(r.telemetry,e.telemetry,qU),client:t(r.client,e.client,LU),window:t(r.window,e.window,jU),workspace:t(r.workspace,e.workspace,UU),languages:t(r.languages,e.languages,BU),notebooks:t(r.notebooks,e.notebooks,GU)}}gt.combineFeatures=afe;function sfe(r,e,t){let n=t&&t.console?new(t.console(xT)):new xT,i=r(n);n.rawAttach(i);let a=t&&t.tracer?new(t.tracer(UT)):new UT,s=t&&t.telemetry?new(t.telemetry(BT)):new BT,o=t&&t.client?new(t.client(jT)):new jT,u=t&&t.window?new(t.window(OU)):new OU,c=t&&t.workspace?new(t.workspace(kU)):new kU,f=t&&t.languages?new(t.languages(IU)):new IU,d=t&&t.notebooks?new(t.notebooks(FU)):new FU,m=[n,a,s,o,u,c,f,d];function h(C){return C instanceof Promise?C:va.thenable(C)?new Promise((b,I)=>{C.then(L=>b(L),L=>I(L))}):Promise.resolve(C)}let y,_,w,S={listen:()=>i.listen(),sendRequest:(C,...b)=>i.sendRequest(va.string(C)?C:C.method,...b),onRequest:(C,b)=>i.onRequest(C,b),sendNotification:(C,b)=>{let I=va.string(C)?C:C.method;return arguments.length===1?i.sendNotification(I):i.sendNotification(I,b)},onNotification:(C,b)=>i.onNotification(C,b),onProgress:i.onProgress,sendProgress:i.sendProgress,onInitialize:C=>(_=C,{dispose:()=>{_=void 0}}),onInitialized:C=>i.onNotification(fe.InitializedNotification.type,C),onShutdown:C=>(y=C,{dispose:()=>{y=void 0}}),onExit:C=>(w=C,{dispose:()=>{w=void 0}}),get console(){return n},get telemetry(){return s},get tracer(){return a},get client(){return o},get window(){return u},get workspace(){return c},get languages(){return f},get notebooks(){return d},onDidChangeConfiguration:C=>i.onNotification(fe.DidChangeConfigurationNotification.type,C),onDidChangeWatchedFiles:C=>i.onNotification(fe.DidChangeWatchedFilesNotification.type,C),__textDocumentSync:void 0,onDidOpenTextDocument:C=>i.onNotification(fe.DidOpenTextDocumentNotification.type,C),onDidChangeTextDocument:C=>i.onNotification(fe.DidChangeTextDocumentNotification.type,C),onDidCloseTextDocument:C=>i.onNotification(fe.DidCloseTextDocumentNotification.type,C),onWillSaveTextDocument:C=>i.onNotification(fe.WillSaveTextDocumentNotification.type,C),onWillSaveTextDocumentWaitUntil:C=>i.onRequest(fe.WillSaveTextDocumentWaitUntilRequest.type,C),onDidSaveTextDocument:C=>i.onNotification(fe.DidSaveTextDocumentNotification.type,C),sendDiagnostics:C=>i.sendNotification(fe.PublishDiagnosticsNotification.type,C),onHover:C=>i.onRequest(fe.HoverRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),onCompletion:C=>i.onRequest(fe.CompletionRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onCompletionResolve:C=>i.onRequest(fe.CompletionResolveRequest.type,C),onSignatureHelp:C=>i.onRequest(fe.SignatureHelpRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),onDeclaration:C=>i.onRequest(fe.DeclarationRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onDefinition:C=>i.onRequest(fe.DefinitionRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onTypeDefinition:C=>i.onRequest(fe.TypeDefinitionRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onImplementation:C=>i.onRequest(fe.ImplementationRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onReferences:C=>i.onRequest(fe.ReferencesRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onDocumentHighlight:C=>i.onRequest(fe.DocumentHighlightRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onDocumentSymbol:C=>i.onRequest(fe.DocumentSymbolRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onWorkspaceSymbol:C=>i.onRequest(fe.WorkspaceSymbolRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onWorkspaceSymbolResolve:C=>i.onRequest(fe.WorkspaceSymbolResolveRequest.type,C),onCodeAction:C=>i.onRequest(fe.CodeActionRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onCodeActionResolve:C=>i.onRequest(fe.CodeActionResolveRequest.type,(b,I)=>C(b,I)),onCodeLens:C=>i.onRequest(fe.CodeLensRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onCodeLensResolve:C=>i.onRequest(fe.CodeLensResolveRequest.type,(b,I)=>C(b,I)),onDocumentFormatting:C=>i.onRequest(fe.DocumentFormattingRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),onDocumentRangeFormatting:C=>i.onRequest(fe.DocumentRangeFormattingRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),onDocumentOnTypeFormatting:C=>i.onRequest(fe.DocumentOnTypeFormattingRequest.type,(b,I)=>C(b,I)),onRenameRequest:C=>i.onRequest(fe.RenameRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),onPrepareRename:C=>i.onRequest(fe.PrepareRenameRequest.type,(b,I)=>C(b,I)),onDocumentLinks:C=>i.onRequest(fe.DocumentLinkRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onDocumentLinkResolve:C=>i.onRequest(fe.DocumentLinkResolveRequest.type,(b,I)=>C(b,I)),onDocumentColor:C=>i.onRequest(fe.DocumentColorRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onColorPresentation:C=>i.onRequest(fe.ColorPresentationRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onFoldingRanges:C=>i.onRequest(fe.FoldingRangeRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onSelectionRanges:C=>i.onRequest(fe.SelectionRangeRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),(0,xe.attachPartialResult)(i,b))),onExecuteCommand:C=>i.onRequest(fe.ExecuteCommandRequest.type,(b,I)=>C(b,I,(0,xe.attachWorkDone)(i,b),void 0)),dispose:()=>i.dispose()};for(let C of m)C.attach(S);return i.onRequest(fe.InitializeRequest.type,C=>{e.initialize(C),va.string(C.trace)&&(a.trace=fe.Trace.fromString(C.trace));for(let b of m)b.initialize(C.capabilities);if(_){let b=_(C,new fe.CancellationTokenSource().token,(0,xe.attachWorkDone)(i,C),void 0);return h(b).then(I=>{if(I instanceof fe.ResponseError)return I;let L=I;L||(L={capabilities:{}});let W=L.capabilities;W||(W={},L.capabilities=W),W.textDocumentSync===void 0||W.textDocumentSync===null?W.textDocumentSync=va.number(S.__textDocumentSync)?S.__textDocumentSync:fe.TextDocumentSyncKind.None:!va.number(W.textDocumentSync)&&!va.number(W.textDocumentSync.change)&&(W.textDocumentSync.change=va.number(S.__textDocumentSync)?S.__textDocumentSync:fe.TextDocumentSyncKind.None);for(let _e of m)_e.fillServerCapabilities(W);return L})}else{let b={capabilities:{textDocumentSync:fe.TextDocumentSyncKind.None}};for(let I of m)I.fillServerCapabilities(b.capabilities);return b}}),i.onRequest(fe.ShutdownRequest.type,()=>{if(e.shutdownReceived=!0,y)return y(new fe.CancellationTokenSource().token)}),i.onNotification(fe.ExitNotification.type,()=>{try{w&&w()}finally{e.shutdownReceived?e.exit(0):e.exit(1)}}),i.onNotification(fe.SetTraceNotification.type,C=>{a.trace=fe.Trace.fromString(C.value)}),S}gt.createConnection=sfe});var HU=p(ci=>{"use strict";Object.defineProperty(ci,"__esModule",{value:!0});ci.resolveModulePath=ci.FileSystem=ci.resolveGlobalYarnPath=ci.resolveGlobalNodePath=ci.resolve=ci.uriToFilePath=void 0;var ofe=require("url"),ls=require("path"),gM=require("fs"),$M=require("child_process");function lfe(r){let e=ofe.parse(r);if(e.protocol!=="file:"||!e.path)return;let t=e.path.split("/");for(var n=0,i=t.length;n<i;n++)t[n]=decodeURIComponent(t[n]);if(process.platform==="win32"&&t.length>1){let a=t[0],s=t[1];a.length===0&&s.length>1&&s[1]===":"&&t.shift()}return ls.normalize(t.join("/"))}ci.uriToFilePath=lfe;function vM(){return process.platform==="win32"}function HT(r,e,t,n){let i="NODE_PATH",a=["var p = process;","p.on('message',function(m){","if(m.c==='e'){","p.exit(0);","}","else if(m.c==='rs'){","try{","var r=require.resolve(m.a);","p.send({c:'r',s:true,r:r});","}","catch(err){","p.send({c:'r',s:false});","}","}","});"].join("");return new Promise((s,o)=>{let u=process.env,c=Object.create(null);Object.keys(u).forEach(f=>c[f]=u[f]),e&&gM.existsSync(e)&&(c[i]?c[i]=e+ls.delimiter+c[i]:c[i]=e,n&&n(`NODE_PATH value is: ${c[i]}`)),c.ELECTRON_RUN_AS_NODE="1";try{let f=(0,$M.fork)("",[],{cwd:t,env:c,execArgv:["-e",a]});if(f.pid===void 0){o(new Error(`Starting process to resolve node module  ${r} failed`));return}f.on("error",m=>{o(m)}),f.on("message",m=>{m.c==="r"&&(f.send({c:"e"}),m.s?s(m.r):o(new Error(`Failed to resolve module: ${r}`)))});let d={c:"rs",a:r};f.send(d)}catch(f){o(f)}})}ci.resolve=HT;function _M(r){let e="npm",t=Object.create(null);Object.keys(process.env).forEach(a=>t[a]=process.env[a]),t.NO_UPDATE_NOTIFIER="true";let n={encoding:"utf8",env:t};vM()&&(e="npm.cmd",n.shell=!0);let i=()=>{};try{process.on("SIGPIPE",i);let a=(0,$M.spawnSync)(e,["config","get","prefix"],n).stdout;if(!a){r&&r("'npm config get prefix' didn't return a value.");return}let s=a.trim();return r&&r(`'npm config get prefix' value is: ${s}`),s.length>0?vM()?ls.join(s,"node_modules"):ls.join(s,"lib","node_modules"):void 0}catch{return}finally{process.removeListener("SIGPIPE",i)}}ci.resolveGlobalNodePath=_M;function ufe(r){let e="yarn",t={encoding:"utf8"};vM()&&(e="yarn.cmd",t.shell=!0);let n=()=>{};try{process.on("SIGPIPE",n);let i=(0,$M.spawnSync)(e,["global","dir","--json"],t),a=i.stdout;if(!a){r&&(r("'yarn global dir' didn't return a value."),i.stderr&&r(i.stderr));return}let s=a.trim().split(/\r?\n/);for(let o of s)try{let u=JSON.parse(o);if(u.type==="log")return ls.join(u.data,"node_modules")}catch{}return}catch{return}finally{process.removeListener("SIGPIPE",n)}}ci.resolveGlobalYarnPath=ufe;var KU;(function(r){let e;function t(){return e!==void 0||(process.platform==="win32"?e=!1:e=!gM.existsSync(__filename.toUpperCase())||!gM.existsSync(__filename.toLowerCase())),e}r.isCaseSensitive=t;function n(i,a){return t()?ls.normalize(a).indexOf(ls.normalize(i))===0:ls.normalize(a).toLowerCase().indexOf(ls.normalize(i).toLowerCase())===0}r.isParent=n})(KU=ci.FileSystem||(ci.FileSystem={}));function cfe(r,e,t,n){return t?(ls.isAbsolute(t)||(t=ls.join(r,t)),HT(e,t,t,n).then(i=>KU.isParent(t,i)?i:Promise.reject(new Error(`Failed to load ${e} from node path location.`))).then(void 0,i=>HT(e,_M(n),r,n))):HT(e,_M(n),r,n)}ci.resolveModulePath=cfe});var TM=p((aat,VU)=>{"use strict";VU.exports=Yr()});var zU=p(Pn=>{"use strict";var ffe=Pn&&Pn.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),WU=Pn&&Pn.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&ffe(e,r,t)};Object.defineProperty(Pn,"__esModule",{value:!0});Pn.ProposedFeatures=Pn.NotebookDocuments=Pn.TextDocuments=Pn.SemanticTokensBuilder=void 0;var dfe=iM();Object.defineProperty(Pn,"SemanticTokensBuilder",{enumerable:!0,get:function(){return dfe.SemanticTokensBuilder}});WU(Yr(),Pn);var pfe=lM();Object.defineProperty(Pn,"TextDocuments",{enumerable:!0,get:function(){return pfe.TextDocuments}});var mfe=cM();Object.defineProperty(Pn,"NotebookDocuments",{enumerable:!0,get:function(){return mfe.NotebookDocuments}});WU(hM(),Pn);var yfe;(function(r){r.all={__brand:"features"}})(yfe=Pn.ProposedFeatures||(Pn.ProposedFeatures={}))});var Pe=p(Hi=>{"use strict";var hfe=Hi&&Hi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),XU=Hi&&Hi.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&hfe(e,r,t)};Object.defineProperty(Hi,"__esModule",{value:!0});Hi.createConnection=Hi.Files=void 0;var RM=tT(),gfe=hM(),dv=HU(),Qc=TM();XU(TM(),Hi);XU(zU(),Hi);var vfe;(function(r){r.uriToFilePath=dv.uriToFilePath,r.resolveGlobalNodePath=dv.resolveGlobalNodePath,r.resolveGlobalYarnPath=dv.resolveGlobalYarnPath,r.resolve=dv.resolve,r.resolveModulePath=dv.resolveModulePath})(vfe=Hi.Files||(Hi.Files={}));var YU;function VT(){if(YU!==void 0)try{YU.end()}catch{}}var hy=!1,JU;function _fe(){let r="--clientProcessId";function e(t){try{let n=parseInt(t);isNaN(n)||(JU=setInterval(()=>{try{process.kill(n,0)}catch{VT(),process.exit(hy?0:1)}},3e3))}catch{}}for(let t=2;t<process.argv.length;t++){let n=process.argv[t];if(n===r&&t+1<process.argv.length){e(process.argv[t+1]);return}else{let i=n.split("=");i[0]===r&&e(i[1])}}}_fe();var $fe={initialize:r=>{let e=r.processId;RM.number(e)&&JU===void 0&&setInterval(()=>{try{process.kill(e,0)}catch{process.exit(hy?0:1)}},3e3)},get shutdownReceived(){return hy},set shutdownReceived(r){hy=r},exit:r=>{VT(),process.exit(r)}};function Tfe(r,e,t,n){let i,a,s,o;return r!==void 0&&r.__brand==="features"&&(i=r,r=e,e=t,t=n),Qc.ConnectionStrategy.is(r)||Qc.ConnectionOptions.is(r)?o=r:(a=r,s=e,o=t),Rfe(a,s,o,i)}Hi.createConnection=Tfe;function Rfe(r,e,t,n){if(!r&&!e&&process.argv.length>2){let o,u,c=process.argv.slice(2);for(let f=0;f<c.length;f++){let d=c[f];if(d==="--node-ipc"){r=new Qc.IPCMessageReader(process),e=new Qc.IPCMessageWriter(process);break}else if(d==="--stdio"){r=process.stdin,e=process.stdout;break}else if(d==="--socket"){o=parseInt(c[f+1]);break}else if(d==="--pipe"){u=c[f+1];break}else{var i=d.split("=");if(i[0]==="--socket"){o=parseInt(i[1]);break}else if(i[0]==="--pipe"){u=i[1];break}}}if(o){let f=(0,Qc.createServerSocketTransport)(o);r=f[0],e=f[1]}else if(u){let f=(0,Qc.createServerPipeTransport)(u);r=f[0],e=f[1]}}var a="Use arguments of createConnection or set command line parameters: '--node-ipc', '--stdio' or '--socket={number}'";if(!r)throw new Error("Connection input stream is not set. "+a);if(!e)throw new Error("Connection output stream is not set. "+a);if(RM.func(r.read)&&RM.func(r.on)){let o=r;o.on("end",()=>{VT(),process.exit(hy?0:1)}),o.on("close",()=>{VT(),process.exit(hy?0:1)})}let s=o=>(0,Qc.createProtocolConnection)(r,e,o,t);return(0,gfe.createConnection)(s,$fe,n)}});var bM=p((zT,WT)=>{var bfe=zT&&zT.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var n=0,i=e.length,a;n<i;n++)(a||!(n in e))&&(a||(a=Array.prototype.slice.call(e,0,n)),a[n]=e[n]);return r.concat(a||Array.prototype.slice.call(e))};(function(r){if(typeof WT=="object"&&typeof WT.exports=="object"){var e=r(require,zT);e!==void 0&&(WT.exports=e)}else typeof define=="function"&&define.amd&&define(["require","exports"],r)})(function(r,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextDocument=void 0;var t=function(){function u(c,f,d,m){this._uri=c,this._languageId=f,this._version=d,this._content=m,this._lineOffsets=void 0}return Object.defineProperty(u.prototype,"uri",{get:function(){return this._uri},enumerable:!1,configurable:!0}),Object.defineProperty(u.prototype,"languageId",{get:function(){return this._languageId},enumerable:!1,configurable:!0}),Object.defineProperty(u.prototype,"version",{get:function(){return this._version},enumerable:!1,configurable:!0}),u.prototype.getText=function(c){if(c){var f=this.offsetAt(c.start),d=this.offsetAt(c.end);return this._content.substring(f,d)}return this._content},u.prototype.update=function(c,f){for(var d=0,m=c;d<m.length;d++){var h=m[d];if(u.isIncremental(h)){var y=s(h.range),_=this.offsetAt(y.start),w=this.offsetAt(y.end);this._content=this._content.substring(0,_)+h.text+this._content.substring(w,this._content.length);var S=Math.max(y.start.line,0),C=Math.max(y.end.line,0),b=this._lineOffsets,I=a(h.text,!1,_);if(C-S===I.length)for(var L=0,W=I.length;L<W;L++)b[L+S+1]=I[L];else I.length<1e4?b.splice.apply(b,bfe([S+1,C-S],I,!1)):this._lineOffsets=b=b.slice(0,S+1).concat(I,b.slice(C+1));var _e=h.text.length-(w-_);if(_e!==0)for(var L=S+1+I.length,W=b.length;L<W;L++)b[L]=b[L]+_e}else if(u.isFull(h))this._content=h.text,this._lineOffsets=void 0;else throw new Error("Unknown change event received")}this._version=f},u.prototype.getLineOffsets=function(){return this._lineOffsets===void 0&&(this._lineOffsets=a(this._content,!0)),this._lineOffsets},u.prototype.positionAt=function(c){c=Math.max(Math.min(c,this._content.length),0);var f=this.getLineOffsets(),d=0,m=f.length;if(m===0)return{line:0,character:c};for(;d<m;){var h=Math.floor((d+m)/2);f[h]>c?m=h:d=h+1}var y=d-1;return{line:y,character:c-f[y]}},u.prototype.offsetAt=function(c){var f=this.getLineOffsets();if(c.line>=f.length)return this._content.length;if(c.line<0)return 0;var d=f[c.line],m=c.line+1<f.length?f[c.line+1]:this._content.length;return Math.max(Math.min(d+c.character,m),d)},Object.defineProperty(u.prototype,"lineCount",{get:function(){return this.getLineOffsets().length},enumerable:!1,configurable:!0}),u.isIncremental=function(c){var f=c;return f!=null&&typeof f.text=="string"&&f.range!==void 0&&(f.rangeLength===void 0||typeof f.rangeLength=="number")},u.isFull=function(c){var f=c;return f!=null&&typeof f.text=="string"&&f.range===void 0&&f.rangeLength===void 0},u}(),n;(function(u){function c(m,h,y,_){return new t(m,h,y,_)}u.create=c;function f(m,h,y){if(m instanceof t)return m.update(h,y),m;throw new Error("TextDocument.update: document must be created by TextDocument.create")}u.update=f;function d(m,h){for(var y=m.getText(),_=i(h.map(o),function(W,_e){var Je=W.range.start.line-_e.range.start.line;return Je===0?W.range.start.character-_e.range.start.character:Je}),w=0,S=[],C=0,b=_;C<b.length;C++){var I=b[C],L=m.offsetAt(I.range.start);if(L<w)throw new Error("Overlapping edit");L>w&&S.push(y.substring(w,L)),I.newText.length&&S.push(I.newText),w=m.offsetAt(I.range.end)}return S.push(y.substr(w)),S.join("")}u.applyEdits=d})(n=e.TextDocument||(e.TextDocument={}));function i(u,c){if(u.length<=1)return u;var f=u.length/2|0,d=u.slice(0,f),m=u.slice(f);i(d,c),i(m,c);for(var h=0,y=0,_=0;h<d.length&&y<m.length;){var w=c(d[h],m[y]);w<=0?u[_++]=d[h++]:u[_++]=m[y++]}for(;h<d.length;)u[_++]=d[h++];for(;y<m.length;)u[_++]=m[y++];return u}function a(u,c,f){f===void 0&&(f=0);for(var d=c?[f]:[],m=0;m<u.length;m++){var h=u.charCodeAt(m);(h===13||h===10)&&(h===13&&m+1<u.length&&u.charCodeAt(m+1)===10&&m++,d.push(f+m+1))}return d}function s(u){var c=u.start,f=u.end;return c.line>f.line||c.line===f.line&&c.character>f.character?{start:f,end:c}:u}function o(u){var c=s(u.range);return c!==u.range?{newText:u.newText,range:c}:u}})});var Un=p(gn=>{"use strict";Object.defineProperty(gn,"__esModule",{value:!0});gn.isRootCstNode=gn.isLeafCstNode=gn.isCompositeCstNode=gn.AbstractAstReflection=gn.isLinkingError=gn.isAstNodeDescription=gn.isReference=gn.isAstNode=void 0;function AM(r){return typeof r=="object"&&r!==null&&typeof r.$type=="string"}gn.isAstNode=AM;function QU(r){return typeof r=="object"&&r!==null&&typeof r.$refText=="string"}gn.isReference=QU;function Cfe(r){return typeof r=="object"&&r!==null&&typeof r.name=="string"&&typeof r.type=="string"&&typeof r.path=="string"}gn.isAstNodeDescription=Cfe;function Afe(r){return typeof r=="object"&&r!==null&&AM(r.container)&&QU(r.reference)&&typeof r.message=="string"}gn.isLinkingError=Afe;var CM=class{constructor(){this.subtypes={},this.allSubtypes={}}isInstance(e,t){return AM(e)&&this.isSubtype(e.$type,t)}isSubtype(e,t){if(e===t)return!0;let n=this.subtypes[e];n||(n=this.subtypes[e]={});let i=n[t];if(i!==void 0)return i;{let a=this.computeIsSubtype(e,t);return n[t]=a,a}}getAllSubTypes(e){let t=this.allSubtypes[e];if(t)return t;{let n=this.getAllTypes(),i=[];for(let a of n)this.isSubtype(a,e)&&i.push(a);return this.allSubtypes[e]=i,i}}};gn.AbstractAstReflection=CM;function ZU(r){return typeof r=="object"&&r!==null&&"children"in r}gn.isCompositeCstNode=ZU;function wfe(r){return typeof r=="object"&&r!==null&&"tokenType"in r}gn.isLeafCstNode=wfe;function Dfe(r){return ZU(r)&&"fullText"in r}gn.isRootCstNode=Dfe});var vn=p(nr=>{"use strict";Object.defineProperty(nr,"__esModule",{value:!0});nr.Reduction=nr.TreeStreamImpl=nr.stream=nr.DONE_RESULT=nr.EMPTY_STREAM=nr.StreamImpl=void 0;var En=class{constructor(e,t){this.startFn=e,this.nextFn=t}iterator(){let e={state:this.startFn(),next:()=>this.nextFn(e.state),[Symbol.iterator]:()=>e};return e}[Symbol.iterator](){return this.iterator()}isEmpty(){let e=this.iterator();return Boolean(e.next().done)}count(){let e=this.iterator(),t=0,n=e.next();for(;!n.done;)t++,n=e.next();return t}toArray(){let e=[],t=this.iterator(),n;do n=t.next(),n.value!==void 0&&e.push(n.value);while(!n.done);return e}toSet(){return new Set(this)}toMap(e,t){let n=this.map(i=>[e?e(i):i,t?t(i):i]);return new Map(n)}toString(){return this.join()}concat(e){let t=e[Symbol.iterator]();return new En(()=>({first:this.startFn(),firstDone:!1}),n=>{let i;if(!n.firstDone){do if(i=this.nextFn(n.first),!i.done)return i;while(!i.done);n.firstDone=!0}do if(i=t.next(),!i.done)return i;while(!i.done);return nr.DONE_RESULT})}join(e=","){let t=this.iterator(),n="",i,a=!1;do i=t.next(),i.done||(a&&(n+=e),n+=Sfe(i.value)),a=!0;while(!i.done);return n}indexOf(e,t=0){let n=this.iterator(),i=0,a=n.next();for(;!a.done;){if(i>=t&&a.value===e)return i;a=n.next(),i++}return-1}every(e){let t=this.iterator(),n=t.next();for(;!n.done;){if(!e(n.value))return!1;n=t.next()}return!0}some(e){let t=this.iterator(),n=t.next();for(;!n.done;){if(e(n.value))return!0;n=t.next()}return!1}forEach(e){let t=this.iterator(),n=0,i=t.next();for(;!i.done;)e(i.value,n),i=t.next(),n++}map(e){return new En(this.startFn,t=>{let{done:n,value:i}=this.nextFn(t);return n?nr.DONE_RESULT:{done:!1,value:e(i)}})}filter(e){return new En(this.startFn,t=>{let n;do if(n=this.nextFn(t),!n.done&&e(n.value))return n;while(!n.done);return nr.DONE_RESULT})}nonNullable(){return this.filter(e=>e!=null)}reduce(e,t){let n=this.iterator(),i=t,a=n.next();for(;!a.done;)i===void 0?i=a.value:i=e(i,a.value),a=n.next();return i}reduceRight(e,t){return this.recursiveReduce(this.iterator(),e,t)}recursiveReduce(e,t,n){let i=e.next();if(i.done)return n;let a=this.recursiveReduce(e,t,n);return a===void 0?i.value:t(a,i.value)}find(e){let t=this.iterator(),n=t.next();for(;!n.done;){if(e(n.value))return n.value;n=t.next()}}findIndex(e){let t=this.iterator(),n=0,i=t.next();for(;!i.done;){if(e(i.value))return n;i=t.next(),n++}return-1}includes(e){let t=this.iterator(),n=t.next();for(;!n.done;){if(n.value===e)return!0;n=t.next()}return!1}flatMap(e){return new En(()=>({this:this.startFn()}),t=>{do{if(t.iterator){let a=t.iterator.next();if(a.done)t.iterator=void 0;else return a}let{done:n,value:i}=this.nextFn(t.this);if(!n){let a=e(i);if(YT(a))t.iterator=a[Symbol.iterator]();else return{done:!1,value:a}}}while(t.iterator);return nr.DONE_RESULT})}flat(e){if(e===void 0&&(e=1),e<=0)return this;let t=e>1?this.flat(e-1):this;return new En(()=>({this:t.startFn()}),n=>{do{if(n.iterator){let s=n.iterator.next();if(s.done)n.iterator=void 0;else return s}let{done:i,value:a}=t.nextFn(n.this);if(!i)if(YT(a))n.iterator=a[Symbol.iterator]();else return{done:!1,value:a}}while(n.iterator);return nr.DONE_RESULT})}head(){let t=this.iterator().next();if(!t.done)return t.value}tail(e=1){return new En(()=>{let t=this.startFn();for(let n=0;n<e;n++)if(this.nextFn(t).done)return t;return t},this.nextFn)}limit(e){return new En(()=>({size:0,state:this.startFn()}),t=>(t.size++,t.size>e?nr.DONE_RESULT:this.nextFn(t.state)))}distinct(e){let t=new Set;return this.filter(n=>{let i=e?e(n):n;return t.has(i)?!1:(t.add(i),!0)})}exclude(e,t){let n=new Set;for(let i of e){let a=t?t(i):i;n.add(a)}return this.filter(i=>{let a=t?t(i):i;return!n.has(a)})}};nr.StreamImpl=En;function Sfe(r){return typeof r=="string"?r:typeof r>"u"?"undefined":typeof r.toString=="function"?r.toString():Object.prototype.toString.call(r)}function YT(r){return!!r&&typeof r[Symbol.iterator]=="function"}nr.EMPTY_STREAM=new En(()=>{},()=>nr.DONE_RESULT);nr.DONE_RESULT=Object.freeze({done:!0,value:void 0});function Mfe(...r){if(r.length===1){let e=r[0];if(e instanceof En)return e;if(YT(e))return new En(()=>e[Symbol.iterator](),t=>t.next());if(typeof e.length=="number")return new En(()=>({index:0}),t=>t.index<e.length?{done:!1,value:e[t.index++]}:nr.DONE_RESULT)}return r.length>1?new En(()=>({collIndex:0,arrIndex:0}),e=>{do{if(e.iterator){let t=e.iterator.next();if(!t.done)return t;e.iterator=void 0}if(e.array){if(e.arrIndex<e.array.length)return{done:!1,value:e.array[e.arrIndex++]};e.array=void 0,e.arrIndex=0}if(e.collIndex<r.length){let t=r[e.collIndex++];YT(t)?e.iterator=t[Symbol.iterator]():t&&typeof t.length=="number"&&(e.array=t)}}while(e.iterator||e.array||e.collIndex<r.length);return nr.DONE_RESULT}):nr.EMPTY_STREAM}nr.stream=Mfe;var wM=class extends En{constructor(e,t,n){super(()=>({iterators:n?.includeRoot?[[e][Symbol.iterator]()]:[t(e)[Symbol.iterator]()],pruned:!1}),i=>{for(i.pruned&&(i.iterators.pop(),i.pruned=!1);i.iterators.length>0;){let s=i.iterators[i.iterators.length-1].next();if(s.done)i.iterators.pop();else return i.iterators.push(t(s.value)[Symbol.iterator]()),s}return nr.DONE_RESULT})}iterator(){let e={state:this.startFn(),next:()=>this.nextFn(e.state),prune:()=>{e.state.pruned=!0},[Symbol.iterator]:()=>e};return e}};nr.TreeStreamImpl=wM;var Pfe;(function(r){function e(a){return a.reduce((s,o)=>s+o,0)}r.sum=e;function t(a){return a.reduce((s,o)=>s*o,0)}r.product=t;function n(a){return a.reduce((s,o)=>Math.min(s,o))}r.min=n;function i(a){return a.reduce((s,o)=>Math.max(s,o))}r.max=i})(Pfe=nr.Reduction||(nr.Reduction={}))});var Ut=p(Qe=>{"use strict";Object.defineProperty(Qe,"__esModule",{value:!0});Qe.getInteriorNodes=Qe.getStartlineNode=Qe.getNextNode=Qe.getPreviousNode=Qe.findLeafNodeAtOffset=Qe.isCommentNode=Qe.findCommentNode=Qe.findDeclarationNodeAtOffset=Qe.DefaultNameRegexp=Qe.inRange=Qe.compareRange=Qe.RangeComparison=Qe.toDocumentSegment=Qe.tokenToRange=Qe.isCstChildNode=Qe.flattenCst=Qe.streamCst=void 0;var gy=Un(),Efe=vn();function t3(r){return new Efe.TreeStreamImpl(r,e=>(0,gy.isCompositeCstNode)(e)?e.children:[],{includeRoot:!0})}Qe.streamCst=t3;function Ofe(r){return t3(r).filter(gy.isLeafCstNode)}Qe.flattenCst=Ofe;function kfe(r,e){for(;r.parent;)if(r=r.parent,r===e)return!0;return!1}Qe.isCstChildNode=kfe;function Ife(r){return{start:{character:r.startColumn-1,line:r.startLine-1},end:{character:r.endColumn,line:r.endLine-1}}}Qe.tokenToRange=Ife;function Ffe(r){if(!r)return;let{offset:e,end:t,range:n}=r;return{range:n,offset:e,end:t,length:t-e}}Qe.toDocumentSegment=Ffe;var Zc;(function(r){r[r.Before=0]="Before",r[r.After=1]="After",r[r.OverlapFront=2]="OverlapFront",r[r.OverlapBack=3]="OverlapBack",r[r.Inside=4]="Inside"})(Zc=Qe.RangeComparison||(Qe.RangeComparison={}));function r3(r,e){if(r.end.line<e.start.line||r.end.line===e.start.line&&r.end.character<r.start.character)return Zc.Before;if(r.start.line>e.end.line||r.start.line===e.end.line&&r.start.character>e.end.character)return Zc.After;let t=r.start.line>e.start.line||r.start.line===e.start.line&&r.start.character>=e.start.character,n=r.end.line<e.end.line||r.end.line===e.end.line&&r.end.character<=e.end.character;return t&&n?Zc.Inside:t?Zc.OverlapBack:Zc.OverlapFront}Qe.compareRange=r3;function Nfe(r,e){return r3(r,e)>Zc.After}Qe.inRange=Nfe;Qe.DefaultNameRegexp=/^[\w\p{L}]$/u;function qfe(r,e,t=Qe.DefaultNameRegexp){if(r){if(e>0){let n=e-r.offset,i=r.text.charAt(n);t.test(i)||e--}return XT(r,e)}}Qe.findDeclarationNodeAtOffset=qfe;function xfe(r,e){if(r){let t=n3(r,!0);if(t&&DM(t,e))return t;if((0,gy.isRootCstNode)(r)){let n=r.children.findIndex(i=>!i.hidden);for(let i=n-1;i>=0;i--){let a=r.children[i];if(DM(a,e))return a}}}}Qe.findCommentNode=xfe;function DM(r,e){return(0,gy.isLeafCstNode)(r)&&e.includes(r.tokenType.name)}Qe.isCommentNode=DM;function XT(r,e){if((0,gy.isLeafCstNode)(r))return r;if((0,gy.isCompositeCstNode)(r)){let t=0,n=r.children.length-1;for(;t<n;){let i=Math.floor((t+n)/2),a=r.children[i];if(a.offset>e)n=i-1;else if(a.end<=e)t=i+1;else return XT(a,e)}if(t===n)return XT(r.children[t],e)}}Qe.findLeafNodeAtOffset=XT;function n3(r,e=!0){for(;r.parent;){let t=r.parent,n=t.children.indexOf(r);for(;n>0;){n--;let i=t.children[n];if(e||!i.hidden)return i}r=t}}Qe.getPreviousNode=n3;function Lfe(r,e=!0){for(;r.parent;){let t=r.parent,n=t.children.indexOf(r),i=t.children.length-1;for(;n<i;){n++;let a=t.children[n];if(e||!a.hidden)return a}r=t}}Qe.getNextNode=Lfe;function jfe(r){if(r.range.start.character===0)return r;let e=r.range.start.line,t=r,n;for(;r.parent;){let i=r.parent,a=n??i.children.indexOf(r);if(a===0?(r=i,n=void 0):(n=a-1,r=i.children[n]),r.range.start.line!==e)break;t=r}return t}Qe.getStartlineNode=jfe;function Ufe(r,e){let t=Bfe(r,e);return t?t.parent.children.slice(t.a+1,t.b):[]}Qe.getInteriorNodes=Ufe;function Bfe(r,e){let t=e3(r),n=e3(e),i;for(let a=0;a<t.length&&a<n.length;a++){let s=t[a],o=n[a];if(s.parent===o.parent)i={parent:s.parent,a:s.index,b:o.index};else break}return i}function e3(r){let e=[];for(;r.parent;){let t=r.parent,n=t.children.indexOf(r);e.push({parent:t,index:n}),r=t}return e.reverse()}});var _n=p((pv,SM)=>{(function(r,e){if(typeof pv=="object"&&typeof SM=="object")SM.exports=e();else if(typeof define=="function"&&define.amd)define([],e);else{var t=e();for(var n in t)(typeof pv=="object"?pv:r)[n]=t[n]}})(pv,()=>(()=>{"use strict";var r={470:i=>{function a(u){if(typeof u!="string")throw new TypeError("Path must be a string. Received "+JSON.stringify(u))}function s(u,c){for(var f,d="",m=0,h=-1,y=0,_=0;_<=u.length;++_){if(_<u.length)f=u.charCodeAt(_);else{if(f===47)break;f=47}if(f===47){if(!(h===_-1||y===1))if(h!==_-1&&y===2){if(d.length<2||m!==2||d.charCodeAt(d.length-1)!==46||d.charCodeAt(d.length-2)!==46){if(d.length>2){var w=d.lastIndexOf("/");if(w!==d.length-1){w===-1?(d="",m=0):m=(d=d.slice(0,w)).length-1-d.lastIndexOf("/"),h=_,y=0;continue}}else if(d.length===2||d.length===1){d="",m=0,h=_,y=0;continue}}c&&(d.length>0?d+="/..":d="..",m=2)}else d.length>0?d+="/"+u.slice(h+1,_):d=u.slice(h+1,_),m=_-h-1;h=_,y=0}else f===46&&y!==-1?++y:y=-1}return d}var o={resolve:function(){for(var u,c="",f=!1,d=arguments.length-1;d>=-1&&!f;d--){var m;d>=0?m=arguments[d]:(u===void 0&&(u=process.cwd()),m=u),a(m),m.length!==0&&(c=m+"/"+c,f=m.charCodeAt(0)===47)}return c=s(c,!f),f?c.length>0?"/"+c:"/":c.length>0?c:"."},normalize:function(u){if(a(u),u.length===0)return".";var c=u.charCodeAt(0)===47,f=u.charCodeAt(u.length-1)===47;return(u=s(u,!c)).length!==0||c||(u="."),u.length>0&&f&&(u+="/"),c?"/"+u:u},isAbsolute:function(u){return a(u),u.length>0&&u.charCodeAt(0)===47},join:function(){if(arguments.length===0)return".";for(var u,c=0;c<arguments.length;++c){var f=arguments[c];a(f),f.length>0&&(u===void 0?u=f:u+="/"+f)}return u===void 0?".":o.normalize(u)},relative:function(u,c){if(a(u),a(c),u===c||(u=o.resolve(u))===(c=o.resolve(c)))return"";for(var f=1;f<u.length&&u.charCodeAt(f)===47;++f);for(var d=u.length,m=d-f,h=1;h<c.length&&c.charCodeAt(h)===47;++h);for(var y=c.length-h,_=m<y?m:y,w=-1,S=0;S<=_;++S){if(S===_){if(y>_){if(c.charCodeAt(h+S)===47)return c.slice(h+S+1);if(S===0)return c.slice(h+S)}else m>_&&(u.charCodeAt(f+S)===47?w=S:S===0&&(w=0));break}var C=u.charCodeAt(f+S);if(C!==c.charCodeAt(h+S))break;C===47&&(w=S)}var b="";for(S=f+w+1;S<=d;++S)S!==d&&u.charCodeAt(S)!==47||(b.length===0?b+="..":b+="/..");return b.length>0?b+c.slice(h+w):(h+=w,c.charCodeAt(h)===47&&++h,c.slice(h))},_makeLong:function(u){return u},dirname:function(u){if(a(u),u.length===0)return".";for(var c=u.charCodeAt(0),f=c===47,d=-1,m=!0,h=u.length-1;h>=1;--h)if((c=u.charCodeAt(h))===47){if(!m){d=h;break}}else m=!1;return d===-1?f?"/":".":f&&d===1?"//":u.slice(0,d)},basename:function(u,c){if(c!==void 0&&typeof c!="string")throw new TypeError('"ext" argument must be a string');a(u);var f,d=0,m=-1,h=!0;if(c!==void 0&&c.length>0&&c.length<=u.length){if(c.length===u.length&&c===u)return"";var y=c.length-1,_=-1;for(f=u.length-1;f>=0;--f){var w=u.charCodeAt(f);if(w===47){if(!h){d=f+1;break}}else _===-1&&(h=!1,_=f+1),y>=0&&(w===c.charCodeAt(y)?--y==-1&&(m=f):(y=-1,m=_))}return d===m?m=_:m===-1&&(m=u.length),u.slice(d,m)}for(f=u.length-1;f>=0;--f)if(u.charCodeAt(f)===47){if(!h){d=f+1;break}}else m===-1&&(h=!1,m=f+1);return m===-1?"":u.slice(d,m)},extname:function(u){a(u);for(var c=-1,f=0,d=-1,m=!0,h=0,y=u.length-1;y>=0;--y){var _=u.charCodeAt(y);if(_!==47)d===-1&&(m=!1,d=y+1),_===46?c===-1?c=y:h!==1&&(h=1):c!==-1&&(h=-1);else if(!m){f=y+1;break}}return c===-1||d===-1||h===0||h===1&&c===d-1&&c===f+1?"":u.slice(c,d)},format:function(u){if(u===null||typeof u!="object")throw new TypeError('The "pathObject" argument must be of type Object. Received type '+typeof u);return function(c,f){var d=f.dir||f.root,m=f.base||(f.name||"")+(f.ext||"");return d?d===f.root?d+m:d+"/"+m:m}(0,u)},parse:function(u){a(u);var c={root:"",dir:"",base:"",ext:"",name:""};if(u.length===0)return c;var f,d=u.charCodeAt(0),m=d===47;m?(c.root="/",f=1):f=0;for(var h=-1,y=0,_=-1,w=!0,S=u.length-1,C=0;S>=f;--S)if((d=u.charCodeAt(S))!==47)_===-1&&(w=!1,_=S+1),d===46?h===-1?h=S:C!==1&&(C=1):h!==-1&&(C=-1);else if(!w){y=S+1;break}return h===-1||_===-1||C===0||C===1&&h===_-1&&h===y+1?_!==-1&&(c.base=c.name=y===0&&m?u.slice(1,_):u.slice(y,_)):(y===0&&m?(c.name=u.slice(1,h),c.base=u.slice(1,_)):(c.name=u.slice(y,h),c.base=u.slice(y,_)),c.ext=u.slice(h,_)),y>0?c.dir=u.slice(0,y-1):m&&(c.dir="/"),c},sep:"/",delimiter:":",win32:null,posix:null};o.posix=o,i.exports=o},674:(i,a)=>{if(Object.defineProperty(a,"__esModule",{value:!0}),a.isWindows=void 0,typeof process=="object")a.isWindows=process.platform==="win32";else if(typeof navigator=="object"){var s=navigator.userAgent;a.isWindows=s.indexOf("Windows")>=0}},796:function(i,a,s){var o,u,c=this&&this.__extends||(o=function(z,H){return o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(ne,me){ne.__proto__=me}||function(ne,me){for(var Ge in me)Object.prototype.hasOwnProperty.call(me,Ge)&&(ne[Ge]=me[Ge])},o(z,H)},function(z,H){if(typeof H!="function"&&H!==null)throw new TypeError("Class extends value "+String(H)+" is not a constructor or null");function ne(){this.constructor=z}o(z,H),z.prototype=H===null?Object.create(H):(ne.prototype=H.prototype,new ne)});Object.defineProperty(a,"__esModule",{value:!0}),a.uriToFsPath=a.URI=void 0;var f=s(674),d=/^\w[\w\d+.-]*$/,m=/^\//,h=/^\/\//;function y(z,H){if(!z.scheme&&H)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'.concat(z.authority,'", path: "').concat(z.path,'", query: "').concat(z.query,'", fragment: "').concat(z.fragment,'"}'));if(z.scheme&&!d.test(z.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(z.path){if(z.authority){if(!m.test(z.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(h.test(z.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}}var _="",w="/",S=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,C=function(){function z(H,ne,me,Ge,Ke,Se){Se===void 0&&(Se=!1),typeof H=="object"?(this.scheme=H.scheme||_,this.authority=H.authority||_,this.path=H.path||_,this.query=H.query||_,this.fragment=H.fragment||_):(this.scheme=function(Sr,fr){return Sr||fr?Sr:"file"}(H,Se),this.authority=ne||_,this.path=function(Sr,fr){switch(Sr){case"https":case"http":case"file":fr?fr[0]!==w&&(fr=w+fr):fr=w}return fr}(this.scheme,me||_),this.query=Ge||_,this.fragment=Ke||_,y(this,Se))}return z.isUri=function(H){return H instanceof z||!!H&&typeof H.authority=="string"&&typeof H.fragment=="string"&&typeof H.path=="string"&&typeof H.query=="string"&&typeof H.scheme=="string"&&typeof H.fsPath=="string"&&typeof H.with=="function"&&typeof H.toString=="function"},Object.defineProperty(z.prototype,"fsPath",{get:function(){return Je(this,!1)},enumerable:!1,configurable:!0}),z.prototype.with=function(H){if(!H)return this;var ne=H.scheme,me=H.authority,Ge=H.path,Ke=H.query,Se=H.fragment;return ne===void 0?ne=this.scheme:ne===null&&(ne=_),me===void 0?me=this.authority:me===null&&(me=_),Ge===void 0?Ge=this.path:Ge===null&&(Ge=_),Ke===void 0?Ke=this.query:Ke===null&&(Ke=_),Se===void 0?Se=this.fragment:Se===null&&(Se=_),ne===this.scheme&&me===this.authority&&Ge===this.path&&Ke===this.query&&Se===this.fragment?this:new I(ne,me,Ge,Ke,Se)},z.parse=function(H,ne){ne===void 0&&(ne=!1);var me=S.exec(H);return me?new I(me[2]||_,tt(me[4]||_),tt(me[5]||_),tt(me[7]||_),tt(me[9]||_),ne):new I(_,_,_,_,_)},z.file=function(H){var ne=_;if(f.isWindows&&(H=H.replace(/\\/g,w)),H[0]===w&&H[1]===w){var me=H.indexOf(w,2);me===-1?(ne=H.substring(2),H=w):(ne=H.substring(2,me),H=H.substring(me)||w)}return new I("file",ne,H,_,_)},z.from=function(H){var ne=new I(H.scheme,H.authority,H.path,H.query,H.fragment);return y(ne,!0),ne},z.prototype.toString=function(H){return H===void 0&&(H=!1),Ye(this,H)},z.prototype.toJSON=function(){return this},z.revive=function(H){if(H){if(H instanceof z)return H;var ne=new I(H);return ne._formatted=H.external,ne._fsPath=H._sep===b?H.fsPath:null,ne}return H},z}();a.URI=C;var b=f.isWindows?1:void 0,I=function(z){function H(){var ne=z!==null&&z.apply(this,arguments)||this;return ne._formatted=null,ne._fsPath=null,ne}return c(H,z),Object.defineProperty(H.prototype,"fsPath",{get:function(){return this._fsPath||(this._fsPath=Je(this,!1)),this._fsPath},enumerable:!1,configurable:!0}),H.prototype.toString=function(ne){return ne===void 0&&(ne=!1),ne?Ye(this,!0):(this._formatted||(this._formatted=Ye(this,!1)),this._formatted)},H.prototype.toJSON=function(){var ne={$mid:1};return this._fsPath&&(ne.fsPath=this._fsPath,ne._sep=b),this._formatted&&(ne.external=this._formatted),this.path&&(ne.path=this.path),this.scheme&&(ne.scheme=this.scheme),this.authority&&(ne.authority=this.authority),this.query&&(ne.query=this.query),this.fragment&&(ne.fragment=this.fragment),ne},H}(C),L=((u={})[58]="%3A",u[47]="%2F",u[63]="%3F",u[35]="%23",u[91]="%5B",u[93]="%5D",u[64]="%40",u[33]="%21",u[36]="%24",u[38]="%26",u[39]="%27",u[40]="%28",u[41]="%29",u[42]="%2A",u[43]="%2B",u[44]="%2C",u[59]="%3B",u[61]="%3D",u[32]="%20",u);function W(z,H,ne){for(var me=void 0,Ge=-1,Ke=0;Ke<z.length;Ke++){var Se=z.charCodeAt(Ke);if(Se>=97&&Se<=122||Se>=65&&Se<=90||Se>=48&&Se<=57||Se===45||Se===46||Se===95||Se===126||H&&Se===47||ne&&Se===91||ne&&Se===93||ne&&Se===58)Ge!==-1&&(me+=encodeURIComponent(z.substring(Ge,Ke)),Ge=-1),me!==void 0&&(me+=z.charAt(Ke));else{me===void 0&&(me=z.substr(0,Ke));var Sr=L[Se];Sr!==void 0?(Ge!==-1&&(me+=encodeURIComponent(z.substring(Ge,Ke)),Ge=-1),me+=Sr):Ge===-1&&(Ge=Ke)}}return Ge!==-1&&(me+=encodeURIComponent(z.substring(Ge))),me!==void 0?me:z}function _e(z){for(var H=void 0,ne=0;ne<z.length;ne++){var me=z.charCodeAt(ne);me===35||me===63?(H===void 0&&(H=z.substr(0,ne)),H+=L[me]):H!==void 0&&(H+=z[ne])}return H!==void 0?H:z}function Je(z,H){var ne;return ne=z.authority&&z.path.length>1&&z.scheme==="file"?"//".concat(z.authority).concat(z.path):z.path.charCodeAt(0)===47&&(z.path.charCodeAt(1)>=65&&z.path.charCodeAt(1)<=90||z.path.charCodeAt(1)>=97&&z.path.charCodeAt(1)<=122)&&z.path.charCodeAt(2)===58?H?z.path.substr(1):z.path[1].toLowerCase()+z.path.substr(2):z.path,f.isWindows&&(ne=ne.replace(/\//g,"\\")),ne}function Ye(z,H){var ne=H?_e:W,me="",Ge=z.scheme,Ke=z.authority,Se=z.path,Sr=z.query,fr=z.fragment;if(Ge&&(me+=Ge,me+=":"),(Ke||Ge==="file")&&(me+=w,me+=w),Ke){var un=Ke.indexOf("@");if(un!==-1){var Wa=Ke.substr(0,un);Ke=Ke.substr(un+1),(un=Wa.lastIndexOf(":"))===-1?me+=ne(Wa,!1,!1):(me+=ne(Wa.substr(0,un),!1,!1),me+=":",me+=ne(Wa.substr(un+1),!1,!0)),me+="@"}(un=(Ke=Ke.toLowerCase()).lastIndexOf(":"))===-1?me+=ne(Ke,!1,!0):(me+=ne(Ke.substr(0,un),!1,!0),me+=Ke.substr(un))}if(Se){if(Se.length>=3&&Se.charCodeAt(0)===47&&Se.charCodeAt(2)===58)(Gi=Se.charCodeAt(1))>=65&&Gi<=90&&(Se="/".concat(String.fromCharCode(Gi+32),":").concat(Se.substr(3)));else if(Se.length>=2&&Se.charCodeAt(1)===58){var Gi;(Gi=Se.charCodeAt(0))>=65&&Gi<=90&&(Se="".concat(String.fromCharCode(Gi+32),":").concat(Se.substr(2)))}me+=ne(Se,!0,!1)}return Sr&&(me+="?",me+=ne(Sr,!1,!1)),fr&&(me+="#",me+=H?fr:W(fr,!1,!1)),me}function or(z){try{return decodeURIComponent(z)}catch{return z.length>3?z.substr(0,3)+or(z.substr(3)):z}}a.uriToFsPath=Je;var he=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function tt(z){return z.match(he)?z.replace(he,function(H){return or(H)}):z}},679:function(i,a,s){var o=this&&this.__spreadArray||function(m,h,y){if(y||arguments.length===2)for(var _,w=0,S=h.length;w<S;w++)!_&&w in h||(_||(_=Array.prototype.slice.call(h,0,w)),_[w]=h[w]);return m.concat(_||Array.prototype.slice.call(h))};Object.defineProperty(a,"__esModule",{value:!0}),a.Utils=void 0;var u,c=s(470),f=c.posix||c,d="/";(u=a.Utils||(a.Utils={})).joinPath=function(m){for(var h=[],y=1;y<arguments.length;y++)h[y-1]=arguments[y];return m.with({path:f.join.apply(f,o([m.path],h,!1))})},u.resolvePath=function(m){for(var h=[],y=1;y<arguments.length;y++)h[y-1]=arguments[y];var _=m.path,w=!1;_[0]!==d&&(_=d+_,w=!0);var S=f.resolve.apply(f,o([_],h,!1));return w&&S[0]===d&&!m.authority&&(S=S.substring(1)),m.with({path:S})},u.dirname=function(m){if(m.path.length===0||m.path===d)return m;var h=f.dirname(m.path);return h.length===1&&h.charCodeAt(0)===46&&(h=""),m.with({path:h})},u.basename=function(m){return f.basename(m.path)},u.extname=function(m){return f.extname(m.path)}}},e={};function t(i){var a=e[i];if(a!==void 0)return a.exports;var s=e[i]={exports:{}};return r[i].call(s.exports,s,s.exports,t),s.exports}var n={};return(()=>{var i=n;Object.defineProperty(i,"__esModule",{value:!0}),i.Utils=i.URI=void 0;var a=t(796);Object.defineProperty(i,"URI",{enumerable:!0,get:function(){return a.URI}});var s=t(679);Object.defineProperty(i,"Utils",{enumerable:!0,get:function(){return s.Utils}})})(),n})())});var mv=p(vy=>{"use strict";Object.defineProperty(vy,"__esModule",{value:!0});vy.eagerLoad=vy.inject=void 0;function Gfe(r,e,t,n){let i=[r,e,t,n].reduce(l3,{});return o3(i)}vy.inject=Gfe;var MM=Symbol("isProxy");function s3(r){if(r&&r[MM])for(let e of Object.values(r))s3(e);return r}vy.eagerLoad=s3;function o3(r,e){let t=new Proxy({},{deleteProperty:()=>!1,get:(n,i)=>a3(n,i,r,e||t),getOwnPropertyDescriptor:(n,i)=>(a3(n,i,r,e||t),Object.getOwnPropertyDescriptor(n,i)),has:(n,i)=>i in r,ownKeys:()=>[...Reflect.ownKeys(r),MM]});return t[MM]=!0,t}var i3=Symbol();function a3(r,e,t,n){if(e in r){if(r[e]instanceof Error)throw new Error("Construction failure. Please make sure that your dependencies are constructable.",{cause:r[e]});if(r[e]===i3)throw new Error('Cycle detected. Please make "'+String(e)+'" lazy. See https://langium.org/docs/di/cyclic-dependencies');return r[e]}else if(e in t){let i=t[e];r[e]=i3;try{r[e]=typeof i=="function"?i(n):o3(i,n)}catch(a){throw r[e]=a instanceof Error?a:void 0,a}return r[e]}else return}function l3(r,e){if(e){for(let[t,n]of Object.entries(e))if(n!==void 0){let i=r[t];i!==null&&n!==null&&typeof i=="object"&&typeof n=="object"?r[t]=l3(i,n):r[t]=n}}return r}});var us=p(JT=>{"use strict";Object.defineProperty(JT,"__esModule",{value:!0});JT.MultiMap=void 0;var _y=vn(),PM=class{constructor(e){if(this.map=new Map,e)for(let[t,n]of e)this.add(t,n)}get size(){return _y.Reduction.sum((0,_y.stream)(this.map.values()).map(e=>e.length))}clear(){this.map.clear()}delete(e,t){if(t===void 0)return this.map.delete(e);{let n=this.map.get(e);if(n){let i=n.indexOf(t);if(i>=0)return n.length===1?this.map.delete(e):n.splice(i,1),!0}return!1}}get(e){var t;return(t=this.map.get(e))!==null&&t!==void 0?t:[]}has(e,t){if(t===void 0)return this.map.has(e);{let n=this.map.get(e);return n?n.indexOf(t)>=0:!1}}add(e,t){return this.map.has(e)?this.map.get(e).push(t):this.map.set(e,[t]),this}addAll(e,t){return this.map.has(e)?this.map.get(e).push(...t):this.map.set(e,Array.from(t)),this}forEach(e){this.map.forEach((t,n)=>t.forEach(i=>e(i,n,this)))}[Symbol.iterator](){return this.entries().iterator()}entries(){return(0,_y.stream)(this.map.entries()).flatMap(([e,t])=>t.map(n=>[e,n]))}keys(){return(0,_y.stream)(this.map.keys())}values(){return(0,_y.stream)(this.map.values()).flat()}entriesGroupedByKey(){return(0,_y.stream)(this.map.entries())}};JT.MultiMap=PM});var yt=p(T=>{"use strict";Object.defineProperty(T,"__esModule",{value:!0});T.isTypeAttribute=T.TypeAttribute=T.isType=T.Type=T.isTerminalRule=T.TerminalRule=T.isSimpleType=T.SimpleType=T.isReturnType=T.ReturnType=T.isReferenceType=T.ReferenceType=T.isParserRule=T.ParserRule=T.isParameterReference=T.ParameterReference=T.isParameter=T.Parameter=T.isNegation=T.Negation=T.isNamedArgument=T.NamedArgument=T.isLiteralCondition=T.LiteralCondition=T.isInterface=T.Interface=T.isInferredType=T.InferredType=T.isGrammarImport=T.GrammarImport=T.isGrammar=T.Grammar=T.isDisjunction=T.Disjunction=T.isConjunction=T.Conjunction=T.isArrayType=T.ArrayType=T.isAbstractElement=T.AbstractElement=T.isTypeDefinition=T.TypeDefinition=T.isPrimitiveType=T.isFeatureName=T.isCondition=T.Condition=T.isAbstractType=T.AbstractType=T.isAbstractRule=T.AbstractRule=void 0;T.reflection=T.LangiumGrammarAstReflection=T.isWildcard=T.Wildcard=T.isUntilToken=T.UntilToken=T.isUnorderedGroup=T.UnorderedGroup=T.isTerminalRuleCall=T.TerminalRuleCall=T.isTerminalGroup=T.TerminalGroup=T.isTerminalAlternatives=T.TerminalAlternatives=T.isRuleCall=T.RuleCall=T.isRegexToken=T.RegexToken=T.isNegatedToken=T.NegatedToken=T.isKeyword=T.Keyword=T.isGroup=T.Group=T.isCrossReference=T.CrossReference=T.isCharacterRange=T.CharacterRange=T.isAssignment=T.Assignment=T.isAlternatives=T.Alternatives=T.isAction=T.Action=T.isUnionType=T.UnionType=void 0;var Kfe=Un();T.AbstractRule="AbstractRule";function Hfe(r){return T.reflection.isInstance(r,T.AbstractRule)}T.isAbstractRule=Hfe;T.AbstractType="AbstractType";function Vfe(r){return T.reflection.isInstance(r,T.AbstractType)}T.isAbstractType=Vfe;T.Condition="Condition";function Wfe(r){return T.reflection.isInstance(r,T.Condition)}T.isCondition=Wfe;function zfe(r){return u3(r)||r==="current"||r==="entry"||r==="extends"||r==="false"||r==="fragment"||r==="grammar"||r==="hidden"||r==="import"||r==="interface"||r==="returns"||r==="terminal"||r==="true"||r==="type"||r==="infer"||r==="infers"||r==="with"||typeof r=="string"&&/\^?[_a-zA-Z][\w_]*/.test(r)}T.isFeatureName=zfe;function u3(r){return r==="string"||r==="number"||r==="boolean"||r==="Date"||r==="bigint"}T.isPrimitiveType=u3;T.TypeDefinition="TypeDefinition";function Yfe(r){return T.reflection.isInstance(r,T.TypeDefinition)}T.isTypeDefinition=Yfe;T.AbstractElement="AbstractElement";function Xfe(r){return T.reflection.isInstance(r,T.AbstractElement)}T.isAbstractElement=Xfe;T.ArrayType="ArrayType";function Jfe(r){return T.reflection.isInstance(r,T.ArrayType)}T.isArrayType=Jfe;T.Conjunction="Conjunction";function Qfe(r){return T.reflection.isInstance(r,T.Conjunction)}T.isConjunction=Qfe;T.Disjunction="Disjunction";function Zfe(r){return T.reflection.isInstance(r,T.Disjunction)}T.isDisjunction=Zfe;T.Grammar="Grammar";function ede(r){return T.reflection.isInstance(r,T.Grammar)}T.isGrammar=ede;T.GrammarImport="GrammarImport";function tde(r){return T.reflection.isInstance(r,T.GrammarImport)}T.isGrammarImport=tde;T.InferredType="InferredType";function rde(r){return T.reflection.isInstance(r,T.InferredType)}T.isInferredType=rde;T.Interface="Interface";function nde(r){return T.reflection.isInstance(r,T.Interface)}T.isInterface=nde;T.LiteralCondition="LiteralCondition";function ide(r){return T.reflection.isInstance(r,T.LiteralCondition)}T.isLiteralCondition=ide;T.NamedArgument="NamedArgument";function ade(r){return T.reflection.isInstance(r,T.NamedArgument)}T.isNamedArgument=ade;T.Negation="Negation";function sde(r){return T.reflection.isInstance(r,T.Negation)}T.isNegation=sde;T.Parameter="Parameter";function ode(r){return T.reflection.isInstance(r,T.Parameter)}T.isParameter=ode;T.ParameterReference="ParameterReference";function lde(r){return T.reflection.isInstance(r,T.ParameterReference)}T.isParameterReference=lde;T.ParserRule="ParserRule";function ude(r){return T.reflection.isInstance(r,T.ParserRule)}T.isParserRule=ude;T.ReferenceType="ReferenceType";function cde(r){return T.reflection.isInstance(r,T.ReferenceType)}T.isReferenceType=cde;T.ReturnType="ReturnType";function fde(r){return T.reflection.isInstance(r,T.ReturnType)}T.isReturnType=fde;T.SimpleType="SimpleType";function dde(r){return T.reflection.isInstance(r,T.SimpleType)}T.isSimpleType=dde;T.TerminalRule="TerminalRule";function pde(r){return T.reflection.isInstance(r,T.TerminalRule)}T.isTerminalRule=pde;T.Type="Type";function mde(r){return T.reflection.isInstance(r,T.Type)}T.isType=mde;T.TypeAttribute="TypeAttribute";function yde(r){return T.reflection.isInstance(r,T.TypeAttribute)}T.isTypeAttribute=yde;T.UnionType="UnionType";function hde(r){return T.reflection.isInstance(r,T.UnionType)}T.isUnionType=hde;T.Action="Action";function gde(r){return T.reflection.isInstance(r,T.Action)}T.isAction=gde;T.Alternatives="Alternatives";function vde(r){return T.reflection.isInstance(r,T.Alternatives)}T.isAlternatives=vde;T.Assignment="Assignment";function _de(r){return T.reflection.isInstance(r,T.Assignment)}T.isAssignment=_de;T.CharacterRange="CharacterRange";function $de(r){return T.reflection.isInstance(r,T.CharacterRange)}T.isCharacterRange=$de;T.CrossReference="CrossReference";function Tde(r){return T.reflection.isInstance(r,T.CrossReference)}T.isCrossReference=Tde;T.Group="Group";function Rde(r){return T.reflection.isInstance(r,T.Group)}T.isGroup=Rde;T.Keyword="Keyword";function bde(r){return T.reflection.isInstance(r,T.Keyword)}T.isKeyword=bde;T.NegatedToken="NegatedToken";function Cde(r){return T.reflection.isInstance(r,T.NegatedToken)}T.isNegatedToken=Cde;T.RegexToken="RegexToken";function Ade(r){return T.reflection.isInstance(r,T.RegexToken)}T.isRegexToken=Ade;T.RuleCall="RuleCall";function wde(r){return T.reflection.isInstance(r,T.RuleCall)}T.isRuleCall=wde;T.TerminalAlternatives="TerminalAlternatives";function Dde(r){return T.reflection.isInstance(r,T.TerminalAlternatives)}T.isTerminalAlternatives=Dde;T.TerminalGroup="TerminalGroup";function Sde(r){return T.reflection.isInstance(r,T.TerminalGroup)}T.isTerminalGroup=Sde;T.TerminalRuleCall="TerminalRuleCall";function Mde(r){return T.reflection.isInstance(r,T.TerminalRuleCall)}T.isTerminalRuleCall=Mde;T.UnorderedGroup="UnorderedGroup";function Pde(r){return T.reflection.isInstance(r,T.UnorderedGroup)}T.isUnorderedGroup=Pde;T.UntilToken="UntilToken";function Ede(r){return T.reflection.isInstance(r,T.UntilToken)}T.isUntilToken=Ede;T.Wildcard="Wildcard";function Ode(r){return T.reflection.isInstance(r,T.Wildcard)}T.isWildcard=Ode;var QT=class extends Kfe.AbstractAstReflection{getAllTypes(){return["AbstractElement","AbstractRule","AbstractType","Action","Alternatives","ArrayType","Assignment","CharacterRange","Condition","Conjunction","CrossReference","Disjunction","Grammar","GrammarImport","Group","InferredType","Interface","Keyword","LiteralCondition","NamedArgument","NegatedToken","Negation","Parameter","ParameterReference","ParserRule","ReferenceType","RegexToken","ReturnType","RuleCall","SimpleType","TerminalAlternatives","TerminalGroup","TerminalRule","TerminalRuleCall","Type","TypeAttribute","TypeDefinition","UnionType","UnorderedGroup","UntilToken","Wildcard"]}computeIsSubtype(e,t){switch(e){case T.Action:return this.isSubtype(T.AbstractElement,t)||this.isSubtype(T.AbstractType,t);case T.Alternatives:case T.Assignment:case T.CharacterRange:case T.CrossReference:case T.Group:case T.Keyword:case T.NegatedToken:case T.RegexToken:case T.RuleCall:case T.TerminalAlternatives:case T.TerminalGroup:case T.TerminalRuleCall:case T.UnorderedGroup:case T.UntilToken:case T.Wildcard:return this.isSubtype(T.AbstractElement,t);case T.ArrayType:case T.ReferenceType:case T.SimpleType:case T.UnionType:return this.isSubtype(T.TypeDefinition,t);case T.Conjunction:case T.Disjunction:case T.LiteralCondition:case T.Negation:case T.ParameterReference:return this.isSubtype(T.Condition,t);case T.Interface:case T.Type:return this.isSubtype(T.AbstractType,t);case T.ParserRule:return this.isSubtype(T.AbstractRule,t)||this.isSubtype(T.AbstractType,t);case T.TerminalRule:return this.isSubtype(T.AbstractRule,t);default:return!1}}getReferenceType(e){let t=`${e.container.$type}:${e.property}`;switch(t){case"Action:type":case"CrossReference:type":case"Interface:superTypes":case"ParserRule:returnType":case"SimpleType:typeRef":return T.AbstractType;case"Grammar:hiddenTokens":case"ParserRule:hiddenTokens":case"RuleCall:rule":return T.AbstractRule;case"Grammar:usedGrammars":return T.Grammar;case"NamedArgument:parameter":case"ParameterReference:parameter":return T.Parameter;case"TerminalRuleCall:rule":return T.TerminalRule;default:throw new Error(`${t} is not a valid reference id.`)}}getTypeMetaData(e){switch(e){case"Grammar":return{name:"Grammar",mandatory:[{name:"definesHiddenTokens",type:"boolean"},{name:"hiddenTokens",type:"array"},{name:"imports",type:"array"},{name:"interfaces",type:"array"},{name:"isDeclared",type:"boolean"},{name:"rules",type:"array"},{name:"types",type:"array"},{name:"usedGrammars",type:"array"}]};case"Interface":return{name:"Interface",mandatory:[{name:"attributes",type:"array"},{name:"superTypes",type:"array"}]};case"LiteralCondition":return{name:"LiteralCondition",mandatory:[{name:"true",type:"boolean"}]};case"NamedArgument":return{name:"NamedArgument",mandatory:[{name:"calledByName",type:"boolean"}]};case"ParserRule":return{name:"ParserRule",mandatory:[{name:"definesHiddenTokens",type:"boolean"},{name:"entry",type:"boolean"},{name:"fragment",type:"boolean"},{name:"hiddenTokens",type:"array"},{name:"parameters",type:"array"},{name:"wildcard",type:"boolean"}]};case"TerminalRule":return{name:"TerminalRule",mandatory:[{name:"fragment",type:"boolean"},{name:"hidden",type:"boolean"}]};case"TypeAttribute":return{name:"TypeAttribute",mandatory:[{name:"isOptional",type:"boolean"}]};case"UnionType":return{name:"UnionType",mandatory:[{name:"types",type:"array"}]};case"Alternatives":return{name:"Alternatives",mandatory:[{name:"elements",type:"array"}]};case"CrossReference":return{name:"CrossReference",mandatory:[{name:"deprecatedSyntax",type:"boolean"}]};case"Group":return{name:"Group",mandatory:[{name:"elements",type:"array"}]};case"RuleCall":return{name:"RuleCall",mandatory:[{name:"arguments",type:"array"}]};case"TerminalAlternatives":return{name:"TerminalAlternatives",mandatory:[{name:"elements",type:"array"}]};case"TerminalGroup":return{name:"TerminalGroup",mandatory:[{name:"elements",type:"array"}]};case"UnorderedGroup":return{name:"UnorderedGroup",mandatory:[{name:"elements",type:"array"}]};default:return{name:e,mandatory:[]}}}};T.LangiumGrammarAstReflection=QT;T.reflection=new QT});var bt=p(mr=>{"use strict";Object.defineProperty(mr,"__esModule",{value:!0});mr.copyAstNode=mr.findLocalReferences=mr.streamReferences=mr.streamAst=mr.streamAllContents=mr.streamContents=mr.findRootNode=mr.getDocument=mr.hasContainerOfType=mr.getContainerOfType=mr.linkContentToContainer=void 0;var to=Un(),bu=vn(),kde=Ut();function c3(r){for(let[e,t]of Object.entries(r))e.startsWith("$")||(Array.isArray(t)?t.forEach((n,i)=>{(0,to.isAstNode)(n)&&(n.$container=r,n.$containerProperty=e,n.$containerIndex=i)}):(0,to.isAstNode)(t)&&(t.$container=r,t.$containerProperty=e))}mr.linkContentToContainer=c3;function Ide(r,e){let t=r;for(;t;){if(e(t))return t;t=t.$container}}mr.getContainerOfType=Ide;function Fde(r,e){let t=r;for(;t;){if(e(t))return!0;t=t.$container}return!1}mr.hasContainerOfType=Fde;function f3(r){let t=d3(r).$document;if(!t)throw new Error("AST node has no document.");return t}mr.getDocument=f3;function d3(r){for(;r.$container;)r=r.$container;return r}mr.findRootNode=d3;function kM(r,e){if(!r)throw new Error("Node must be an AstNode.");let t=e?.range;return new bu.StreamImpl(()=>({keys:Object.keys(r),keyIndex:0,arrayIndex:0}),n=>{for(;n.keyIndex<n.keys.length;){let i=n.keys[n.keyIndex];if(!i.startsWith("$")){let a=r[i];if((0,to.isAstNode)(a)){if(n.keyIndex++,EM(a,t))return{done:!1,value:a}}else if(Array.isArray(a)){for(;n.arrayIndex<a.length;){let s=n.arrayIndex++,o=a[s];if((0,to.isAstNode)(o)&&EM(o,t))return{done:!1,value:o}}n.arrayIndex=0}}n.keyIndex++}return bu.DONE_RESULT})}mr.streamContents=kM;function Nde(r,e){if(!r)throw new Error("Root node must be an AstNode.");return new bu.TreeStreamImpl(r,t=>kM(t,e))}mr.streamAllContents=Nde;function p3(r,e){if(r){if(e?.range&&!EM(r,e.range))return new bu.TreeStreamImpl(r,()=>[])}else throw new Error("Root node must be an AstNode.");return new bu.TreeStreamImpl(r,t=>kM(t,e),{includeRoot:!0})}mr.streamAst=p3;function EM(r,e){var t;if(!e)return!0;let n=(t=r.$cstNode)===null||t===void 0?void 0:t.range;return n?(0,kde.inRange)(n,e):!1}function m3(r){return new bu.StreamImpl(()=>({keys:Object.keys(r),keyIndex:0,arrayIndex:0}),e=>{for(;e.keyIndex<e.keys.length;){let t=e.keys[e.keyIndex];if(!t.startsWith("$")){let n=r[t];if((0,to.isReference)(n))return e.keyIndex++,{done:!1,value:{reference:n,container:r,property:t}};if(Array.isArray(n)){for(;e.arrayIndex<n.length;){let i=e.arrayIndex++,a=n[i];if((0,to.isReference)(a))return{done:!1,value:{reference:a,container:r,property:t,index:i}}}e.arrayIndex=0}}e.keyIndex++}return bu.DONE_RESULT})}mr.streamReferences=m3;function qde(r,e=f3(r).parseResult.value){let t=[];return p3(e).forEach(n=>{m3(n).forEach(i=>{i.reference.ref===r&&t.push(i.reference)})}),(0,bu.stream)(t)}mr.findLocalReferences=qde;function OM(r,e){let t={$type:r.$type};for(let[n,i]of Object.entries(r))if(!n.startsWith("$"))if((0,to.isAstNode)(i))t[n]=OM(i,e);else if((0,to.isReference)(i))t[n]=e(t,n,i.$refNode,i.$refText);else if(Array.isArray(i)){let a=[];for(let s of i)(0,to.isAstNode)(s)?a.push(OM(s,e)):(0,to.isReference)(s)?a.push(e(t,n,s.$refNode,s.$refText)):a.push(s);t[n]=a}else t[n]=i;return c3(t),t}mr.copyAstNode=OM});var g3=p(ZT=>{"use strict";Object.defineProperty(ZT,"__esModule",{value:!0});ZT.getSourceRegion=void 0;var y3=bt(),xde=jr(),Lde=vn();function jde(r){var e,t;if(r){if("astNode"in r)return Gde(r);if(Array.isArray(r))return r.reduce(h3,void 0);{let n=r,i=Ude(n)?Bde((t=(e=n?.root)===null||e===void 0?void 0:e.element)!==null&&t!==void 0?t:n?.element):void 0;return $y(n,i)}}else return}ZT.getSourceRegion=jde;function Ude(r){return typeof r<"u"&&"element"in r&&"text"in r}function Bde(r){try{return(0,y3.getDocument)(r).uri.toString()}catch{return}}function Gde(r){var e,t;let{astNode:n,property:i,index:a}=r??{},s=(e=n?.$cstNode)!==null&&e!==void 0?e:n?.$textRegion;if(!(n===void 0||s===void 0)){if(i===void 0)return $y(s,IM(n));{let o=u=>a!==void 0&&a>-1&&Array.isArray(n[i])?a<u.length?u[a]:void 0:u.reduce(h3,void 0);if(!((t=s.assignments)===null||t===void 0)&&t[i]){let u=o(s.assignments[i]);return u&&$y(u,IM(n))}else if(n.$cstNode){let u=o((0,xde.findNodesForProperty)(n.$cstNode,i));return u&&$y(u,IM(n))}else return}}}function IM(r){var e,t,n,i;return r.$cstNode?(t=(e=(0,y3.getDocument)(r))===null||e===void 0?void 0:e.uri)===null||t===void 0?void 0:t.toString():r.$textRegion?r.$textRegion.documentURI||((i=(n=new Lde.TreeStreamImpl(r,a=>a.$container?[a.$container]:[]).find(a=>{var s;return(s=a.$textRegion)===null||s===void 0?void 0:s.documentURI}))===null||n===void 0?void 0:n.$textRegion)===null||i===void 0?void 0:i.documentURI):void 0}function $y(r,e){var t,n;let i={offset:r.offset,end:(t=r.end)!==null&&t!==void 0?t:r.offset+r.length,length:(n=r.length)!==null&&n!==void 0?n:r.end-r.offset};return r.range&&(i.range=r.range),e??(e=r.fileURI),e&&(i.fileURI=e),i}function h3(r,e){var t,n;if(r){if(!e)return r&&$y(r)}else return e&&$y(e);let i=(t=r.end)!==null&&t!==void 0?t:r.offset+r.length,a=(n=e.end)!==null&&n!==void 0?n:e.offset+e.length,s=Math.min(r.offset,e.offset),o=Math.max(i,a),u=o-s,c={offset:s,end:o,length:u};if(r.range&&e.range&&(c.range={start:e.range.start.line<r.range.start.line||e.range.start.line===r.range.start.line&&e.range.start.character<r.range.start.character?e.range.start:r.range.start,end:e.range.end.line>r.range.end.line||e.range.end.line===r.range.end.line&&e.range.end.character>r.range.end.character?e.range.end:r.range.end}),r.fileURI||e.fileURI){let f=r.fileURI,d=e.fileURI,m=f&&d&&f!==d?`<unmergable text regions of ${f}, ${d}>`:f??d;c.fileURI=m}return c}});var R3=p(eR=>{"use strict";Object.defineProperty(eR,"__esModule",{value:!0});eR.processGeneratorNode=void 0;var yv=ef(),Kde=g3(),FM=class{constructor(e){this.defaultIndentation="    ",this.pendingIndent=!0,this.currentIndents=[],this.recentNonImmediateIndents=[],this.traceData=[],this.lines=[[]],typeof e=="string"?this.defaultIndentation=e:typeof e=="number"&&(this.defaultIndentation="".padStart(e))}get content(){return this.lines.map(e=>e.join("")).join("")}get currentLineNumber(){return this.lines.length-1}get currentLineContent(){return this.lines[this.currentLineNumber].join("")}get currentPosition(){return{offset:this.content.length,line:this.currentLineNumber,character:this.currentLineContent.length}}append(e,t){if(e.length>0){let n=t&&this.currentPosition;this.lines[this.currentLineNumber].push(e),n&&this.indentPendingTraceRegions(n)}}indentPendingTraceRegions(e){for(let t=this.traceData.length-1;t>=0;t--){let n=this.traceData[t];n.targetStart&&n.targetStart.offset===e.offset&&(n.targetStart=this.currentPosition)}}increaseIndent(e){this.currentIndents.push(e),e.indentImmediately||this.recentNonImmediateIndents.push(e)}decreaseIndent(){this.currentIndents.pop()}get relevantIndents(){return this.currentIndents.filter(e=>!this.recentNonImmediateIndents.includes(e))}resetCurrentLine(){this.lines[this.currentLineNumber]=[]}addNewLine(){this.pendingIndent=!0,this.lines.push([]),this.recentNonImmediateIndents.length=0}pushTraceRegion(e){let t=Hde(e,this.currentPosition,n=>{var i,a;return(a=(i=this.traceData[this.traceData.length-1])===null||i===void 0?void 0:i.children)===null||a===void 0?void 0:a.push(n)});return this.traceData.push(t),t}popTraceRegion(e){let t=this.traceData.pop();return this.assertTrue(t===e,"Trace region mismatch!"),t}getParentTraceSourceFileURI(){var e;for(let t=this.traceData.length-1;t>-1;t--){let n=(e=this.traceData[t].sourceRegion)===null||e===void 0?void 0:e.fileURI;if(n)return n}}assertTrue(e,t){if(!e)throw new Error(t)}};function Hde(r,e,t){let n={sourceRegion:r,targetRegion:void 0,children:[],targetStart:e,complete:i=>{var a,s;return n.targetRegion={offset:n.targetStart.offset,end:i.offset,length:i.offset-n.targetStart.offset,range:{start:{line:n.targetStart.line,character:n.targetStart.character},end:{line:i.line,character:i.character}}},delete n.targetStart,((a=n.children)===null||a===void 0?void 0:a.length)===0&&delete n.children,!((s=n.targetRegion)===null||s===void 0)&&s.length&&t(n),delete n.complete,n}};return n}function Vde(r,e){let t=new FM(e),n=t.pushTraceRegion(void 0);v3(r,t),t.popTraceRegion(n),n.complete&&n.complete(t.currentPosition);let i=n.children&&n.children.length===1?n.children[0]:void 0,a=i?.targetRegion,s=n.targetRegion;return a&&i.sourceRegion&&a.offset===s.offset&&a.length===s.length?{text:t.content,trace:i}:{text:t.content,trace:n}}eR.processGeneratorNode=Vde;function v3(r,e){typeof r=="string"?Wde(r,e):r instanceof yv.IndentNode?zde(r,e):r instanceof yv.CompositeGeneratorNode?T3(r,e):r instanceof yv.NewLineNode&&Yde(r,e)}function _3(r,e){return typeof r=="string"?r.length!==0:r instanceof yv.CompositeGeneratorNode?r.contents.some(t=>_3(t,e)):r instanceof yv.NewLineNode?!(r.ifNotEmpty&&e.currentLineContent.length===0):!1}function Wde(r,e){r&&(e.pendingIndent&&$3(e,!1),e.append(r))}function $3(r,e){var t;let n="";for(let i of r.relevantIndents.filter(a=>a.indentEmptyLines||!e))n+=(t=i.indentation)!==null&&t!==void 0?t:r.defaultIndentation;r.append(n,!0),r.pendingIndent=!1}function T3(r,e){let t,n=(0,Kde.getSourceRegion)(r.tracedSource);n&&(t=e.pushTraceRegion(n));for(let i of r.contents)v3(i,e);if(t){e.popTraceRegion(t);let i=e.getParentTraceSourceFileURI();i&&n?.fileURI===i&&delete n.fileURI,t.complete&&t.complete(e.currentPosition)}}function zde(r,e){var t;if(_3(r,e)){r.indentImmediately&&!e.pendingIndent&&e.append((t=r.indentation)!==null&&t!==void 0?t:e.defaultIndentation,!0);try{e.increaseIndent(r),T3(r,e)}finally{e.decreaseIndent()}}}function Yde(r,e){r.ifNotEmpty&&!Xde(e.currentLineContent)?e.resetCurrentLine():(e.pendingIndent&&$3(e,!0),e.append(r.lineDelimiter),e.addNewLine())}function Xde(r){return r.trimStart()!==""}});var tR=p(Xr=>{"use strict";Object.defineProperty(Xr,"__esModule",{value:!0});Xr.normalizeEOL=Xr.findIndentation=Xr.NEWLINE_REGEXP=Xr.SNLE=Xr.expandToString=Xr.expandToStringWithNL=void 0;var hv=ef();function Jde(r,...e){return b3(r,...e)+hv.EOL}Xr.expandToStringWithNL=Jde;function b3(r,...e){let t=e.reduce((s,o,u)=>{var c;return s+(o===void 0?Xr.SNLE:Zde((0,hv.toString)(o),s))+((c=r[u+1])!==null&&c!==void 0?c:"")},r[0]).split(Xr.NEWLINE_REGEXP).filter(s=>s.trim()!==Xr.SNLE).map(s=>s.replace(Xr.SNLE,"").trimRight());t=t.length>1&&t[0].trim().length===0?t.slice(1):t,t=t.length!==0&&t[t.length-1].trimRight().length===0?t.slice(0,t.length-1):t;let a=C3(t);return t.map(s=>s.slice(a).trimRight()).join(hv.EOL)}Xr.expandToString=b3;Xr.SNLE=Object.freeze("__\xABSKIP^NEW^LINE^IF^EMPTY\xBB__");Xr.NEWLINE_REGEXP=/\r?\n/g;var Qde=/\S|$/;function Zde(r,e){let t=Math.max(0,e.length-e.lastIndexOf(`
`)-1),n=" ".repeat(t);return r.replace(Xr.NEWLINE_REGEXP,hv.EOL+n)}function C3(r){let e=r.filter(n=>n.length>0).map(n=>n.search(Qde)),t=e.length===0?0:Math.min(...e);return Math.max(0,t)}Xr.findIndentation=C3;function epe(r){return r.replace(Xr.NEWLINE_REGEXP,hv.EOL)}Xr.normalizeEOL=epe});var xM=p(Cu=>{"use strict";Object.defineProperty(Cu,"__esModule",{value:!0});Cu.expandTracedToNodeIf=Cu.expandTracedToNode=Cu.expandToNode=void 0;var nR=ef(),qM=tR();function A3(r,...e){let t=rpe(r),n=npe(r,e,t);return ape(n)}Cu.expandToNode=A3;function w3(r,e,t){return(n,...i)=>(0,nR.traceToNode)(r,e,t)(A3(n,...i))}Cu.expandTracedToNode=w3;function tpe(r,e,t,n){return r?w3(typeof e=="function"?e():e,t,n):()=>{}}Cu.expandTracedToNodeIf=tpe;function rpe(r){let e=r.join("_").split(qM.NEWLINE_REGEXP),t=e.length>1&&e[0].trim().length===0,n=t&&e.length>1&&e[e.length-1].trim().length===0;if(e.length===1||e.length!==0&&e[0].trim().length!==0||e.length===2&&e[1].trim().length===0)return{indentation:0,omitFirstLine:t,omitLastLine:n,trimLastLine:e.length!==1&&e[e.length-1].trim().length===0};{let i=t?e.slice(1):e;i=n?i.slice(0,i.length-1):i,i=i.filter(s=>s.length!==0);let a=(0,qM.findIndentation)(i);return{indentation:a,omitFirstLine:t,omitLastLine:n&&(e[e.length-1].length<a||!e[e.length-1].startsWith(i[0].substring(0,a)))}}}function npe(r,e,{indentation:t,omitFirstLine:n,omitLastLine:i,trimLastLine:a}){let s=[];r.forEach((c,f)=>{s.push(...c.split(qM.NEWLINE_REGEXP).map((d,m)=>m===0||d.length<t?d:d.substring(t)).reduce(f===0?(d,m,h)=>h===0?n?[]:[m]:h===1&&d.length===0?[m]:d.concat(rR,m):(d,m,h)=>h===0?[m]:d.concat(rR,m),[]).filter(d=>!(typeof d=="string"&&d.length===0)).concat((0,nR.isGeneratorNode)(e[f])?e[f]:e[f]!==void 0?new nR.CompositeGeneratorNode(String(e[f])):f<e.length?D3:[]))});let o=s.length,u=o!==0?s[o-1]:void 0;return(i||a)&&typeof u=="string"&&u.trim().length===0?n&&o!==1&&s[o-2]===rR?s.slice(0,o-2):s.slice(0,o-1):s}var rR={isNewLine:!0},D3={isUndefinedSegment:!0},NM=r=>r===rR,ipe=r=>r===D3;function ape(r){return r.reduce((t,n,i)=>ipe(n)?t:NM(n)?{node:i===0||NM(r[i-1])||typeof r[i-1]=="string"?t.node.appendNewLine():t.node.appendNewLineIfNotEmpty()}:(()=>{var a;let s=(i===0||NM(r[i-1]))&&typeof n=="string"&&n.length!==0?"".padStart(n.length-n.trimLeft().length):"",o;return{node:t.indented?t.node:s.length!==0?t.node.indent({indentation:s,indentImmediately:!1,indentedChildren:u=>o=u.append(n)}):t.node.append(n),indented:o??((a=t.indented)===null||a===void 0?void 0:a.append(n))}})(),{node:new nR.CompositeGeneratorNode}).node}});var ef=p(It=>{"use strict";Object.defineProperty(It,"__esModule",{value:!0});It.NLEmpty=It.NL=It.NewLineNode=It.IndentNode=It.traceToNodeIf=It.traceToNode=It.CompositeGeneratorNode=It.toStringAndTrace=It.toString=It.isNewLineNode=It.isGeneratorNode=It.EOL=void 0;var spe=Un(),M3=R3(),S3=xM();It.EOL=typeof process>"u"?`
`:process.platform==="win32"?`\r
`:`
`;function P3(r){return r instanceof xl||r instanceof gv||r instanceof tf}It.isGeneratorNode=P3;function ope(r){return r instanceof tf}It.isNewLineNode=ope;function lpe(r,e){return P3(r)?(0,M3.processGeneratorNode)(r,e).text:String(r)}It.toString=lpe;function upe(r,e){return(0,M3.processGeneratorNode)(r,e)}It.toStringAndTrace=upe;var xl=class{constructor(...e){this.contents=[],this.append(...e)}isEmpty(){return this.contents.length===0}trace(e,t,n){if((0,spe.isAstNode)(e)){if(this.tracedSource={astNode:e,property:t,index:n},this.tracedSource.property===void 0&&this.tracedSource.index!==void 0&&this.tracedSource.index>-1)throw new Error("Generation support: 'property' argument must not be 'undefined' if a non-negative value is assigned to 'index' in 'CompositeGeneratorNode.trace(...)'.")}else this.tracedSource=e;return this}append(...e){for(let t of e)typeof t=="function"?t(this):t&&this.contents.push(t);return this}appendIf(e,...t){return e?this.append(...t):this}appendNewLine(){return this.append(It.NL)}appendNewLineIf(e){return e?this.append(It.NL):this}appendNewLineIfNotEmpty(){return this.append(It.NLEmpty)}appendNewLineIfNotEmptyIf(e){return e?this.appendNewLineIfNotEmpty():this}appendTemplate(e,...t){return this.append((0,S3.expandToNode)(e,...t))}appendTemplateIf(e){return e?(t,...n)=>this.appendTemplate(t,...n):()=>this}indent(e){let{indentedChildren:t,indentation:n,indentEmptyLines:i,indentImmediately:a}=Array.isArray(e)||typeof e=="function"?{indentedChildren:e}:typeof e=="object"?e:{},s=new gv(n,a,i);return this.contents.push(s),Array.isArray(t)?s.append(...t):t&&s.append(t),this}appendTraced(e,t,n){return i=>this.append(new xl().trace(e,t,n).append(i))}appendTracedIf(e,t,n,i){return e?this.appendTraced(typeof t=="function"?t():t,n,i):()=>this}appendTracedTemplate(e,t,n){return(i,...a)=>this.append((0,S3.expandTracedToNode)(e,t,n)(i,...a))}appendTracedTemplateIf(e,t,n,i){return e?this.appendTracedTemplate(typeof t=="function"?t():t,n,i):()=>this}};It.CompositeGeneratorNode=xl;function E3(r,e,t){return n=>n instanceof xl&&n.tracedSource===void 0?n.trace(r,e,t):new xl().trace(r,e,t).append(n)}It.traceToNode=E3;function cpe(r,e,t,n){return r?E3(typeof e=="function"?e():e,t,n):()=>{}}It.traceToNodeIf=cpe;var gv=class extends xl{constructor(e,t=!0,n=!1){super(),this.indentImmediately=!0,this.indentEmptyLines=!1,typeof e=="string"?this.indentation=e:typeof e=="number"&&(this.indentation="".padStart(e)),this.indentImmediately=t,this.indentEmptyLines=n}};It.IndentNode=gv;var tf=class{constructor(e,t=!1){this.ifNotEmpty=!1,this.lineDelimiter=e??It.EOL,this.ifNotEmpty=t}};It.NewLineNode=tf;It.NL=new tf;It.NLEmpty=new tf(void 0,!0)});var by=p(Ct=>{"use strict";Object.defineProperty(Ct,"__esModule",{value:!0});Ct.isMandatoryPropertyType=Ct.propertyTypeToString=Ct.isTypeAssignable=Ct.TypeResolutionError=Ct.InterfaceType=Ct.UnionType=Ct.isInterfaceType=Ct.isUnionType=Ct.isStringType=Ct.isPrimitiveType=Ct.isValueType=Ct.flattenPropertyUnion=Ct.isPropertyUnion=Ct.isArrayType=Ct.isReferenceType=void 0;var Bt=ef(),Ty=Cy();function vv(r){return"referenceType"in r}Ct.isReferenceType=vv;function _v(r){return"elementType"in r}Ct.isArrayType=_v;function Vi(r){return"types"in r}Ct.isPropertyUnion=Vi;function k3(r){if(Vi(r)){let e=[];for(let t of r.types)e.push(...k3(t));return e}else return[r]}Ct.flattenPropertyUnion=k3;function rf(r){return"value"in r}Ct.isValueType=rf;function ro(r){return"primitive"in r}Ct.isPrimitiveType=ro;function wu(r){return"string"in r}Ct.isStringType=wu;function Ry(r){return r&&"type"in r}Ct.isUnionType=Ry;function GM(r){return r&&"properties"in r}Ct.isInterfaceType=GM;var jM=class{constructor(e,t){var n;this.superTypes=new Set,this.subTypes=new Set,this.containerTypes=new Set,this.typeNames=new Set,this.name=e,this.declared=(n=t?.declared)!==null&&n!==void 0?n:!1,this.dataType=t?.dataType}toAstTypesString(e){let t=new Bt.CompositeGeneratorNode;return t.append(`export type ${this.name} = ${nf(this.type,"AstType")};`,Bt.NL),e&&(t.append(Bt.NL),F3(t,this.name)),this.dataType&&fpe(t,this),(0,Bt.toString)(t)}toDeclaredTypesString(e){let t=new Bt.CompositeGeneratorNode;return t.append(`type ${HM(this.name,e)} = ${nf(this.type,"DeclaredType")};`,Bt.NL),(0,Bt.toString)(t)}};Ct.UnionType=jM;var $v=class{get superProperties(){return this.getSuperProperties(new Set)}getSuperProperties(e){if(e.has(this.name))return[];e.add(this.name);let t=new Map;for(let n of this.properties)t.set(n.name,n);for(let n of this.interfaceSuperTypes){let i=n.getSuperProperties(e);for(let a of i)t.has(a.name)||t.set(a.name,a)}return Array.from(t.values())}get allProperties(){let e=new Map(this.superProperties.map(n=>[n.name,n]));for(let n of this.subTypes)this.getSubTypeProperties(n,e,new Set);return Array.from(e.values())}getSubTypeProperties(e,t,n){if(n.has(this.name))return;n.add(this.name);let i=GM(e)?e.properties:[];for(let a of i)t.has(a.name)||t.set(a.name,a);for(let a of e.subTypes)this.getSubTypeProperties(a,t,n)}get interfaceSuperTypes(){return Array.from(this.superTypes).filter(e=>e instanceof $v)}constructor(e,t,n){this.superTypes=new Set,this.subTypes=new Set,this.containerTypes=new Set,this.typeNames=new Set,this.declared=!1,this.abstract=!1,this.properties=[],this.name=e,this.declared=t,this.abstract=n}toAstTypesString(e){let t=new Bt.CompositeGeneratorNode,n=this.interfaceSuperTypes.map(a=>a.name),i=n.length>0?(0,Ty.distinctAndSorted)([...n]):["AstNode"];return t.append(`export interface ${this.name} extends ${i.join(", ")} {`,Bt.NL),t.indent(a=>{this.containerTypes.size>0&&a.append(`readonly $container: ${(0,Ty.distinctAndSorted)([...this.containerTypes].map(s=>s.name)).join(" | ")};`,Bt.NL),this.typeNames.size>0&&a.append(`readonly $type: ${(0,Ty.distinctAndSorted)([...this.typeNames]).map(s=>`'${s}'`).join(" | ")};`,Bt.NL),O3(a,this.properties,"AstType")}),t.append("}",Bt.NL),e&&(t.append(Bt.NL),F3(t,this.name)),(0,Bt.toString)(t)}toDeclaredTypesString(e){let t=new Bt.CompositeGeneratorNode,n=HM(this.name,e),i=(0,Ty.distinctAndSorted)(this.interfaceSuperTypes.map(a=>a.name)).join(", ");return t.append(`interface ${n}${i.length>0?` extends ${i}`:""} {`,Bt.NL),t.indent(a=>O3(a,this.properties,"DeclaredType",e)),t.append("}",Bt.NL),(0,Bt.toString)(t)}};Ct.InterfaceType=$v;var UM=class extends Error{constructor(e,t){super(e),this.name="TypeResolutionError",this.target=t}};Ct.TypeResolutionError=UM;function Au(r,e){return Vi(r)?r.types.every(t=>Au(t,e)):Vi(e)?e.types.some(t=>Au(r,t)):rf(e)&&Ry(e.value)?rf(r)&&Ry(r.value)&&e.value.name===r.value.name?!0:Au(r,e.value.type):vv(r)?vv(e)&&Au(r.referenceType,e.referenceType):_v(r)?_v(e)&&Au(r.elementType,e.elementType):rf(r)?Ry(r.value)?Au(r.value.type,e):rf(e)?Ry(e.value)?Au(r,e.value.type):I3(r.value,e.value,new Set):!1:ro(r)?ro(e)&&r.primitive===e.primitive:wu(r)?ro(e)&&e.primitive==="string"||wu(e)&&e.string===r.string:!1}Ct.isTypeAssignable=Au;function I3(r,e,t){if(t.has(r.name)||(t.add(r.name),r.name===e.name))return!0;for(let n of r.superTypes)if(GM(n)&&I3(n,e,t))return!0;return!1}function nf(r,e="AstType"){if(vv(r)){let t=nf(r.referenceType,e);return e==="AstType"?`Reference<${t}>`:`@${LM(r.referenceType,t)}`}else if(_v(r)){let t=nf(r.elementType,e);return e==="AstType"?`Array<${t}>`:`${LM(r.elementType,t)}[]`}else if(Vi(r)){let t=r.types.map(n=>LM(n,nf(n,e)));return(0,Ty.distinctAndSorted)(t).join(" | ")}else{if(rf(r))return r.value.name;if(ro(r))return r.primitive;if(wu(r)){let t=e==="AstType"?"'":'"';return`${t}${r.string}${t}`}}throw new Error("Invalid type")}Ct.propertyTypeToString=nf;function LM(r,e){return Vi(r)&&(e=`(${e})`),e}function O3(r,e,t,n=new Set){function i(a){let s=t==="AstType"?a.name:HM(a.name,n),o=a.optional&&!KM(a.type),u=nf(a.type,t);return`${s}${o?"?":""}: ${u}`}(0,Ty.distinctAndSorted)(e,(a,s)=>a.name.localeCompare(s.name)).forEach(a=>r.append(i(a),Bt.NL))}function KM(r){return _v(r)?!0:vv(r)?!1:Vi(r)?r.types.every(e=>KM(e)):ro(r)?r.primitive==="boolean":!1}Ct.isMandatoryPropertyType=KM;function F3(r,e){r.append(`export const ${e} = '${e}';`,Bt.NL),r.append(Bt.NL),r.append(`export function is${e}(item: unknown): item is ${e} {`,Bt.NL),r.indent(t=>t.append(`return reflection.isInstance(item, ${e});`,Bt.NL)),r.append("}",Bt.NL)}function fpe(r,e){switch(e.dataType){case"string":if(BM(e.type)){let t=Array.from(e.subTypes).map(a=>a.name),n=N3(e.type),i=q3(e.type);if(t.length===0&&n.length===0&&i.length===0)iR(r,e.name,`typeof item === '${e.dataType}'`);else{let a=dpe(t,n,i);iR(r,e.name,a)}}break;case"number":case"boolean":case"bigint":iR(r,e.name,`typeof item === '${e.dataType}'`);break;case"Date":iR(r,e.name,"item instanceof Date");break;default:return}}function BM(r){let e=!0;if(ro(r))return r.primitive==="string";if(wu(r))return!0;if(Vi(r)){for(let t of r.types)if(rf(t))if(Ry(t.value)){if(!BM(t.value.type))return!1}else return!1;else if(ro(t)){if(t.primitive!=="string"||!t.regex)return!1}else if(Vi(t))e=BM(t);else if(!wu(t))return!1}else return!1;return e}function dpe(r,e,t){let n=[...r.map(i=>`is${i}(item)`),...e.map(i=>`item === '${i}'`)];if(t.length>0){let i=t.map(a=>`/${a}/.test(item)`).join(" || ");n.push(`(typeof item === 'string' && (${i}))`)}return n.join(" || ")}function HM(r,e){return e.has(r)?`^${r}`:r}function N3(r){let e=[];if(wu(r))return[r.string];if(Vi(r))for(let t of r.types)wu(t)?e.push(t.string):Vi(t)&&e.push(...N3(t));return e}function q3(r){let e=[];if(ro(r)&&r.primitive==="string"&&r.regex&&e.push(r.regex),Vi(r))for(let t of r.types)ro(t)&&t.primitive==="string"&&t.regex?e.push(t.regex):Vi(t)&&e.push(...q3(t));return e}function iR(r,e,t){r.append(Bt.NL,`export function is${e}(item: unknown): item is ${e} {`,Bt.NL),r.indent(n=>n.append(`return ${t};`,Bt.NL)),r.append("}",Bt.NL)}});var Cy=p(ir=>{"use strict";Object.defineProperty(ir,"__esModule",{value:!0});ir.isAstType=ir.findReferenceTypes=ir.hasBooleanType=ir.hasArrayType=ir.sortInterfacesTopologically=ir.mergeTypesAndInterfaces=ir.mergeInterfaces=ir.collectSuperTypes=ir.collectTypeHierarchy=ir.collectChildrenTypes=ir.distinctAndSorted=ir.collectAllPlainProperties=void 0;var Tv=us(),Ll=yt(),no=by();function ppe(r){let e=new Tv.MultiMap;for(let t of r)e.addAll(t.name,t.properties);for(let t of r)for(let n of t.superTypes){let i=e.get(n);i&&e.addAll(t.name,i)}return e}ir.collectAllPlainProperties=ppe;function mpe(r,e){return Array.from(new Set(r)).sort(e)}ir.distinctAndSorted=mpe;function x3(r,e,t,n){let i=new Set;return i.add(r),e.findReferences(r,{}).forEach(s=>{let o=t.getOrCreateDocument(s.sourceUri),u=n.getAstNode(o.parseResult.value,s.sourcePath);(0,Ll.isInterface)(u)?(i.add(u),x3(u,e,t,n).forEach(f=>i.add(f))):u&&(0,Ll.isType)(u.$container)&&i.add(u.$container)}),i}ir.collectChildrenTypes=x3;function ype(r){let e=new Set(r),t=new Tv.MultiMap,n=new Tv.MultiMap;for(let s of e){for(let o of s.superTypes)e.has(o)&&(t.add(s.name,o.name),n.add(o.name,s.name));for(let o of s.subTypes)e.has(o)&&(t.add(o.name,s.name),n.add(s.name,o.name))}let i=new Tv.MultiMap,a=new Tv.MultiMap;for(let[s,o]of Array.from(t.entriesGroupedByKey()).sort(([u],[c])=>u.localeCompare(c)))i.addAll(s,Array.from(new Set(o)));for(let[s,o]of Array.from(n.entriesGroupedByKey()).sort(([u],[c])=>u.localeCompare(c)))a.addAll(s,Array.from(new Set(o)));return{superTypes:i,subTypes:a}}ir.collectTypeHierarchy=ype;function VM(r){let e=new Set;if((0,Ll.isInterface)(r))e.add(r),r.superTypes.forEach(t=>{if((0,Ll.isInterface)(t.ref)){e.add(t.ref);let n=VM(t.ref);for(let i of n)e.add(i)}});else if((0,Ll.isType)(r)){let t=L3(r.type);for(let n of t){let i=VM(n);for(let a of i)e.add(a)}}return e}ir.collectSuperTypes=VM;function L3(r){var e;if((0,Ll.isUnionType)(r))return r.types.flatMap(t=>L3(t));if((0,Ll.isSimpleType)(r)){let t=(e=r.typeRef)===null||e===void 0?void 0:e.ref;if((0,Ll.isType)(t)||(0,Ll.isInterface)(t))return[t]}return[]}function hpe(r,e){return r.interfaces.concat(e.interfaces)}ir.mergeInterfaces=hpe;function gpe(r){return r.interfaces.concat(r.unions)}ir.mergeTypesAndInterfaces=gpe;function vpe(r){let e=r.sort((i,a)=>i.name.localeCompare(a.name)).map(i=>({value:i,nodes:[]}));for(let i of e)i.nodes=e.filter(a=>i.value.superTypes.has(a.value.name));let t=[],n=e.filter(i=>i.nodes.length===0);for(;n.length>0;){let i=n.shift();t.includes(i)||(t.push(i),e.filter(a=>a.nodes.includes(i)).forEach(a=>n.push(a)))}return t.map(i=>i.value)}ir.sortInterfacesTopologically=vpe;function j3(r){return(0,no.isPropertyUnion)(r)?r.types.some(e=>j3(e)):!!(0,no.isArrayType)(r)}ir.hasArrayType=j3;function U3(r){return(0,no.isPropertyUnion)(r)?r.types.some(e=>U3(e)):(0,no.isPrimitiveType)(r)?r.primitive==="boolean":!1}ir.hasBooleanType=U3;function WM(r){if((0,no.isPropertyUnion)(r))return r.types.flatMap(e=>WM(e));if((0,no.isReferenceType)(r)){let e=r.referenceType;if((0,no.isValueType)(e))return[e.value.name]}else if((0,no.isArrayType)(r))return WM(r.elementType);return[]}ir.findReferenceTypes=WM;function zM(r){if((0,no.isPropertyUnion)(r))return r.types.every(zM);if((0,no.isValueType)(r)){let e=r.value;return"type"in e?zM(e.type):!0}return!1}ir.isAstType=zM});var wy=p(Ay=>{"use strict";Object.defineProperty(Ay,"__esModule",{value:!0});Ay.DefaultNameProvider=Ay.isNamed=void 0;var _pe=jr();function B3(r){return typeof r.name=="string"}Ay.isNamed=B3;var YM=class{getName(e){if(B3(e))return e.name}getNameNode(e){return(0,_pe.findNodeForProperty)(e.$cstNode,"name")}};Ay.DefaultNameProvider=YM});var Rv=p((G3,aR)=>{(function(r,e){typeof define=="function"&&define.amd?define([],e):typeof aR=="object"&&aR.exports?aR.exports=e():r.regexpToAst=e()})(typeof self<"u"?self:G3,function(){function r(){}r.prototype.saveState=function(){return{idx:this.idx,input:this.input,groupIdx:this.groupIdx}},r.prototype.restoreState=function(y){this.idx=y.idx,this.input=y.input,this.groupIdx=y.groupIdx},r.prototype.pattern=function(y){this.idx=0,this.input=y,this.groupIdx=0,this.consumeChar("/");var _=this.disjunction();this.consumeChar("/");for(var w={type:"Flags",loc:{begin:this.idx,end:y.length},global:!1,ignoreCase:!1,multiLine:!1,unicode:!1,sticky:!1};this.isRegExpFlag();)switch(this.popChar()){case"g":s(w,"global");break;case"i":s(w,"ignoreCase");break;case"m":s(w,"multiLine");break;case"u":s(w,"unicode");break;case"y":s(w,"sticky");break}if(this.idx!==this.input.length)throw Error("Redundant input: "+this.input.substring(this.idx));return{type:"Pattern",flags:w,value:_,loc:this.loc(0)}},r.prototype.disjunction=function(){var y=[],_=this.idx;for(y.push(this.alternative());this.peekChar()==="|";)this.consumeChar("|"),y.push(this.alternative());return{type:"Disjunction",value:y,loc:this.loc(_)}},r.prototype.alternative=function(){for(var y=[],_=this.idx;this.isTerm();)y.push(this.term());return{type:"Alternative",value:y,loc:this.loc(_)}},r.prototype.term=function(){return this.isAssertion()?this.assertion():this.atom()},r.prototype.assertion=function(){var y=this.idx;switch(this.popChar()){case"^":return{type:"StartAnchor",loc:this.loc(y)};case"$":return{type:"EndAnchor",loc:this.loc(y)};case"\\":switch(this.popChar()){case"b":return{type:"WordBoundary",loc:this.loc(y)};case"B":return{type:"NonWordBoundary",loc:this.loc(y)}}throw Error("Invalid Assertion Escape");case"(":this.consumeChar("?");var _;switch(this.popChar()){case"=":_="Lookahead";break;case"!":_="NegativeLookahead";break}o(_);var w=this.disjunction();return this.consumeChar(")"),{type:_,value:w,loc:this.loc(y)}}u()},r.prototype.quantifier=function(y){var _,w=this.idx;switch(this.popChar()){case"*":_={atLeast:0,atMost:1/0};break;case"+":_={atLeast:1,atMost:1/0};break;case"?":_={atLeast:0,atMost:1};break;case"{":var S=this.integerIncludingZero();switch(this.popChar()){case"}":_={atLeast:S,atMost:S};break;case",":var C;this.isDigit()?(C=this.integerIncludingZero(),_={atLeast:S,atMost:C}):_={atLeast:S,atMost:1/0},this.consumeChar("}");break}if(y===!0&&_===void 0)return;o(_);break}if(!(y===!0&&_===void 0))return o(_),this.peekChar(0)==="?"?(this.consumeChar("?"),_.greedy=!1):_.greedy=!0,_.type="Quantifier",_.loc=this.loc(w),_},r.prototype.atom=function(){var y,_=this.idx;switch(this.peekChar()){case".":y=this.dotAll();break;case"\\":y=this.atomEscape();break;case"[":y=this.characterClass();break;case"(":y=this.group();break}return y===void 0&&this.isPatternCharacter()&&(y=this.patternCharacter()),o(y),y.loc=this.loc(_),this.isQuantifier()&&(y.quantifier=this.quantifier()),y},r.prototype.dotAll=function(){return this.consumeChar("."),{type:"Set",complement:!0,value:[i(`
`),i("\r"),i("\u2028"),i("\u2029")]}},r.prototype.atomEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":return this.decimalEscapeAtom();case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},r.prototype.decimalEscapeAtom=function(){var y=this.positiveInteger();return{type:"GroupBackReference",value:y}},r.prototype.characterClassEscape=function(){var y,_=!1;switch(this.popChar()){case"d":y=f;break;case"D":y=f,_=!0;break;case"s":y=m;break;case"S":y=m,_=!0;break;case"w":y=d;break;case"W":y=d,_=!0;break}return o(y),{type:"Set",value:y,complement:_}},r.prototype.controlEscapeAtom=function(){var y;switch(this.popChar()){case"f":y=i("\f");break;case"n":y=i(`
`);break;case"r":y=i("\r");break;case"t":y=i("	");break;case"v":y=i("\v");break}return o(y),{type:"Character",value:y}},r.prototype.controlLetterEscapeAtom=function(){this.consumeChar("c");var y=this.popChar();if(/[a-zA-Z]/.test(y)===!1)throw Error("Invalid ");var _=y.toUpperCase().charCodeAt(0)-64;return{type:"Character",value:_}},r.prototype.nulCharacterAtom=function(){return this.consumeChar("0"),{type:"Character",value:i("\0")}},r.prototype.hexEscapeSequenceAtom=function(){return this.consumeChar("x"),this.parseHexDigits(2)},r.prototype.regExpUnicodeEscapeSequenceAtom=function(){return this.consumeChar("u"),this.parseHexDigits(4)},r.prototype.identityEscapeAtom=function(){var y=this.popChar();return{type:"Character",value:i(y)}},r.prototype.classPatternCharacterAtom=function(){switch(this.peekChar()){case`
`:case"\r":case"\u2028":case"\u2029":case"\\":case"]":throw Error("TBD");default:var y=this.popChar();return{type:"Character",value:i(y)}}},r.prototype.characterClass=function(){var y=[],_=!1;for(this.consumeChar("["),this.peekChar(0)==="^"&&(this.consumeChar("^"),_=!0);this.isClassAtom();){var w=this.classAtom(),S=w.type==="Character";if(S&&this.isRangeDash()){this.consumeChar("-");var C=this.classAtom(),b=C.type==="Character";if(b){if(C.value<w.value)throw Error("Range out of order in character class");y.push({from:w.value,to:C.value})}else a(w.value,y),y.push(i("-")),a(C.value,y)}else a(w.value,y)}return this.consumeChar("]"),{type:"Set",complement:_,value:y}},r.prototype.classAtom=function(){switch(this.peekChar()){case"]":case`
`:case"\r":case"\u2028":case"\u2029":throw Error("TBD");case"\\":return this.classEscape();default:return this.classPatternCharacterAtom()}},r.prototype.classEscape=function(){switch(this.consumeChar("\\"),this.peekChar()){case"b":return this.consumeChar("b"),{type:"Character",value:i("\b")};case"d":case"D":case"s":case"S":case"w":case"W":return this.characterClassEscape();case"f":case"n":case"r":case"t":case"v":return this.controlEscapeAtom();case"c":return this.controlLetterEscapeAtom();case"0":return this.nulCharacterAtom();case"x":return this.hexEscapeSequenceAtom();case"u":return this.regExpUnicodeEscapeSequenceAtom();default:return this.identityEscapeAtom()}},r.prototype.group=function(){var y=!0;switch(this.consumeChar("("),this.peekChar(0)){case"?":this.consumeChar("?"),this.consumeChar(":"),y=!1;break;default:this.groupIdx++;break}var _=this.disjunction();this.consumeChar(")");var w={type:"Group",capturing:y,value:_};return y&&(w.idx=this.groupIdx),w},r.prototype.positiveInteger=function(){var y=this.popChar();if(n.test(y)===!1)throw Error("Expecting a positive integer");for(;t.test(this.peekChar(0));)y+=this.popChar();return parseInt(y,10)},r.prototype.integerIncludingZero=function(){var y=this.popChar();if(t.test(y)===!1)throw Error("Expecting an integer");for(;t.test(this.peekChar(0));)y+=this.popChar();return parseInt(y,10)},r.prototype.patternCharacter=function(){var y=this.popChar();switch(y){case`
`:case"\r":case"\u2028":case"\u2029":case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":throw Error("TBD");default:return{type:"Character",value:i(y)}}},r.prototype.isRegExpFlag=function(){switch(this.peekChar(0)){case"g":case"i":case"m":case"u":case"y":return!0;default:return!1}},r.prototype.isRangeDash=function(){return this.peekChar()==="-"&&this.isClassAtom(1)},r.prototype.isDigit=function(){return t.test(this.peekChar(0))},r.prototype.isClassAtom=function(y){switch(y===void 0&&(y=0),this.peekChar(y)){case"]":case`
`:case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},r.prototype.isTerm=function(){return this.isAtom()||this.isAssertion()},r.prototype.isAtom=function(){if(this.isPatternCharacter())return!0;switch(this.peekChar(0)){case".":case"\\":case"[":case"(":return!0;default:return!1}},r.prototype.isAssertion=function(){switch(this.peekChar(0)){case"^":case"$":return!0;case"\\":switch(this.peekChar(1)){case"b":case"B":return!0;default:return!1}case"(":return this.peekChar(1)==="?"&&(this.peekChar(2)==="="||this.peekChar(2)==="!");default:return!1}},r.prototype.isQuantifier=function(){var y=this.saveState();try{return this.quantifier(!0)!==void 0}catch{return!1}finally{this.restoreState(y)}},r.prototype.isPatternCharacter=function(){switch(this.peekChar()){case"^":case"$":case"\\":case".":case"*":case"+":case"?":case"(":case")":case"[":case"|":case"/":case`
`:case"\r":case"\u2028":case"\u2029":return!1;default:return!0}},r.prototype.parseHexDigits=function(y){for(var _="",w=0;w<y;w++){var S=this.popChar();if(e.test(S)===!1)throw Error("Expecting a HexDecimal digits");_+=S}var C=parseInt(_,16);return{type:"Character",value:C}},r.prototype.peekChar=function(y){return y===void 0&&(y=0),this.input[this.idx+y]},r.prototype.popChar=function(){var y=this.peekChar(0);return this.consumeChar(),y},r.prototype.consumeChar=function(y){if(y!==void 0&&this.input[this.idx]!==y)throw Error("Expected: '"+y+"' but found: '"+this.input[this.idx]+"' at offset: "+this.idx);if(this.idx>=this.input.length)throw Error("Unexpected end of input");this.idx++},r.prototype.loc=function(y){return{begin:y,end:this.idx}};var e=/[0-9a-fA-F]/,t=/[0-9]/,n=/[1-9]/;function i(y){return y.charCodeAt(0)}function a(y,_){y.length!==void 0?y.forEach(function(w){_.push(w)}):_.push(y)}function s(y,_){if(y[_]===!0)throw"duplicate flag "+_;y[_]=!0}function o(y){if(y===void 0)throw Error("Internal Error - Should never get here!")}function u(){throw Error("Internal Error - Should never get here!")}var c,f=[];for(c=i("0");c<=i("9");c++)f.push(c);var d=[i("_")].concat(f);for(c=i("a");c<=i("z");c++)d.push(c);for(c=i("A");c<=i("Z");c++)d.push(c);var m=[i(" "),i("\f"),i(`
`),i("\r"),i("	"),i("\v"),i("	"),i("\xA0"),i("\u1680"),i("\u2000"),i("\u2001"),i("\u2002"),i("\u2003"),i("\u2004"),i("\u2005"),i("\u2006"),i("\u2007"),i("\u2008"),i("\u2009"),i("\u200A"),i("\u2028"),i("\u2029"),i("\u202F"),i("\u205F"),i("\u3000"),i("\uFEFF")];function h(){}return h.prototype.visitChildren=function(y){for(var _ in y){var w=y[_];y.hasOwnProperty(_)&&(w.type!==void 0?this.visit(w):Array.isArray(w)&&w.forEach(function(S){this.visit(S)},this))}},h.prototype.visit=function(y){switch(y.type){case"Pattern":this.visitPattern(y);break;case"Flags":this.visitFlags(y);break;case"Disjunction":this.visitDisjunction(y);break;case"Alternative":this.visitAlternative(y);break;case"StartAnchor":this.visitStartAnchor(y);break;case"EndAnchor":this.visitEndAnchor(y);break;case"WordBoundary":this.visitWordBoundary(y);break;case"NonWordBoundary":this.visitNonWordBoundary(y);break;case"Lookahead":this.visitLookahead(y);break;case"NegativeLookahead":this.visitNegativeLookahead(y);break;case"Character":this.visitCharacter(y);break;case"Set":this.visitSet(y);break;case"Group":this.visitGroup(y);break;case"GroupBackReference":this.visitGroupBackReference(y);break;case"Quantifier":this.visitQuantifier(y);break}this.visitChildren(y)},h.prototype.visitPattern=function(y){},h.prototype.visitFlags=function(y){},h.prototype.visitDisjunction=function(y){},h.prototype.visitAlternative=function(y){},h.prototype.visitStartAnchor=function(y){},h.prototype.visitEndAnchor=function(y){},h.prototype.visitWordBoundary=function(y){},h.prototype.visitNonWordBoundary=function(y){},h.prototype.visitLookahead=function(y){},h.prototype.visitNegativeLookahead=function(y){},h.prototype.visitCharacter=function(y){},h.prototype.visitSet=function(y){},h.prototype.visitGroup=function(y){},h.prototype.visitGroupBackReference=function(y){},h.prototype.visitQuantifier=function(y){},{RegExpParser:r,BaseRegExpVisitor:h,VERSION:"0.5.0"}})});var sf=p(Bn=>{"use strict";Object.defineProperty(Bn,"__esModule",{value:!0});Bn.partialRegex=Bn.partialMatches=Bn.getCaseInsensitivePattern=Bn.escapeRegExp=Bn.isWhitespaceRegExp=Bn.isMultilineComment=Bn.getTerminalParts=void 0;var K3=Rv(),H3=new K3.RegExpParser,XM=class extends K3.BaseRegExpVisitor{constructor(){super(...arguments),this.isStarting=!0,this.endRegexStack=[],this.multiline=!1}get endRegex(){return this.endRegexStack.join("")}reset(e){this.multiline=!1,this.regex=e,this.startRegex="",this.isStarting=!0,this.endRegexStack=[]}visitGroup(e){e.quantifier&&(this.isStarting=!1,this.endRegexStack=[])}visitCharacter(e){let t=String.fromCharCode(e.value);if(!this.multiline&&t===`
`&&(this.multiline=!0),e.quantifier)this.isStarting=!1,this.endRegexStack=[];else{let n=JM(t);this.endRegexStack.push(n),this.isStarting&&(this.startRegex+=n)}}visitSet(e){if(!this.multiline){let t=this.regex.substring(e.loc.begin,e.loc.end),n=new RegExp(t);this.multiline=Boolean(`
`.match(n))}if(e.quantifier)this.isStarting=!1,this.endRegexStack=[];else{let t=this.regex.substring(e.loc.begin,e.loc.end);this.endRegexStack.push(t),this.isStarting&&(this.startRegex+=t)}}visitChildren(e){e.type==="Group"&&e.quantifier||super.visitChildren(e)}},af=new XM;function $pe(r){try{typeof r!="string"&&(r=r.source),r=`/${r}/`;let e=H3.pattern(r),t=[];for(let n of e.value.value)af.reset(r),af.visit(n),t.push({start:af.startRegex,end:af.endRegex});return t}catch{return[]}}Bn.getTerminalParts=$pe;function Tpe(r){try{return typeof r!="string"&&(r=r.source),r=`/${r}/`,af.reset(r),af.visit(H3.pattern(r)),af.multiline}catch{return!1}}Bn.isMultilineComment=Tpe;function Rpe(r){return(typeof r=="string"?new RegExp(r):r).test(" ")}Bn.isWhitespaceRegExp=Rpe;function JM(r){return r.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}Bn.escapeRegExp=JM;function bpe(r){return Array.prototype.map.call(r,e=>/\w/.test(e)?`[${e.toLowerCase()}${e.toUpperCase()}]`:JM(e)).join("")}Bn.getCaseInsensitivePattern=bpe;function Cpe(r,e){let t=V3(r),n=e.match(t);return!!n&&n[0].length>0}Bn.partialMatches=Cpe;function V3(r){typeof r=="string"&&(r=new RegExp(r));let e=r,t=r.source,n=0;function i(){let a="",s;function o(c){a+=t.substr(n,c),n+=c}function u(c){a+="(?:"+t.substr(n,c)+"|$)",n+=c}for(;n<t.length;)switch(t[n]){case"\\":switch(t[n+1]){case"c":u(3);break;case"x":u(4);break;case"u":e.unicode?t[n+2]==="{"?u(t.indexOf("}",n)-n+1):u(6):u(2);break;case"p":case"P":e.unicode?u(t.indexOf("}",n)-n+1):u(2);break;case"k":u(t.indexOf(">",n)-n+1);break;default:u(2);break}break;case"[":s=/\[(?:\\.|.)*?\]/g,s.lastIndex=n,s=s.exec(t)||[],u(s[0].length);break;case"|":case"^":case"$":case"*":case"+":case"?":o(1);break;case"{":s=/\{\d+,?\d*\}/g,s.lastIndex=n,s=s.exec(t),s?o(s[0].length):u(1);break;case"(":if(t[n+1]==="?")switch(t[n+2]){case":":a+="(?:",n+=3,a+=i()+"|$)";break;case"=":a+="(?=",n+=3,a+=i()+")";break;case"!":s=n,n+=3,i(),a+=t.substr(s,n-s);break;case"<":switch(t[n+3]){case"=":case"!":s=n,n+=4,i(),a+=t.substr(s,n-s);break;default:o(t.indexOf(">",n)-n+1),a+=i()+"|$)";break}break}else o(1),a+=i()+"|$)";break;case")":return++n,a;default:u(1);break}return a}return new RegExp(i(),r.flags)}Bn.partialRegex=V3});var $n=p(Le=>{"use strict";var Ape=Le&&Le.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),wpe=Le&&Le.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Dpe=Le&&Le.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Ape(e,r,t);return wpe(e,r),e};Object.defineProperty(Le,"__esModule",{value:!0});Le.isPrimitiveType=Le.extractAssignments=Le.resolveTransitiveImports=Le.resolveImport=Le.resolveImportUri=Le.terminalRegex=Le.getRuleType=Le.getActionType=Le.getExplicitRuleType=Le.getTypeNameWithoutError=Le.getTypeName=Le.getActionAtElement=Le.isDataType=Le.hasDataTypeReturn=Le.isDataTypeRule=Le.isArrayOperator=Le.isArrayCardinality=Le.isOptionalCardinality=void 0;var Xe=Dpe(yt()),W3=_n(),sR=bt(),Spe=by(),Mpe=sf();function Ppe(r){return r==="?"||r==="*"}Le.isOptionalCardinality=Ppe;function Epe(r){return r==="*"||r==="+"}Le.isArrayCardinality=Epe;function Ope(r){return r==="+="}Le.isArrayOperator=Ope;function rP(r){return z3(r,new Set)}Le.isDataTypeRule=rP;function z3(r,e){if(e.has(r))return!0;e.add(r);for(let t of(0,sR.streamAllContents)(r))if(Xe.isRuleCall(t)){if(!t.rule.ref||Xe.isParserRule(t.rule.ref)&&!z3(t.rule.ref,e))return!1}else{if(Xe.isAssignment(t))return!1;if(Xe.isAction(t))return!1}return Boolean(r.definition)}function kpe(r){var e;let t=(e=r.returnType)===null||e===void 0?void 0:e.ref;return r.dataType!==void 0||Xe.isType(t)&&Y3(t)}Le.hasDataTypeReturn=kpe;function Y3(r){return ZM(r.type,new Set)}Le.isDataType=Y3;function ZM(r,e){if(e.has(r))return!0;if(e.add(r),Xe.isArrayType(r))return!1;if(Xe.isReferenceType(r))return!1;if(Xe.isUnionType(r))return r.types.every(t=>ZM(t,e));if(Xe.isSimpleType(r)){if(r.primitiveType!==void 0)return!0;if(r.stringType!==void 0)return!0;if(r.typeRef!==void 0){let t=r.typeRef.ref;return Xe.isType(t)?ZM(t.type,e):!1}else return!1}else return!1}function X3(r){let e=r.$container;if(Xe.isGroup(e)){let t=e.elements,n=t.indexOf(r);for(let i=n-1;i>=0;i--){let a=t[i];if(Xe.isAction(a))return a;{let s=(0,sR.streamAllContents)(t[i]).find(Xe.isAction);if(s)return s}}}if(Xe.isAbstractElement(e))return X3(e)}Le.getActionAtElement=X3;function nP(r){var e;if(Xe.isParserRule(r))return rP(r)?r.name:(e=iP(r))!==null&&e!==void 0?e:r.name;if(Xe.isInterface(r)||Xe.isType(r)||Xe.isReturnType(r))return r.name;if(Xe.isAction(r)){let t=J3(r);if(t)return t}else if(Xe.isInferredType(r))return r.name;throw new Spe.TypeResolutionError("Cannot get name of Unknown Type",r.$cstNode)}Le.getTypeName=nP;function Ipe(r){if(r)try{return nP(r)}catch{return}}Le.getTypeNameWithoutError=Ipe;function iP(r){if(r.inferredType)return r.inferredType.name;if(r.dataType)return r.dataType;if(r.returnType){let e=r.returnType.ref;if(e){if(Xe.isParserRule(e))return e.name;if(Xe.isInterface(e)||Xe.isType(e))return e.name}}}Le.getExplicitRuleType=iP;function J3(r){var e;if(r.inferredType)return r.inferredType.name;if(!((e=r.type)===null||e===void 0)&&e.ref)return nP(r.type.ref)}Le.getActionType=J3;function Fpe(r){var e,t,n;return Xe.isTerminalRule(r)?(t=(e=r.type)===null||e===void 0?void 0:e.name)!==null&&t!==void 0?t:"string":rP(r)?r.name:(n=iP(r))!==null&&n!==void 0?n:r.name}Le.getRuleType=Fpe;function Q3(r){return bv(r.definition)}Le.terminalRegex=Q3;var aP=/[\s\S]/.source;function bv(r){if(Xe.isTerminalAlternatives(r))return Npe(r);if(Xe.isTerminalGroup(r))return qpe(r);if(Xe.isCharacterRange(r))return jpe(r);if(Xe.isTerminalRuleCall(r)){let e=r.rule.ref;if(!e)throw new Error("Missing rule reference.");return jl(Q3(e),{cardinality:r.cardinality,lookahead:r.lookahead})}else{if(Xe.isNegatedToken(r))return Lpe(r);if(Xe.isUntilToken(r))return xpe(r);if(Xe.isRegexToken(r))return jl(r.regex,{cardinality:r.cardinality,lookahead:r.lookahead,wrap:!1});if(Xe.isWildcard(r))return jl(aP,{cardinality:r.cardinality,lookahead:r.lookahead});throw new Error(`Invalid terminal element: ${r?.$type}`)}}function Npe(r){return jl(r.elements.map(bv).join("|"),{cardinality:r.cardinality,lookahead:r.lookahead})}function qpe(r){return jl(r.elements.map(bv).join(""),{cardinality:r.cardinality,lookahead:r.lookahead})}function xpe(r){return jl(`${aP}*?${bv(r.terminal)}`,{cardinality:r.cardinality,lookahead:r.lookahead})}function Lpe(r){return jl(`(?!${bv(r.terminal)})${aP}*?`,{cardinality:r.cardinality,lookahead:r.lookahead})}function jpe(r){return r.right?jl(`[${QM(r.left)}-${QM(r.right)}]`,{cardinality:r.cardinality,lookahead:r.lookahead,wrap:!1}):jl(QM(r.left),{cardinality:r.cardinality,lookahead:r.lookahead,wrap:!1})}function QM(r){return(0,Mpe.escapeRegExp)(r.value)}function jl(r,e){var t;return(e.wrap!==!1||e.lookahead)&&(r=`(${(t=e.lookahead)!==null&&t!==void 0?t:""}${r})`),e.cardinality?`${r}${e.cardinality}`:r}function Z3(r){if(r.path===void 0||r.path.length===0)return;let e=W3.Utils.dirname((0,sR.getDocument)(r).uri),t=r.path;return t.endsWith(".langium")||(t+=".langium"),W3.Utils.resolvePath(e,t)}Le.resolveImportUri=Z3;function sP(r,e){let t=Z3(e);try{if(t){let i=r.getOrCreateDocument(t).parseResult.value;if(Xe.isGrammar(i))return i}}catch{}}Le.resolveImport=sP;function Upe(r,e){if(Xe.isGrammarImport(e)){let t=sP(r,e);if(t){let n=eP(r,t);return n.push(t),n}return[]}else return eP(r,e)}Le.resolveTransitiveImports=Upe;function eP(r,e,t=e,n=new Set,i=new Set){let a=(0,sR.getDocument)(e);if(t!==e&&i.add(e),!n.has(a.uri)){n.add(a.uri);for(let s of e.imports){let o=sP(r,s);o&&eP(r,o,t,n,i)}}return Array.from(i)}function tP(r){return Xe.isAssignment(r)?[r]:Xe.isAlternatives(r)||Xe.isGroup(r)||Xe.isUnorderedGroup(r)?r.elements.flatMap(e=>tP(e)):Xe.isRuleCall(r)&&r.rule.ref?tP(r.rule.ref.definition):[]}Le.extractAssignments=tP;var Bpe=["string","number","boolean","Date","bigint"];function Gpe(r){return Bpe.includes(r)}Le.isPrimitiveType=Gpe});var fR=p(yr=>{"use strict";Object.defineProperty(yr,"__esModule",{value:!0});yr.flattenPlainType=yr.mergePropertyTypes=yr.plainToTypes=yr.isPlainStringType=yr.isPlainPrimitiveType=yr.isPlainValueType=yr.isPlainPropertyUnion=yr.isPlainArrayType=yr.isPlainReferenceType=yr.isPlainUnion=yr.isPlainInterface=void 0;var e2=by();function Kpe(r){return!t2(r)}yr.isPlainInterface=Kpe;function t2(r){return"type"in r}yr.isPlainUnion=t2;function oR(r){return"referenceType"in r}yr.isPlainReferenceType=oR;function lR(r){return"elementType"in r}yr.isPlainArrayType=lR;function lP(r){return"types"in r}yr.isPlainPropertyUnion=lP;function uR(r){return"value"in r}yr.isPlainValueType=uR;function r2(r){return"primitive"in r}yr.isPlainPrimitiveType=r2;function n2(r){return"string"in r}yr.isPlainStringType=n2;function Hpe(r){let e=new Map,t=new Map;for(let n of r.interfaces){let i=new e2.InterfaceType(n.name,n.declared,n.abstract);e.set(n.name,i)}for(let n of r.unions){let i=new e2.UnionType(n.name,{declared:n.declared,dataType:n.dataType});t.set(n.name,i)}for(let n of r.interfaces){let i=e.get(n.name);for(let a of n.superTypes){let s=e.get(a)||t.get(a);s&&i.superTypes.add(s)}for(let a of n.subTypes){let s=e.get(a)||t.get(a);s&&i.subTypes.add(s)}for(let a of n.properties){let s=Vpe(a,e,t);i.properties.push(s)}}for(let n of r.unions){let i=t.get(n.name);i.type=Cv(n.type,i,e,t)}return{interfaces:Array.from(e.values()),unions:Array.from(t.values())}}yr.plainToTypes=Hpe;function Vpe(r,e,t){return{name:r.name,optional:r.optional,astNodes:r.astNodes,type:Cv(r.type,void 0,e,t)}}function Cv(r,e,t,n){if(lR(r))return{elementType:Cv(r.elementType,e,t,n)};if(oR(r))return{referenceType:Cv(r.referenceType,void 0,t,n)};if(lP(r))return{types:r.types.map(i=>Cv(i,e,t,n))};if(n2(r))return{string:r.string};if(r2(r))return{primitive:r.primitive,regex:r.regex};if(uR(r)){let i=t.get(r.value)||n.get(r.value);return i?(e&&e.subTypes.add(i),{value:i}):{primitive:"unknown"}}else throw new Error("Invalid property type")}function Wpe(r,e){let t=cR(r),n=cR(e);for(let i of n)zpe(t,i)||t.push(i);return t.length===1?t[0]:{types:t}}yr.mergePropertyTypes=Wpe;function zpe(r,e){return r.some(t=>oP(t,e))}function oP(r,e){return lR(r)&&lR(e)?oP(r.elementType,e.elementType):oR(r)&&oR(e)?oP(r.referenceType,e.referenceType):uR(r)&&uR(e)?r.value===e.value:!1}function cR(r){return lP(r)?r.types.flatMap(e=>cR(e)):[r]}yr.flattenPlainType=cR});var c2=p(dR=>{"use strict";Object.defineProperty(dR,"__esModule",{value:!0});dR.collectInferredTypes=void 0;var Ype=wy(),dP=us(),Pr=yt(),io=$n(),a2=fR(),uP=class{constructor(e,t){this.context=e,this.root=t}getTypes(){let e={name:this.root.name,properties:this.root.properties,ruleCalls:this.root.ruleCalls,super:[]};return this.root.children.length===0?[{alt:e,next:[]}]:this.applyNext(this.root,{alt:e,next:this.root.children})}applyNext(e,t){let n=this.splitType(t.alt,t.next.length),i=[];for(let a=0;a<t.next.length;a++){let s=n[a],o=t.next[a];o.actionWithAssignment&&i.push({alt:i2(s),next:[]}),o.name!==void 0&&o.name!==s.name&&(o.actionWithAssignment?(s.properties=[],s.ruleCalls=[],s.super=[e.name],s.name=o.name):(s.super=[s.name,...s.ruleCalls],s.properties=[],s.ruleCalls=[],s.name=o.name)),s.properties.push(...o.properties),s.ruleCalls.push(...o.ruleCalls);let u={alt:s,next:o.children};u.next.length===0?(u.alt.super=u.alt.super.filter(c=>c!==u.alt.name),i.push(u)):i.push(...this.applyNext(e,u))}return u2(i)}splitType(e,t){let n=[];for(let i=0;i<t;i++)n.push(i2(e));return n}getSuperTypes(e){let t=new Set;return this.collectSuperTypes(e,e,t),Array.from(t)}collectSuperTypes(e,t,n){if(t.ruleCalls.length>0){for(let i of t.ruleCalls)n.add(i);return}for(let i of t.parents)e.name===void 0?this.collectSuperTypes(i,i,n):i.name!==void 0&&i.name!==e.name?n.add(i.name):this.collectSuperTypes(e,i,n);t.parents.length===0&&t.name&&n.add(t.name)}connect(e,t){return t.parents.push(e),e.children.push(t),t}merge(...e){if(e.length===1)return e[0];if(e.length===0)throw new Error("No parts to merge");let t=of();t.parents=e;for(let n of e)n.children.push(t);return t}hasLeafNode(e){return this.partHasLeafNode(e)}partHasLeafNode(e,t){return e.children.some(n=>n!==t)?!0:e.name?!1:e.parents.some(n=>this.partHasLeafNode(n,e))}};function Xpe(r){return{name:r.name,children:[],parents:[],actionWithAssignment:r.actionWithAssignment,ruleCalls:[...r.ruleCalls],properties:r.properties.map(s2)}}function i2(r){return{name:r.name,super:r.super,ruleCalls:r.ruleCalls,properties:r.properties.map(e=>s2(e))}}function s2(r){return{name:r.name,optional:r.optional,type:r.type,astNodes:r.astNodes}}function Jpe(r,e,t){let n=[],i={fragments:new Map};for(let u of r)n.push(...o2(i,u));let a=nme(n),s=ime(a),o=ame(a,s,t);for(let u of e){let c=Qpe(u);o.unions.push({name:u.name,declared:!1,type:c,subTypes:new Set,superTypes:new Set,dataType:u.dataType})}return o}dR.collectInferredTypes=Jpe;function Qpe(r){if(r.dataType&&r.dataType!=="string")return{primitive:r.dataType};let e=!1,t=()=>(e=!0,{primitive:"unknown"}),n=cP(r.definition,t);return e?{primitive:"string"}:n}function cP(r,e){var t,n,i;if(r.cardinality)return e();if((0,Pr.isAlternatives)(r))return{types:r.elements.map(a=>cP(a,e))};if((0,Pr.isGroup)(r)||(0,Pr.isUnorderedGroup)(r))return r.elements.length!==1?e():cP(r.elements[0],e);if((0,Pr.isRuleCall)(r)){let a=(t=r.rule)===null||t===void 0?void 0:t.ref;return a?(0,Pr.isTerminalRule)(a)?{primitive:(i=(n=a.type)===null||n===void 0?void 0:n.name)!==null&&i!==void 0?i:"string",regex:(0,io.terminalRegex)(a)}:{value:a.name}:e()}else if((0,Pr.isKeyword)(r))return{string:r.value};return e()}function o2(r,e){let t=of(e),n=new uP(r,t);return e.definition&&fP(n,n.root,e.definition),n.getTypes()}function of(r){return{name:(0,Pr.isParserRule)(r)||(0,Pr.isAction)(r)?(0,io.getTypeNameWithoutError)(r):r,properties:[],ruleCalls:[],children:[],parents:[],actionWithAssignment:!1}}function fP(r,e,t){let n=(0,io.isOptionalCardinality)(t.cardinality);if((0,Pr.isAlternatives)(t)){let i=[];n&&i.push(r.connect(e,of()));for(let a of t.elements){let s=r.connect(e,of());i.push(fP(r,s,a))}return r.merge(...i)}else if((0,Pr.isGroup)(t)||(0,Pr.isUnorderedGroup)(t)){let i=r.connect(e,of()),a;n&&(a=r.connect(e,of()));for(let s of t.elements)i=fP(r,i,s);return a?r.merge(a,i):i}else{if((0,Pr.isAction)(t))return Zpe(r,e,t);(0,Pr.isAssignment)(t)?eme(e,t):(0,Pr.isRuleCall)(t)&&tme(r,e,t)}return e}function Zpe(r,e,t){var n;if(!r.hasLeafNode(e)){let a=Xpe(e);r.connect(e,a)}let i=r.connect(e,of(t));if(t.type){let a=(n=t.type)===null||n===void 0?void 0:n.ref;a&&(0,Ype.isNamed)(a)&&(i.name=a.name)}return t.feature&&t.operator&&(i.actionWithAssignment=!0,i.properties.push({name:t.feature,optional:!1,type:lf(t.operator==="+=",!1,r.root.ruleCalls.length!==0?r.root.ruleCalls:r.getSuperTypes(i)),astNodes:new Set([t])})),i}function eme(r,e){let t={types:new Set,reference:!1};l2(e.terminal,t);let n=lf(e.operator==="+=",t.reference,e.operator==="?="?["boolean"]:Array.from(t.types));r.properties.push({name:e.feature,optional:(0,io.isOptionalCardinality)(e.cardinality),type:n,astNodes:new Set([e])})}function l2(r,e){if((0,Pr.isAlternatives)(r)||(0,Pr.isUnorderedGroup)(r)||(0,Pr.isGroup)(r))for(let t of r.elements)l2(t,e);else if((0,Pr.isKeyword)(r))e.types.add(`'${r.value}'`);else if((0,Pr.isRuleCall)(r)&&r.rule.ref)e.types.add((0,io.getRuleType)(r.rule.ref));else if((0,Pr.isCrossReference)(r)&&r.type.ref){let t=(0,io.getTypeNameWithoutError)(r.type.ref);t&&e.types.add(t),e.reference=!0}}function tme(r,e,t){let n=t.rule.ref;if((0,Pr.isParserRule)(n)&&n.fragment){let i=rme(n,r.context);(0,io.isOptionalCardinality)(t.cardinality)?e.properties.push(...i.map(a=>Object.assign(Object.assign({},a),{optional:!0}))):e.properties.push(...i)}else(0,Pr.isParserRule)(n)&&e.ruleCalls.push((0,io.getRuleType)(n))}function rme(r,e){let t=e.fragments.get(r);if(t)return t;let n=[];e.fragments.set(r,n);let i=(0,io.getTypeNameWithoutError)(r),a=o2(e,r).filter(s=>s.alt.name===i);return n.push(...a.flatMap(s=>s.alt.properties)),n}function nme(r){let e=new Map,t=[],n=u2(r).map(i=>i.alt);for(let i of n){let a={name:i.name,properties:i.properties,superTypes:new Set(i.super),subTypes:new Set,declared:!1,abstract:!1};e.set(a.name,a),i.ruleCalls.length>0&&(t.push(i),i.ruleCalls.forEach(s=>{s!==a.name&&a.subTypes.add(s)}))}for(let i of t)for(let a of i.ruleCalls){let s=e.get(a);s&&s.name!==i.name&&s.superTypes.add(i.name)}return Array.from(e.values())}function u2(r){let e=r.reduce((n,i)=>n.add(i.alt.name,i),new dP.MultiMap),t=[];for(let[n,i]of e.entriesGroupedByKey()){let a=[],s=new Set,o={alt:{name:n,properties:a,ruleCalls:[],super:[]},next:[]};for(let u of i){let c=u.alt;o.alt.super.push(...c.super),o.next.push(...u.next);let f=c.properties;for(let d of f){let m=a.find(h=>h.name===d.name);m?(m.type=(0,a2.mergePropertyTypes)(m.type,d.type),d.astNodes.forEach(h=>m.astNodes.add(h))):a.push(Object.assign({},d))}c.ruleCalls.forEach(d=>s.add(d))}for(let u of i){let c=u.alt;if(c.ruleCalls.length===0)for(let f of a)c.properties.find(d=>d.name===f.name)||(f.optional=!0)}o.alt.ruleCalls=Array.from(s),t.push(o)}return t}function ime(r){let e=new Map(r.map(i=>[i.name,i])),t=[],n=new dP.MultiMap;for(let i of r)for(let a of i.superTypes)n.add(a,i.name);for(let[i,a]of n.entriesGroupedByKey())if(!e.has(i)){let s={declared:!1,name:i,subTypes:new Set,superTypes:new Set,type:lf(!1,!1,a)};t.push(s)}return t}function ame(r,e,t){let n=new dP.MultiMap;for(let o of r)for(let u of o.superTypes)n.add(u,o.name);let i=new Set(t.interfaces.map(o=>o.name)),a={interfaces:[],unions:e},s=new Map(e.map(o=>[o.name,o]));for(let o of r){let u=new Set(n.get(o.name));if(o.properties.length===0&&u.size>0)if(i.has(o.name))o.abstract=!0,a.interfaces.push(o);else{let c=lf(!1,!1,Array.from(u)),f=s.get(o.name);if(f)f.type=(0,a2.mergePropertyTypes)(f.type,c);else{let d={name:o.name,declared:!1,subTypes:u,superTypes:o.superTypes,type:c};a.unions.push(d),s.set(o.name,d)}}else a.interfaces.push(o)}for(let o of a.interfaces)o.superTypes=new Set([...o.superTypes].filter(u=>!s.has(u)));return a}function lf(r,e,t){if(r)return{elementType:lf(!1,e,t)};if(e)return{referenceType:lf(!1,!1,t)};if(t.length===1){let n=t[0];return n.startsWith("'")?{string:n.substring(1,n.length-1)}:(0,io.isPrimitiveType)(n)?{primitive:n}:{value:n}}else return{types:t.map(n=>lf(!1,!1,[n]))}}});var mP=p(Sy=>{"use strict";Object.defineProperty(Sy,"__esModule",{value:!0});Sy.typeDefinitionToPropertyType=Sy.collectDeclaredTypes=void 0;var pR=yt(),pP=$n();function sme(r,e){let t={unions:[],interfaces:[]};for(let n of r){let i=[];for(let o of n.attributes)i.push({name:o.name,optional:o.isOptional,astNodes:new Set([o]),type:Dy(o.type)});let a=new Set;for(let o of n.superTypes)o.ref&&a.add((0,pP.getTypeName)(o.ref));let s={name:n.name,declared:!0,abstract:!1,properties:i,superTypes:a,subTypes:new Set};t.interfaces.push(s)}for(let n of e){let i={name:n.name,declared:!0,type:Dy(n.type),superTypes:new Set,subTypes:new Set};t.unions.push(i)}return t}Sy.collectDeclaredTypes=sme;function Dy(r){if((0,pR.isArrayType)(r))return{elementType:Dy(r.elementType)};if((0,pR.isReferenceType)(r))return{referenceType:Dy(r.referenceType)};if((0,pR.isUnionType)(r))return{types:r.types.map(Dy)};if((0,pR.isSimpleType)(r)){let e;if(r.primitiveType)return e=r.primitiveType,{primitive:e};if(r.stringType)return e=r.stringType,{string:e};if(r.typeRef){let t=r.typeRef.ref,n=(0,pP.getTypeNameWithoutError)(t);if(n)return(0,pP.isPrimitiveType)(n)?{primitive:n}:{value:n}}}return{primitive:"unknown"}}Sy.typeDefinitionToPropertyType=Dy});var d2=p(My=>{"use strict";Object.defineProperty(My,"__esModule",{value:!0});My.collectAllAstResources=My.collectTypeResources=void 0;var ome=c2(),lme=mP(),ume=bt(),cme=yt(),f2=$n();function fme(r,e){let t=yP(r,e),n=(0,lme.collectDeclaredTypes)(t.interfaces,t.types),i=(0,ome.collectInferredTypes)(t.parserRules,t.datatypeRules,n);return{astResources:t,inferred:i,declared:n}}My.collectTypeResources=fme;function yP(r,e,t=new Set,n={parserRules:[],datatypeRules:[],interfaces:[],types:[]}){Array.isArray(r)||(r=[r]);for(let i of r){let a=(0,ume.getDocument)(i);if(!t.has(a.uri)){t.add(a.uri);for(let s of i.rules)(0,cme.isParserRule)(s)&&!s.fragment&&((0,f2.isDataTypeRule)(s)?n.datatypeRules.push(s):n.parserRules.push(s));if(i.interfaces.forEach(s=>n.interfaces.push(s)),i.types.forEach(s=>n.types.push(s)),e){let s=i.imports.map(o=>(0,f2.resolveImport)(e,o)).filter(o=>o!==void 0);yP(s,e,t,n)}}}return n}My.collectAllAstResources=yP});var vP=p(ao=>{"use strict";Object.defineProperty(ao,"__esModule",{value:!0});ao.specifyAstNodeProperties=ao.createAstTypes=ao.collectValidationAst=ao.collectAst=void 0;var m2=Cy(),Ul=by(),y2=d2(),dme=fR();function pme(r,e){let{inferred:t,declared:n}=(0,y2.collectTypeResources)(r,e);return mR(t,n)}ao.collectAst=pme;function mme(r,e){let{inferred:t,declared:n,astResources:i}=(0,y2.collectTypeResources)(r,e);return{astResources:i,inferred:mR(n,t),declared:mR(t,n)}}ao.collectValidationAst=mme;function mR(r,e){var t,n;let i={interfaces:(0,m2.sortInterfacesTopologically)(p2(...r.interfaces,...(t=e?.interfaces)!==null&&t!==void 0?t:[])),unions:p2(...r.unions,...(n=e?.unions)!==null&&n!==void 0?n:[])},a=(0,dme.plainToTypes)(i);return h2(a),a}ao.createAstTypes=mR;function p2(...r){return Array.from(r.reduce((e,t)=>(e.set(t.name,t),e),new Map).values()).sort((e,t)=>e.name.localeCompare(t.name))}function h2(r){let e=hme(r),t=Array.from(e.values());gme(t),vme(t),yme(t)}ao.specifyAstNodeProperties=h2;function yme(r){let e=new Set,t=n=>{if(!e.has(n)){e.add(n),n.typeNames.add(n.name);for(let i of n.subTypes)t(i),i.typeNames.forEach(a=>n.typeNames.add(a))}};r.forEach(t)}function hme({interfaces:r,unions:e}){let t=r.concat(e).reduce((i,a)=>(i.set(a.name,a),i),new Map),n=new Map;for(let i of e)n.set(i,hP(i.type,new Set));for(let[i,a]of n)a&&t.delete(i.name);return t}function hP(r,e){if(e.has(r))return!0;if(e.add(r),(0,Ul.isPropertyUnion)(r))return r.types.every(t=>hP(t,e));if((0,Ul.isValueType)(r)){let t=r.value;return(0,Ul.isUnionType)(t)?hP(t.type,e):!1}else return(0,Ul.isPrimitiveType)(r)||(0,Ul.isStringType)(r)}function gme(r){for(let e of r)for(let t of e.superTypes)t.subTypes.add(e)}function vme(r){let e=r.filter(Ul.isInterfaceType);for(let n of e){let i=n.properties.flatMap(a=>gP(a.type,new Set));for(let a of i)a.containerTypes.add(n)}let t=_me(r);$me(t)}function gP(r,e){return(0,Ul.isPropertyUnion)(r)?r.types.flatMap(t=>gP(t,e)):(0,Ul.isValueType)(r)?e.has(r.value)?[]:(e.add(r.value),[r.value]):(0,Ul.isArrayType)(r)?gP(r.elementType,e):[]}function _me(r){function e(s){let o=[s];a.add(s);let u=[...i.subTypes.get(s.name),...i.superTypes.get(s.name)];for(let c of u){let f=t.get(c);f&&!a.has(f)&&o.push(...e(f))}return o}let t=new Map(r.map(s=>[s.name,s])),n=[],i=(0,m2.collectTypeHierarchy)(r),a=new Set;for(let s of r)a.has(s)||n.push(e(s));return n}function $me(r){for(let e of r){let t=new Set;e.forEach(n=>n.containerTypes.forEach(i=>t.add(i))),e.forEach(n=>n.containerTypes=t)}}});var $P=p(yR=>{"use strict";Object.defineProperty(yR,"__esModule",{value:!0});yR.interpretAstReflection=void 0;var Tme=Un(),Rme=us(),bme=yt(),Cme=vP(),uf=Cy();function Ame(r,e){let t;(0,bme.isGrammar)(r)?t=(0,Cme.collectAst)(r,e):t=r;let n=t.interfaces.map(o=>o.name).concat(t.unions.filter(o=>(0,uf.isAstType)(o.type)).map(o=>o.name)),i=wme(t),a=Dme(t),s=(0,uf.collectTypeHierarchy)((0,uf.mergeTypesAndInterfaces)(t)).superTypes;return new _P({allTypes:n,references:i,metaData:a,superTypes:s})}yR.interpretAstReflection=Ame;var _P=class extends Tme.AbstractAstReflection{constructor(e){super(),this.allTypes=e.allTypes,this.references=e.references,this.metaData=e.metaData,this.superTypes=e.superTypes}getAllTypes(){return this.allTypes}getReferenceType(e){let t=`${e.container.$type}:${e.property}`,n=this.references.get(t);if(n)return n;throw new Error("Could not find reference type for "+t)}getTypeMetaData(e){var t;return(t=this.metaData.get(e))!==null&&t!==void 0?t:{name:e,mandatory:[]}}computeIsSubtype(e,t){let n=this.superTypes.get(e);for(let i of n)if(this.isSubtype(i,t))return!0;return!1}};function wme(r){let e=new Rme.MultiMap;for(let n of r.interfaces){for(let i of n.properties)for(let a of(0,uf.findReferenceTypes)(i.type))e.add(n.name,[i.name,a]);for(let i of n.interfaceSuperTypes){let a=e.get(i.name);e.addAll(n.name,a)}}let t=new Map;for(let[n,[i,a]]of e)t.set(`${n}:${i}`,a);return t}function Dme(r){let e=new Map;for(let t of r.interfaces){let n=t.superProperties,i=n.filter(s=>(0,uf.hasArrayType)(s.type)),a=n.filter(s=>!(0,uf.hasArrayType)(s.type)&&(0,uf.hasBooleanType)(s.type));(i.length>0||a.length>0)&&e.set(t.name,{name:t.name,mandatory:Sme(i,a)})}return e}function Sme(r,e){let t=[],n=r.concat(e).sort((i,a)=>i.name.localeCompare(a.name));for(let i of n){let a=r.includes(i)?"array":"boolean";t.push({name:i.name,type:a})}return t}});var g2=p(gR=>{"use strict";Object.defineProperty(gR,"__esModule",{value:!0});gR.LangiumGrammarGrammar=void 0;var Mme=jr(),hR,Pme=()=>hR??(hR=(0,Mme.loadGrammarFromJson)(`{
  "$type": "Grammar",
  "isDeclared": true,
  "name": "LangiumGrammar",
  "rules": [
    {
      "$type": "ParserRule",
      "name": "Grammar",
      "entry": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isDeclared",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "grammar"
                }
              },
              {
                "$type": "Assignment",
                "feature": "name",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@59"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "with"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "usedGrammars",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/rules@0"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@59"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "usedGrammars",
                        "operator": "+=",
                        "terminal": {
                          "$type": "CrossReference",
                          "type": {
                            "$ref": "#/rules@0"
                          },
                          "terminal": {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@59"
                            },
                            "arguments": []
                          },
                          "deprecatedSyntax": false
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "definesHiddenTokens",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "hidden"
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "("
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "hiddenTokens",
                        "operator": "+=",
                        "terminal": {
                          "$type": "CrossReference",
                          "type": {
                            "$ref": "#/rules@11"
                          },
                          "terminal": {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@59"
                            },
                            "arguments": []
                          },
                          "deprecatedSyntax": false
                        }
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Keyword",
                            "value": ","
                          },
                          {
                            "$type": "Assignment",
                            "feature": "hiddenTokens",
                            "operator": "+=",
                            "terminal": {
                              "$type": "CrossReference",
                              "type": {
                                "$ref": "#/rules@11"
                              },
                              "terminal": {
                                "$type": "RuleCall",
                                "rule": {
                                  "$ref": "#/rules@59"
                                },
                                "arguments": []
                              },
                              "deprecatedSyntax": false
                            }
                          }
                        ],
                        "cardinality": "*"
                      }
                    ],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Keyword",
                    "value": ")"
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "imports",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@12"
              },
              "arguments": []
            },
            "cardinality": "*"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "rules",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@11"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "interfaces",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@1"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "types",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@10"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          }
        ]
      },
      "definesHiddenTokens": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Interface",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "extends"
              },
              {
                "$type": "Assignment",
                "feature": "superTypes",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/types@0"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@59"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "superTypes",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/types@0"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@59"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SchemaType",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "Assignment",
            "feature": "attributes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@3"
              },
              "arguments": []
            },
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "}"
          },
          {
            "$type": "Keyword",
            "value": ";",
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeAttribute",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@58"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "isOptional",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "?"
            },
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Assignment",
            "feature": "type",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@4"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";",
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeDefinition",
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@5"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnionType",
      "inferredType": {
        "$type": "InferredType",
        "name": "TypeDefinition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@6"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "UnionType"
                },
                "feature": "types",
                "operator": "+="
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "|"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "types",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@6"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArrayType",
      "inferredType": {
        "$type": "InferredType",
        "name": "TypeDefinition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@7"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "ArrayType"
                },
                "feature": "elementType",
                "operator": "="
              },
              {
                "$type": "Keyword",
                "value": "["
              },
              {
                "$type": "Keyword",
                "value": "]"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceType",
      "inferredType": {
        "$type": "InferredType",
        "name": "TypeDefinition"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@8"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "ReferenceType"
                }
              },
              {
                "$type": "Keyword",
                "value": "@"
              },
              {
                "$type": "Assignment",
                "feature": "referenceType",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@8"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SimpleType",
      "inferredType": {
        "$type": "InferredType",
        "name": "TypeDefinition"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@4"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "SimpleType"
                }
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "typeRef",
                    "operator": "=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/types@0"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@59"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "primitiveType",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@9"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "stringType",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@60"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrimitiveType",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "string"
          },
          {
            "$type": "Keyword",
            "value": "number"
          },
          {
            "$type": "Keyword",
            "value": "boolean"
          },
          {
            "$type": "Keyword",
            "value": "Date"
          },
          {
            "$type": "Keyword",
            "value": "bigint"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Type",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "type"
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "type",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@4"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";",
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AbstractRule",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@46"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GrammarImport",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "Assignment",
            "feature": "path",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@60"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";",
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParserRule",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "entry",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "entry"
                }
              },
              {
                "$type": "Assignment",
                "feature": "fragment",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "fragment"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@15"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "wildcard",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "*"
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "returns"
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "returnType",
                        "operator": "=",
                        "terminal": {
                          "$type": "CrossReference",
                          "type": {
                            "$ref": "#/types@0"
                          },
                          "terminal": {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@59"
                            },
                            "arguments": []
                          },
                          "deprecatedSyntax": false
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "dataType",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@9"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "inferredType",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@14"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": false
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "definesHiddenTokens",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "hidden"
                }
              },
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "hiddenTokens",
                    "operator": "+=",
                    "terminal": {
                      "$type": "CrossReference",
                      "type": {
                        "$ref": "#/rules@11"
                      },
                      "terminal": {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@59"
                        },
                        "arguments": []
                      },
                      "deprecatedSyntax": false
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "hiddenTokens",
                        "operator": "+=",
                        "terminal": {
                          "$type": "CrossReference",
                          "type": {
                            "$ref": "#/rules@11"
                          },
                          "terminal": {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@59"
                            },
                            "arguments": []
                          },
                          "deprecatedSyntax": false
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Assignment",
            "feature": "definition",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InferredType",
      "parameters": [
        {
          "$type": "Parameter",
          "name": "imperative"
        }
      ],
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "guardCondition": {
                  "$type": "ParameterReference",
                  "parameter": {
                    "$ref": "#/rules@14/parameters@0"
                  }
                },
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "infer"
                  }
                ]
              },
              {
                "$type": "Group",
                "guardCondition": {
                  "$type": "Negation",
                  "value": {
                    "$type": "ParameterReference",
                    "parameter": {
                      "$ref": "#/rules@14/parameters@0"
                    }
                  }
                },
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "infers"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RuleNameAndParams",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "name",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "<"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "parameters",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@16"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "parameters",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@16"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": ">"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Parameter",
      "definition": {
        "$type": "Assignment",
        "feature": "name",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@59"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Alternatives",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@18"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Alternatives"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "|"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@18"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalBranch",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Group"
                }
              },
              {
                "$type": "Keyword",
                "value": "<"
              },
              {
                "$type": "Assignment",
                "feature": "guardCondition",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@29"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": ">"
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@21"
                  },
                  "arguments": []
                },
                "cardinality": "+"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnorderedGroup",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@20"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "UnorderedGroup"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "&"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@20"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Group",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@21"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Group"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@21"
                  },
                  "arguments": []
                },
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AbstractToken",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@22"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@23"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AbstractTokenWithCardinality",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@37"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@24"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "cardinality",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "Keyword",
                  "value": "?"
                },
                {
                  "$type": "Keyword",
                  "value": "*"
                },
                {
                  "$type": "Keyword",
                  "value": "+"
                }
              ]
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Action",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "Action"
            }
          },
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "type",
                "operator": "=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/types@0"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@59"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              },
              {
                "$type": "Assignment",
                "feature": "inferredType",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@14"
                  },
                  "arguments": [
                    {
                      "$type": "NamedArgument",
                      "value": {
                        "$type": "LiteralCondition",
                        "true": true
                      },
                      "calledByName": false
                    }
                  ]
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "feature",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@58"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "="
                    },
                    {
                      "$type": "Keyword",
                      "value": "+="
                    }
                  ]
                }
              },
              {
                "$type": "Keyword",
                "value": "current"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AbstractTerminal",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@43"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@36"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Keyword",
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@60"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RuleCall",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "rule",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/rules@11"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@59"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "<"
              },
              {
                "$type": "Assignment",
                "feature": "arguments",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@27"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "arguments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@27"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": ">"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgument",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "parameter",
                "operator": "=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/rules@16"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@59"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              },
              {
                "$type": "Assignment",
                "feature": "calledByName",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "="
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@29"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralCondition",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "true",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "true"
            }
          },
          {
            "$type": "Keyword",
            "value": "false"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Disjunction",
      "inferredType": {
        "$type": "InferredType",
        "name": "Condition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@30"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Disjunction"
                },
                "feature": "left",
                "operator": "="
              },
              {
                "$type": "Keyword",
                "value": "|"
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@30"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Conjunction",
      "inferredType": {
        "$type": "InferredType",
        "name": "Condition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@31"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Conjunction"
                },
                "feature": "left",
                "operator": "="
              },
              {
                "$type": "Keyword",
                "value": "&"
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@31"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Negation",
      "inferredType": {
        "$type": "InferredType",
        "name": "Condition"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Negation"
                }
              },
              {
                "$type": "Keyword",
                "value": "!"
              },
              {
                "$type": "Assignment",
                "feature": "value",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@31"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Atom",
      "inferredType": {
        "$type": "InferredType",
        "name": "Condition"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@33"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@28"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParenthesizedCondition",
      "inferredType": {
        "$type": "InferredType",
        "name": "Condition"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@29"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParameterReference",
      "definition": {
        "$type": "Assignment",
        "feature": "parameter",
        "operator": "=",
        "terminal": {
          "$type": "CrossReference",
          "type": {
            "$ref": "#/rules@16"
          },
          "terminal": {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          },
          "deprecatedSyntax": false
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PredicatedKeyword",
      "inferredType": {
        "$type": "InferredType",
        "name": "Keyword"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "=>"
              },
              {
                "$type": "Keyword",
                "value": "->"
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@60"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PredicatedRuleCall",
      "inferredType": {
        "$type": "InferredType",
        "name": "RuleCall"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "=>"
              },
              {
                "$type": "Keyword",
                "value": "->"
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "rule",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/rules@11"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@59"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "<"
              },
              {
                "$type": "Assignment",
                "feature": "arguments",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@27"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "arguments",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@27"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              },
              {
                "$type": "Keyword",
                "value": ">"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Assignment",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "Assignment"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "=>"
              },
              {
                "$type": "Keyword",
                "value": "->"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "feature",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@58"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "operator",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "Keyword",
                  "value": "+="
                },
                {
                  "$type": "Keyword",
                  "value": "="
                },
                {
                  "$type": "Keyword",
                  "value": "?="
                }
              ]
            }
          },
          {
            "$type": "Assignment",
            "feature": "terminal",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@38"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignableTerminal",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@39"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@41"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParenthesizedAssignableElement",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@40"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignableAlternatives",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@38"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "Alternatives"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "|"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "elements",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@38"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CrossReference",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "CrossReference"
            }
          },
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "type",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/types@0"
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "deprecatedSyntax",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "|"
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": ":"
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "terminal",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@42"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CrossReferenceableTerminal",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParenthesizedElement",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@17"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PredicatedGroup",
      "inferredType": {
        "$type": "InferredType",
        "name": "Group"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "=>"
              },
              {
                "$type": "Keyword",
                "value": "->"
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReturnType",
      "definition": {
        "$type": "Assignment",
        "feature": "name",
        "operator": "=",
        "terminal": {
          "$type": "Alternatives",
          "elements": [
            {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@9"
              },
              "arguments": []
            },
            {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@59"
              },
              "arguments": []
            }
          ]
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalRule",
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "hidden",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "hidden"
            },
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "terminal"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "fragment",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "fragment"
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "name",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@59"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "name",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@59"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "returns"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "type",
                        "operator": "=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@45"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Assignment",
            "feature": "definition",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@47"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalAlternatives",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@48"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "TerminalAlternatives"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "|"
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@48"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalGroup",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "inferredType": {
                  "$type": "InferredType",
                  "name": "TerminalGroup"
                },
                "feature": "elements",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "elements",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@49"
                  },
                  "arguments": []
                },
                "cardinality": "+"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalToken",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@50"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "cardinality",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "Keyword",
                  "value": "?"
                },
                {
                  "$type": "Keyword",
                  "value": "*"
                },
                {
                  "$type": "Keyword",
                  "value": "+"
                }
              ]
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalTokenElement",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@57"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@54"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@55"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@56"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParenthesizedTerminalElement",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "lookahead",
            "operator": "=",
            "terminal": {
              "$type": "Alternatives",
              "elements": [
                {
                  "$type": "Keyword",
                  "value": "?="
                },
                {
                  "$type": "Keyword",
                  "value": "?!"
                }
              ]
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TerminalRuleCall",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "TerminalRuleCall"
            }
          },
          {
            "$type": "Assignment",
            "feature": "rule",
            "operator": "=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/rules@46"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@59"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NegatedToken",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "NegatedToken"
            }
          },
          {
            "$type": "Keyword",
            "value": "!"
          },
          {
            "$type": "Assignment",
            "feature": "terminal",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@50"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UntilToken",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "UntilToken"
            }
          },
          {
            "$type": "Keyword",
            "value": "->"
          },
          {
            "$type": "Assignment",
            "feature": "terminal",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@50"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RegexToken",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "RegexToken"
            }
          },
          {
            "$type": "Assignment",
            "feature": "regex",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@61"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Wildcard",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "Wildcard"
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CharacterRange",
      "inferredType": {
        "$type": "InferredType",
        "name": "AbstractElement"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "inferredType": {
              "$type": "InferredType",
              "name": "CharacterRange"
            }
          },
          {
            "$type": "Assignment",
            "feature": "left",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ".."
              },
              {
                "$type": "Assignment",
                "feature": "right",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@25"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureName",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "current"
          },
          {
            "$type": "Keyword",
            "value": "entry"
          },
          {
            "$type": "Keyword",
            "value": "extends"
          },
          {
            "$type": "Keyword",
            "value": "false"
          },
          {
            "$type": "Keyword",
            "value": "fragment"
          },
          {
            "$type": "Keyword",
            "value": "grammar"
          },
          {
            "$type": "Keyword",
            "value": "hidden"
          },
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "Keyword",
            "value": "returns"
          },
          {
            "$type": "Keyword",
            "value": "terminal"
          },
          {
            "$type": "Keyword",
            "value": "true"
          },
          {
            "$type": "Keyword",
            "value": "type"
          },
          {
            "$type": "Keyword",
            "value": "infer"
          },
          {
            "$type": "Keyword",
            "value": "infers"
          },
          {
            "$type": "Keyword",
            "value": "with"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@9"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@59"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\^?[_a-zA-Z][\\\\w_]*"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "STRING",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\"(\\\\\\\\.|[^\\"\\\\\\\\])*\\"|'(\\\\\\\\.|[^'\\\\\\\\])*'"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "RegexLiteral",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/(?![*+?])(?:[^\\\\r\\\\n\\\\[/\\\\\\\\]|\\\\\\\\.|\\\\[(?:[^\\\\r\\\\n\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\])+\\\\/"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "WS",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\s+"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*"
      },
      "fragment": false
    }
  ],
  "types": [
    {
      "$type": "Type",
      "name": "AbstractType",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/rules@1"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/rules@10"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/rules@23/definition/elements@0"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/rules@13"
            }
          }
        ]
      }
    }
  ],
  "definesHiddenTokens": false,
  "hiddenTokens": [],
  "imports": [],
  "interfaces": [],
  "usedGrammars": []
}`));gR.LangiumGrammarGrammar=Pme});var v2=p(_a=>{"use strict";Object.defineProperty(_a,"__esModule",{value:!0});_a.LangiumGrammarGeneratedModule=_a.LangiumGrammarGeneratedSharedModule=_a.LangiumGrammarParserConfig=_a.LangiumGrammarLanguageMetaData=void 0;var Eme=yt(),Ome=g2();_a.LangiumGrammarLanguageMetaData={languageId:"langium",fileExtensions:[".langium"],caseInsensitive:!1};_a.LangiumGrammarParserConfig={maxLookahead:3};_a.LangiumGrammarGeneratedSharedModule={AstReflection:()=>new Eme.LangiumGrammarAstReflection};_a.LangiumGrammarGeneratedModule={Grammar:()=>(0,Ome.LangiumGrammarGrammar)(),LanguageMetaData:()=>_a.LangiumGrammarLanguageMetaData,parser:{ParserConfig:()=>_a.LangiumGrammarParserConfig}}});var Ci=p(Jr=>{"use strict";Object.defineProperty(Jr,"__esModule",{value:!0});Jr.Deferred=Jr.MutexLock=Jr.interruptAndCheck=Jr.isOperationCancelled=Jr.OperationCancelled=Jr.setInterruptionPeriod=Jr.startCancelableOperation=Jr.delayNextTick=void 0;var vR=Nl();function _2(){return new Promise(r=>{typeof setImmediate>"u"?setTimeout(r,0):setImmediate(r)})}Jr.delayNextTick=_2;var TP=0,$2=10;function kme(){return TP=Date.now(),new vR.CancellationTokenSource}Jr.startCancelableOperation=kme;function Ime(r){$2=r}Jr.setInterruptionPeriod=Ime;Jr.OperationCancelled=Symbol("OperationCancelled");function T2(r){return r===Jr.OperationCancelled}Jr.isOperationCancelled=T2;async function Fme(r){if(r===vR.CancellationToken.None)return;let e=Date.now();if(e-TP>=$2&&(TP=e,await _2()),r.isCancellationRequested)throw Jr.OperationCancelled}Jr.interruptAndCheck=Fme;var RP=class{constructor(){this.previousAction=Promise.resolve(),this.previousTokenSource=new vR.CancellationTokenSource}lock(e){this.cancel();let t=new vR.CancellationTokenSource;return this.previousTokenSource=t,this.previousAction=this.previousAction.then(()=>e(t.token).catch(n=>{T2(n)||console.error("Error: ",n)}))}cancel(){this.previousTokenSource.cancel()}};Jr.MutexLock=RP;var bP=class{constructor(){this.promise=new Promise((e,t)=>{this.resolve=n=>(e(n),this),this.reject=n=>(t(n),this)})}};Jr.Deferred=bP});var $R=p(_R=>{"use strict";Object.defineProperty(_R,"__esModule",{value:!0});_R.DefaultScopeComputation=void 0;var CP=Nl(),R2=bt(),Nme=us(),b2=Ci(),AP=class{constructor(e){this.nameProvider=e.references.NameProvider,this.descriptions=e.workspace.AstNodeDescriptionProvider}async computeExports(e,t=CP.CancellationToken.None){return this.computeExportsForNode(e.parseResult.value,e,void 0,t)}async computeExportsForNode(e,t,n=R2.streamContents,i=CP.CancellationToken.None){let a=[];this.exportNode(e,a,t);for(let s of n(e))await(0,b2.interruptAndCheck)(i),this.exportNode(s,a,t);return a}exportNode(e,t,n){let i=this.nameProvider.getName(e);i&&t.push(this.descriptions.createDescription(e,i,n))}async computeLocalScopes(e,t=CP.CancellationToken.None){let n=e.parseResult.value,i=new Nme.MultiMap;for(let a of(0,R2.streamAllContents)(n))await(0,b2.interruptAndCheck)(t),this.processNode(a,e,i);return i}processNode(e,t,n){let i=e.$container;if(i){let a=this.nameProvider.getName(e);a&&n.add(i,this.descriptions.createDescription(e,a,t))}}};_R.DefaultScopeComputation=AP});var RR=p(Du=>{"use strict";Object.defineProperty(Du,"__esModule",{value:!0});Du.DefaultScopeProvider=Du.EMPTY_SCOPE=Du.StreamScope=void 0;var qme=bt(),TR=vn(),Py=class{constructor(e,t,n){this.elements=e,this.outerScope=t,this.caseInsensitive=n?.caseInsensitive}getAllElements(){return this.outerScope?this.elements.concat(this.outerScope.getAllElements()):this.elements}getElement(e){let t=this.caseInsensitive?this.elements.find(n=>n.name.toLowerCase()===e.toLowerCase()):this.elements.find(n=>n.name===e);if(t)return t;if(this.outerScope)return this.outerScope.getElement(e)}};Du.StreamScope=Py;Du.EMPTY_SCOPE={getElement(){},getAllElements(){return TR.EMPTY_STREAM}};var wP=class{constructor(e){this.reflection=e.shared.AstReflection,this.nameProvider=e.references.NameProvider,this.descriptions=e.workspace.AstNodeDescriptionProvider,this.indexManager=e.shared.workspace.IndexManager}getScope(e){let t=[],n=this.reflection.getReferenceType(e),i=(0,qme.getDocument)(e.container).precomputedScopes;if(i){let s=e.container;do{let o=i.get(s);o.length>0&&t.push((0,TR.stream)(o).filter(u=>this.reflection.isSubtype(u.type,n))),s=s.$container}while(s)}let a=this.getGlobalScope(n,e);for(let s=t.length-1;s>=0;s--)a=this.createScope(t[s],a);return a}createScope(e,t,n){return new Py((0,TR.stream)(e),t,n)}createScopeForNodes(e,t,n){let i=(0,TR.stream)(e).map(a=>{let s=this.nameProvider.getName(a);if(s)return this.descriptions.createDescription(a,s)}).nonNullable();return new Py(i,t,n)}getGlobalScope(e,t){return new Py(this.indexManager.allElements(e))}};Du.DefaultScopeProvider=wP});var Bl=p(Ey=>{"use strict";Object.defineProperty(Ey,"__esModule",{value:!0});Ey.relativeURI=Ey.equalURI=void 0;function xme(r,e){return r?.toString()===e?.toString()}Ey.equalURI=xme;function Lme(r,e){let t=r.path,n=e.path,i=t.split("/").filter(c=>c.length>0),a=n.split("/").filter(c=>c.length>0),s=0;for(;s<i.length&&i[s]===a[s];s++);let o="../".repeat(i.length-s),u=a.slice(s).join("/");return o+u}Ey.relativeURI=Lme});var w2=p(ky=>{"use strict";Object.defineProperty(ky,"__esModule",{value:!0});ky.LangiumGrammarScopeComputation=ky.LangiumGrammarScopeProvider=void 0;var jme=$R(),DP=RR(),Oy=bt(),C2=Ut(),A2=vn(),Ume=Bl(),$a=yt(),SP=$n(),MP=class extends DP.DefaultScopeProvider{constructor(e){super(e)}getScope(e){let t=this.reflection.getReferenceType(e);return t===$a.AbstractType?this.getTypeScope(t,e):super.getScope(e)}getTypeScope(e,t){let n,i=(0,Oy.getDocument)(t.container).precomputedScopes,a=(0,Oy.findRootNode)(t.container);if(i&&a){let o=i.get(a);o.length>0&&(n=(0,A2.stream)(o).filter(u=>u.type===$a.Interface||u.type===$a.Type))}let s=this.getGlobalScope(e,t);return n?this.createScope(n,s):s}getGlobalScope(e,t){let n=(0,Oy.getContainerOfType)(t.container,$a.isGrammar);if(!n)return DP.EMPTY_SCOPE;let i=(0,A2.stream)(n.imports).map(SP.resolveImportUri).nonNullable(),a=this.indexManager.allElements(e).filter(s=>i.some(o=>(0,Ume.equalURI)(s.documentUri,o)));return e===$a.AbstractType&&(a=a.filter(s=>s.type===$a.Interface||s.type===$a.Type)),new DP.StreamScope(a)}};ky.LangiumGrammarScopeProvider=MP;var PP=class extends jme.DefaultScopeComputation{constructor(e){super(e),this.astNodeLocator=e.workspace.AstNodeLocator}exportNode(e,t,n){var i;if(super.exportNode(e,t,n),(0,$a.isParserRule)(e)){if(!e.returnType&&!e.dataType){let a=(i=e.inferredType)!==null&&i!==void 0?i:e;t.push(this.createInterfaceDescription(a,a.name,n))}(0,Oy.streamAllContents)(e).forEach(a=>{if((0,$a.isAction)(a)&&a.inferredType){let s=(0,SP.getActionType)(a);s&&t.push(this.createInterfaceDescription(a,s,n))}})}}processNode(e,t,n){(0,$a.isReturnType)(e)||(this.processTypeNode(e,t,n),this.processActionNode(e,t,n),super.processNode(e,t,n))}processTypeNode(e,t,n){var i;let a=e.$container;if(a&&(0,$a.isParserRule)(e)&&!e.returnType&&!e.dataType){let s=(i=e.inferredType)!==null&&i!==void 0?i:e;n.add(a,this.createInterfaceDescription(s,s.name,t))}}processActionNode(e,t,n){let i=(0,Oy.findRootNode)(e);if(i&&(0,$a.isAction)(e)&&e.inferredType){let a=(0,SP.getActionType)(e);a&&n.add(i,this.createInterfaceDescription(e,a,t))}}createInterfaceDescription(e,t,n=(0,Oy.getDocument)(e)){var i;let a=(i=this.nameProvider.getNameNode(e))!==null&&i!==void 0?i:e.$cstNode;return{node:e,name:t,nameSegment:(0,C2.toDocumentSegment)(a),selectionSegment:(0,C2.toDocumentSegment)(e.$cstNode),type:"Interface",documentUri:n.uri,path:this.astNodeLocator.getAstNodePath(e)}}};ky.LangiumGrammarScopeComputation=PP});var qP=p(di=>{"use strict";var Bme=di&&di.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Gme=di&&di.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Kme=di&&di.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Bme(e,r,t);return Gme(e,r),e};Object.defineProperty(di,"__esModule",{value:!0});di.LangiumGrammarValidator=di.IssueCodes=di.registerValidationChecks=void 0;var EP=oy(),Su=bt(),Mu=us(),OP=Ut(),Pu=jr(),kP=vn(),Mt=Kme(yt()),IP=yt(),fn=$n(),Hme=mP(),FP=fR();function Vme(r){let e=r.validation.ValidationRegistry,t=r.validation.LangiumGrammarValidator,n={Action:[t.checkAssignmentReservedName],AbstractRule:t.checkRuleName,Assignment:[t.checkAssignmentWithFeatureName,t.checkAssignmentToFragmentRule,t.checkAssignmentTypes,t.checkAssignmentReservedName],ParserRule:[t.checkParserRuleDataType,t.checkRuleParametersUsed,t.checkParserRuleReservedName],TerminalRule:[t.checkTerminalRuleReturnType,t.checkHiddenTerminalRule,t.checkEmptyTerminalRule],InferredType:t.checkTypeReservedName,Keyword:t.checkKeyword,UnorderedGroup:t.checkUnorderedGroup,Grammar:[t.checkGrammarName,t.checkEntryGrammarRule,t.checkUniqueRuleName,t.checkUniqueTypeName,t.checkUniqueImportedRules,t.checkDuplicateImportedGrammar,t.checkGrammarHiddenTokens,t.checkGrammarForUnusedRules,t.checkGrammarTypeInfer,t.checkClashingTerminalNames],GrammarImport:t.checkPackageImport,CharacterRange:t.checkInvalidCharacterRange,Interface:[t.checkTypeReservedName,t.checkInterfacePropertyTypes],Type:[t.checkTypeReservedName],TypeAttribute:t.checkTypeReservedName,RuleCall:[t.checkUsedHiddenTerminalRule,t.checkUsedFragmentTerminalRule,t.checkRuleCallParameters],TerminalRuleCall:t.checkUsedHiddenTerminalRule,CrossReference:[t.checkCrossReferenceSyntax,t.checkCrossRefNameAssignment,t.checkCrossRefTerminalType,t.checkCrossRefType,t.checkCrossReferenceToTypeUnion],SimpleType:t.checkFragmentsInTypes,ReferenceType:t.checkReferenceTypeUnion};e.register(n,t)}di.registerValidationChecks=Vme;var fi;(function(r){r.GrammarNameUppercase="grammar-name-uppercase",r.RuleNameUppercase="rule-name-uppercase",r.HiddenGrammarTokens="hidden-grammar-tokens",r.UseRegexTokens="use-regex-tokens",r.EntryRuleTokenSyntax="entry-rule-token-syntax",r.CrossRefTokenSyntax="cross-ref-token-syntax",r.UnnecessaryFileExtension="unnecessary-file-extension",r.InvalidReturns="invalid-returns",r.InvalidInfers="invalid-infers",r.MissingInfer="missing-infer",r.MissingReturns="missing-returns",r.SuperfluousInfer="superfluous-infer",r.OptionalUnorderedGroup="optional-unordered-group"})(fi=di.IssueCodes||(di.IssueCodes={}));var NP=class{constructor(e){this.references=e.references.References,this.documents=e.shared.workspace.LangiumDocuments}checkGrammarName(e,t){if(e.name){let n=e.name.substring(0,1);n.toUpperCase()!==n&&t("warning","Grammar name should start with an upper case letter.",{node:e,property:"name",code:fi.GrammarNameUppercase})}}checkEntryGrammarRule(e,t){if(e.isDeclared&&!e.name)return;let n=e.rules.filter(i=>Mt.isParserRule(i)&&i.entry);if(e.isDeclared&&n.length===0){let i=e.rules.find(a=>Mt.isParserRule(a)&&!(0,fn.isDataTypeRule)(a));i?t("error","The grammar is missing an entry parser rule. This rule can be an entry one.",{node:i,property:"name",code:fi.EntryRuleTokenSyntax}):t("error","This grammar is missing an entry parser rule.",{node:e,property:"name"})}else!e.isDeclared&&n.length>=1?n.forEach(i=>t("error","Cannot declare entry rules for unnamed grammars.",{node:i,property:"name"})):n.length>1?n.forEach(i=>t("error","The entry rule has to be unique.",{node:i,property:"name"})):n.length===1&&(0,fn.isDataTypeRule)(n[0])&&t("error","The entry rule cannot be a data type rule.",{node:n[0],property:"name"})}checkUniqueRuleName(e,t){let n=i=>(0,kP.stream)(i.rules).filter(a=>!Av(a));this.checkUniqueName(e,t,n,"rule")}checkUniqueTypeName(e,t){let n=i=>(0,kP.stream)(i.types).concat(i.interfaces);this.checkUniqueName(e,t,n,"type")}checkUniqueName(e,t,n,i){let a=new Mu.MultiMap;n(e).forEach(u=>a.add(u.name,u));for(let[,u]of a.entriesGroupedByKey())u.length>1&&u.forEach(c=>{t("error",`A ${i}'s name has to be unique.`,{node:c,property:"name"})});let s=new Set,o=(0,fn.resolveTransitiveImports)(this.documents,e);for(let u of o)n(u).forEach(c=>s.add(c.name));for(let u of a.keys())s.has(u)&&a.get(u).forEach(f=>{t("error",`A ${i} with the name '${f.name}' already exists in an imported grammar.`,{node:f,property:"name"})})}checkDuplicateImportedGrammar(e,t){let n=new Mu.MultiMap;for(let i of e.imports){let a=(0,fn.resolveImport)(this.documents,i);a&&n.add(a,i)}for(let[,i]of n.entriesGroupedByKey())i.length>1&&i.forEach((a,s)=>{s>0&&t("warning","The grammar is already being directly imported.",{node:a,tags:[EP.DiagnosticTag.Unnecessary]})})}checkUniqueImportedRules(e,t){let n=new Map;for(let a of e.imports){let s=(0,fn.resolveTransitiveImports)(this.documents,a);n.set(a,s)}let i=new Mu.MultiMap;for(let a of e.imports){let s=n.get(a);for(let o of e.imports){if(a===o)continue;let u=n.get(o),c=this.getDuplicateExportedRules(s,u);for(let f of c)i.add(a,f)}}for(let a of e.imports){let s=i.get(a);s.length>0&&t("error","Some rules exported by this grammar are also included in other imports: "+(0,kP.stream)(s).distinct().join(", "),{node:a,property:"path"})}}getDuplicateExportedRules(e,t){let i=e.filter(o=>!t.includes(o)).flatMap(o=>o.rules),a=t.flatMap(o=>o.rules),s=new Set;for(let o of i){let u=o.name;for(let c of a){let f=c.name;u===f&&s.add(c.name)}}return s}checkGrammarTypeInfer(e,t){var n,i,a;let s=new Set;for(let u of e.types)s.add(u.name);for(let u of e.interfaces)s.add(u.name);(0,fn.resolveTransitiveImports)(this.documents,e).forEach(u=>{u.types.forEach(c=>s.add(c.name)),u.interfaces.forEach(c=>s.add(c.name))});for(let u of e.rules.filter(Mt.isParserRule)){if(Av(u))continue;let c=(0,fn.isDataTypeRule)(u),f=!u.returnType&&!u.dataType,d=(0,fn.getTypeNameWithoutError)(u);if(!c&&d&&s.has(d)===f){if((f||((n=u.returnType)===null||n===void 0?void 0:n.ref)!==void 0)&&u.inferredType===void 0)t("error",o(d,f),{node:u,property:"name",code:fi.MissingReturns});else if(f||((i=u.returnType)===null||i===void 0?void 0:i.ref)!==void 0){let m=(0,Pu.findNodeForKeyword)(u.inferredType.$cstNode,"infers");t("error",o(d,f),{node:u.inferredType,property:"name",code:fi.InvalidInfers,data:(0,OP.toDocumentSegment)(m)})}}else if(c&&f){let m=(0,Pu.findNodeForKeyword)(u.$cstNode,"infer");t("error","Data type rules cannot infer a type.",{node:u,property:"inferredType",code:fi.InvalidInfers,data:(0,OP.toDocumentSegment)(m)})}}for(let u of(0,Su.streamAllContents)(e).filter(Mt.isAction)){let c=this.getActionType(u);if(c){let f=Boolean(u.inferredType),d=(0,fn.getTypeNameWithoutError)(u);if(u.type&&d&&s.has(d)===f){let m=f?(0,Pu.findNodeForKeyword)(u.$cstNode,"infer"):(0,Pu.findNodeForKeyword)(u.$cstNode,"{");t("error",o(d,f),{node:u,property:"type",code:f?fi.SuperfluousInfer:fi.MissingInfer,data:(0,OP.toDocumentSegment)(m)})}else if(c&&d&&s.has(d)&&f&&u.$cstNode){let m=(0,Pu.findNodeForProperty)((a=u.inferredType)===null||a===void 0?void 0:a.$cstNode,"name"),h=(0,Pu.findNodeForKeyword)(u.$cstNode,"{");m&&h&&t("error",`${d} is a declared type and cannot be redefined.`,{node:u,property:"type",code:fi.SuperfluousInfer,data:{start:h.range.end,end:m.range.start}})}}}function o(u,c){return c?`The type '${u}' is already explicitly declared and cannot be inferred.`:`The type '${u}' is not explicitly declared and must be inferred.`}}getActionType(e){var t;if(e.type)return(t=e.type)===null||t===void 0?void 0:t.ref;if(e.inferredType)return e.inferredType}checkGrammarHiddenTokens(e,t){e.definesHiddenTokens&&t("error","Hidden terminals are declared at the terminal definition.",{node:e,property:"definesHiddenTokens",code:fi.HiddenGrammarTokens})}checkHiddenTerminalRule(e,t){e.hidden&&e.fragment&&t("error","Cannot use terminal fragments as hidden tokens.",{node:e,property:"hidden"})}checkEmptyTerminalRule(e,t){try{let n=(0,fn.terminalRegex)(e);new RegExp(n).test("")&&t("error","This terminal could match an empty string.",{node:e,property:"name"})}catch{}}checkUsedHiddenTerminalRule(e,t){let n=(0,Su.getContainerOfType)(e,i=>Mt.isTerminalRule(i)||Mt.isParserRule(i));if(n){if("hidden"in n&&n.hidden)return;let i=e.rule.ref;Mt.isTerminalRule(i)&&i.hidden&&t("error","Cannot use hidden terminal in non-hidden rule",{node:e,property:"rule"})}}checkUsedFragmentTerminalRule(e,t){let n=e.rule.ref;Mt.isTerminalRule(n)&&n.fragment&&(0,Su.getContainerOfType)(e,Mt.isParserRule)&&t("error","Cannot use terminal fragments as part of parser rules.",{node:e,property:"rule"})}checkCrossReferenceSyntax(e,t){e.deprecatedSyntax&&t("error","'|' is deprecated. Please, use ':' instead.",{node:e,property:"deprecatedSyntax",code:fi.CrossRefTokenSyntax})}checkPackageImport(e,t){(0,fn.resolveImport)(this.documents,e)===void 0?t("error","Import cannot be resolved.",{node:e,property:"path"}):e.path.endsWith(".langium")&&t("warning","Imports do not need file extensions.",{node:e,property:"path",code:fi.UnnecessaryFileExtension})}checkInvalidCharacterRange(e,t){if(e.right){let n="Character ranges cannot use more than one character",i=!1;e.left.value.length>1&&(i=!0,t("error",n,{node:e.left,property:"value"})),e.right.value.length>1&&(i=!0,t("error",n,{node:e.right,property:"value"})),i||t("hint","Consider using regex instead of character ranges",{node:e,code:fi.UseRegexTokens})}}checkGrammarForUnusedRules(e,t){let n=(0,Pu.getAllReachableRules)(e,!0);for(let i of e.rules)Mt.isTerminalRule(i)&&i.hidden||Av(i)||n.has(i)||t("hint","This rule is declared but never referenced.",{node:i,property:"name",tags:[EP.DiagnosticTag.Unnecessary]})}checkClashingTerminalNames(e,t){let n=new Mu.MultiMap,i=new Set;for(let c of e.rules)Mt.isTerminalRule(c)&&c.name&&n.add(c.name,c),Mt.isParserRule(c)&&(0,Su.streamAllContents)(c).filter(Mt.isKeyword).forEach(d=>i.add(d.value));let a=new Mu.MultiMap,s=new Mu.MultiMap;for(let c of e.imports){let f=(0,fn.resolveTransitiveImports)(this.documents,c);for(let d of f)for(let m of d.rules)Mt.isTerminalRule(m)&&m.name?a.add(m.name,c):Mt.isParserRule(m)&&m.name&&(0,Su.streamAllContents)(m).filter(Mt.isKeyword).forEach(y=>s.add(y.value,c))}for(let c of n.values())if(i.has(c.name))t("error","Terminal name clashes with existing keyword.",{node:c,property:"name"});else if(s.has(c.name)){let f=s.get(c.name);t("error",`Terminal name clashes with imported keyword from "${f[0].path}".`,{node:c,property:"name"})}let o=new Mu.MultiMap;for(let c of i)for(let f of a.get(c))o.add(f,c);for(let[c,f]of o.entriesGroupedByKey())f.length>0&&t("error",`Imported terminals (${f.join(", ")}) clash with locally defined keywords.`,{node:c,property:"path"});let u=new Mu.MultiMap;for(let[c,f]of a.entriesGroupedByKey()){let d=s.get(c);d.length>0&&f.filter(m=>!d.includes(m)).forEach(m=>u.add(m,c))}for(let[c,f]of u.entriesGroupedByKey())f.length>0&&t("error",`Imported terminals (${f.join(", ")}) clash with imported keywords.`,{node:c,property:"path"})}checkRuleName(e,t){if(e.name&&!Av(e)){let n=e.name.substring(0,1);n.toUpperCase()!==n&&t("warning","Rule name should start with an upper case letter.",{node:e,property:"name",code:fi.RuleNameUppercase})}}checkTypeReservedName(e,t){this.checkReservedName(e,"name",t)}checkAssignmentReservedName(e,t){this.checkReservedName(e,"feature",t)}checkParserRuleReservedName(e,t){e.inferredType||this.checkReservedName(e,"name",t)}checkReservedName(e,t,n){let i=e[t];typeof i=="string"&&Wme.has(i)&&n("error",`'${i}' is a reserved name of the JavaScript runtime.`,{node:e,property:t})}checkKeyword(e,t){(0,Su.getContainerOfType)(e,IP.isParserRule)&&(e.value.length===0?t("error","Keywords cannot be empty.",{node:e}):e.value.trim().length===0?t("error","Keywords cannot only consist of whitespace characters.",{node:e}):/\s/g.test(e.value)&&t("warning","Keywords should not contain whitespace characters.",{node:e}))}checkUnorderedGroup(e,t){e.elements.forEach(n=>{(0,fn.isOptionalCardinality)(n.cardinality)&&t("error","Optional elements in Unordered groups are currently not supported",{node:n,code:fi.OptionalUnorderedGroup})})}checkRuleParametersUsed(e,t){let n=e.parameters;if(n.length>0){let i=(0,Su.streamAllContents)(e).filter(Mt.isParameterReference);for(let a of n)i.some(s=>s.parameter.ref===a)||t("hint",`Parameter '${a.name}' is unused.`,{node:a,tags:[EP.DiagnosticTag.Unnecessary]})}}checkParserRuleDataType(e,t){if(Av(e))return;let n=(0,fn.hasDataTypeReturn)(e),i=(0,fn.isDataTypeRule)(e);!n&&i?t("error","This parser rule does not create an object. Add a primitive return type or an action to the start of the rule to force object instantiation.",{node:e,property:"name"}):n&&!i&&t("error","Normal parser rules are not allowed to return a primitive value. Use a datatype rule for that.",{node:e,property:e.dataType?"dataType":"returnType"})}checkAssignmentToFragmentRule(e,t){e.terminal&&(0,IP.isRuleCall)(e.terminal)&&(0,IP.isParserRule)(e.terminal.rule.ref)&&e.terminal.rule.ref.fragment&&t("error",`Cannot use fragment rule '${e.terminal.rule.ref.name}' for assignment of property '${e.feature}'.`,{node:e,property:"terminal"})}checkAssignmentTypes(e,t){if(!e.terminal)return;let n;(0,Su.streamAllContents)(e.terminal).map(a=>Mt.isCrossReference(a)?"ref":"other").find(a=>n?a!==n:(n=a,!1))&&t("error",this.createMixedTypeError(e.feature),{node:e,property:"terminal"})}checkInterfacePropertyTypes(e,t){for(let n of e.attributes)if(n.type){let i=(0,Hme.typeDefinitionToPropertyType)(n.type),a=(0,FP.flattenPlainType)(i),s=!1,o=!1;for(let u of a)(0,FP.isPlainReferenceType)(u)?s=!0:(0,FP.isPlainReferenceType)(u)||(o=!0);s&&o&&t("error",this.createMixedTypeError(n.name),{node:n,property:"type"})}}createMixedTypeError(e){return`Mixing a cross-reference with other types is not supported. Consider splitting property "${e}" into two or more different properties.`}checkTerminalRuleReturnType(e,t){var n;!((n=e.type)===null||n===void 0)&&n.name&&!(0,fn.isPrimitiveType)(e.type.name)&&t("error","Terminal rules can only return primitive types like 'string', 'boolean', 'number', 'Date' or 'bigint'.",{node:e.type,property:"name"})}checkRuleCallParameters(e,t){let n=e.rule.ref;if(Mt.isParserRule(n)){let i=n.parameters.length,a=e.arguments.length;i!==a&&t("error",`Rule '${n.name}' expects ${i} arguments, but got ${a}.`,{node:e})}else Mt.isTerminalRule(n)&&e.arguments.length>0&&t("error","Terminal rules do not accept any arguments",{node:e})}checkCrossRefNameAssignment(e,t){!e.terminal&&e.type.ref&&!(0,Pu.findNameAssignment)(e.type.ref)&&t("error","Cannot infer terminal or data type rule for cross reference.",{node:e,property:"type"})}checkCrossRefTerminalType(e,t){Mt.isRuleCall(e.terminal)&&Mt.isParserRule(e.terminal.rule.ref)&&!(0,fn.isDataTypeRule)(e.terminal.rule.ref)&&t("error","Parser rules cannot be used for cross references.",{node:e.terminal,property:"rule"})}checkCrossRefType(e,t){let n=this.checkReferenceToRuleButNotType(e?.type);n&&t("error",n,{node:e,property:"type"})}checkCrossReferenceToTypeUnion(e,t){if(Mt.isType(e.type.ref)&&Mt.isUnionType(e.type.ref.type)){let n=D2(e.type.ref.type);n.length>0&&t("error",`Cross-reference on type union is only valid if all alternatives are AST nodes. ${n.join(", ")} ${n.length>1?"are":"is"} not ${n.length>1?"":"an "}AST node${n.length>1?"s":""}.`,{node:e,property:"type"})}}checkFragmentsInTypes(e,t){var n,i;Mt.isParserRule((n=e.typeRef)===null||n===void 0?void 0:n.ref)&&(!((i=e.typeRef)===null||i===void 0)&&i.ref.fragment)&&t("error","Cannot use rule fragments in types.",{node:e,property:"typeRef"})}checkReferenceTypeUnion(e,t){Mt.isSimpleType(e.referenceType)||t("error","Only direct rule references are allowed in reference types.",{node:e,property:"referenceType"})}checkReferenceToRuleButNotType(e){if(e&&Mt.isParserRule(e.ref)&&!(0,fn.isDataTypeRule)(e.ref)&&(e.ref.returnType||e.ref.inferredType)){let t=(0,fn.getTypeNameWithoutError)(e.ref);if(t)return`Use the rule type '${t}' instead of the typed rule name '${e.ref.name}' for cross references.`}}checkAssignmentWithFeatureName(e,t){e.feature==="name"&&Mt.isCrossReference(e.terminal)&&t("warning",'The "name" property is not recommended for cross-references.',{node:e,property:"feature"})}};di.LangiumGrammarValidator=NP;function Av(r){return!r.definition||!r.definition.$cstNode||r.definition.$cstNode.length===0}var Wme=new Set(["Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","Map","Set","WeakMap","WeakSet","Error","AggregateError","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","BigInt","RegExp","Number","Object","Function","Symbol","String","Math","NaN","Infinity","isFinite","isNaN","Buffer","ArrayBuffer","SharedArrayBuffer","Atomics","DataView","JSON","globalThis","decodeURIComponent","decodeURI","encodeURIComponent","encodeURI","parseInt","parseFloat","Promise","Generator","GeneratorFunction","AsyncFunction","AsyncGenerator","AsyncGeneratorFunction","Reflect","Proxy","Date","Intl","eval","undefined"]);function D2(r){let e=[];return r.types.forEach(t=>{var n;Mt.isSimpleType(t)&&(!((n=t.typeRef)===null||n===void 0)&&n.ref?Mt.isType(t.typeRef.ref)&&(Mt.isUnionType(t.typeRef.ref.type)?e.push(...D2(t.typeRef.ref.type)):e.push(t.typeRef.ref.name)):t.stringType?e.push(`"${t.stringType}"`):t.primitiveType&&e.push(t.primitiveType))}),Array.from(new Set(e))}});var AR=p(cs=>{"use strict";Object.defineProperty(cs,"__esModule",{value:!0});cs.DocumentValidator=cs.toDiagnosticSeverity=cs.getDiagnosticRange=cs.DefaultDocumentValidator=void 0;var Ta=Pe(),S2=jr(),zme=bt(),Yme=Ut(),bR=Ci(),xP=class{constructor(e){this.validationRegistry=e.validation.ValidationRegistry,this.metadata=e.LanguageMetaData}async validateDocument(e,t=Ta.CancellationToken.None){let n=e.parseResult,i=[];await(0,bR.interruptAndCheck)(t);for(let a of n.lexerErrors){let s={severity:Ta.DiagnosticSeverity.Error,range:{start:{line:a.line-1,character:a.column-1},end:{line:a.line-1,character:a.column+a.length-1}},message:a.message,code:CR.LexingError,source:this.getSource()};i.push(s)}for(let a of n.parserErrors){let s;if(isNaN(a.token.startOffset)){if("previousToken"in a){let o=a.previousToken;if(isNaN(o.startOffset))s=Ta.Range.create(0,0,0,0);else{let u=Ta.Position.create(o.endLine-1,o.endColumn);s=Ta.Range.create(u,u)}}}else s=(0,Yme.tokenToRange)(a.token);if(s){let o={severity:Ta.DiagnosticSeverity.Error,range:s,message:a.message,code:CR.ParsingError,source:this.getSource()};i.push(o)}}for(let a of e.references){let s=a.error;if(s){let o={containerType:s.container.$type,property:s.property,refText:s.reference.$refText},u={node:s.container,property:s.property,index:s.index,code:CR.LinkingError,data:o};i.push(this.toDiagnostic("error",s.message,u))}}try{i.push(...await this.validateAst(n.value,e,t))}catch(a){if((0,bR.isOperationCancelled)(a))throw a;console.error("An error occurred during validation:",a)}return await(0,bR.interruptAndCheck)(t),i}async validateAst(e,t,n=Ta.CancellationToken.None){let i=[],a=(s,o,u)=>{i.push(this.toDiagnostic(s,o,u))};return await Promise.all((0,zme.streamAst)(e).map(async s=>{await(0,bR.interruptAndCheck)(n);let o=this.validationRegistry.getChecks(s.$type);for(let u of o)await u(s,a,n)})),i}toDiagnostic(e,t,n){return{message:t,range:M2(n),severity:P2(e),code:n.code,codeDescription:n.codeDescription,tags:n.tags,relatedInformation:n.relatedInformation,data:n.data,source:this.getSource()}}getSource(){return this.metadata.languageId}};cs.DefaultDocumentValidator=xP;function M2(r){if(Ta.Range.is(r.range))return r.range;let e;return typeof r.property=="string"?e=(0,S2.findNodeForProperty)(r.node.$cstNode,r.property,r.index):typeof r.keyword=="string"&&(e=(0,S2.findNodeForKeyword)(r.node.$cstNode,r.keyword,r.index)),e??(e=r.node.$cstNode),e?e.range:{start:{line:0,character:0},end:{line:0,character:0}}}cs.getDiagnosticRange=M2;function P2(r){switch(r){case"error":return Ta.DiagnosticSeverity.Error;case"warning":return Ta.DiagnosticSeverity.Warning;case"info":return Ta.DiagnosticSeverity.Information;case"hint":return Ta.DiagnosticSeverity.Hint;default:throw new Error("Invalid diagnostic severity: "+r)}}cs.toDiagnosticSeverity=P2;var CR;(function(r){r.LexingError="lexing-error",r.ParsingError="parsing-error",r.LinkingError="linking-error"})(CR=cs.DocumentValidator||(cs.DocumentValidator={}))});var F2=p(so=>{"use strict";var Xme=so&&so.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Jme=so&&so.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Qme=so&&so.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Xme(e,r,t);return Jme(e,r),e};Object.defineProperty(so,"__esModule",{value:!0});so.LangiumGrammarCodeActionProvider=void 0;var Ra=Pe(),Zme=_n(),E2=bt(),O2=Ut(),eye=jr(),k2=sf(),I2=Bl(),tye=AR(),LP=Qme(yt()),ba=qP(),jP=class{constructor(e){this.reflection=e.shared.AstReflection,this.indexManager=e.shared.workspace.IndexManager}getCodeActions(e,t){let n=[],i=a=>a&&n.push(a);for(let a of t.context.diagnostics)this.createCodeActions(a,e,i);return n}createCodeActions(e,t,n){switch(e.code){case ba.IssueCodes.GrammarNameUppercase:case ba.IssueCodes.RuleNameUppercase:n(this.makeUpperCase(e,t));break;case ba.IssueCodes.HiddenGrammarTokens:n(this.fixHiddenTerminals(e,t));break;case ba.IssueCodes.UseRegexTokens:n(this.fixRegexTokens(e,t));break;case ba.IssueCodes.EntryRuleTokenSyntax:n(this.addEntryKeyword(e,t));break;case ba.IssueCodes.CrossRefTokenSyntax:n(this.fixCrossRefSyntax(e,t));break;case ba.IssueCodes.UnnecessaryFileExtension:n(this.fixUnnecessaryFileExtension(e,t));break;case ba.IssueCodes.MissingReturns:n(this.fixMissingReturns(e,t));break;case ba.IssueCodes.InvalidInfers:case ba.IssueCodes.InvalidReturns:n(this.fixInvalidReturnsInfers(e,t));break;case ba.IssueCodes.MissingInfer:n(this.fixMissingInfer(e,t));break;case ba.IssueCodes.SuperfluousInfer:n(this.fixSuperfluousInfer(e,t));break;case tye.DocumentValidator.LinkingError:{let i=e.data;i&&i.containerType==="RuleCall"&&i.property==="rule"&&n(this.addNewRule(e,i,t)),i&&this.lookInGlobalScope(e,i,t).forEach(n);break}}}fixMissingReturns(e,t){let n=t.textDocument.getText(e.range);if(n)return{title:`Add explicit return type for parser rule ${n}`,kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],edit:{changes:{[t.textDocument.uri]:[{range:e.range,newText:`${n} returns ${n}`}]}}}}fixInvalidReturnsInfers(e,t){let n=e.data;if(n){let i=t.textDocument.getText(n.range);return{title:`Correct ${i} usage`,kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],edit:{changes:{[t.textDocument.uri]:[{range:n.range,newText:i==="infers"?"returns":"infers"}]}}}}}fixMissingInfer(e,t){let n=e.data;if(n)return{title:"Correct 'infer' usage",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],edit:{changes:{[t.textDocument.uri]:[{range:{start:n.range.end,end:n.range.end},newText:"infer "}]}}}}fixSuperfluousInfer(e,t){if(e.data)return{title:"Remove the 'infer' keyword",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],edit:{changes:{[t.textDocument.uri]:[{range:e.data,newText:""}]}}}}fixUnnecessaryFileExtension(e,t){let n=Object.assign({},e.range.end);n.character-=1;let i=Object.assign({},n);return i.character-=8,{title:"Remove file extension",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:{start:i,end:n},newText:""}]}}}}makeUpperCase(e,t){let n={start:e.range.start,end:{line:e.range.start.line,character:e.range.start.character+1}};return{title:"First letter to upper case",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:n,newText:t.textDocument.getText(n).toUpperCase()}]}}}}addEntryKeyword(e,t){return{title:"Add entry keyword",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:{start:e.range.start,end:e.range.start},newText:"entry "}]}}}}fixRegexTokens(e,t){let n=t.textDocument.offsetAt(e.range.start),i=t.parseResult.value.$cstNode;if(i){let a=(0,O2.findLeafNodeAtOffset)(i,n),s=(0,E2.getContainerOfType)(a?.element,LP.isCharacterRange);if(s&&s.right&&s.$cstNode){let o=s.left.value,u=s.right.value;return{title:"Refactor into regular expression",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:s.$cstNode.range,newText:`/[${(0,k2.escapeRegExp)(o)}-${(0,k2.escapeRegExp)(u)}]/`}]}}}}}}fixCrossRefSyntax(e,t){return{title:"Replace '|' with ':'",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:[{range:e.range,newText:":"}]}}}}fixHiddenTerminals(e,t){let n=t.parseResult.value,i=n.hiddenTokens,a=[],s=(0,eye.findNodeForProperty)(n.$cstNode,"definesHiddenTokens");if(s){let o=s.range.start,u=s.offset,c=n.$cstNode.text.indexOf(")",u)+1;a.push({newText:"",range:{start:o,end:t.textDocument.positionAt(c)}})}for(let o of i){let u=o.ref;if(u&&LP.isTerminalRule(u)&&!u.hidden&&u.$cstNode){let c=u.$cstNode.range.start;a.push({newText:"hidden ",range:{start:c,end:c}})}}return{title:"Fix hidden terminals",kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!0,edit:{changes:{[t.textDocument.uri]:a}}}}addNewRule(e,t,n){let i=n.textDocument.offsetAt(e.range.start),a=n.parseResult.value.$cstNode;if(a){let s=(0,O2.findLeafNodeAtOffset)(a,i),o=(0,E2.getContainerOfType)(s?.element,LP.isParserRule);if(o&&o.$cstNode)return{title:`Add new rule '${t.refText}'`,kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!1,edit:{changes:{[n.textDocument.uri]:[{range:{start:o.$cstNode.range.end,end:o.$cstNode.range.end},newText:`

`+t.refText+`:
    /* TODO implement rule */ {infer `+t.refText+"};"}]}}}}}lookInGlobalScope(e,t,n){var i,a;let s={container:{$type:t.containerType},property:t.property,reference:{$refText:t.refText}},o=this.reflection.getReferenceType(s),u=this.indexManager.allElements(o).filter(m=>m.name===t.refText),c=[],f=-1,d=-1;for(let m of u){if((0,I2.equalURI)(m.documentUri,n.uri))continue;let h=rye(n.uri,m.documentUri),y,_="",w=n.parseResult.value,S=w.imports.find(C=>C.path&&h<C.path);if(S)y=(i=S.$cstNode)===null||i===void 0?void 0:i.range.start;else if(w.imports.length>0){let C=w.imports[w.imports.length-1].$cstNode.range.end;C&&(y={line:C.line+1,character:0})}else w.rules.length>0&&(y=(a=w.rules[0].$cstNode)===null||a===void 0?void 0:a.range.start,_=`
`);y&&((f<0||h.length<d)&&(f=c.length,d=h.length),c.push({title:`Add import to '${h}'`,kind:Ra.CodeActionKind.QuickFix,diagnostics:[e],isPreferred:!1,edit:{changes:{[n.textDocument.uri]:[{range:{start:y,end:y},newText:`import '${h}'
${_}`}]}}}))}return f>=0&&(c[f].isPreferred=!0),c}};so.LangiumGrammarCodeActionProvider=jP;function rye(r,e){let t=Zme.Utils.dirname(r),n=(0,I2.relativeURI)(t,e);return!n.startsWith("./")&&!n.startsWith("../")&&(n="./"+n),n.endsWith(".langium")&&(n=n.substring(0,n.length-8)),n}});var DR=p(wR=>{"use strict";Object.defineProperty(wR,"__esModule",{value:!0});wR.DefaultFoldingRangeProvider=void 0;var UP=Pe(),nye=bt(),iye=Ut(),BP=class{constructor(e){this.commentNames=e.parser.GrammarConfig.multilineCommentRules}getFoldingRanges(e){let t=[],n=i=>t.push(i);return this.collectFolding(e,n),t}collectFolding(e,t){var n;let i=(n=e.parseResult)===null||n===void 0?void 0:n.value;if(i){if(this.shouldProcessContent(i)){let a=(0,nye.streamAllContents)(i).iterator(),s;do if(s=a.next(),!s.done){let o=s.value;this.shouldProcess(o)&&this.collectObjectFolding(e,o,t),this.shouldProcessContent(o)||a.prune()}while(!s.done)}this.collectCommentFolding(e,i,t)}}shouldProcess(e){return!0}shouldProcessContent(e){return!0}collectObjectFolding(e,t,n){let i=t.$cstNode;if(i){let a=this.toFoldingRange(e,i);a&&n(a)}}collectCommentFolding(e,t,n){let i=t.$cstNode;if(i){for(let a of(0,iye.flattenCst)(i))if(this.commentNames.includes(a.tokenType.name)){let s=this.toFoldingRange(e,a,UP.FoldingRangeKind.Comment);s&&n(s)}}}toFoldingRange(e,t,n){let i=t.range,a=i.start,s=i.end;if(!(s.line-a.line<2))return this.includeLastFoldingLine(t,n)||(s=e.textDocument.positionAt(e.textDocument.offsetAt({line:s.line,character:0})-1)),UP.FoldingRange.create(a.line,s.line,a.character,s.character,n)}includeLastFoldingLine(e,t){if(t===UP.FoldingRangeKind.Comment)return!1;let n=e.text,i=n.charAt(n.length-1);return!(i==="}"||i===")"||i==="]")}};wR.DefaultFoldingRangeProvider=BP});var N2=p(SR=>{"use strict";Object.defineProperty(SR,"__esModule",{value:!0});SR.LangiumGrammarFoldingRangeProvider=void 0;var aye=DR(),sye=yt(),GP=class extends aye.DefaultFoldingRangeProvider{shouldProcessContent(e){return!(0,sye.isParserRule)(e)}};SR.LangiumGrammarFoldingRangeProvider=GP});var VP=p(fs=>{"use strict";Object.defineProperty(fs,"__esModule",{value:!0});fs.Formatting=fs.FormattingRegion=fs.DefaultNodeFormatter=fs.AbstractFormatter=void 0;var MR=jr(),KP=Un(),oye=bt(),q2=Ut(),wv=vn(),HP=class{constructor(){this.collector=()=>{}}getNodeFormatter(e){return new PR(e,this.collector)}formatDocument(e,t){let n=e.parseResult;return n.lexerErrors.length===0&&n.parserErrors.length===0?this.doDocumentFormat(e,t.options):[]}isFormatRangeErrorFree(e,t){let n=e.parseResult;return n.lexerErrors.length||n.parserErrors.length?Math.min(...n.lexerErrors.map(a=>{var s;return(s=a.line)!==null&&s!==void 0?s:Number.MAX_VALUE}),...n.parserErrors.map(a=>{var s;return(s=a.token.startLine)!==null&&s!==void 0?s:Number.MAX_VALUE}))>t.end.line:!0}formatDocumentRange(e,t){return this.isFormatRangeErrorFree(e,t.range)?this.doDocumentFormat(e,t.options,t.range):[]}formatDocumentOnType(e,t){let n={start:{character:0,line:t.position.line},end:t.position};return this.isFormatRangeErrorFree(e,n)?this.doDocumentFormat(e,t.options,n):[]}get formatOnTypeOptions(){}doDocumentFormat(e,t,n){let i=new Map,a=(o,u,c)=>{var f,d;let m=this.nodeModeToKey(o,u),h=i.get(m),y=(f=c.options.priority)!==null&&f!==void 0?f:0,_=(d=h?.options.priority)!==null&&d!==void 0?d:0;(!h||_<=y)&&i.set(m,c)};this.collector=a,this.iterateAstFormatting(e,n);let s=this.iterateCstFormatting(e,i,t,n);return this.avoidOverlappingEdits(e.textDocument,s)}avoidOverlappingEdits(e,t){let n=[];for(let i of t){let a=n[n.length-1];if(a){let s=e.offsetAt(i.range.start),o=e.offsetAt(a.range.end);s<o&&n.pop()}n.push(i)}return n}iterateAstFormatting(e,t){let n=e.parseResult.value;this.format(n);let i=(0,oye.streamAllContents)(n).iterator(),a;do if(a=i.next(),!a.done){let s=a.value;this.insideRange(s.$cstNode.range,t)?this.format(s):i.prune()}while(!a.done)}nodeModeToKey(e,t){return`${e.offset}:${e.end}:${t}`}insideRange(e,t){return!t||e.start.line<=t.start.line&&e.end.line>=t.end.line||e.start.line>=t.start.line&&e.end.line<=t.end.line||e.start.line<=t.end.line&&e.end.line>=t.end.line}isNecessary(e,t){return t.getText(e.range)!==e.newText}iterateCstFormatting(e,t,n,i){let a={indentation:0,options:n,document:e.textDocument},s=[],u=this.iterateCstTree(e,a).iterator(),c,f;do if(f=u.next(),!f.done){let d=f.value,m=(0,KP.isLeafCstNode)(d),h=this.nodeModeToKey(d,"prepend"),y=t.get(h);if(t.delete(h),y){let S=this.createTextEdit(c,d,y,a);for(let C of S)C&&this.insideRange(C.range,i)&&this.isNecessary(C,e.textDocument)&&s.push(C)}let _=this.nodeModeToKey(d,"append"),w=t.get(_);if(t.delete(_),w){let S=(0,q2.getNextNode)(d);if(S){let C=this.createTextEdit(d,S,w,a);for(let b of C)b&&this.insideRange(b.range,i)&&this.isNecessary(b,e.textDocument)&&s.push(b)}}if(!y&&d.hidden){let S=this.createHiddenTextEdits(c,d,void 0,a);for(let C of S)C&&this.insideRange(C.range,i)&&this.isNecessary(C,e.textDocument)&&s.push(C)}m&&(c=d)}while(!f.done);return s}createHiddenTextEdits(e,t,n,i){var a;let s=t.range.start.line;if(e&&e.range.end.line===s)return[];let o=[],u={start:{character:0,line:s},end:t.range.start},c=i.document.getText(u),f=this.findFittingMove(u,(a=n?.moves)!==null&&a!==void 0?a:[],i),d=this.getExistingIndentationCharacterCount(c,i),h=this.getIndentationCharacterCount(i,f)-d;if(h===0)return[];let y="";h>0&&(y=(i.options.insertSpaces?" ":"	").repeat(h));let _=t.text.split(`
`);_[0]=c+_[0];for(let w=0;w<_.length;w++){let S=s+w,C={character:0,line:S};if(h>0)o.push({newText:y,range:{start:C,end:C}});else{let b=_[w],I=0;for(;I<b.length;I++){let L=b.charAt(I);if(L!==" "&&L!=="	")break}o.push({newText:"",range:{start:C,end:{line:S,character:Math.min(I,Math.abs(h))}}})}}return o}getExistingIndentationCharacterCount(e,t){let n=" ".repeat(t.options.tabSize);return(t.options.insertSpaces?e.replaceAll("	",n):e.replaceAll(n,"	")).length}getIndentationCharacterCount(e,t){let n=e.indentation;return t&&t.tabs&&(n+=t.tabs),(e.options.insertSpaces?e.options.tabSize:1)*n}createTextEdit(e,t,n,i){var a;if(t.hidden)return this.createHiddenTextEdits(e,t,n,i);let s={start:(a=e?.range.end)!==null&&a!==void 0?a:{character:0,line:0},end:t.range.start},o=this.findFittingMove(s,n.moves,i);if(!o)return[];let u=o.characters,c=o.lines,f=o.tabs,d=i.indentation;i.indentation+=f??0;let m=[];return u!==void 0?m.push(this.createSpaceTextEdit(s,u,n.options)):c!==void 0?m.push(this.createLineTextEdit(s,c,i,n.options)):f!==void 0&&m.push(this.createTabTextEdit(s,Boolean(e),i)),(0,KP.isLeafCstNode)(t)&&(i.indentation=d),m}createSpaceTextEdit(e,t,n){if(e.start.line===e.end.line){let a=e.end.character-e.start.character;t=this.fitIntoOptions(t,a,n)}return{newText:" ".repeat(t),range:e}}createLineTextEdit(e,t,n,i){let a=e.end.line-e.start.line;t=this.fitIntoOptions(t,a,i);let o=(n.options.insertSpaces?" ".repeat(n.options.tabSize):"	").repeat(n.indentation);return{newText:`${`
`.repeat(t)}${o}`,range:e}}createTabTextEdit(e,t,n){let a=(n.options.insertSpaces?" ".repeat(n.options.tabSize):"	").repeat(n.indentation),s=t?1:0,o=Math.max(e.end.line-e.start.line,s);return{newText:`${`
`.repeat(o)}${a}`,range:e}}fitIntoOptions(e,t,n){return n.allowMore?e=Math.max(t,e):n.allowLess&&(e=Math.min(t,e)),e}findFittingMove(e,t,n){if(t.length===0)return;if(t.length===1)return t[0];let i=e.end.line-e.start.line;for(let a of t){if(a.lines!==void 0&&i<=a.lines)return a;if(a.lines===void 0&&i===0)return a}return t[t.length-1]}iterateCstTree(e,t){let i=e.parseResult.value.$cstNode;return i?new wv.TreeStreamImpl(i,a=>this.iterateCst(a,t)):wv.EMPTY_STREAM}iterateCst(e,t){if(!(0,KP.isCompositeCstNode)(e))return wv.EMPTY_STREAM;let n=t.indentation;return new wv.StreamImpl(()=>({index:0}),i=>i.index<e.children.length?{done:!1,value:e.children[i.index++]}:(t.indentation=n,wv.DONE_RESULT))}};fs.AbstractFormatter=HP;var PR=class{constructor(e,t){this.astNode=e,this.collector=t}node(e){return new Ai(e.$cstNode?[e.$cstNode]:[],this.collector)}nodes(...e){let t=[];for(let n of e)n.$cstNode&&t.push(n.$cstNode);return new Ai(t,this.collector)}property(e,t){let n=(0,MR.findNodeForProperty)(this.astNode.$cstNode,e,t);return new Ai(n?[n]:[],this.collector)}properties(...e){let t=[];for(let n of e){let i=(0,MR.findNodesForProperty)(this.astNode.$cstNode,n);t.push(...i)}return new Ai(t,this.collector)}keyword(e,t){let n=(0,MR.findNodeForKeyword)(this.astNode.$cstNode,e,t);return new Ai(n?[n]:[],this.collector)}keywords(...e){let t=[];for(let n of e){let i=(0,MR.findNodesForKeyword)(this.astNode.$cstNode,n);t.push(...i)}return new Ai(t,this.collector)}cst(e){return new Ai([...e],this.collector)}interior(e,t){let n=e.nodes,i=t.nodes;if(n.length!==1||i.length!==1)return new Ai([],this.collector);let a=n[0],s=i[0];if(a.offset>s.offset){let o=a;a=s,s=o}return new Ai((0,q2.getInteriorNodes)(a,s),this.collector)}};fs.DefaultNodeFormatter=PR;var Ai=class{constructor(e,t){this.nodes=e,this.collector=t}prepend(e){for(let t of this.nodes)this.collector(t,"prepend",e);return this}append(e){for(let t of this.nodes)this.collector(t,"append",e);return this}surround(e){for(let t of this.nodes)this.collector(t,"prepend",e),this.collector(t,"append",e);return this}slice(e,t){return new Ai(this.nodes.slice(e,t),this.collector)}};fs.FormattingRegion=Ai;var lye;(function(r){function e(...f){return{options:{},moves:f.flatMap(d=>d.moves).sort(c)}}r.fit=e;function t(f){return i(0,f)}r.noSpace=t;function n(f){return i(1,f)}r.oneSpace=n;function i(f,d){return{options:d??{},moves:[{characters:f}]}}r.spaces=i;function a(f){return s(1,f)}r.newLine=a;function s(f,d){return{options:d??{},moves:[{lines:f}]}}r.newLines=s;function o(f){return{options:f??{},moves:[{tabs:1,lines:1}]}}r.indent=o;function u(f){return{options:f??{},moves:[{tabs:0}]}}r.noIndent=u;function c(f,d){var m,h,y,_,w,S;let C=(m=f.lines)!==null&&m!==void 0?m:0,b=(h=d.lines)!==null&&h!==void 0?h:0,I=(y=f.tabs)!==null&&y!==void 0?y:0,L=(_=d.tabs)!==null&&_!==void 0?_:0,W=(w=f.characters)!==null&&w!==void 0?w:0,_e=(S=d.characters)!==null&&S!==void 0?S:0;return C<b?-1:C>b?1:I<L?-1:I>L?1:W<_e?-1:W>_e?1:0}})(lye=fs.Formatting||(fs.Formatting={}))});var x2=p(oo=>{"use strict";var uye=oo&&oo.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),cye=oo&&oo.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),fye=oo&&oo.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&uye(e,r,t);return cye(e,r),e};Object.defineProperty(oo,"__esModule",{value:!0});oo.LangiumGrammarFormatter=void 0;var Pt=VP(),Eu=fye(yt()),WP=class extends Pt.AbstractFormatter{format(e){if(Eu.isCrossReference(e))this.getNodeFormatter(e).properties("type","terminal").surround(Pt.Formatting.noSpace());else if(Eu.isParserRule(e)){let t=this.getNodeFormatter(e);t.keywords("entry","fragment","returns").append(Pt.Formatting.oneSpace()),(e.inferredType||e.returnType||e.dataType)&&e.parameters.length===0?t.property("name").append(Pt.Formatting.oneSpace()):t.property("name").append(Pt.Formatting.noSpace()),t.properties("parameters").append(Pt.Formatting.noSpace()),t.keywords(",").append(Pt.Formatting.oneSpace()),t.keywords("<").append(Pt.Formatting.noSpace());let n=t.keyword(";"),i=t.keyword(":");i.prepend(Pt.Formatting.noSpace()),t.interior(i,n).prepend(Pt.Formatting.indent()),n.prepend(Pt.Formatting.fit(Pt.Formatting.noSpace(),Pt.Formatting.newLine())),t.node(e).prepend(Pt.Formatting.noIndent())}else if(Eu.isTerminalRule(e)){let t=this.getNodeFormatter(e);e.type&&(t.property("name").append(Pt.Formatting.oneSpace()),t.keyword("returns").append(Pt.Formatting.oneSpace())),t.keywords("hidden","terminal","fragment").append(Pt.Formatting.oneSpace()),t.keyword(":").prepend(Pt.Formatting.noSpace()),t.keyword(";").prepend(Pt.Formatting.fit(Pt.Formatting.noSpace(),Pt.Formatting.newLine())),t.node(e).prepend(Pt.Formatting.noIndent())}else if(Eu.isAction(e)){let t=this.getNodeFormatter(e);t.keyword("{").append(Pt.Formatting.noSpace()),t.keywords(".","+=","=").surround(Pt.Formatting.noSpace()),t.keyword("}").prepend(Pt.Formatting.noSpace())}else if(Eu.isInferredType(e))this.getNodeFormatter(e).keywords("infer","infers").append(Pt.Formatting.oneSpace());else if(Eu.isAssignment(e))this.getNodeFormatter(e).keywords("=","+=","?=").surround(Pt.Formatting.noSpace());else if(Eu.isRuleCall(e)){let t=this.getNodeFormatter(e);t.keyword("<").surround(Pt.Formatting.noSpace()),t.keyword(",").append(Pt.Formatting.oneSpace()),t.properties("arguments").append(Pt.Formatting.noSpace())}Eu.isAbstractElement(e)&&this.getNodeFormatter(e).property("cardinality").prepend(Pt.Formatting.noSpace())}};oo.LangiumGrammarFormatter=WP});var kR=p(Qr=>{"use strict";Object.defineProperty(Qr,"__esModule",{value:!0});Qr.SemanticTokensDecoder=Qr.AbstractSemanticTokenProvider=Qr.SemanticTokensBuilder=Qr.DefaultSemanticTokenOptions=Qr.AllSemanticTokenModifiers=Qr.AllSemanticTokenTypes=void 0;var st=Pe(),ER=jr(),dye=bt(),pye=Ci(),mye=Ut();Qr.AllSemanticTokenTypes={[st.SemanticTokenTypes.class]:0,[st.SemanticTokenTypes.comment]:1,[st.SemanticTokenTypes.enum]:2,[st.SemanticTokenTypes.enumMember]:3,[st.SemanticTokenTypes.event]:4,[st.SemanticTokenTypes.function]:5,[st.SemanticTokenTypes.interface]:6,[st.SemanticTokenTypes.keyword]:7,[st.SemanticTokenTypes.macro]:8,[st.SemanticTokenTypes.method]:9,[st.SemanticTokenTypes.modifier]:10,[st.SemanticTokenTypes.namespace]:11,[st.SemanticTokenTypes.number]:12,[st.SemanticTokenTypes.operator]:13,[st.SemanticTokenTypes.parameter]:14,[st.SemanticTokenTypes.property]:15,[st.SemanticTokenTypes.regexp]:16,[st.SemanticTokenTypes.string]:17,[st.SemanticTokenTypes.struct]:18,[st.SemanticTokenTypes.type]:19,[st.SemanticTokenTypes.typeParameter]:20,[st.SemanticTokenTypes.variable]:21};Qr.AllSemanticTokenModifiers={[st.SemanticTokenModifiers.abstract]:1<<0,[st.SemanticTokenModifiers.async]:1<<1,[st.SemanticTokenModifiers.declaration]:1<<2,[st.SemanticTokenModifiers.defaultLibrary]:1<<3,[st.SemanticTokenModifiers.definition]:1<<4,[st.SemanticTokenModifiers.deprecated]:1<<5,[st.SemanticTokenModifiers.documentation]:1<<6,[st.SemanticTokenModifiers.modification]:1<<7,[st.SemanticTokenModifiers.readonly]:1<<8,[st.SemanticTokenModifiers.static]:1<<9};Qr.DefaultSemanticTokenOptions={legend:{tokenTypes:Object.keys(Qr.AllSemanticTokenTypes),tokenModifiers:Object.keys(Qr.AllSemanticTokenModifiers)},full:{delta:!0},range:!0};var OR=class extends st.SemanticTokensBuilder{constructor(){super(...arguments),this._tokens=[]}push(e,t,n,i,a){this._tokens.push({line:e,char:t,length:n,tokenType:i,tokenModifiers:a})}build(){return this.applyTokens(),super.build()}buildEdits(){return this.applyTokens(),super.buildEdits()}applyTokens(){for(let e of this._tokens.sort(this.compareTokens))super.push(e.line,e.char,e.length,e.tokenType,e.tokenModifiers);this._tokens=[]}compareTokens(e,t){return e.line===t.line?e.char-t.char:e.line-t.line}};Qr.SemanticTokensBuilder=OR;var zP=class{constructor(e){this.tokensBuilders=new Map,e.shared.workspace.TextDocuments.onDidClose(t=>{this.tokensBuilders.delete(t.document.uri)}),e.shared.lsp.LanguageServer.onInitialize(t=>{var n;this.initialize((n=t.capabilities.textDocument)===null||n===void 0?void 0:n.semanticTokens)})}initialize(e){this.clientCapabilities=e}async semanticHighlight(e,t,n=st.CancellationToken.None){return this.currentRange=void 0,this.currentDocument=e,this.currentTokensBuilder=this.getDocumentTokensBuilder(e),await this.computeHighlighting(e,this.createAcceptor(),n),this.currentTokensBuilder.build()}async semanticHighlightRange(e,t,n=st.CancellationToken.None){return this.currentRange=t.range,this.currentDocument=e,this.currentTokensBuilder=this.getDocumentTokensBuilder(e),await this.computeHighlighting(e,this.createAcceptor(),n),this.currentTokensBuilder.build()}async semanticHighlightDelta(e,t,n=st.CancellationToken.None){return this.currentRange=void 0,this.currentDocument=e,this.currentTokensBuilder=this.getDocumentTokensBuilder(e),this.currentTokensBuilder.previousResult(t.previousResultId),await this.computeHighlighting(e,this.createAcceptor(),n),this.currentTokensBuilder.buildEdits()}createAcceptor(){return t=>{"line"in t?this.highlightToken({range:{start:{line:t.line,character:t.char},end:{line:t.line,character:t.char+t.length}},type:t.type,modifier:t.modifier}):"range"in t?this.highlightToken(t):"keyword"in t?this.highlightKeyword(t):"property"in t?this.highlightProperty(t):this.highlightNode({node:t.cst,type:t.type,modifier:t.modifier})}}getDocumentTokensBuilder(e){let t=this.tokensBuilders.get(e.uri.toString());if(t)return t;let n=new OR;return this.tokensBuilders.set(e.uri.toString(),n),n}async computeHighlighting(e,t,n){let i=e.parseResult.value,a=(0,dye.streamAst)(i,{range:this.currentRange}).iterator(),s;do if(s=a.next(),!s.done){await(0,pye.interruptAndCheck)(n);let o=s.value;this.highlightElement(o,t)==="prune"&&a.prune()}while(!s.done)}highlightToken(e){var t;let{range:n,type:i}=e,a=e.modifier;if(this.currentRange&&!(0,mye.inRange)(n,this.currentRange)||!this.currentDocument||!this.currentTokensBuilder)return;let s=Qr.AllSemanticTokenTypes[i],o=0;if(a!==void 0){typeof a=="string"&&(a=[a]);for(let f of a){let d=Qr.AllSemanticTokenModifiers[f];o|=d}}let u=n.start.line,c=n.end.line;if(u===c){let f=n.start.character,d=n.end.character-f;this.currentTokensBuilder.push(u,f,d,s,o)}else if(!((t=this.clientCapabilities)===null||t===void 0)&&t.multilineTokenSupport){let f=n.start.character,d=this.currentDocument.textDocument.offsetAt(n.start),m=this.currentDocument.textDocument.offsetAt(n.end);this.currentTokensBuilder.push(u,f,m-d,s,o)}else{let f=n.start,d=this.currentDocument.textDocument.offsetAt({line:u+1,character:0});this.currentTokensBuilder.push(f.line,f.character,d-f.character-1,s,o);for(let m=u+1;m<c;m++){let h=d;d=this.currentDocument.textDocument.offsetAt({line:m+1,character:0}),this.currentTokensBuilder.push(m,0,d-h-1,s,o)}this.currentTokensBuilder.push(c,0,n.end.character,s,o)}}highlightProperty(e){let t=[];if(typeof e.index=="number"){let a=(0,ER.findNodeForProperty)(e.node.$cstNode,e.property,e.index);a&&t.push(a)}else t.push(...(0,ER.findNodesForProperty)(e.node.$cstNode,e.property));let{type:n,modifier:i}=e;for(let a of t)this.highlightNode({node:a,type:n,modifier:i})}highlightKeyword(e){let{node:t,keyword:n,type:i,index:a,modifier:s}=e,o=[];if(typeof a=="number"){let u=(0,ER.findNodeForKeyword)(t.$cstNode,n,a);u&&o.push(u)}else o.push(...(0,ER.findNodesForKeyword)(t.$cstNode,n));for(let u of o)this.highlightNode({node:u,type:i,modifier:s})}highlightNode(e){let{node:t,type:n,modifier:i}=e,a=t.range;this.highlightToken({range:a,type:n,modifier:i})}};Qr.AbstractSemanticTokenProvider=zP;var yye;(function(r){function e(n,i){let a=new Map;Object.entries(Qr.AllSemanticTokenTypes).forEach(([u,c])=>a.set(c,u));let s=0,o=0;return t(n.data,5).map(u=>{s+=u[0],u[0]!==0&&(o=0),o+=u[1];let c=u[2];return{offset:i.textDocument.offsetAt({line:s,character:o}),tokenType:a.get(u[3]),tokenModifiers:u[4],text:i.textDocument.getText({start:{line:s,character:o},end:{line:s,character:o+c}})}})}r.decode=e;function t(n,i){let a=[];for(let s=0;s<n.length;s+=i){let o=n.slice(s,s+i);a.push(o)}return a}})(yye=Qr.SemanticTokensDecoder||(Qr.SemanticTokensDecoder={}))});var L2=p(IR=>{"use strict";Object.defineProperty(IR,"__esModule",{value:!0});IR.LangiumGrammarSemanticTokenProvider=void 0;var Ou=Pe(),hye=kR(),ku=yt(),YP=class extends hye.AbstractSemanticTokenProvider{highlightElement(e,t){var n;(0,ku.isAssignment)(e)?t({node:e,property:"feature",type:Ou.SemanticTokenTypes.property}):(0,ku.isAction)(e)?e.feature&&t({node:e,property:"feature",type:Ou.SemanticTokenTypes.property}):(0,ku.isReturnType)(e)?t({node:e,property:"name",type:Ou.SemanticTokenTypes.type}):(0,ku.isSimpleType)(e)?(e.primitiveType||e.typeRef)&&t({node:e,property:e.primitiveType?"primitiveType":"typeRef",type:Ou.SemanticTokenTypes.type}):(0,ku.isParameter)(e)?t({node:e,property:"name",type:Ou.SemanticTokenTypes.parameter}):(0,ku.isParameterReference)(e)?t({node:e,property:"parameter",type:Ou.SemanticTokenTypes.parameter}):(0,ku.isRuleCall)(e)?!((n=e.rule.ref)===null||n===void 0)&&n.fragment&&t({node:e,property:"rule",type:Ou.SemanticTokenTypes.type}):(0,ku.isTypeAttribute)(e)&&t({node:e,property:"name",type:Ou.SemanticTokenTypes.property})}};IR.LangiumGrammarSemanticTokenProvider=YP});var U2=p(FR=>{"use strict";Object.defineProperty(FR,"__esModule",{value:!0});FR.LangiumGrammarNameProvider=void 0;var gye=wy(),vye=jr(),j2=yt(),XP=class extends gye.DefaultNameProvider{getName(e){return(0,j2.isAssignment)(e)?e.feature:super.getName(e)}getNameNode(e){return(0,j2.isAssignment)(e)?(0,vye.findNodeForProperty)(e.$cstNode,"feature"):super.getNameNode(e)}};FR.LangiumGrammarNameProvider=XP});var qR=p(NR=>{"use strict";Object.defineProperty(NR,"__esModule",{value:!0});NR.DefaultReferences=void 0;var _ye=jr(),B2=Un(),$ye=bt(),G2=Ut(),Tye=vn(),Rye=Bl(),JP=class{constructor(e){this.nameProvider=e.references.NameProvider,this.index=e.shared.workspace.IndexManager,this.nodeLocator=e.workspace.AstNodeLocator}findDeclaration(e){if(e){let t=(0,_ye.findAssignment)(e),n=e.element;if(t&&n){let i=n[t.feature];if((0,B2.isReference)(i))return i.ref;if(Array.isArray(i)){for(let a of i)if((0,B2.isReference)(a)&&a.$refNode&&a.$refNode.offset<=e.offset&&a.$refNode.end>=e.end)return a.ref}}if(n){let i=this.nameProvider.getNameNode(n);if(i&&(i===e||(0,G2.isCstChildNode)(e,i)))return n}}}findDeclarationNode(e){let t=this.findDeclaration(e);if(t?.$cstNode){let n=this.nameProvider.getNameNode(t);return n??t.$cstNode}}findReferences(e,t){let n=[];if(t.includeDeclaration){let a=this.getReferenceToSelf(e);a&&n.push(a)}let i=this.index.findAllReferences(e,this.nodeLocator.getAstNodePath(e));return t.documentUri&&(i=i.filter(a=>(0,Rye.equalURI)(a.sourceUri,t.documentUri))),n.push(...i),(0,Tye.stream)(n)}getReferenceToSelf(e){let t=this.nameProvider.getNameNode(e);if(t){let n=(0,$ye.getDocument)(e),i=this.nodeLocator.getAstNodePath(e);return{sourceUri:n.uri,sourcePath:i,targetUri:n.uri,targetPath:i,segment:(0,G2.toDocumentSegment)(t),local:!0}}}};NR.DefaultReferences=JP});var z2=p(xR=>{"use strict";Object.defineProperty(xR,"__esModule",{value:!0});xR.LangiumGrammarReferences=void 0;var bye=qR(),ds=bt(),K2=Ut(),H2=jr(),Cye=vn(),V2=Bl(),ps=yt(),W2=$n(),QP=Cy(),ZP=class extends bye.DefaultReferences{constructor(e){super(e),this.documents=e.shared.workspace.LangiumDocuments}findDeclaration(e){let t=e.element,n=(0,H2.findAssignment)(e);if(n&&n.feature==="feature"){if((0,ps.isAssignment)(t))return this.findAssignmentDeclaration(t);if((0,ps.isAction)(t))return this.findActionDeclaration(t)}return super.findDeclaration(e)}findReferences(e,t){var n;return(0,ps.isTypeAttribute)(e)?this.findReferencesToTypeAttribute(e,(n=t.includeDeclaration)!==null&&n!==void 0?n:!1):super.findReferences(e,t)}findReferencesToTypeAttribute(e,t){let n=[],i=(0,ds.getContainerOfType)(e,ps.isInterface);if(i){if(t){let o=this.getReferenceToSelf(e);o&&n.push(o)}let a=(0,QP.collectChildrenTypes)(i,this,this.documents,this.nodeLocator),s=[];a.forEach(o=>{let u=this.findRulesWithReturnType(o);s.push(...u)}),s.forEach(o=>{let u=this.createReferencesToAttribute(o,e);n.push(...u)})}return(0,Cye.stream)(n)}createReferencesToAttribute(e,t){let n=[];if((0,ps.isParserRule)(e)){let i=(0,W2.extractAssignments)(e.definition).find(a=>a.feature===t.name);if(i?.$cstNode){let a=this.nameProvider.getNameNode(i);a&&n.push({sourceUri:(0,ds.getDocument)(i).uri,sourcePath:this.nodeLocator.getAstNodePath(i),targetUri:(0,ds.getDocument)(t).uri,targetPath:this.nodeLocator.getAstNodePath(t),segment:(0,K2.toDocumentSegment)(a),local:(0,V2.equalURI)((0,ds.getDocument)(i).uri,(0,ds.getDocument)(t).uri)})}}else{if(e.feature===t.name){let a=(0,H2.findNodeForProperty)(e.$cstNode,"feature");a&&n.push({sourceUri:(0,ds.getDocument)(e).uri,sourcePath:this.nodeLocator.getAstNodePath(e),targetUri:(0,ds.getDocument)(t).uri,targetPath:this.nodeLocator.getAstNodePath(t),segment:(0,K2.toDocumentSegment)(a),local:(0,V2.equalURI)((0,ds.getDocument)(e).uri,(0,ds.getDocument)(t).uri)})}let i=(0,ds.getContainerOfType)(e,ps.isParserRule);n.push(...this.createReferencesToAttribute(i,t))}return n}findAssignmentDeclaration(e){var t;let n=(0,ds.getContainerOfType)(e,ps.isParserRule),i=(0,W2.getActionAtElement)(e);if(i){let a=this.findActionDeclaration(i,e.feature);if(a)return a}if(!((t=n?.returnType)===null||t===void 0)&&t.ref&&((0,ps.isInterface)(n.returnType.ref)||(0,ps.isType)(n.returnType.ref))){let a=(0,QP.collectSuperTypes)(n.returnType.ref);for(let s of a){let o=s.attributes.find(u=>u.name===e.feature);if(o)return o}}return e}findActionDeclaration(e,t){var n;if(!((n=e.type)===null||n===void 0)&&n.ref){let i=t??e.feature,a=(0,QP.collectSuperTypes)(e.type.ref);for(let s of a){let o=s.attributes.find(u=>u.name===i);if(o)return o}}}findRulesWithReturnType(e){let t=[];return this.index.findAllReferences(e,this.nodeLocator.getAstNodePath(e)).forEach(i=>{let a=this.documents.getOrCreateDocument(i.sourceUri),s=this.nodeLocator.getAstNode(a.parseResult.value,i.sourcePath);((0,ps.isParserRule)(s)||(0,ps.isAction)(s))&&t.push(s)}),t}};xR.LangiumGrammarReferences=ZP});var rE=p(Ca=>{"use strict";var Aye=Ca&&Ca.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),wye=Ca&&Ca.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Dye=Ca&&Ca.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Aye(e,r,t);return wye(e,r),e};Object.defineProperty(Ca,"__esModule",{value:!0});Ca.findFirstFeatures=Ca.findNextFeatures=void 0;var Gn=Dye(yt()),Gl=$n(),Sye=Un(),Mye=bt(),Pye=jr();function Eye(r,e){let t={stacks:r,tokens:e};return Oye(t),t.stacks.flat().forEach(i=>{i.property=void 0}),J2(t.stacks).map(i=>i[i.length-1])}Ca.findNextFeatures=Eye;function eE(r){let{next:e,cardinalities:t,visited:n,plus:i}=r,a=[],s=e.feature;if(n.has(s))return[];n.add(s);let o,u=s;for(;u.$container;)if(Gn.isGroup(u.$container)){o=u.$container;break}else if(Gn.isAbstractElement(u.$container))u=u.$container;else break;if((0,Gl.isArrayCardinality)(u.cardinality)){let c=Iy({next:{feature:u,type:e.type,new:!1},cardinalities:t,visited:n,plus:i});for(let f of c)i.add(f.feature);a.push(...c)}if(o){let c=o.elements.indexOf(u);c!==void 0&&c<o.elements.length-1&&a.push(...X2({feature:o,type:e.type,new:!1},c+1,t,n,i)),a.every(f=>(0,Gl.isOptionalCardinality)(f.feature.cardinality)||(0,Gl.isOptionalCardinality)(t.get(f.feature))||i.has(f.feature))&&a.push(...eE({next:{feature:o,type:e.type,new:!1},cardinalities:t,visited:n,plus:i}))}return a}function Y2(r){return(0,Sye.isAstNode)(r)&&(r={feature:r}),Iy({next:r,cardinalities:new Map,visited:new Set,plus:new Set})}Ca.findFirstFeatures=Y2;function Iy(r){var e,t,n;let{next:i,cardinalities:a,visited:s,plus:o}=r;if(i===void 0)return[];let{feature:u,type:c}=i;if(Gn.isGroup(u)){if(s.has(u))return[];s.add(u)}if(Gn.isGroup(u))return X2(i,0,a,s,o).map(f=>LR(f,u.cardinality,a));if(Gn.isAlternatives(u)||Gn.isUnorderedGroup(u))return u.elements.flatMap(f=>Iy({next:{feature:f,new:!1,type:c},cardinalities:a,visited:s,plus:o})).map(f=>LR(f,u.cardinality,a));if(Gn.isAssignment(u)){let f={feature:u.terminal,new:!1,type:c,property:(e=i.property)!==null&&e!==void 0?e:u.feature};return Iy({next:f,cardinalities:a,visited:s,plus:o}).map(d=>LR(d,u.cardinality,a))}else{if(Gn.isAction(u))return eE({next:{feature:u,new:!0,type:(0,Gl.getTypeName)(u),property:(t=i.property)!==null&&t!==void 0?t:u.feature},cardinalities:a,visited:s,plus:o});if(Gn.isRuleCall(u)&&Gn.isParserRule(u.rule.ref)){let f=u.rule.ref,d={feature:f.definition,new:!0,type:f.fragment?void 0:(n=(0,Gl.getExplicitRuleType)(f))!==null&&n!==void 0?n:f.name,property:i.property};return Iy({next:d,cardinalities:a,visited:s,plus:o}).map(m=>LR(m,u.cardinality,a))}else return[i]}}function LR(r,e,t){return t.set(r.feature,e),r}function X2(r,e,t,n,i){var a;let s=[],o;for(;e<r.feature.elements.length&&(o={feature:r.feature.elements[e++],new:!1,type:r.type},s.push(...Iy({next:o,cardinalities:t,visited:n,plus:i})),!!(0,Gl.isOptionalCardinality)((a=o.feature.cardinality)!==null&&a!==void 0?a:t.get(o.feature))););return s}function Oye(r){for(let e of r.tokens){let t=J2(r.stacks,e);r.stacks=t}}function J2(r,e){let t=[];for(let n of r)t.push(...kye(n,e));return t}function kye(r,e){let t=new Map,n=new Set(r.map(a=>a.feature).filter(Iye)),i=[];for(;r.length>0;){let a=r.pop(),s=eE({next:a,cardinalities:t,plus:n,visited:new Set}).filter(o=>e?tE(o.feature,e):!0);for(let o of s)i.push([...r,o]);if(!s.every(o=>(0,Gl.isOptionalCardinality)(o.feature.cardinality)||(0,Gl.isOptionalCardinality)(t.get(o.feature))))break}return i}function Iye(r){if(r.cardinality==="+")return!0;let e=(0,Mye.getContainerOfType)(r,Gn.isAssignment);return!!(e&&e.cardinality==="+")}function tE(r,e){if(Gn.isKeyword(r))return r.value===e.image;if(Gn.isRuleCall(r))return Fye(r.rule.ref,e);if(Gn.isCrossReference(r)){let t=(0,Pye.getCrossReferenceTerminal)(r);if(t)return tE(t,e)}return!1}function Fye(r,e){return Gn.isParserRule(r)?Y2(r.definition).some(n=>tE(n.feature,e)):Gn.isTerminalRule(r)?new RegExp((0,Gl.terminalRegex)(r)).test(e.image):!1}});var UR=p(Aa=>{"use strict";var Nye=Aa&&Aa.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),qye=Aa&&Aa.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),xye=Aa&&Aa.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Nye(e,r,t);return qye(e,r),e};Object.defineProperty(Aa,"__esModule",{value:!0});Aa.DefaultCompletionProvider=Aa.mergeCompletionProviderOptions=void 0;var Dv=Pe(),Sv=xye(yt()),Lye=$n(),jye=bt(),Q2=Ut(),Z2=jr(),nE=vn(),jR=rE();function Uye(r){let e=Array.from(new Set(r.flatMap(n=>{var i;return(i=n?.triggerCharacters)!==null&&i!==void 0?i:[]}))),t=Array.from(new Set(r.flatMap(n=>{var i;return(i=n?.allCommitCharacters)!==null&&i!==void 0?i:[]})));return{triggerCharacters:e.length>0?e:void 0,allCommitCharacters:t.length>0?t:void 0}}Aa.mergeCompletionProviderOptions=Uye;var iE=class{constructor(e){this.scopeProvider=e.references.ScopeProvider,this.grammar=e.Grammar,this.completionParser=e.parser.CompletionParser,this.nameProvider=e.references.NameProvider,this.grammarConfig=e.parser.GrammarConfig}async getCompletion(e,t){var n,i;let s=e.parseResult.value.$cstNode;if(!s)return;let o=[],u=e.textDocument,c=u.getText(),f=u.offsetAt(t.position),d=L=>{let W=this.fillCompletionItem(u,f,L);W&&o.push(W)},m=this.backtrackToAnyToken(c,f),h=(n=(0,Q2.findLeafNodeAtOffset)(s,m))===null||n===void 0?void 0:n.element,y={document:e,textDocument:u,node:h,offset:f,position:t.position};if(!h){let L=(0,Z2.getEntryRule)(this.grammar);return await this.completionForRule(y,L,d),Dv.CompletionList.create(this.deduplicateItems(o),!0)}let _=[y];if(m===f&&m>0){let L=(i=(0,Q2.findLeafNodeAtOffset)(s,m-1))===null||i===void 0?void 0:i.element;L!==h&&_.push({document:e,textDocument:u,node:L,offset:f,position:t.position})}let w=this.backtrackToTokenStart(c,f),S=this.findFeaturesAt(u,w),C=[],b=this.canReparse()&&f!==w;b&&(C=this.findFeaturesAt(u,f));let I=L=>Sv.isKeyword(L.feature)?L.feature.value:L.feature;return await Promise.all((0,nE.stream)(S).distinct(I).map(L=>this.completionForContexts(_,L,d))),b&&await Promise.all((0,nE.stream)(C).exclude(S,I).distinct(I).map(L=>this.completionForContexts(_,L,d))),Dv.CompletionList.create(this.deduplicateItems(o),!0)}deduplicateItems(e){return(0,nE.stream)(e).distinct(t=>`${t.kind}_${t.label}_${t.detail}`).toArray()}canReparse(){return!1}findFeaturesAt(e,t){let n=e.getText({start:Dv.Position.create(0,0),end:e.positionAt(t)}),i=this.completionParser.parse(n),a=i.tokens;if(i.tokenIndex===0){let u=(0,Z2.getEntryRule)(this.grammar),c=(0,jR.findFirstFeatures)({feature:u.definition,new:!0,type:(0,Lye.getExplicitRuleType)(u)});return a.length>0?(a.shift(),(0,jR.findNextFeatures)(c.map(f=>[f]),a)):c}let s=[...a].splice(i.tokenIndex);return(0,jR.findNextFeatures)([i.elementStack.map(u=>({feature:u}))],s)}backtrackToAnyToken(e,t){for(t>=e.length&&(t=e.length-1);t>0&&/\s/.test(e.charAt(t));)t--;return t}backtrackToTokenStart(e,t){if(t<1)return t;let n=this.grammarConfig.nameRegexp,i=e.charAt(t-1);for(;t>0&&n.test(i);)t--,i=e.charAt(t-1);return t}async completionForRule(e,t,n){if(Sv.isParserRule(t)){let i=(0,jR.findFirstFeatures)(t.definition);await Promise.all(i.map(a=>this.completionFor(e,a,n)))}}async completionForContexts(e,t,n){for(let i of e)await this.completionFor(i,t,n)}completionFor(e,t,n){if(Sv.isKeyword(t.feature))return this.completionForKeyword(e,t.feature,n);if(Sv.isCrossReference(t.feature)&&e.node)return this.completionForCrossReference(e,t,n)}completionForCrossReference(e,t,n){let i=(0,jye.getContainerOfType)(t.feature,Sv.isAssignment),a=e.node;if(i&&a){if(t.type&&(t.new||a.$type!==t.type)&&(a={$type:t.type,$container:a,$containerProperty:t.property}),!e)return;let s={reference:{},container:a,property:i.feature};try{let o=this.scopeProvider.getScope(s),u=new Set;o.getAllElements().forEach(c=>{!u.has(c.name)&&this.filterCrossReference(c)&&(n(this.createReferenceCompletionItem(c)),u.add(c.name))})}catch(o){console.error(o)}}}createReferenceCompletionItem(e){return{nodeDescription:e,kind:Dv.CompletionItemKind.Reference,detail:e.type,sortText:"0"}}filterCrossReference(e){return!0}completionForKeyword(e,t,n){t.value.match(/[\w]/)&&n({label:t.value,kind:Dv.CompletionItemKind.Keyword,detail:"Keyword",sortText:"1"})}fillCompletionItem(e,t,n){var i,a;let s;if(typeof n.label=="string")s=n.label;else if("node"in n){let f=this.nameProvider.getName(n.node);if(!f)return;s=f}else if("nodeDescription"in n)s=n.nodeDescription.name;else return;let o;typeof((i=n.textEdit)===null||i===void 0?void 0:i.newText)=="string"?o=n.textEdit.newText:typeof n.insertText=="string"?o=n.insertText:o=s;let u=(a=n.textEdit)!==null&&a!==void 0?a:this.buildCompletionTextEdit(e,t,s,o);return u?{additionalTextEdits:n.additionalTextEdits,command:n.command,commitCharacters:n.commitCharacters,data:n.data,detail:n.detail,documentation:n.documentation,filterText:n.filterText,insertText:n.insertText,insertTextFormat:n.insertTextFormat,insertTextMode:n.insertTextMode,kind:n.kind,labelDetails:n.labelDetails,preselect:n.preselect,sortText:n.sortText,tags:n.tags,textEditText:n.textEditText,textEdit:u,label:s}:void 0}buildCompletionTextEdit(e,t,n,i){let a=e.getText(),s=this.backtrackToTokenStart(a,t),o=a.substring(s,t);if(this.charactersFuzzyMatch(o,n)){let u=e.positionAt(s),c=e.positionAt(t);return{newText:i,range:{start:u,end:c}}}else return}isWordCharacterAt(e,t){return this.grammarConfig.nameRegexp.test(e.charAt(t))}charactersFuzzyMatch(e,t){if(e.length===0)return!0;t=t.toLowerCase();let n=!1,i,a=0,s=t.length;for(let o=0;o<s;o++){let u=t.charCodeAt(o),c=e.charCodeAt(a);if((u===c||this.toUpperCharCode(u)===this.toUpperCharCode(c))&&(n||(n=i===void 0||this.isWordTransition(i,u)),n&&a++,a===e.length))return!0;i=u}return!1}isWordTransition(e,t){return eB<=e&&e<=tB&&Bye<=t&&t<=Gye||e===rB&&t!==rB}toUpperCharCode(e){return eB<=e&&e<=tB?e-32:e}};Aa.DefaultCompletionProvider=iE;var eB="a".charCodeAt(0),tB="z".charCodeAt(0),Bye="A".charCodeAt(0),Gye="Z".charCodeAt(0),rB="_".charCodeAt(0)});var oE=p(BR=>{"use strict";Object.defineProperty(BR,"__esModule",{value:!0});BR.AbstractCallHierarchyProvider=void 0;var Kye=Pe(),nB=_n(),aE=Ut(),sE=class{constructor(e){this.grammarConfig=e.parser.GrammarConfig,this.nameProvider=e.references.NameProvider,this.documents=e.shared.workspace.LangiumDocuments,this.references=e.references.References}prepareCallHierarchy(e,t){let n=e.parseResult.value,i=(0,aE.findDeclarationNodeAtOffset)(n.$cstNode,e.textDocument.offsetAt(t.position),this.grammarConfig.nameRegexp);if(!i)return;let a=this.references.findDeclarationNode(i);if(a)return this.getCallHierarchyItems(a.element,e)}getCallHierarchyItems(e,t){let n=this.nameProvider.getNameNode(e),i=this.nameProvider.getName(e);if(!(!n||!e.$cstNode||i===void 0))return[Object.assign({kind:Kye.SymbolKind.Method,name:i,range:e.$cstNode.range,selectionRange:n.range,uri:t.uri.toString()},this.getCallHierarchyItem(e))]}getCallHierarchyItem(e){}incomingCalls(e){let t=this.documents.getOrCreateDocument(nB.URI.parse(e.item.uri)),n=t.parseResult.value,i=(0,aE.findDeclarationNodeAtOffset)(n.$cstNode,t.textDocument.offsetAt(e.item.range.start),this.grammarConfig.nameRegexp);if(!i)return;let a=this.references.findReferences(i.element,{includeDeclaration:!1});return this.getIncomingCalls(i.element,a)}outgoingCalls(e){let t=this.documents.getOrCreateDocument(nB.URI.parse(e.item.uri)),n=t.parseResult.value,i=(0,aE.findDeclarationNodeAtOffset)(n.$cstNode,t.textDocument.offsetAt(e.item.range.start),this.grammarConfig.nameRegexp);if(i)return this.getOutgoingCalls(i.element)}};BR.AbstractCallHierarchyProvider=sE});var aB=p(iB=>{"use strict";Object.defineProperty(iB,"__esModule",{value:!0})});var oB=p(sB=>{"use strict";Object.defineProperty(sB,"__esModule",{value:!0})});var uB=p(lB=>{"use strict";Object.defineProperty(lB,"__esModule",{value:!0})});var uE=p(GR=>{"use strict";Object.defineProperty(GR,"__esModule",{value:!0});GR.DefaultDefinitionProvider=void 0;var Hye=Pe(),Vye=bt(),Wye=Ut(),lE=class{constructor(e){this.nameProvider=e.references.NameProvider,this.references=e.references.References,this.grammarConfig=e.parser.GrammarConfig}getDefinition(e,t){let n=e.parseResult.value;if(n.$cstNode){let i=n.$cstNode,a=(0,Wye.findDeclarationNodeAtOffset)(i,e.textDocument.offsetAt(t.position),this.grammarConfig.nameRegexp);if(a)return this.collectLocationLinks(a,t)}}collectLocationLinks(e,t){var n;let i=this.findLink(e);if(i)return[Hye.LocationLink.create(i.targetDocument.textDocument.uri,((n=i.target.element.$cstNode)!==null&&n!==void 0?n:i.target).range,i.target.range,i.source.range)]}findLink(e){let t=this.references.findDeclarationNode(e);if(t?.element){let n=(0,Vye.getDocument)(t.element);if(t&&n)return{source:e,target:t,targetDocument:n}}}};GR.DefaultDefinitionProvider=lE});var fE=p(KR=>{"use strict";Object.defineProperty(KR,"__esModule",{value:!0});KR.DefaultDocumentHighlightProvider=void 0;var zye=Pe(),Yye=bt(),Xye=Ut(),Jye=Bl(),cE=class{constructor(e){this.references=e.references.References,this.nameProvider=e.references.NameProvider,this.grammarConfig=e.parser.GrammarConfig}getDocumentHighlight(e,t){let n=e.parseResult.value.$cstNode;if(!n)return;let i=(0,Xye.findDeclarationNodeAtOffset)(n,e.textDocument.offsetAt(t.position),this.grammarConfig.nameRegexp);if(!i)return;let a=this.references.findDeclaration(i);if(a){let s=(0,Jye.equalURI)((0,Yye.getDocument)(a).uri,e.uri),o={documentUri:e.uri,includeDeclaration:s};return this.references.findReferences(a,o).map(c=>this.createDocumentHighlight(c)).toArray()}}createDocumentHighlight(e){return zye.DocumentHighlight.create(e.segment.range)}};KR.DefaultDocumentHighlightProvider=cE});var fB=p(cB=>{"use strict";Object.defineProperty(cB,"__esModule",{value:!0})});var pE=p(HR=>{"use strict";Object.defineProperty(HR,"__esModule",{value:!0});HR.DefaultDocumentSymbolProvider=void 0;var Qye=Pe(),Zye=bt(),dE=class{constructor(e){this.nameProvider=e.references.NameProvider}getSymbols(e){return this.getSymbol(e,e.parseResult.value)}getSymbol(e,t){let n=t.$cstNode,i=this.nameProvider.getNameNode(t);if(i&&n){let a=this.nameProvider.getName(t);return[{kind:this.getSymbolKind(t.$type),name:a??i.text,range:n.range,selectionRange:i.range,children:this.getChildSymbols(e,t)}]}else return this.getChildSymbols(e,t)||[]}getChildSymbols(e,t){let n=[];for(let i of(0,Zye.streamContents)(t)){let a=this.getSymbol(e,i);n.push(...a)}if(n.length>0)return n}getSymbolKind(e){return Qye.SymbolKind.Field}};HR.DefaultDocumentSymbolProvider=dE});var dB=p(VR=>{"use strict";Object.defineProperty(VR,"__esModule",{value:!0});VR.AbstractExecuteCommandHandler=void 0;var ehe=Pe(),mE=class{get commands(){return Array.from(this.registeredCommands.keys())}constructor(){this.registeredCommands=new Map,this.registerCommands(this.createCommandAcceptor())}async executeCommand(e,t,n=ehe.CancellationToken.None){let i=this.registeredCommands.get(e);if(i)return i(t,n)}createCommandAcceptor(){return(e,t)=>this.registeredCommands.set(e,t)}};VR.AbstractExecuteCommandHandler=mE});var hE=p(Fy=>{"use strict";Object.defineProperty(Fy,"__esModule",{value:!0});Fy.MultilineCommentHoverProvider=Fy.AstNodeHoverProvider=void 0;var the=Ut(),WR=class{constructor(e){this.references=e.references.References,this.grammarConfig=e.parser.GrammarConfig}getHoverContent(e,t){var n,i;let a=(i=(n=e.parseResult)===null||n===void 0?void 0:n.value)===null||i===void 0?void 0:i.$cstNode;if(a){let s=e.textDocument.offsetAt(t.position),o=(0,the.findDeclarationNodeAtOffset)(a,s,this.grammarConfig.nameRegexp);if(o&&o.offset+o.length>s){let u=this.references.findDeclaration(o);if(u)return this.getAstNodeHoverContent(u)}}}};Fy.AstNodeHoverProvider=WR;var yE=class extends WR{constructor(e){super(e),this.documentationProvider=e.documentation.DocumentationProvider}getAstNodeHoverContent(e){let t=this.documentationProvider.getDocumentation(e);if(t)return{contents:{kind:"markdown",value:t}}}};Fy.MultilineCommentHoverProvider=yE});var pB=p(zR=>{"use strict";Object.defineProperty(zR,"__esModule",{value:!0});zR.AbstractGoToImplementationProvider=void 0;var rhe=Pe(),nhe=Ut(),gE=class{constructor(e){this.references=e.references.References,this.grammarConfig=e.parser.GrammarConfig}getImplementation(e,t,n=rhe.CancellationToken.None){let i=e.parseResult.value;if(i.$cstNode){let a=(0,nhe.findDeclarationNodeAtOffset)(i.$cstNode,e.textDocument.offsetAt(t.position),this.grammarConfig.nameRegexp);if(a){let s=this.references.findDeclaration(a);if(s)return this.collectGoToImplementationLocationLinks(s,n)}}}};zR.AbstractGoToImplementationProvider=gE});var mB=p(YR=>{"use strict";Object.defineProperty(YR,"__esModule",{value:!0});YR.AbstractInlayHintProvider=void 0;var ihe=Pe(),ahe=bt(),she=Ci(),vE=class{async getInlayHints(e,t,n=ihe.CancellationToken.None){let i=e.parseResult.value,a=[],s=o=>a.push(o);for(let o of(0,ahe.streamAst)(i,{range:t.range}))await(0,she.interruptAndCheck)(n),this.computeInlayHint(o,s);return a}};YR.AbstractInlayHintProvider=vE});var Iu=p(Kl=>{"use strict";Object.defineProperty(Kl,"__esModule",{value:!0});Kl.DefaultLangiumDocuments=Kl.DefaultLangiumDocumentFactory=Kl.DocumentState=void 0;var ohe=bM(),lhe=_n(),uhe=vn(),Ny;(function(r){r[r.Changed=0]="Changed",r[r.Parsed=1]="Parsed",r[r.IndexedContent=2]="IndexedContent",r[r.ComputedScopes=3]="ComputedScopes",r[r.Linked=4]="Linked",r[r.IndexedReferences=5]="IndexedReferences",r[r.Validated=6]="Validated"})(Ny=Kl.DocumentState||(Kl.DocumentState={}));var _E=class{constructor(e){this.serviceRegistry=e.ServiceRegistry,this.textDocuments=e.workspace.TextDocuments,this.fileSystemProvider=e.workspace.FileSystemProvider}fromTextDocument(e,t){return this.create(t??lhe.URI.parse(e.uri),e)}fromString(e,t){return this.create(t,e)}fromModel(e,t){return this.create(t,{$model:e})}create(e,t){if(t??(t=this.textDocuments.get(e.toString())),t??(t=this.getContentFromFileSystem(e)),typeof t=="string"){let n=this.parse(e,t);return this.createLangiumDocument(n,e,void 0,t)}else if("$model"in t){let n={value:t.$model,parserErrors:[],lexerErrors:[]};return this.createLangiumDocument(n,e)}else{let n=this.parse(e,t.getText());return this.createLangiumDocument(n,e,t)}}createLangiumDocument(e,t,n,i){let a;if(n)a={parseResult:e,uri:t,state:Ny.Parsed,references:[],textDocument:n};else{let s=this.createTextDocumentGetter(t,i);a={parseResult:e,uri:t,state:Ny.Parsed,references:[],get textDocument(){return s()}}}return e.value.$document=a,a}update(e){let t=this.textDocuments.get(e.uri.toString()),n=t?t.getText():this.getContentFromFileSystem(e.uri);if(t)Object.defineProperty(e,"textDocument",{value:t});else{let i=this.createTextDocumentGetter(e.uri,n);Object.defineProperty(e,"textDocument",{get:i})}return e.parseResult=this.parse(e.uri,n),e.parseResult.value.$document=e,e.state=Ny.Parsed,e}getContentFromFileSystem(e){return this.fileSystemProvider.readFileSync(e)}parse(e,t){return this.serviceRegistry.getServices(e).parser.LangiumParser.parse(t)}createTextDocumentGetter(e,t){let n=this.serviceRegistry,i;return()=>i??(i=ohe.TextDocument.create(e.toString(),n.getServices(e).LanguageMetaData.languageId,0,t??""))}};Kl.DefaultLangiumDocumentFactory=_E;var $E=class{constructor(e){this.documentMap=new Map,this.langiumDocumentFactory=e.workspace.LangiumDocumentFactory}get all(){return(0,uhe.stream)(this.documentMap.values())}addDocument(e){let t=e.uri.toString();if(this.documentMap.has(t))throw new Error(`A document with the URI '${t}' is already present.`);this.documentMap.set(t,e)}getOrCreateDocument(e){let t=e.toString(),n=this.documentMap.get(t);return n||(n=this.langiumDocumentFactory.create(e),this.documentMap.set(t,n),n)}hasDocument(e){return this.documentMap.has(e.toString())}invalidateDocument(e){let t=e.toString(),n=this.documentMap.get(t);return n&&(n.state=Ny.Changed,n.references=[],n.precomputedScopes=void 0,n.diagnostics=[]),n}deleteDocument(e){let t=e.toString(),n=this.documentMap.get(t);return n&&(n.state=Ny.Changed,this.documentMap.delete(t)),n}};Kl.DefaultLangiumDocuments=$E});var RE=p(qy=>{"use strict";Object.defineProperty(qy,"__esModule",{value:!0});qy.mergeSignatureHelpOptions=qy.AbstractSignatureHelpProvider=void 0;var che=Pe(),fhe=Ut(),TE=class{provideSignatureHelp(e,t,n=che.CancellationToken.None){let a=e.parseResult.value.$cstNode;if(a){let s=(0,fhe.findLeafNodeAtOffset)(a,e.textDocument.offsetAt(t.position));if(s)return this.getSignatureFromElement(s.element,n)}}get signatureHelpOptions(){return{triggerCharacters:["("],retriggerCharacters:[","]}}};qy.AbstractSignatureHelpProvider=TE;function dhe(r){let e=[],t=[];r.forEach(i=>{i?.triggerCharacters&&e.push(...i.triggerCharacters),i?.retriggerCharacters&&t.push(...i.retriggerCharacters)});let n={triggerCharacters:e.length>0?Array.from(new Set(e)).sort():void 0,retriggerCharacters:t.length>0?Array.from(new Set(t)).sort():void 0};return n.triggerCharacters?n:void 0}qy.mergeSignatureHelpOptions=dhe});var AE=p(Re=>{"use strict";Object.defineProperty(Re,"__esModule",{value:!0});Re.createRequestHandler=Re.createServerRequestHandler=Re.createCallHierarchyRequestHandler=Re.addCallHierarchyHandler=Re.addCodeLensHandler=Re.addSignatureHelpHandler=Re.addDocumentLinkHandler=Re.addExecuteCommandHandler=Re.addConfigurationChangeHandler=Re.addSemanticTokenHandler=Re.addInlayHintHandler=Re.addRenameHandler=Re.addFormattingHandler=Re.addFoldingRangeHandler=Re.addHoverHandler=Re.addDocumentHighlightsHandler=Re.addGoToDeclarationHandler=Re.addGoToImplementationHandler=Re.addGoToTypeDefinitionHandler=Re.addGotoDefinitionHandler=Re.addDocumentSymbolHandler=Re.addCodeActionHandler=Re.addFindReferencesHandler=Re.addCompletionHandler=Re.addDiagnosticsHandler=Re.addDocumentsHandler=Re.startLanguageServer=Re.DefaultLanguageServer=void 0;var cf=Pe(),Mv=_n(),yB=mv(),phe=Ci(),mhe=Iu(),yhe=UR(),hhe=kR(),ghe=RE(),bE=class{constructor(e){this.onInitializeEmitter=new cf.Emitter,this.onInitializedEmitter=new cf.Emitter,this.services=e}get onInitialize(){return this.onInitializeEmitter.event}get onInitialized(){return this.onInitializedEmitter.event}async initialize(e){return this.eagerLoadServices(),this.onInitializeEmitter.fire(e),this.onInitializeEmitter.dispose(),this.buildInitializeResult(e)}eagerLoadServices(){(0,yB.eagerLoad)(this.services),this.services.ServiceRegistry.all.forEach(e=>(0,yB.eagerLoad)(e))}hasService(e){return this.services.ServiceRegistry.all.some(t=>e(t)!==void 0)}buildInitializeResult(e){var t;let n=this.services.ServiceRegistry.all,i=this.hasService(he=>he.lsp.Formatter),a=n.map(he=>{var tt;return(tt=he.lsp.Formatter)===null||tt===void 0?void 0:tt.formatOnTypeOptions}).find(he=>Boolean(he)),s=this.hasService(he=>he.lsp.CodeActionProvider),o=this.hasService(he=>he.lsp.SemanticTokenProvider),u=(t=this.services.lsp.ExecuteCommandHandler)===null||t===void 0?void 0:t.commands,c=this.services.lsp.DocumentLinkProvider,f=(0,ghe.mergeSignatureHelpOptions)(n.map(he=>{var tt;return(tt=he.lsp.SignatureHelp)===null||tt===void 0?void 0:tt.signatureHelpOptions})),d=this.hasService(he=>he.lsp.TypeProvider),m=this.hasService(he=>he.lsp.ImplementationProvider),h=this.hasService(he=>he.lsp.CompletionProvider),y=(0,yhe.mergeCompletionProviderOptions)(n.map(he=>{var tt;return(tt=he.lsp.CompletionProvider)===null||tt===void 0?void 0:tt.completionOptions})),_=this.hasService(he=>he.lsp.ReferencesProvider),w=this.hasService(he=>he.lsp.DocumentSymbolProvider),S=this.hasService(he=>he.lsp.DefinitionProvider),C=this.hasService(he=>he.lsp.DocumentHighlightProvider),b=this.hasService(he=>he.lsp.FoldingRangeProvider),I=this.hasService(he=>he.lsp.HoverProvider),L=this.hasService(he=>he.lsp.RenameProvider),W=this.hasService(he=>he.lsp.CallHierarchyProvider),_e=this.services.lsp.CodeLensProvider,Je=this.hasService(he=>he.lsp.DeclarationProvider),Ye=this.services.lsp.InlayHintProvider;return{capabilities:{workspace:{workspaceFolders:{supported:!0}},executeCommandProvider:u&&{commands:u},textDocumentSync:cf.TextDocumentSyncKind.Incremental,completionProvider:h?y:void 0,referencesProvider:_,documentSymbolProvider:w,definitionProvider:S,typeDefinitionProvider:d,documentHighlightProvider:C,codeActionProvider:s,documentFormattingProvider:i,documentRangeFormattingProvider:i,documentOnTypeFormattingProvider:a,foldingRangeProvider:b,hoverProvider:I,renameProvider:L?{prepareProvider:!0}:void 0,semanticTokensProvider:o?hhe.DefaultSemanticTokenOptions:void 0,signatureHelpProvider:f,implementationProvider:m,callHierarchyProvider:W?{}:void 0,documentLinkProvider:c?{resolveProvider:Boolean(c.resolveDocumentLink)}:void 0,codeLensProvider:_e?{resolveProvider:Boolean(_e.resolveCodeLens)}:void 0,declarationProvider:Je,inlayHintProvider:Ye?{resolveProvider:Boolean(Ye.resolveInlayHint)}:void 0}}}async initialized(e){this.onInitializedEmitter.fire(e),this.onInitializedEmitter.dispose()}};Re.DefaultLanguageServer=bE;function vhe(r){let e=r.lsp.Connection;if(!e)throw new Error("Starting a language server requires the languageServer.Connection service to be set.");hB(e,r),gB(e,r),vB(e,r),_B(e,r),TB(e,r),RB(e,r),bB(e,r),CB(e,r),wB(e,r),SB(e,r),MB(e,r),$B(e,r),PB(e,r),DB(e,r),EB(e,r),OB(e,r),IB(e,r),NB(e,r),xB(e,r),qB(e,r),FB(e,r),kB(e,r),AB(e,r),e.onInitialize(n=>r.lsp.LanguageServer.initialize(n)),e.onInitialized(n=>r.lsp.LanguageServer.initialized(n)),r.workspace.TextDocuments.listen(e),e.listen()}Re.startLanguageServer=vhe;function hB(r,e){let t=e.workspace.DocumentBuilder,n=e.workspace.MutexLock;function i(s,o){n.lock(u=>t.update(s,o,u))}e.workspace.TextDocuments.onDidChangeContent(s=>{i([Mv.URI.parse(s.document.uri)],[])}),r.onDidChangeWatchedFiles(s=>{let o=[],u=[];for(let c of s.changes){let f=Mv.URI.parse(c.uri);c.type===cf.FileChangeType.Deleted?u.push(f):o.push(f)}i(o,u)})}Re.addDocumentsHandler=hB;function gB(r,e){e.workspace.DocumentBuilder.onBuildPhase(mhe.DocumentState.Validated,async(n,i)=>{for(let a of n)if(a.diagnostics&&r.sendDiagnostics({uri:a.uri.toString(),diagnostics:a.diagnostics}),i.isCancellationRequested)return})}Re.addDiagnosticsHandler=gB;function vB(r,e){r.onCompletion(On((t,n,i,a)=>{var s;return(s=t.lsp.CompletionProvider)===null||s===void 0?void 0:s.getCompletion(n,i,a)},e))}Re.addCompletionHandler=vB;function _B(r,e){r.onReferences(On((t,n,i,a)=>{var s;return(s=t.lsp.ReferencesProvider)===null||s===void 0?void 0:s.findReferences(n,i,a)},e))}Re.addFindReferencesHandler=_B;function $B(r,e){r.onCodeAction(On((t,n,i,a)=>{var s;return(s=t.lsp.CodeActionProvider)===null||s===void 0?void 0:s.getCodeActions(n,i,a)},e))}Re.addCodeActionHandler=$B;function TB(r,e){r.onDocumentSymbol(On((t,n,i,a)=>{var s;return(s=t.lsp.DocumentSymbolProvider)===null||s===void 0?void 0:s.getSymbols(n,i,a)},e))}Re.addDocumentSymbolHandler=TB;function RB(r,e){r.onDefinition(On((t,n,i,a)=>{var s;return(s=t.lsp.DefinitionProvider)===null||s===void 0?void 0:s.getDefinition(n,i,a)},e))}Re.addGotoDefinitionHandler=RB;function bB(r,e){r.onTypeDefinition(On((t,n,i,a)=>{var s;return(s=t.lsp.TypeProvider)===null||s===void 0?void 0:s.getTypeDefinition(n,i,a)},e))}Re.addGoToTypeDefinitionHandler=bB;function CB(r,e){r.onImplementation(On((t,n,i,a)=>{var s;return(s=t.lsp.ImplementationProvider)===null||s===void 0?void 0:s.getImplementation(n,i,a)},e))}Re.addGoToImplementationHandler=CB;function AB(r,e){r.onDeclaration(On((t,n,i,a)=>{var s;return(s=t.lsp.DeclarationProvider)===null||s===void 0?void 0:s.getDeclaration(n,i,a)},e))}Re.addGoToDeclarationHandler=AB;function wB(r,e){r.onDocumentHighlight(On((t,n,i,a)=>{var s;return(s=t.lsp.DocumentHighlightProvider)===null||s===void 0?void 0:s.getDocumentHighlight(n,i,a)},e))}Re.addDocumentHighlightsHandler=wB;function DB(r,e){r.onHover(On((t,n,i,a)=>{var s;return(s=t.lsp.HoverProvider)===null||s===void 0?void 0:s.getHoverContent(n,i,a)},e))}Re.addHoverHandler=DB;function SB(r,e){r.onFoldingRanges(On((t,n,i,a)=>{var s;return(s=t.lsp.FoldingRangeProvider)===null||s===void 0?void 0:s.getFoldingRanges(n,i,a)},e))}Re.addFoldingRangeHandler=SB;function MB(r,e){r.onDocumentFormatting(On((t,n,i,a)=>{var s;return(s=t.lsp.Formatter)===null||s===void 0?void 0:s.formatDocument(n,i,a)},e)),r.onDocumentRangeFormatting(On((t,n,i,a)=>{var s;return(s=t.lsp.Formatter)===null||s===void 0?void 0:s.formatDocumentRange(n,i,a)},e)),r.onDocumentOnTypeFormatting(On((t,n,i,a)=>{var s;return(s=t.lsp.Formatter)===null||s===void 0?void 0:s.formatDocumentOnType(n,i,a)},e))}Re.addFormattingHandler=MB;function PB(r,e){r.onRenameRequest(On((t,n,i,a)=>{var s;return(s=t.lsp.RenameProvider)===null||s===void 0?void 0:s.rename(n,i,a)},e)),r.onPrepareRename(On((t,n,i,a)=>{var s;return(s=t.lsp.RenameProvider)===null||s===void 0?void 0:s.prepareRename(n,i,a)},e))}Re.addRenameHandler=PB;function EB(r,e){var t;let n=e.lsp.InlayHintProvider;if(n){r.languages.inlayHint.on(Hl((a,s,o,u)=>n.getInlayHints(s,o,u),e));let i=(t=n.resolveInlayHint)===null||t===void 0?void 0:t.bind(n);i&&r.languages.inlayHint.resolve(async(a,s)=>{try{return await i(a,s)}catch(o){return ff(o)}})}}Re.addInlayHintHandler=EB;function OB(r,e){let t={data:[]};r.languages.semanticTokens.on(Hl((n,i,a,s)=>n.lsp.SemanticTokenProvider?n.lsp.SemanticTokenProvider.semanticHighlight(i,a,s):t,e)),r.languages.semanticTokens.onDelta(Hl((n,i,a,s)=>n.lsp.SemanticTokenProvider?n.lsp.SemanticTokenProvider.semanticHighlightDelta(i,a,s):t,e)),r.languages.semanticTokens.onRange(Hl((n,i,a,s)=>n.lsp.SemanticTokenProvider?n.lsp.SemanticTokenProvider.semanticHighlightRange(i,a,s):t,e))}Re.addSemanticTokenHandler=OB;function kB(r,e){r.onDidChangeConfiguration(t=>{t.settings&&e.workspace.ConfigurationProvider.updateConfiguration(t)})}Re.addConfigurationChangeHandler=kB;function IB(r,e){let t=e.lsp.ExecuteCommandHandler;t&&r.onExecuteCommand(async(n,i)=>{var a;try{return await t.executeCommand(n.command,(a=n.arguments)!==null&&a!==void 0?a:[],i)}catch(s){return ff(s)}})}Re.addExecuteCommandHandler=IB;function FB(r,e){var t;let n=e.lsp.DocumentLinkProvider;if(n){r.onDocumentLinks(Hl((a,s,o,u)=>n.getDocumentLinks(s,o,u),e));let i=(t=n.resolveDocumentLink)===null||t===void 0?void 0:t.bind(n);i&&r.onDocumentLinkResolve(async(a,s)=>{try{return await i(a,s)}catch(o){return ff(o)}})}}Re.addDocumentLinkHandler=FB;function NB(r,e){r.onSignatureHelp(Hl((t,n,i,a)=>{var s;return(s=t.lsp.SignatureHelp)===null||s===void 0?void 0:s.provideSignatureHelp(n,i,a)},e))}Re.addSignatureHelpHandler=NB;function qB(r,e){var t;let n=e.lsp.CodeLensProvider;if(n){r.onCodeLens(Hl((a,s,o,u)=>n.provideCodeLens(s,o,u),e));let i=(t=n.resolveCodeLens)===null||t===void 0?void 0:t.bind(n);i&&r.onCodeLensResolve(async(a,s)=>{try{return await i(a,s)}catch(o){return ff(o)}})}}Re.addCodeLensHandler=qB;function xB(r,e){r.languages.callHierarchy.onPrepare(Hl((t,n,i,a)=>{var s;return t.lsp.CallHierarchyProvider&&(s=t.lsp.CallHierarchyProvider.prepareCallHierarchy(n,i,a))!==null&&s!==void 0?s:null},e)),r.languages.callHierarchy.onIncomingCalls(CE((t,n,i)=>{var a;return t.lsp.CallHierarchyProvider&&(a=t.lsp.CallHierarchyProvider.incomingCalls(n,i))!==null&&a!==void 0?a:null},e)),r.languages.callHierarchy.onOutgoingCalls(CE((t,n,i)=>{var a;return t.lsp.CallHierarchyProvider&&(a=t.lsp.CallHierarchyProvider.outgoingCalls(n,i))!==null&&a!==void 0?a:null},e))}Re.addCallHierarchyHandler=xB;function CE(r,e){let t=e.ServiceRegistry;return async(n,i)=>{let a=Mv.URI.parse(n.item.uri),s=t.getServices(a);if(!s){let o=`Could not find service instance for uri: '${a.toString()}'`;throw console.error(o),new Error(o)}try{return await r(s,n,i)}catch(o){return ff(o)}}}Re.createCallHierarchyRequestHandler=CE;function Hl(r,e){let t=e.workspace.LangiumDocuments,n=e.ServiceRegistry;return async(i,a)=>{let s=Mv.URI.parse(i.textDocument.uri),o=n.getServices(s);if(!o)throw console.error(`Could not find service instance for uri: '${s.toString()}'`),new Error;let u=t.getOrCreateDocument(s);if(!u)throw new Error;try{return await r(o,u,i,a)}catch(c){return ff(c)}}}Re.createServerRequestHandler=Hl;function On(r,e){let t=e.workspace.LangiumDocuments,n=e.ServiceRegistry;return async(i,a)=>{let s=Mv.URI.parse(i.textDocument.uri),o=n.getServices(s);if(!o)return console.error(`Could not find service instance for uri: '${s.toString()}'`),null;let u=t.getOrCreateDocument(s);if(!u)return null;try{return await r(o,u,i,a)}catch(c){return ff(c)}}}Re.createRequestHandler=On;function ff(r){if((0,phe.isOperationCancelled)(r))return new cf.ResponseError(cf.LSPErrorCodes.RequestCancelled,"The request has been cancelled.");if(r instanceof cf.ResponseError)return r;throw r}});var DE=p(XR=>{"use strict";Object.defineProperty(XR,"__esModule",{value:!0});XR.DefaultReferencesProvider=void 0;var _he=Pe(),$he=Ut(),wE=class{constructor(e){this.nameProvider=e.references.NameProvider,this.references=e.references.References,this.grammarConfig=e.parser.GrammarConfig}findReferences(e,t){let n=e.parseResult.value.$cstNode;if(!n)return[];let i=(0,$he.findDeclarationNodeAtOffset)(n,e.textDocument.offsetAt(t.position),this.grammarConfig.nameRegexp);return i?this.getReferences(i,t,e):[]}getReferences(e,t,n){let i=[],a=this.references.findDeclaration(e);if(a){let s={includeDeclaration:t.context.includeDeclaration};this.references.findReferences(a,s).forEach(o=>{i.push(_he.Location.create(o.sourceUri.toString(),o.segment.range))})}return i}};XR.DefaultReferencesProvider=wE});var ME=p(JR=>{"use strict";Object.defineProperty(JR,"__esModule",{value:!0});JR.DefaultRenameProvider=void 0;var The=Pe(),Rhe=wy(),LB=Ut(),SE=class{constructor(e){this.references=e.references.References,this.nameProvider=e.references.NameProvider,this.grammarConfig=e.parser.GrammarConfig}async rename(e,t){let n={},i=e.parseResult.value.$cstNode;if(!i)return;let a=e.textDocument.offsetAt(t.position),s=(0,LB.findDeclarationNodeAtOffset)(i,a,this.grammarConfig.nameRegexp);if(!s)return;let o=this.references.findDeclaration(s);if(!o)return;let u={onlyLocal:!1,includeDeclaration:!0};return this.references.findReferences(o,u).forEach(f=>{let d=The.TextEdit.replace(f.segment.range,t.newName),m=f.sourceUri.toString();n[m]?n[m].push(d):n[m]=[d]}),{changes:n}}prepareRename(e,t){return this.renameNodeRange(e,t.position)}renameNodeRange(e,t){let n=e.parseResult.value.$cstNode,i=e.textDocument.offsetAt(t);if(n&&i){let a=(0,LB.findDeclarationNodeAtOffset)(n,i,this.grammarConfig.nameRegexp);if(!a)return;if(this.references.findDeclaration(a)||this.isNameNode(a))return a.range}}isNameNode(e){return e?.element&&(0,Rhe.isNamed)(e.element)&&e===this.nameProvider.getNameNode(e.element)}};JR.DefaultRenameProvider=SE});var jB=p(QR=>{"use strict";Object.defineProperty(QR,"__esModule",{value:!0});QR.AbstractTypeDefinitionProvider=void 0;var bhe=Pe(),Che=Ut(),PE=class{constructor(e){this.references=e.references.References}getTypeDefinition(e,t,n=bhe.CancellationToken.None){let i=e.parseResult.value;if(i.$cstNode){let a=(0,Che.findDeclarationNodeAtOffset)(i.$cstNode,e.textDocument.offsetAt(t.position));if(a){let s=this.references.findDeclaration(a);if(s)return this.collectGoToTypeLocationLinks(s,n)}}}};QR.AbstractTypeDefinitionProvider=PE});var EE=p(Gt=>{"use strict";var Ahe=Gt&&Gt.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Er=Gt&&Gt.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Ahe(e,r,t)};Object.defineProperty(Gt,"__esModule",{value:!0});Er(UR(),Gt);Er(rE(),Gt);Er(oE(),Gt);Er(aB(),Gt);Er(oB(),Gt);Er(uB(),Gt);Er(uE(),Gt);Er(fE(),Gt);Er(fB(),Gt);Er(pE(),Gt);Er(dB(),Gt);Er(DR(),Gt);Er(VP(),Gt);Er(hE(),Gt);Er(pB(),Gt);Er(mB(),Gt);Er(AE(),Gt);Er(DE(),Gt);Er(ME(),Gt);Er(kR(),Gt);Er(RE(),Gt);Er(jB(),Gt)});var UB=p(ZR=>{"use strict";Object.defineProperty(ZR,"__esModule",{value:!0});ZR.LangiumGrammarDefinitionProvider=void 0;var OE=Pe(),whe=EE(),Dhe=bt(),She=jr(),Mhe=yt(),Phe=$n(),kE=class extends whe.DefaultDefinitionProvider{constructor(e){super(e),this.documents=e.shared.workspace.LangiumDocuments}collectLocationLinks(e,t){var n,i,a,s,o,u;let c="path";if((0,Mhe.isGrammarImport)(e.element)&&((n=(0,She.findAssignment)(e))===null||n===void 0?void 0:n.feature)===c){let f=(0,Phe.resolveImport)(this.documents,e.element);if(f?.$document){let d=(i=this.findTargetObject(f))!==null&&i!==void 0?i:f,m=(s=(a=this.nameProvider.getNameNode(d))===null||a===void 0?void 0:a.range)!==null&&s!==void 0?s:OE.Range.create(0,0,0,0),h=(u=(o=d.$cstNode)===null||o===void 0?void 0:o.range)!==null&&u!==void 0?u:OE.Range.create(0,0,0,0);return[OE.LocationLink.create(f.$document.uri.toString(),h,m,e.range)]}return}return super.collectLocationLinks(e,t)}findTargetObject(e){return e.isDeclared?e:(0,Dhe.streamContents)(e).head()}};ZR.LangiumGrammarDefinitionProvider=kE});var GB=p(t0=>{"use strict";Object.defineProperty(t0,"__esModule",{value:!0});t0.LangiumGrammarCallHierarchyProvider=void 0;var BB=Pe(),Ehe=oE(),IE=bt(),Ohe=Ut(),e0=yt(),FE=class extends Ehe.AbstractCallHierarchyProvider{getIncomingCalls(e,t){if(!(0,e0.isParserRule)(e))return;let n=new Map;if(t.forEach(i=>{let s=this.documents.getOrCreateDocument(i.sourceUri).parseResult.value;if(!s.$cstNode)return;let o=(0,Ohe.findLeafNodeAtOffset)(s.$cstNode,i.segment.offset);if(!o)return;let u=(0,IE.getContainerOfType)(o.element,e0.isParserRule);if(!u||!u.$cstNode)return;let c=this.nameProvider.getNameNode(u);if(!c)return;let f=i.sourceUri.toString(),d=f+"@"+c.text;n.has(d)?n.set(d,{parserRule:u.$cstNode,nameNode:c,targetNodes:[...n.get(d).targetNodes,o],docUri:f}):n.set(d,{parserRule:u.$cstNode,nameNode:c,targetNodes:[o],docUri:f})}),n.size!==0)return Array.from(n.values()).map(i=>({from:{kind:BB.SymbolKind.Method,name:i.nameNode.text,range:i.parserRule.range,selectionRange:i.nameNode.range,uri:i.docUri},fromRanges:i.targetNodes.map(a=>a.range)}))}getOutgoingCalls(e){if(!(0,e0.isParserRule)(e))return;let t=(0,IE.streamAllContents)(e).filter(e0.isRuleCall).toArray(),n=new Map;if(t.forEach(i=>{var a;let s=i.$cstNode;if(!s)return;let o=(a=i.rule.ref)===null||a===void 0?void 0:a.$cstNode;if(!o)return;let u=this.nameProvider.getNameNode(o.element);if(!u)return;let c=(0,IE.getDocument)(o.element).uri.toString(),f=c+"@"+u.text;n.has(f)?n.set(f,{refCstNode:o,to:u,from:[...n.get(f).from,s.range],docUri:c}):n.set(f,{refCstNode:o,to:u,from:[s.range],docUri:c})}),n.size!==0)return Array.from(n.values()).map(i=>({to:{kind:BB.SymbolKind.Method,name:i.to.text,range:i.refCstNode.range,selectionRange:i.to.range,uri:i.docUri},fromRanges:i.from}))}};t0.LangiumGrammarCallHierarchyProvider=FE});var VB=p(i0=>{"use strict";Object.defineProperty(i0,"__esModule",{value:!0});i0.LangiumGrammarValidationResourcesCollector=void 0;var khe=us(),HB=vn(),r0=yt(),KB=$n(),n0=Cy(),Ihe=vP(),NE=class{constructor(e){this.documents=e.shared.workspace.LangiumDocuments}collectValidationResources(e){let t=(0,Ihe.collectValidationAst)(e,this.documents);return{typeToValidationInfo:this.collectValidationInfo(t),typeToSuperProperties:this.collectSuperProperties(t)}}collectValidationInfo({astResources:e,inferred:t,declared:n}){let i=new Map,a=Fhe(e);for(let o of(0,n0.mergeTypesAndInterfaces)(t))i.set(o.name,{inferred:o,inferredNodes:a.get(o.name)});let s=(0,HB.stream)(e.interfaces).concat(e.types).reduce((o,u)=>o.set(u.name,u),new Map);for(let o of(0,n0.mergeTypesAndInterfaces)(n)){let u=s.get(o.name);if(u){let c=i.get(o.name);i.set(o.name,Object.assign(Object.assign({},c??{}),{declared:o,declaredNode:u}))}}return i}collectSuperProperties({inferred:e,declared:t}){let n=new Map,i=(0,n0.mergeInterfaces)(e,t),a=new Map(i.map(s=>[s.name,s]));for(let s of(0,n0.mergeInterfaces)(e,t))n.set(s.name,this.addSuperProperties(s,a,new Set));return n}addSuperProperties(e,t,n){if(n.has(e.name))return[];n.add(e.name);let i=[...e.properties];for(let a of e.superTypes){let s=t.get(a.name);s&&i.push(...this.addSuperProperties(s,t,n))}return i}};i0.LangiumGrammarValidationResourcesCollector=NE;function Fhe({parserRules:r,datatypeRules:e}){let t=new khe.MultiMap;(0,HB.stream)(r).concat(e).forEach(i=>t.add((0,KB.getRuleType)(i),i));function n(i){if((0,r0.isAction)(i)){let a=(0,KB.getActionType)(i);a&&t.add(a,i)}((0,r0.isAlternatives)(i)||(0,r0.isGroup)(i)||(0,r0.isUnorderedGroup)(i))&&i.elements.forEach(a=>n(a))}return r.forEach(i=>n(i.definition)),t}});var WB=p(Fu=>{"use strict";Object.defineProperty(Fu,"__esModule",{value:!0});Fu.isInferredAndDeclared=Fu.isInferred=Fu.isDeclared=void 0;function Nhe(r){return r&&"declared"in r}Fu.isDeclared=Nhe;function qhe(r){return r&&"inferred"in r}Fu.isInferred=qhe;function xhe(r){return r&&"inferred"in r&&"declared"in r}Fu.isInferredAndDeclared=xhe});var YB=p(wa=>{"use strict";var Lhe=wa&&wa.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),jhe=wa&&wa.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Uhe=wa&&wa.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Lhe(e,r,t);return jhe(e,r),e};Object.defineProperty(wa,"__esModule",{value:!0});wa.LangiumGrammarTypesValidator=wa.registerTypeValidationChecks=void 0;var xy=Uhe(yt()),Bhe=us(),Ghe=$n(),ur=by(),qE=WB();function Khe(r){let e=r.validation.ValidationRegistry,t=r.validation.LangiumGrammarTypesValidator,n={Action:[t.checkActionIsNotUnionType],Grammar:[t.checkDeclaredTypesConsistency,t.checkDeclaredAndInferredTypesConsistency]};e.register(n,t)}wa.registerTypeValidationChecks=Khe;var xE=class{checkDeclaredTypesConsistency(e,t){var n;let i=(n=e.$document)===null||n===void 0?void 0:n.validationResources;if(i){for(let a of i.typeToValidationInfo.values())if((0,qE.isDeclared)(a)&&(0,ur.isInterfaceType)(a.declared)&&xy.isInterface(a.declaredNode)){let s=a;Vhe(s,t),Whe(s,t)}}}checkDeclaredAndInferredTypesConsistency(e,t){var n;let i=(n=e.$document)===null||n===void 0?void 0:n.validationResources;if(i)for(let a of i.typeToValidationInfo.values())(0,qE.isInferred)(a)&&a.inferred instanceof ur.InterfaceType&&Hhe(a.inferred,t),(0,qE.isInferredAndDeclared)(a)&&Xhe(a,i,t)}checkActionIsNotUnionType(e,t){xy.isType(e.type)&&t("error","Actions cannot create union types.",{node:e,property:"type"})}};wa.LangiumGrammarTypesValidator=xE;function Hhe(r,e){r.properties.forEach(t=>{var n;let i=(0,ur.flattenPropertyUnion)(t.type);if(i.length>1){let a=o=>(0,ur.isReferenceType)(o)?"ref":"other",s=a(i[0]);if(i.slice(1).some(o=>a(o)!==s)){let o=(n=t.astNodes.values().next())===null||n===void 0?void 0:n.value;o&&e("error",`Mixing a cross-reference with other types is not supported. Consider splitting property "${t.name}" into two or more different properties.`,{node:o})}}})}function Vhe({declared:r,declaredNode:e},t){Array.from(r.superTypes).forEach((n,i)=>{n&&((0,ur.isUnionType)(n)&&t("error","Interfaces cannot extend union types.",{node:e,property:"superTypes",index:i}),n.declared||t("error","Extending an inferred type is discouraged.",{node:e,property:"superTypes",index:i}))})}function Whe({declared:r,declaredNode:e},t){let n=r.properties.reduce((s,o)=>s.add(o.name,o),new Bhe.MultiMap);for(let[s,o]of n.entriesGroupedByKey())if(o.length>1)for(let u of o)t("error",`Cannot have two properties with the same name '${s}'.`,{node:Array.from(u.astNodes)[0],property:"name"});let i=Array.from(r.superTypes);for(let s=0;s<i.length;s++)for(let o=s+1;o<i.length;o++){let u=i[s],c=i[o],f=(0,ur.isInterfaceType)(u)?u.superProperties:[],d=(0,ur.isInterfaceType)(c)?c.superProperties:[],m=zhe(f,d);m.length>0&&t("error",`Cannot simultaneously inherit from '${u}' and '${c}'. Their ${m.map(h=>"'"+h+"'").join(", ")} properties are not identical.`,{node:e,property:"name"})}let a=new Set;for(let s of i){let o=(0,ur.isInterfaceType)(s)?s.superProperties:[];for(let u of o)a.add(u.name)}for(let s of r.properties)if(a.has(s.name)){let o=e.attributes.find(u=>u.name===s.name);o&&t("error",`Cannot redeclare property '${s.name}'. It is already inherited from another interface.`,{node:o,property:"name"})}}function zhe(r,e){let t=[];for(let n of r){let i=e.find(a=>a.name===n.name);i&&!Yhe(n,i)&&t.push(n.name)}return t}function Yhe(r,e){return(0,ur.isTypeAssignable)(r.type,e.type)&&(0,ur.isTypeAssignable)(e.type,r.type)}function Xhe(r,e,t){let{inferred:n,declared:i,declaredNode:a,inferredNodes:s}=r,o=i.name,u=d=>m=>s.forEach(h=>t("error",`${m}${d?` ${d}`:""}.`,h?.inferredType?{node:h?.inferredType,property:"name"}:{node:h,property:xy.isAction(h)?"type":"name"})),c=(d,m)=>d.forEach(h=>t("error",m,{node:h,property:xy.isAssignment(h)||xy.isAction(h)?"feature":"name"})),f=d=>{s.forEach(m=>{xy.isParserRule(m)&&(0,Ghe.extractAssignments)(m.definition).find(y=>y.feature===d)===void 0&&t("error",`Property '${d}' is missing in a rule '${m.name}', but is required in type '${o}'.`,{node:m,property:"parameters"})})};if((0,ur.isUnionType)(n)&&(0,ur.isUnionType)(i))Jhe(n.type,i.type,u(`in a rule that returns type '${o}'`));else if((0,ur.isInterfaceType)(n)&&(0,ur.isInterfaceType)(i))Qhe(n,i,e,u(`in a rule that returns type '${o}'`),c,f);else{let d=`Inferred and declared versions of type '${o}' both have to be interfaces or unions.`;u()(d),t("error",d,{node:a,property:"name"})}}function Jhe(r,e,t){(0,ur.isTypeAssignable)(r,e)||t(`Cannot assign type '${(0,ur.propertyTypeToString)(r,"DeclaredType")}' to '${(0,ur.propertyTypeToString)(e,"DeclaredType")}'`)}function zB(r){return r.optional||(0,ur.isMandatoryPropertyType)(r.type)}function Qhe(r,e,t,n,i,a){let s=new Set(r.properties.map(d=>d.name)),o=new Map(r.allProperties.map(d=>[d.name,d])),u=new Map(e.superProperties.map(d=>[d.name,d])),c=d=>{if((0,ur.isPropertyUnion)(d))return{types:d.types.map(m=>c(m))};if((0,ur.isReferenceType)(d))return{referenceType:c(d.referenceType)};if((0,ur.isArrayType)(d))return{elementType:c(d.elementType)};if((0,ur.isValueType)(d)){let m=t.typeToValidationInfo.get(d.value.name);return m?{value:"declared"in m?m.declared:m.inferred}:d}return d};for(let[d,m]of o.entries()){let h=u.get(d);if(h){let y=(0,ur.propertyTypeToString)(m.type,"DeclaredType"),_=(0,ur.propertyTypeToString)(h.type,"DeclaredType");if(!(0,ur.isTypeAssignable)(c(m.type),h.type)){let S=`The assigned type '${y}' is not compatible with the declared property '${d}' of type '${_}'.`;i(m.astNodes,S)}m.optional&&!zB(h)&&a(d)}else s.has(d)&&i(m.astNodes,`A property '${d}' is not expected.`)}let f=new Set;for(let[d,m]of u.entries())!o.get(d)&&!zB(m)&&f.add(d);if(f.size>0){let d=f.size>1?"Properties":"A property",m=f.size>1?"are expected":"is expected",h=Array.from(f).map(y=>`'${y}'`).sort().join(", ");n(`${d} ${h} ${m}.`)}}});var LE=p(df=>{"use strict";Object.defineProperty(df,"__esModule",{value:!0});df.createLangiumGrammarServices=df.LangiumGrammarModule=void 0;var XB=a0(),JB=mv(),QB=v2(),ZB=w2(),eG=qP(),Zhe=F2(),ege=N2(),tge=x2(),rge=L2(),nge=U2(),ige=z2(),age=UB(),sge=GB(),oge=VB(),tG=YB(),lge=Ci(),uge=Iu();df.LangiumGrammarModule={validation:{LangiumGrammarValidator:r=>new eG.LangiumGrammarValidator(r),ValidationResourcesCollector:r=>new oge.LangiumGrammarValidationResourcesCollector(r),LangiumGrammarTypesValidator:()=>new tG.LangiumGrammarTypesValidator},lsp:{FoldingRangeProvider:r=>new ege.LangiumGrammarFoldingRangeProvider(r),CodeActionProvider:r=>new Zhe.LangiumGrammarCodeActionProvider(r),SemanticTokenProvider:r=>new rge.LangiumGrammarSemanticTokenProvider(r),Formatter:()=>new tge.LangiumGrammarFormatter,DefinitionProvider:r=>new age.LangiumGrammarDefinitionProvider(r),CallHierarchyProvider:r=>new sge.LangiumGrammarCallHierarchyProvider(r)},references:{ScopeComputation:r=>new ZB.LangiumGrammarScopeComputation(r),ScopeProvider:r=>new ZB.LangiumGrammarScopeProvider(r),References:r=>new ige.LangiumGrammarReferences(r),NameProvider:()=>new nge.LangiumGrammarNameProvider}};function cge(r,e){let t=(0,JB.inject)((0,XB.createDefaultSharedModule)(r),QB.LangiumGrammarGeneratedSharedModule,e),n=(0,JB.inject)((0,XB.createDefaultModule)({shared:t}),QB.LangiumGrammarGeneratedModule,df.LangiumGrammarModule);return fge(t,n),t.ServiceRegistry.register(n),(0,eG.registerValidationChecks)(n),(0,tG.registerTypeValidationChecks)(n),{shared:t,grammar:n}}df.createLangiumGrammarServices=cge;function fge(r,e){r.workspace.DocumentBuilder.onBuildPhase(uge.DocumentState.IndexedReferences,async(n,i)=>{for(let a of n){await(0,lge.interruptAndCheck)(i);let s=e.validation.ValidationResourcesCollector,o=a.parseResult.value;a.validationResources=s.collectValidationResources(o)}})}});var jE=p(Ly=>{"use strict";Object.defineProperty(Ly,"__esModule",{value:!0});Ly.EmptyFileSystem=Ly.EmptyFileSystemProvider=void 0;var s0=class{readFile(){throw new Error("Method not implemented.")}readFileSync(){throw new Error("Method not implemented.")}async readDirectory(){return[]}};Ly.EmptyFileSystemProvider=s0;Ly.EmptyFileSystem={fileSystemProvider:()=>new s0}});var jr=p(ot=>{"use strict";var dge=ot&&ot.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),pge=ot&&ot.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),mge=ot&&ot.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&dge(e,r,t);return pge(e,r),e};Object.defineProperty(ot,"__esModule",{value:!0});ot.createServicesForGrammar=ot.loadGrammarFromJson=ot.findNameAssignment=ot.findAssignment=ot.findNodesForKeywordInternal=ot.findNodeForKeyword=ot.findNodesForKeyword=ot.findNodeForProperty=ot.findNodesForProperty=ot.isCommentTerminal=ot.getCrossReferenceTerminal=ot.getAllReachableRules=ot.getHiddenRules=ot.getEntryRule=void 0;var iG=_n(),rG=a0(),nG=mv(),yge=$P(),pi=mge(yt()),hge=$n(),aG=LE(),gge=Un(),jy=bt(),vge=Ut(),UE=jE();function sG(r){return r.rules.find(e=>pi.isParserRule(e)&&e.entry)}ot.getEntryRule=sG;function oG(r){return r.rules.filter(e=>pi.isTerminalRule(e)&&e.hidden)}ot.getHiddenRules=oG;function _ge(r,e){let t=new Set,n=sG(r);if(!n)return new Set(r.rules);let i=[n].concat(oG(r));for(let s of i)lG(s,t,e);let a=new Set;for(let s of r.rules)(t.has(s.name)||pi.isTerminalRule(s)&&s.hidden)&&a.add(s);return a}ot.getAllReachableRules=_ge;function lG(r,e,t){e.add(r.name),(0,jy.streamAllContents)(r).forEach(n=>{if(pi.isRuleCall(n)||t&&pi.isTerminalRuleCall(n)){let i=n.rule.ref;i&&!e.has(i.name)&&lG(i,e,t)}})}function $ge(r){if(r.terminal)return r.terminal;if(r.type.ref){let e=uG(r.type.ref);return e?.terminal}}ot.getCrossReferenceTerminal=$ge;function Tge(r){return r.hidden&&!" ".match((0,hge.terminalRegex)(r))}ot.isCommentTerminal=Tge;function Rge(r,e){return!r||!e?[]:BE(r,e,r.element,!0)}ot.findNodesForProperty=Rge;function bge(r,e,t){if(!r||!e)return;let n=BE(r,e,r.element,!0);if(n.length!==0)return t!==void 0?t=Math.max(0,Math.min(t,n.length-1)):t=0,n[t]}ot.findNodeForProperty=bge;function BE(r,e,t,n){if(!n){let i=(0,jy.getContainerOfType)(r.feature,pi.isAssignment);if(i&&i.feature===e)return[r]}return(0,gge.isCompositeCstNode)(r)&&r.element===t?r.children.flatMap(i=>BE(i,e,t,!1)):[]}function Cge(r,e){return r?GE(r,e,r?.element):[]}ot.findNodesForKeyword=Cge;function Age(r,e,t){if(!r)return;let n=GE(r,e,r?.element);if(n.length!==0)return t!==void 0?t=Math.max(0,Math.min(t,n.length-1)):t=0,n[t]}ot.findNodeForKeyword=Age;function GE(r,e,t){if(r.element!==t)return[];if(pi.isKeyword(r.feature)&&r.feature.value===e)return[r];let n=(0,vge.streamCst)(r).iterator(),i,a=[];do if(i=n.next(),!i.done){let s=i.value;s.element===t?pi.isKeyword(s.feature)&&s.feature.value===e&&a.push(s):n.prune()}while(!i.done);return a}ot.findNodesForKeywordInternal=GE;function wge(r){var e;let t=r.element;for(;t===((e=r.parent)===null||e===void 0?void 0:e.element);){let n=(0,jy.getContainerOfType)(r.feature,pi.isAssignment);if(n)return n;r=r.parent}}ot.findAssignment=wge;function uG(r){return pi.isInferredType(r)&&(r=r.$container),cG(r,new Map)}ot.findNameAssignment=uG;function cG(r,e){var t;function n(i,a){let s;return(0,jy.getContainerOfType)(i,pi.isAssignment)||(s=cG(a,e)),e.set(r,s),s}if(e.has(r))return e.get(r);e.set(r,void 0);for(let i of(0,jy.streamAllContents)(r)){if(pi.isAssignment(i)&&i.feature.toLowerCase()==="name")return e.set(r,i),i;if(pi.isRuleCall(i)&&pi.isParserRule(i.rule.ref))return n(i,i.rule.ref);if(pi.isSimpleType(i)&&(!((t=i.typeRef)===null||t===void 0)&&t.ref))return n(i,i.typeRef.ref)}}function Dge(r){var e;let t=(0,aG.createLangiumGrammarServices)(UE.EmptyFileSystem).grammar,n=t.serializer.JsonSerializer.deserialize(r);return t.shared.workspace.LangiumDocumentFactory.fromModel(n,iG.URI.parse(`memory://${(e=n.name)!==null&&e!==void 0?e:"grammar"}.langium`)),n}ot.loadGrammarFromJson=Dge;async function Sge(r){var e,t,n,i,a,s;let o=(e=r.grammarServices)!==null&&e!==void 0?e:(0,aG.createLangiumGrammarServices)(UE.EmptyFileSystem).grammar,u=iG.URI.parse("memory:///grammar.langium"),c=o.shared.workspace.LangiumDocumentFactory,f=typeof r.grammar=="string"?c.fromString(r.grammar,u):(0,jy.getDocument)(r.grammar),d=f.parseResult.value;await o.shared.workspace.DocumentBuilder.build([f],{validationChecks:"none"});let h=(t=r.parserConfig)!==null&&t!==void 0?t:{skipValidations:!1},y=(n=r.languageMetaData)!==null&&n!==void 0?n:{caseInsensitive:!1,fileExtensions:[`.${(a=(i=d.name)===null||i===void 0?void 0:i.toLowerCase())!==null&&a!==void 0?a:"unknown"}`],languageId:(s=d.name)!==null&&s!==void 0?s:"UNKNOWN"},_={AstReflection:()=>(0,yge.interpretAstReflection)(d)},w={Grammar:()=>d,LanguageMetaData:()=>y,parser:{ParserConfig:()=>h}},S=(0,nG.inject)((0,rG.createDefaultSharedModule)(UE.EmptyFileSystem),_,r.sharedModule),C=(0,nG.inject)((0,rG.createDefaultModule)({shared:S}),w,r.module);return S.ServiceRegistry.register(C),C}ot.createServicesForGrammar=Sge});var l0=p(o0=>{"use strict";Object.defineProperty(o0,"__esModule",{value:!0});o0.createGrammarConfig=void 0;var Mge=Ut(),Pge=jr(),Ege=sf(),Oge=yt(),kge=$n();function Ige(r){let e=[],t=r.Grammar;for(let n of t.rules)(0,Oge.isTerminalRule)(n)&&(0,Pge.isCommentTerminal)(n)&&(0,Ege.isMultilineComment)((0,kge.terminalRegex)(n))&&e.push(n.name);return{multilineCommentRules:e,nameRegexp:Mge.DefaultNameRegexp}}o0.createGrammarConfig=Ige});var KE=p(u0=>{"use strict";Object.defineProperty(u0,"__esModule",{value:!0});u0.VERSION=void 0;u0.VERSION="10.4.2"});var Uy=p((Dst,fG)=>{var Fge=Object.prototype;function Nge(r){var e=r&&r.constructor,t=typeof e=="function"&&e.prototype||Fge;return r===t}fG.exports=Nge});var HE=p((Sst,dG)=>{function qge(r,e){return function(t){return r(e(t))}}dG.exports=qge});var mG=p((Mst,pG)=>{var xge=HE(),Lge=xge(Object.keys,Object);pG.exports=Lge});var VE=p((Pst,yG)=>{var jge=Uy(),Uge=mG(),Bge=Object.prototype,Gge=Bge.hasOwnProperty;function Kge(r){if(!jge(r))return Uge(r);var e=[];for(var t in Object(r))Gge.call(r,t)&&t!="constructor"&&e.push(t);return e}yG.exports=Kge});var WE=p((Est,hG)=>{var Hge=typeof global=="object"&&global&&global.Object===Object&&global;hG.exports=Hge});var ms=p((Ost,gG)=>{var Vge=WE(),Wge=typeof self=="object"&&self&&self.Object===Object&&self,zge=Vge||Wge||Function("return this")();gG.exports=zge});var pf=p((kst,vG)=>{var Yge=ms(),Xge=Yge.Symbol;vG.exports=Xge});var RG=p((Ist,TG)=>{var _G=pf(),$G=Object.prototype,Jge=$G.hasOwnProperty,Qge=$G.toString,Pv=_G?_G.toStringTag:void 0;function Zge(r){var e=Jge.call(r,Pv),t=r[Pv];try{r[Pv]=void 0;var n=!0}catch{}var i=Qge.call(r);return n&&(e?r[Pv]=t:delete r[Pv]),i}TG.exports=Zge});var CG=p((Fst,bG)=>{var eve=Object.prototype,tve=eve.toString;function rve(r){return tve.call(r)}bG.exports=rve});var Nu=p((Nst,DG)=>{var AG=pf(),nve=RG(),ive=CG(),ave="[object Null]",sve="[object Undefined]",wG=AG?AG.toStringTag:void 0;function ove(r){return r==null?r===void 0?sve:ave:wG&&wG in Object(r)?nve(r):ive(r)}DG.exports=ove});var ys=p((qst,SG)=>{function lve(r){var e=typeof r;return r!=null&&(e=="object"||e=="function")}SG.exports=lve});var By=p((xst,MG)=>{var uve=Nu(),cve=ys(),fve="[object AsyncFunction]",dve="[object Function]",pve="[object GeneratorFunction]",mve="[object Proxy]";function yve(r){if(!cve(r))return!1;var e=uve(r);return e==dve||e==pve||e==fve||e==mve}MG.exports=yve});var EG=p((Lst,PG)=>{var hve=ms(),gve=hve["__core-js_shared__"];PG.exports=gve});var IG=p((jst,kG)=>{var zE=EG(),OG=function(){var r=/[^.]+$/.exec(zE&&zE.keys&&zE.keys.IE_PROTO||"");return r?"Symbol(src)_1."+r:""}();function vve(r){return!!OG&&OG in r}kG.exports=vve});var YE=p((Ust,FG)=>{var _ve=Function.prototype,$ve=_ve.toString;function Tve(r){if(r!=null){try{return $ve.call(r)}catch{}try{return r+""}catch{}}return""}FG.exports=Tve});var qG=p((Bst,NG)=>{var Rve=By(),bve=IG(),Cve=ys(),Ave=YE(),wve=/[\\^$.*+?()[\]{}|]/g,Dve=/^\[object .+?Constructor\]$/,Sve=Function.prototype,Mve=Object.prototype,Pve=Sve.toString,Eve=Mve.hasOwnProperty,Ove=RegExp("^"+Pve.call(Eve).replace(wve,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function kve(r){if(!Cve(r)||bve(r))return!1;var e=Rve(r)?Ove:Dve;return e.test(Ave(r))}NG.exports=kve});var LG=p((Gst,xG)=>{function Ive(r,e){return r?.[e]}xG.exports=Ive});var qu=p((Kst,jG)=>{var Fve=qG(),Nve=LG();function qve(r,e){var t=Nve(r,e);return Fve(t)?t:void 0}jG.exports=qve});var BG=p((Hst,UG)=>{var xve=qu(),Lve=ms(),jve=xve(Lve,"DataView");UG.exports=jve});var c0=p((Vst,GG)=>{var Uve=qu(),Bve=ms(),Gve=Uve(Bve,"Map");GG.exports=Gve});var HG=p((Wst,KG)=>{var Kve=qu(),Hve=ms(),Vve=Kve(Hve,"Promise");KG.exports=Vve});var XE=p((zst,VG)=>{var Wve=qu(),zve=ms(),Yve=Wve(zve,"Set");VG.exports=Yve});var zG=p((Yst,WG)=>{var Xve=qu(),Jve=ms(),Qve=Xve(Jve,"WeakMap");WG.exports=Qve});var Ky=p((Xst,tK)=>{var JE=BG(),QE=c0(),ZE=HG(),eO=XE(),tO=zG(),eK=Nu(),Gy=YE(),YG="[object Map]",Zve="[object Object]",XG="[object Promise]",JG="[object Set]",QG="[object WeakMap]",ZG="[object DataView]",e_e=Gy(JE),t_e=Gy(QE),r_e=Gy(ZE),n_e=Gy(eO),i_e=Gy(tO),mf=eK;(JE&&mf(new JE(new ArrayBuffer(1)))!=ZG||QE&&mf(new QE)!=YG||ZE&&mf(ZE.resolve())!=XG||eO&&mf(new eO)!=JG||tO&&mf(new tO)!=QG)&&(mf=function(r){var e=eK(r),t=e==Zve?r.constructor:void 0,n=t?Gy(t):"";if(n)switch(n){case e_e:return ZG;case t_e:return YG;case r_e:return XG;case n_e:return JG;case i_e:return QG}return e});tK.exports=mf});var hs=p((Jst,rK)=>{function a_e(r){return r!=null&&typeof r=="object"}rK.exports=a_e});var iK=p((Qst,nK)=>{var s_e=Nu(),o_e=hs(),l_e="[object Arguments]";function u_e(r){return o_e(r)&&s_e(r)==l_e}nK.exports=u_e});var Ev=p((Zst,oK)=>{var aK=iK(),c_e=hs(),sK=Object.prototype,f_e=sK.hasOwnProperty,d_e=sK.propertyIsEnumerable,p_e=aK(function(){return arguments}())?aK:function(r){return c_e(r)&&f_e.call(r,"callee")&&!d_e.call(r,"callee")};oK.exports=p_e});var jt=p((eot,lK)=>{var m_e=Array.isArray;lK.exports=m_e});var f0=p((tot,uK)=>{var y_e=9007199254740991;function h_e(r){return typeof r=="number"&&r>-1&&r%1==0&&r<=y_e}uK.exports=h_e});var gs=p((rot,cK)=>{var g_e=By(),v_e=f0();function __e(r){return r!=null&&v_e(r.length)&&!g_e(r)}cK.exports=__e});var dK=p((not,fK)=>{function $_e(){return!1}fK.exports=$_e});var kv=p((Ov,Hy)=>{var T_e=ms(),R_e=dK(),yK=typeof Ov=="object"&&Ov&&!Ov.nodeType&&Ov,pK=yK&&typeof Hy=="object"&&Hy&&!Hy.nodeType&&Hy,b_e=pK&&pK.exports===yK,mK=b_e?T_e.Buffer:void 0,C_e=mK?mK.isBuffer:void 0,A_e=C_e||R_e;Hy.exports=A_e});var gK=p((iot,hK)=>{var w_e=Nu(),D_e=f0(),S_e=hs(),M_e="[object Arguments]",P_e="[object Array]",E_e="[object Boolean]",O_e="[object Date]",k_e="[object Error]",I_e="[object Function]",F_e="[object Map]",N_e="[object Number]",q_e="[object Object]",x_e="[object RegExp]",L_e="[object Set]",j_e="[object String]",U_e="[object WeakMap]",B_e="[object ArrayBuffer]",G_e="[object DataView]",K_e="[object Float32Array]",H_e="[object Float64Array]",V_e="[object Int8Array]",W_e="[object Int16Array]",z_e="[object Int32Array]",Y_e="[object Uint8Array]",X_e="[object Uint8ClampedArray]",J_e="[object Uint16Array]",Q_e="[object Uint32Array]",cr={};cr[K_e]=cr[H_e]=cr[V_e]=cr[W_e]=cr[z_e]=cr[Y_e]=cr[X_e]=cr[J_e]=cr[Q_e]=!0;cr[M_e]=cr[P_e]=cr[B_e]=cr[E_e]=cr[G_e]=cr[O_e]=cr[k_e]=cr[I_e]=cr[F_e]=cr[N_e]=cr[q_e]=cr[x_e]=cr[L_e]=cr[j_e]=cr[U_e]=!1;function Z_e(r){return S_e(r)&&D_e(r.length)&&!!cr[w_e(r)]}hK.exports=Z_e});var Vy=p((aot,vK)=>{function e$e(r){return function(e){return r(e)}}vK.exports=e$e});var Nv=p((Iv,Wy)=>{var t$e=WE(),_K=typeof Iv=="object"&&Iv&&!Iv.nodeType&&Iv,Fv=_K&&typeof Wy=="object"&&Wy&&!Wy.nodeType&&Wy,r$e=Fv&&Fv.exports===_K,rO=r$e&&t$e.process,n$e=function(){try{var r=Fv&&Fv.require&&Fv.require("util").types;return r||rO&&rO.binding&&rO.binding("util")}catch{}}();Wy.exports=n$e});var d0=p((sot,RK)=>{var i$e=gK(),a$e=Vy(),$K=Nv(),TK=$K&&$K.isTypedArray,s$e=TK?a$e(TK):i$e;RK.exports=s$e});var Wi=p((oot,bK)=>{var o$e=VE(),l$e=Ky(),u$e=Ev(),c$e=jt(),f$e=gs(),d$e=kv(),p$e=Uy(),m$e=d0(),y$e="[object Map]",h$e="[object Set]",g$e=Object.prototype,v$e=g$e.hasOwnProperty;function _$e(r){if(r==null)return!0;if(f$e(r)&&(c$e(r)||typeof r=="string"||typeof r.splice=="function"||d$e(r)||m$e(r)||u$e(r)))return!r.length;var e=l$e(r);if(e==y$e||e==h$e)return!r.size;if(p$e(r))return!o$e(r).length;for(var t in r)if(v$e.call(r,t))return!1;return!0}bK.exports=_$e});var zy=p((lot,CK)=>{function $$e(r,e){for(var t=-1,n=r==null?0:r.length,i=Array(n);++t<n;)i[t]=e(r[t],t,r);return i}CK.exports=$$e});var wK=p((uot,AK)=>{function T$e(){this.__data__=[],this.size=0}AK.exports=T$e});var Yy=p((cot,DK)=>{function R$e(r,e){return r===e||r!==r&&e!==e}DK.exports=R$e});var qv=p((fot,SK)=>{var b$e=Yy();function C$e(r,e){for(var t=r.length;t--;)if(b$e(r[t][0],e))return t;return-1}SK.exports=C$e});var PK=p((dot,MK)=>{var A$e=qv(),w$e=Array.prototype,D$e=w$e.splice;function S$e(r){var e=this.__data__,t=A$e(e,r);if(t<0)return!1;var n=e.length-1;return t==n?e.pop():D$e.call(e,t,1),--this.size,!0}MK.exports=S$e});var OK=p((pot,EK)=>{var M$e=qv();function P$e(r){var e=this.__data__,t=M$e(e,r);return t<0?void 0:e[t][1]}EK.exports=P$e});var IK=p((mot,kK)=>{var E$e=qv();function O$e(r){return E$e(this.__data__,r)>-1}kK.exports=O$e});var NK=p((yot,FK)=>{var k$e=qv();function I$e(r,e){var t=this.__data__,n=k$e(t,r);return n<0?(++this.size,t.push([r,e])):t[n][1]=e,this}FK.exports=I$e});var xv=p((hot,qK)=>{var F$e=wK(),N$e=PK(),q$e=OK(),x$e=IK(),L$e=NK();function Xy(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Xy.prototype.clear=F$e;Xy.prototype.delete=N$e;Xy.prototype.get=q$e;Xy.prototype.has=x$e;Xy.prototype.set=L$e;qK.exports=Xy});var LK=p((got,xK)=>{var j$e=xv();function U$e(){this.__data__=new j$e,this.size=0}xK.exports=U$e});var UK=p((vot,jK)=>{function B$e(r){var e=this.__data__,t=e.delete(r);return this.size=e.size,t}jK.exports=B$e});var GK=p((_ot,BK)=>{function G$e(r){return this.__data__.get(r)}BK.exports=G$e});var HK=p(($ot,KK)=>{function K$e(r){return this.__data__.has(r)}KK.exports=K$e});var Lv=p((Tot,VK)=>{var H$e=qu(),V$e=H$e(Object,"create");VK.exports=V$e});var YK=p((Rot,zK)=>{var WK=Lv();function W$e(){this.__data__=WK?WK(null):{},this.size=0}zK.exports=W$e});var JK=p((bot,XK)=>{function z$e(r){var e=this.has(r)&&delete this.__data__[r];return this.size-=e?1:0,e}XK.exports=z$e});var ZK=p((Cot,QK)=>{var Y$e=Lv(),X$e="__lodash_hash_undefined__",J$e=Object.prototype,Q$e=J$e.hasOwnProperty;function Z$e(r){var e=this.__data__;if(Y$e){var t=e[r];return t===X$e?void 0:t}return Q$e.call(e,r)?e[r]:void 0}QK.exports=Z$e});var tH=p((Aot,eH)=>{var eTe=Lv(),tTe=Object.prototype,rTe=tTe.hasOwnProperty;function nTe(r){var e=this.__data__;return eTe?e[r]!==void 0:rTe.call(e,r)}eH.exports=nTe});var nH=p((wot,rH)=>{var iTe=Lv(),aTe="__lodash_hash_undefined__";function sTe(r,e){var t=this.__data__;return this.size+=this.has(r)?0:1,t[r]=iTe&&e===void 0?aTe:e,this}rH.exports=sTe});var aH=p((Dot,iH)=>{var oTe=YK(),lTe=JK(),uTe=ZK(),cTe=tH(),fTe=nH();function Jy(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Jy.prototype.clear=oTe;Jy.prototype.delete=lTe;Jy.prototype.get=uTe;Jy.prototype.has=cTe;Jy.prototype.set=fTe;iH.exports=Jy});var lH=p((Sot,oH)=>{var sH=aH(),dTe=xv(),pTe=c0();function mTe(){this.size=0,this.__data__={hash:new sH,map:new(pTe||dTe),string:new sH}}oH.exports=mTe});var cH=p((Mot,uH)=>{function yTe(r){var e=typeof r;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?r!=="__proto__":r===null}uH.exports=yTe});var jv=p((Pot,fH)=>{var hTe=cH();function gTe(r,e){var t=r.__data__;return hTe(e)?t[typeof e=="string"?"string":"hash"]:t.map}fH.exports=gTe});var pH=p((Eot,dH)=>{var vTe=jv();function _Te(r){var e=vTe(this,r).delete(r);return this.size-=e?1:0,e}dH.exports=_Te});var yH=p((Oot,mH)=>{var $Te=jv();function TTe(r){return $Te(this,r).get(r)}mH.exports=TTe});var gH=p((kot,hH)=>{var RTe=jv();function bTe(r){return RTe(this,r).has(r)}hH.exports=bTe});var _H=p((Iot,vH)=>{var CTe=jv();function ATe(r,e){var t=CTe(this,r),n=t.size;return t.set(r,e),this.size+=t.size==n?0:1,this}vH.exports=ATe});var p0=p((Fot,$H)=>{var wTe=lH(),DTe=pH(),STe=yH(),MTe=gH(),PTe=_H();function Qy(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Qy.prototype.clear=wTe;Qy.prototype.delete=DTe;Qy.prototype.get=STe;Qy.prototype.has=MTe;Qy.prototype.set=PTe;$H.exports=Qy});var RH=p((Not,TH)=>{var ETe=xv(),OTe=c0(),kTe=p0(),ITe=200;function FTe(r,e){var t=this.__data__;if(t instanceof ETe){var n=t.__data__;if(!OTe||n.length<ITe-1)return n.push([r,e]),this.size=++t.size,this;t=this.__data__=new kTe(n)}return t.set(r,e),this.size=t.size,this}TH.exports=FTe});var m0=p((qot,bH)=>{var NTe=xv(),qTe=LK(),xTe=UK(),LTe=GK(),jTe=HK(),UTe=RH();function Zy(r){var e=this.__data__=new NTe(r);this.size=e.size}Zy.prototype.clear=qTe;Zy.prototype.delete=xTe;Zy.prototype.get=LTe;Zy.prototype.has=jTe;Zy.prototype.set=UTe;bH.exports=Zy});var AH=p((xot,CH)=>{var BTe="__lodash_hash_undefined__";function GTe(r){return this.__data__.set(r,BTe),this}CH.exports=GTe});var DH=p((Lot,wH)=>{function KTe(r){return this.__data__.has(r)}wH.exports=KTe});var h0=p((jot,SH)=>{var HTe=p0(),VTe=AH(),WTe=DH();function y0(r){var e=-1,t=r==null?0:r.length;for(this.__data__=new HTe;++e<t;)this.add(r[e])}y0.prototype.add=y0.prototype.push=VTe;y0.prototype.has=WTe;SH.exports=y0});var nO=p((Uot,MH)=>{function zTe(r,e){for(var t=-1,n=r==null?0:r.length;++t<n;)if(e(r[t],t,r))return!0;return!1}MH.exports=zTe});var g0=p((Bot,PH)=>{function YTe(r,e){return r.has(e)}PH.exports=YTe});var iO=p((Got,EH)=>{var XTe=h0(),JTe=nO(),QTe=g0(),ZTe=1,eRe=2;function tRe(r,e,t,n,i,a){var s=t&ZTe,o=r.length,u=e.length;if(o!=u&&!(s&&u>o))return!1;var c=a.get(r),f=a.get(e);if(c&&f)return c==e&&f==r;var d=-1,m=!0,h=t&eRe?new XTe:void 0;for(a.set(r,e),a.set(e,r);++d<o;){var y=r[d],_=e[d];if(n)var w=s?n(_,y,d,e,r,a):n(y,_,d,r,e,a);if(w!==void 0){if(w)continue;m=!1;break}if(h){if(!JTe(e,function(S,C){if(!QTe(h,C)&&(y===S||i(y,S,t,n,a)))return h.push(C)})){m=!1;break}}else if(!(y===_||i(y,_,t,n,a))){m=!1;break}}return a.delete(r),a.delete(e),m}EH.exports=tRe});var aO=p((Kot,OH)=>{var rRe=ms(),nRe=rRe.Uint8Array;OH.exports=nRe});var IH=p((Hot,kH)=>{function iRe(r){var e=-1,t=Array(r.size);return r.forEach(function(n,i){t[++e]=[i,n]}),t}kH.exports=iRe});var v0=p((Vot,FH)=>{function aRe(r){var e=-1,t=Array(r.size);return r.forEach(function(n){t[++e]=n}),t}FH.exports=aRe});var jH=p((Wot,LH)=>{var NH=pf(),qH=aO(),sRe=Yy(),oRe=iO(),lRe=IH(),uRe=v0(),cRe=1,fRe=2,dRe="[object Boolean]",pRe="[object Date]",mRe="[object Error]",yRe="[object Map]",hRe="[object Number]",gRe="[object RegExp]",vRe="[object Set]",_Re="[object String]",$Re="[object Symbol]",TRe="[object ArrayBuffer]",RRe="[object DataView]",xH=NH?NH.prototype:void 0,sO=xH?xH.valueOf:void 0;function bRe(r,e,t,n,i,a,s){switch(t){case RRe:if(r.byteLength!=e.byteLength||r.byteOffset!=e.byteOffset)return!1;r=r.buffer,e=e.buffer;case TRe:return!(r.byteLength!=e.byteLength||!a(new qH(r),new qH(e)));case dRe:case pRe:case hRe:return sRe(+r,+e);case mRe:return r.name==e.name&&r.message==e.message;case gRe:case _Re:return r==e+"";case yRe:var o=lRe;case vRe:var u=n&cRe;if(o||(o=uRe),r.size!=e.size&&!u)return!1;var c=s.get(r);if(c)return c==e;n|=fRe,s.set(r,e);var f=oRe(o(r),o(e),n,i,a,s);return s.delete(r),f;case $Re:if(sO)return sO.call(r)==sO.call(e)}return!1}LH.exports=bRe});var _0=p((zot,UH)=>{function CRe(r,e){for(var t=-1,n=e.length,i=r.length;++t<n;)r[i+t]=e[t];return r}UH.exports=CRe});var oO=p((Yot,BH)=>{var ARe=_0(),wRe=jt();function DRe(r,e,t){var n=e(r);return wRe(r)?n:ARe(n,t(r))}BH.exports=DRe});var $0=p((Xot,GH)=>{function SRe(r,e){for(var t=-1,n=r==null?0:r.length,i=0,a=[];++t<n;){var s=r[t];e(s,t,r)&&(a[i++]=s)}return a}GH.exports=SRe});var lO=p((Jot,KH)=>{function MRe(){return[]}KH.exports=MRe});var T0=p((Qot,VH)=>{var PRe=$0(),ERe=lO(),ORe=Object.prototype,kRe=ORe.propertyIsEnumerable,HH=Object.getOwnPropertySymbols,IRe=HH?function(r){return r==null?[]:(r=Object(r),PRe(HH(r),function(e){return kRe.call(r,e)}))}:ERe;VH.exports=IRe});var zH=p((Zot,WH)=>{function FRe(r,e){for(var t=-1,n=Array(r);++t<r;)n[t]=e(t);return n}WH.exports=FRe});var Uv=p((elt,YH)=>{var NRe=9007199254740991,qRe=/^(?:0|[1-9]\d*)$/;function xRe(r,e){var t=typeof r;return e=e??NRe,!!e&&(t=="number"||t!="symbol"&&qRe.test(r))&&r>-1&&r%1==0&&r<e}YH.exports=xRe});var uO=p((tlt,XH)=>{var LRe=zH(),jRe=Ev(),URe=jt(),BRe=kv(),GRe=Uv(),KRe=d0(),HRe=Object.prototype,VRe=HRe.hasOwnProperty;function WRe(r,e){var t=URe(r),n=!t&&jRe(r),i=!t&&!n&&BRe(r),a=!t&&!n&&!i&&KRe(r),s=t||n||i||a,o=s?LRe(r.length,String):[],u=o.length;for(var c in r)(e||VRe.call(r,c))&&!(s&&(c=="length"||i&&(c=="offset"||c=="parent")||a&&(c=="buffer"||c=="byteLength"||c=="byteOffset")||GRe(c,u)))&&o.push(c);return o}XH.exports=WRe});var zi=p((rlt,JH)=>{var zRe=uO(),YRe=VE(),XRe=gs();function JRe(r){return XRe(r)?zRe(r):YRe(r)}JH.exports=JRe});var cO=p((nlt,QH)=>{var QRe=oO(),ZRe=T0(),e0e=zi();function t0e(r){return QRe(r,e0e,ZRe)}QH.exports=t0e});var t8=p((ilt,e8)=>{var ZH=cO(),r0e=1,n0e=Object.prototype,i0e=n0e.hasOwnProperty;function a0e(r,e,t,n,i,a){var s=t&r0e,o=ZH(r),u=o.length,c=ZH(e),f=c.length;if(u!=f&&!s)return!1;for(var d=u;d--;){var m=o[d];if(!(s?m in e:i0e.call(e,m)))return!1}var h=a.get(r),y=a.get(e);if(h&&y)return h==e&&y==r;var _=!0;a.set(r,e),a.set(e,r);for(var w=s;++d<u;){m=o[d];var S=r[m],C=e[m];if(n)var b=s?n(C,S,m,e,r,a):n(S,C,m,r,e,a);if(!(b===void 0?S===C||i(S,C,t,n,a):b)){_=!1;break}w||(w=m=="constructor")}if(_&&!w){var I=r.constructor,L=e.constructor;I!=L&&"constructor"in r&&"constructor"in e&&!(typeof I=="function"&&I instanceof I&&typeof L=="function"&&L instanceof L)&&(_=!1)}return a.delete(r),a.delete(e),_}e8.exports=a0e});var u8=p((alt,l8)=>{var fO=m0(),s0e=iO(),o0e=jH(),l0e=t8(),r8=Ky(),n8=jt(),i8=kv(),u0e=d0(),c0e=1,a8="[object Arguments]",s8="[object Array]",R0="[object Object]",f0e=Object.prototype,o8=f0e.hasOwnProperty;function d0e(r,e,t,n,i,a){var s=n8(r),o=n8(e),u=s?s8:r8(r),c=o?s8:r8(e);u=u==a8?R0:u,c=c==a8?R0:c;var f=u==R0,d=c==R0,m=u==c;if(m&&i8(r)){if(!i8(e))return!1;s=!0,f=!1}if(m&&!f)return a||(a=new fO),s||u0e(r)?s0e(r,e,t,n,i,a):o0e(r,e,u,t,n,i,a);if(!(t&c0e)){var h=f&&o8.call(r,"__wrapped__"),y=d&&o8.call(e,"__wrapped__");if(h||y){var _=h?r.value():r,w=y?e.value():e;return a||(a=new fO),i(_,w,t,n,a)}}return m?(a||(a=new fO),l0e(r,e,t,n,i,a)):!1}l8.exports=d0e});var dO=p((slt,d8)=>{var p0e=u8(),c8=hs();function f8(r,e,t,n,i){return r===e?!0:r==null||e==null||!c8(r)&&!c8(e)?r!==r&&e!==e:p0e(r,e,t,n,f8,i)}d8.exports=f8});var m8=p((olt,p8)=>{var m0e=m0(),y0e=dO(),h0e=1,g0e=2;function v0e(r,e,t,n){var i=t.length,a=i,s=!n;if(r==null)return!a;for(r=Object(r);i--;){var o=t[i];if(s&&o[2]?o[1]!==r[o[0]]:!(o[0]in r))return!1}for(;++i<a;){o=t[i];var u=o[0],c=r[u],f=o[1];if(s&&o[2]){if(c===void 0&&!(u in r))return!1}else{var d=new m0e;if(n)var m=n(c,f,u,r,e,d);if(!(m===void 0?y0e(f,c,h0e|g0e,n,d):m))return!1}}return!0}p8.exports=v0e});var pO=p((llt,y8)=>{var _0e=ys();function $0e(r){return r===r&&!_0e(r)}y8.exports=$0e});var g8=p((ult,h8)=>{var T0e=pO(),R0e=zi();function b0e(r){for(var e=R0e(r),t=e.length;t--;){var n=e[t],i=r[n];e[t]=[n,i,T0e(i)]}return e}h8.exports=b0e});var mO=p((clt,v8)=>{function C0e(r,e){return function(t){return t==null?!1:t[r]===e&&(e!==void 0||r in Object(t))}}v8.exports=C0e});var $8=p((flt,_8)=>{var A0e=m8(),w0e=g8(),D0e=mO();function S0e(r){var e=w0e(r);return e.length==1&&e[0][2]?D0e(e[0][0],e[0][1]):function(t){return t===r||A0e(t,r,e)}}_8.exports=S0e});var eh=p((dlt,T8)=>{var M0e=Nu(),P0e=hs(),E0e="[object Symbol]";function O0e(r){return typeof r=="symbol"||P0e(r)&&M0e(r)==E0e}T8.exports=O0e});var b0=p((plt,R8)=>{var k0e=jt(),I0e=eh(),F0e=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,N0e=/^\w*$/;function q0e(r,e){if(k0e(r))return!1;var t=typeof r;return t=="number"||t=="symbol"||t=="boolean"||r==null||I0e(r)?!0:N0e.test(r)||!F0e.test(r)||e!=null&&r in Object(e)}R8.exports=q0e});var A8=p((mlt,C8)=>{var b8=p0(),x0e="Expected a function";function yO(r,e){if(typeof r!="function"||e!=null&&typeof e!="function")throw new TypeError(x0e);var t=function(){var n=arguments,i=e?e.apply(this,n):n[0],a=t.cache;if(a.has(i))return a.get(i);var s=r.apply(this,n);return t.cache=a.set(i,s)||a,s};return t.cache=new(yO.Cache||b8),t}yO.Cache=b8;C8.exports=yO});var D8=p((ylt,w8)=>{var L0e=A8(),j0e=500;function U0e(r){var e=L0e(r,function(n){return t.size===j0e&&t.clear(),n}),t=e.cache;return e}w8.exports=U0e});var M8=p((hlt,S8)=>{var B0e=D8(),G0e=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,K0e=/\\(\\)?/g,H0e=B0e(function(r){var e=[];return r.charCodeAt(0)===46&&e.push(""),r.replace(G0e,function(t,n,i,a){e.push(i?a.replace(K0e,"$1"):n||t)}),e});S8.exports=H0e});var F8=p((glt,I8)=>{var P8=pf(),V0e=zy(),W0e=jt(),z0e=eh(),Y0e=1/0,E8=P8?P8.prototype:void 0,O8=E8?E8.toString:void 0;function k8(r){if(typeof r=="string")return r;if(W0e(r))return V0e(r,k8)+"";if(z0e(r))return O8?O8.call(r):"";var e=r+"";return e=="0"&&1/r==-Y0e?"-0":e}I8.exports=k8});var hO=p((vlt,N8)=>{var X0e=F8();function J0e(r){return r==null?"":X0e(r)}N8.exports=J0e});var Bv=p((_lt,q8)=>{var Q0e=jt(),Z0e=b0(),ebe=M8(),tbe=hO();function rbe(r,e){return Q0e(r)?r:Z0e(r,e)?[r]:ebe(tbe(r))}q8.exports=rbe});var th=p(($lt,x8)=>{var nbe=eh(),ibe=1/0;function abe(r){if(typeof r=="string"||nbe(r))return r;var e=r+"";return e=="0"&&1/r==-ibe?"-0":e}x8.exports=abe});var C0=p((Tlt,L8)=>{var sbe=Bv(),obe=th();function lbe(r,e){e=sbe(e,r);for(var t=0,n=e.length;r!=null&&t<n;)r=r[obe(e[t++])];return t&&t==n?r:void 0}L8.exports=lbe});var U8=p((Rlt,j8)=>{var ube=C0();function cbe(r,e,t){var n=r==null?void 0:ube(r,e);return n===void 0?t:n}j8.exports=cbe});var G8=p((blt,B8)=>{function fbe(r,e){return r!=null&&e in Object(r)}B8.exports=fbe});var gO=p((Clt,K8)=>{var dbe=Bv(),pbe=Ev(),mbe=jt(),ybe=Uv(),hbe=f0(),gbe=th();function vbe(r,e,t){e=dbe(e,r);for(var n=-1,i=e.length,a=!1;++n<i;){var s=gbe(e[n]);if(!(a=r!=null&&t(r,s)))break;r=r[s]}return a||++n!=i?a:(i=r==null?0:r.length,!!i&&hbe(i)&&ybe(s,i)&&(mbe(r)||pbe(r)))}K8.exports=vbe});var V8=p((Alt,H8)=>{var _be=G8(),$be=gO();function Tbe(r,e){return r!=null&&$be(r,e,_be)}H8.exports=Tbe});var z8=p((wlt,W8)=>{var Rbe=dO(),bbe=U8(),Cbe=V8(),Abe=b0(),wbe=pO(),Dbe=mO(),Sbe=th(),Mbe=1,Pbe=2;function Ebe(r,e){return Abe(r)&&wbe(e)?Dbe(Sbe(r),e):function(t){var n=bbe(t,r);return n===void 0&&n===e?Cbe(t,r):Rbe(e,n,Mbe|Pbe)}}W8.exports=Ebe});var yf=p((Dlt,Y8)=>{function Obe(r){return r}Y8.exports=Obe});var J8=p((Slt,X8)=>{function kbe(r){return function(e){return e?.[r]}}X8.exports=kbe});var Z8=p((Mlt,Q8)=>{var Ibe=C0();function Fbe(r){return function(e){return Ibe(e,r)}}Q8.exports=Fbe});var t6=p((Plt,e6)=>{var Nbe=J8(),qbe=Z8(),xbe=b0(),Lbe=th();function jbe(r){return xbe(r)?Nbe(Lbe(r)):qbe(r)}e6.exports=jbe});var Da=p((Elt,r6)=>{var Ube=$8(),Bbe=z8(),Gbe=yf(),Kbe=jt(),Hbe=t6();function Vbe(r){return typeof r=="function"?r:r==null?Gbe:typeof r=="object"?Kbe(r)?Bbe(r[0],r[1]):Ube(r):Hbe(r)}r6.exports=Vbe});var i6=p((Olt,n6)=>{function Wbe(r){return function(e,t,n){for(var i=-1,a=Object(e),s=n(e),o=s.length;o--;){var u=s[r?o:++i];if(t(a[u],u,a)===!1)break}return e}}n6.exports=Wbe});var s6=p((klt,a6)=>{var zbe=i6(),Ybe=zbe();a6.exports=Ybe});var l6=p((Ilt,o6)=>{var Xbe=s6(),Jbe=zi();function Qbe(r,e){return r&&Xbe(r,e,Jbe)}o6.exports=Qbe});var c6=p((Flt,u6)=>{var Zbe=gs();function eCe(r,e){return function(t,n){if(t==null)return t;if(!Zbe(t))return r(t,n);for(var i=t.length,a=e?i:-1,s=Object(t);(e?a--:++a<i)&&n(s[a],a,s)!==!1;);return t}}u6.exports=eCe});var xu=p((Nlt,f6)=>{var tCe=l6(),rCe=c6(),nCe=rCe(tCe);f6.exports=nCe});var p6=p((qlt,d6)=>{var iCe=xu(),aCe=gs();function sCe(r,e){var t=-1,n=aCe(r)?Array(r.length):[];return iCe(r,function(i,a,s){n[++t]=e(i,a,s)}),n}d6.exports=sCe});var Tn=p((xlt,m6)=>{var oCe=zy(),lCe=Da(),uCe=p6(),cCe=jt();function fCe(r,e){var t=cCe(r)?oCe:uCe;return t(r,lCe(e,3))}m6.exports=fCe});var vO=p((Llt,y6)=>{function dCe(r,e){for(var t=-1,n=r==null?0:r.length;++t<n&&e(r[t],t,r)!==!1;);return r}y6.exports=dCe});var g6=p((jlt,h6)=>{var pCe=yf();function mCe(r){return typeof r=="function"?r:pCe}h6.exports=mCe});var Rn=p((Ult,v6)=>{var yCe=vO(),hCe=xu(),gCe=g6(),vCe=jt();function _Ce(r,e){var t=vCe(r)?yCe:hCe;return t(r,gCe(e))}v6.exports=_Ce});var $6=p((Blt,_6)=>{var $Ce=zy();function TCe(r,e){return $Ce(e,function(t){return r[t]})}_6.exports=TCe});var lo=p((Glt,T6)=>{var RCe=$6(),bCe=zi();function CCe(r){return r==null?[]:RCe(r,bCe(r))}T6.exports=CCe});var b6=p((Klt,R6)=>{var ACe=Object.prototype,wCe=ACe.hasOwnProperty;function DCe(r,e){return r!=null&&wCe.call(r,e)}R6.exports=DCe});var Yi=p((Hlt,C6)=>{var SCe=b6(),MCe=gO();function PCe(r,e){return r!=null&&MCe(r,e,SCe)}C6.exports=PCe});var _O=p((Vlt,A6)=>{var ECe=qu(),OCe=function(){try{var r=ECe(Object,"defineProperty");return r({},"",{}),r}catch{}}();A6.exports=OCe});var A0=p((Wlt,D6)=>{var w6=_O();function kCe(r,e,t){e=="__proto__"&&w6?w6(r,e,{configurable:!0,enumerable:!0,value:t,writable:!0}):r[e]=t}D6.exports=kCe});var Gv=p((zlt,S6)=>{var ICe=A0(),FCe=Yy(),NCe=Object.prototype,qCe=NCe.hasOwnProperty;function xCe(r,e,t){var n=r[e];(!(qCe.call(r,e)&&FCe(n,t))||t===void 0&&!(e in r))&&ICe(r,e,t)}S6.exports=xCe});var rh=p((Ylt,M6)=>{var LCe=Gv(),jCe=A0();function UCe(r,e,t,n){var i=!t;t||(t={});for(var a=-1,s=e.length;++a<s;){var o=e[a],u=n?n(t[o],r[o],o,t,r):void 0;u===void 0&&(u=r[o]),i?jCe(t,o,u):LCe(t,o,u)}return t}M6.exports=UCe});var E6=p((Xlt,P6)=>{var BCe=rh(),GCe=zi();function KCe(r,e){return r&&BCe(e,GCe(e),r)}P6.exports=KCe});var k6=p((Jlt,O6)=>{function HCe(r){var e=[];if(r!=null)for(var t in Object(r))e.push(t);return e}O6.exports=HCe});var F6=p((Qlt,I6)=>{var VCe=ys(),WCe=Uy(),zCe=k6(),YCe=Object.prototype,XCe=YCe.hasOwnProperty;function JCe(r){if(!VCe(r))return zCe(r);var e=WCe(r),t=[];for(var n in r)n=="constructor"&&(e||!XCe.call(r,n))||t.push(n);return t}I6.exports=JCe});var Kv=p((Zlt,N6)=>{var QCe=uO(),ZCe=F6(),eAe=gs();function tAe(r){return eAe(r)?QCe(r,!0):ZCe(r)}N6.exports=tAe});var x6=p((eut,q6)=>{var rAe=rh(),nAe=Kv();function iAe(r,e){return r&&rAe(e,nAe(e),r)}q6.exports=iAe});var G6=p((Hv,nh)=>{var aAe=ms(),B6=typeof Hv=="object"&&Hv&&!Hv.nodeType&&Hv,L6=B6&&typeof nh=="object"&&nh&&!nh.nodeType&&nh,sAe=L6&&L6.exports===B6,j6=sAe?aAe.Buffer:void 0,U6=j6?j6.allocUnsafe:void 0;function oAe(r,e){if(e)return r.slice();var t=r.length,n=U6?U6(t):new r.constructor(t);return r.copy(n),n}nh.exports=oAe});var H6=p((tut,K6)=>{function lAe(r,e){var t=-1,n=r.length;for(e||(e=Array(n));++t<n;)e[t]=r[t];return e}K6.exports=lAe});var W6=p((rut,V6)=>{var uAe=rh(),cAe=T0();function fAe(r,e){return uAe(r,cAe(r),e)}V6.exports=fAe});var $O=p((nut,z6)=>{var dAe=HE(),pAe=dAe(Object.getPrototypeOf,Object);z6.exports=pAe});var TO=p((iut,Y6)=>{var mAe=_0(),yAe=$O(),hAe=T0(),gAe=lO(),vAe=Object.getOwnPropertySymbols,_Ae=vAe?function(r){for(var e=[];r;)mAe(e,hAe(r)),r=yAe(r);return e}:gAe;Y6.exports=_Ae});var J6=p((aut,X6)=>{var $Ae=rh(),TAe=TO();function RAe(r,e){return $Ae(r,TAe(r),e)}X6.exports=RAe});var RO=p((sut,Q6)=>{var bAe=oO(),CAe=TO(),AAe=Kv();function wAe(r){return bAe(r,AAe,CAe)}Q6.exports=wAe});var e4=p((out,Z6)=>{var DAe=Object.prototype,SAe=DAe.hasOwnProperty;function MAe(r){var e=r.length,t=new r.constructor(e);return e&&typeof r[0]=="string"&&SAe.call(r,"index")&&(t.index=r.index,t.input=r.input),t}Z6.exports=MAe});var w0=p((lut,r4)=>{var t4=aO();function PAe(r){var e=new r.constructor(r.byteLength);return new t4(e).set(new t4(r)),e}r4.exports=PAe});var i4=p((uut,n4)=>{var EAe=w0();function OAe(r,e){var t=e?EAe(r.buffer):r.buffer;return new r.constructor(t,r.byteOffset,r.byteLength)}n4.exports=OAe});var s4=p((cut,a4)=>{var kAe=/\w*$/;function IAe(r){var e=new r.constructor(r.source,kAe.exec(r));return e.lastIndex=r.lastIndex,e}a4.exports=IAe});var f4=p((fut,c4)=>{var o4=pf(),l4=o4?o4.prototype:void 0,u4=l4?l4.valueOf:void 0;function FAe(r){return u4?Object(u4.call(r)):{}}c4.exports=FAe});var p4=p((dut,d4)=>{var NAe=w0();function qAe(r,e){var t=e?NAe(r.buffer):r.buffer;return new r.constructor(t,r.byteOffset,r.length)}d4.exports=qAe});var y4=p((put,m4)=>{var xAe=w0(),LAe=i4(),jAe=s4(),UAe=f4(),BAe=p4(),GAe="[object Boolean]",KAe="[object Date]",HAe="[object Map]",VAe="[object Number]",WAe="[object RegExp]",zAe="[object Set]",YAe="[object String]",XAe="[object Symbol]",JAe="[object ArrayBuffer]",QAe="[object DataView]",ZAe="[object Float32Array]",ewe="[object Float64Array]",twe="[object Int8Array]",rwe="[object Int16Array]",nwe="[object Int32Array]",iwe="[object Uint8Array]",awe="[object Uint8ClampedArray]",swe="[object Uint16Array]",owe="[object Uint32Array]";function lwe(r,e,t){var n=r.constructor;switch(e){case JAe:return xAe(r);case GAe:case KAe:return new n(+r);case QAe:return LAe(r,t);case ZAe:case ewe:case twe:case rwe:case nwe:case iwe:case awe:case swe:case owe:return BAe(r,t);case HAe:return new n;case VAe:case YAe:return new n(r);case WAe:return jAe(r);case zAe:return new n;case XAe:return UAe(r)}}m4.exports=lwe});var v4=p((mut,g4)=>{var uwe=ys(),h4=Object.create,cwe=function(){function r(){}return function(e){if(!uwe(e))return{};if(h4)return h4(e);r.prototype=e;var t=new r;return r.prototype=void 0,t}}();g4.exports=cwe});var $4=p((yut,_4)=>{var fwe=v4(),dwe=$O(),pwe=Uy();function mwe(r){return typeof r.constructor=="function"&&!pwe(r)?fwe(dwe(r)):{}}_4.exports=mwe});var R4=p((hut,T4)=>{var ywe=Ky(),hwe=hs(),gwe="[object Map]";function vwe(r){return hwe(r)&&ywe(r)==gwe}T4.exports=vwe});var w4=p((gut,A4)=>{var _we=R4(),$we=Vy(),b4=Nv(),C4=b4&&b4.isMap,Twe=C4?$we(C4):_we;A4.exports=Twe});var S4=p((vut,D4)=>{var Rwe=Ky(),bwe=hs(),Cwe="[object Set]";function Awe(r){return bwe(r)&&Rwe(r)==Cwe}D4.exports=Awe});var O4=p((_ut,E4)=>{var wwe=S4(),Dwe=Vy(),M4=Nv(),P4=M4&&M4.isSet,Swe=P4?Dwe(P4):wwe;E4.exports=Swe});var q4=p(($ut,N4)=>{var Mwe=m0(),Pwe=vO(),Ewe=Gv(),Owe=E6(),kwe=x6(),Iwe=G6(),Fwe=H6(),Nwe=W6(),qwe=J6(),xwe=cO(),Lwe=RO(),jwe=Ky(),Uwe=e4(),Bwe=y4(),Gwe=$4(),Kwe=jt(),Hwe=kv(),Vwe=w4(),Wwe=ys(),zwe=O4(),Ywe=zi(),Xwe=Kv(),Jwe=1,Qwe=2,Zwe=4,k4="[object Arguments]",eDe="[object Array]",tDe="[object Boolean]",rDe="[object Date]",nDe="[object Error]",I4="[object Function]",iDe="[object GeneratorFunction]",aDe="[object Map]",sDe="[object Number]",F4="[object Object]",oDe="[object RegExp]",lDe="[object Set]",uDe="[object String]",cDe="[object Symbol]",fDe="[object WeakMap]",dDe="[object ArrayBuffer]",pDe="[object DataView]",mDe="[object Float32Array]",yDe="[object Float64Array]",hDe="[object Int8Array]",gDe="[object Int16Array]",vDe="[object Int32Array]",_De="[object Uint8Array]",$De="[object Uint8ClampedArray]",TDe="[object Uint16Array]",RDe="[object Uint32Array]",ar={};ar[k4]=ar[eDe]=ar[dDe]=ar[pDe]=ar[tDe]=ar[rDe]=ar[mDe]=ar[yDe]=ar[hDe]=ar[gDe]=ar[vDe]=ar[aDe]=ar[sDe]=ar[F4]=ar[oDe]=ar[lDe]=ar[uDe]=ar[cDe]=ar[_De]=ar[$De]=ar[TDe]=ar[RDe]=!0;ar[nDe]=ar[I4]=ar[fDe]=!1;function D0(r,e,t,n,i,a){var s,o=e&Jwe,u=e&Qwe,c=e&Zwe;if(t&&(s=i?t(r,n,i,a):t(r)),s!==void 0)return s;if(!Wwe(r))return r;var f=Kwe(r);if(f){if(s=Uwe(r),!o)return Fwe(r,s)}else{var d=jwe(r),m=d==I4||d==iDe;if(Hwe(r))return Iwe(r,o);if(d==F4||d==k4||m&&!i){if(s=u||m?{}:Gwe(r),!o)return u?qwe(r,kwe(s,r)):Nwe(r,Owe(s,r))}else{if(!ar[d])return i?r:{};s=Bwe(r,d,o)}}a||(a=new Mwe);var h=a.get(r);if(h)return h;a.set(r,s),zwe(r)?r.forEach(function(w){s.add(D0(w,e,t,w,r,a))}):Vwe(r)&&r.forEach(function(w,S){s.set(S,D0(w,e,t,S,r,a))});var y=c?u?Lwe:xwe:u?Xwe:Ywe,_=f?void 0:y(r);return Pwe(_||r,function(w,S){_&&(S=w,w=r[S]),Ewe(s,S,D0(w,e,t,S,r,a))}),s}N4.exports=D0});var Vl=p((Tut,x4)=>{var bDe=q4(),CDe=4;function ADe(r){return bDe(r,CDe)}x4.exports=ADe});var L4=p(ih=>{"use strict";Object.defineProperty(ih,"__esModule",{value:!0});ih.PRINT_WARNING=ih.PRINT_ERROR=void 0;function wDe(r){console&&console.error&&console.error("Error: ".concat(r))}ih.PRINT_ERROR=wDe;function DDe(r){console&&console.warn&&console.warn("Warning: ".concat(r))}ih.PRINT_WARNING=DDe});var j4=p(S0=>{"use strict";Object.defineProperty(S0,"__esModule",{value:!0});S0.timer=void 0;function SDe(r){var e=new Date().getTime(),t=r(),n=new Date().getTime(),i=n-e;return{time:i,value:t}}S0.timer=SDe});var U4=p((exports,module)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.toFastProperties=void 0;function toFastProperties(toBecomeFast){function FakeConstructor(){}FakeConstructor.prototype=toBecomeFast;var fakeInstance=new FakeConstructor;function fakeAccess(){return typeof fakeInstance.bar}return fakeAccess(),fakeAccess(),toBecomeFast;eval(toBecomeFast)}exports.toFastProperties=toFastProperties});var ah=p(uo=>{"use strict";Object.defineProperty(uo,"__esModule",{value:!0});uo.toFastProperties=uo.timer=uo.PRINT_ERROR=uo.PRINT_WARNING=void 0;var B4=L4();Object.defineProperty(uo,"PRINT_WARNING",{enumerable:!0,get:function(){return B4.PRINT_WARNING}});Object.defineProperty(uo,"PRINT_ERROR",{enumerable:!0,get:function(){return B4.PRINT_ERROR}});var MDe=j4();Object.defineProperty(uo,"timer",{enumerable:!0,get:function(){return MDe.timer}});var PDe=U4();Object.defineProperty(uo,"toFastProperties",{enumerable:!0,get:function(){return PDe.toFastProperties}})});var M0=p((Aut,G4)=>{function EDe(r,e,t){var n=-1,i=r.length;e<0&&(e=-e>i?0:i+e),t=t>i?i:t,t<0&&(t+=i),i=e>t?0:t-e>>>0,e>>>=0;for(var a=Array(i);++n<i;)a[n]=r[n+e];return a}G4.exports=EDe});var H4=p((wut,K4)=>{var ODe=/\s/;function kDe(r){for(var e=r.length;e--&&ODe.test(r.charAt(e)););return e}K4.exports=kDe});var W4=p((Dut,V4)=>{var IDe=H4(),FDe=/^\s+/;function NDe(r){return r&&r.slice(0,IDe(r)+1).replace(FDe,"")}V4.exports=NDe});var J4=p((Sut,X4)=>{var qDe=W4(),z4=ys(),xDe=eh(),Y4=0/0,LDe=/^[-+]0x[0-9a-f]+$/i,jDe=/^0b[01]+$/i,UDe=/^0o[0-7]+$/i,BDe=parseInt;function GDe(r){if(typeof r=="number")return r;if(xDe(r))return Y4;if(z4(r)){var e=typeof r.valueOf=="function"?r.valueOf():r;r=z4(e)?e+"":e}if(typeof r!="string")return r===0?r:+r;r=qDe(r);var t=jDe.test(r);return t||UDe.test(r)?BDe(r.slice(2),t?2:8):LDe.test(r)?Y4:+r}X4.exports=GDe});var eV=p((Mut,Z4)=>{var KDe=J4(),Q4=1/0,HDe=17976931348623157e292;function VDe(r){if(!r)return r===0?r:0;if(r=KDe(r),r===Q4||r===-Q4){var e=r<0?-1:1;return e*HDe}return r===r?r:0}Z4.exports=VDe});var sh=p((Put,tV)=>{var WDe=eV();function zDe(r){var e=WDe(r),t=e%1;return e===e?t?e-t:e:0}tV.exports=zDe});var P0=p((Eut,rV)=>{var YDe=M0(),XDe=sh();function JDe(r,e,t){var n=r==null?0:r.length;return n?(e=t||e===void 0?1:XDe(e),YDe(r,e<0?0:e,n)):[]}rV.exports=JDe});var Vv=p((Out,nV)=>{var QDe=Nu(),ZDe=jt(),eSe=hs(),tSe="[object String]";function rSe(r){return typeof r=="string"||!ZDe(r)&&eSe(r)&&QDe(r)==tSe}nV.exports=rSe});var aV=p((kut,iV)=>{var nSe=Nu(),iSe=hs(),aSe="[object RegExp]";function sSe(r){return iSe(r)&&nSe(r)==aSe}iV.exports=sSe});var bO=p((Iut,lV)=>{var oSe=aV(),lSe=Vy(),sV=Nv(),oV=sV&&sV.isRegExp,uSe=oV?lSe(oV):oSe;lV.exports=uSe});var fV=p((Fut,cV)=>{var cSe=Gv(),fSe=Bv(),dSe=Uv(),uV=ys(),pSe=th();function mSe(r,e,t,n){if(!uV(r))return r;e=fSe(e,r);for(var i=-1,a=e.length,s=a-1,o=r;o!=null&&++i<a;){var u=pSe(e[i]),c=t;if(u==="__proto__"||u==="constructor"||u==="prototype")return r;if(i!=s){var f=o[u];c=n?n(f,u,o):void 0,c===void 0&&(c=uV(f)?f:dSe(e[i+1])?[]:{})}cSe(o,u,c),o=o[u]}return r}cV.exports=mSe});var pV=p((Nut,dV)=>{var ySe=C0(),hSe=fV(),gSe=Bv();function vSe(r,e,t){for(var n=-1,i=e.length,a={};++n<i;){var s=e[n],o=ySe(r,s);t(o,s)&&hSe(a,gSe(s,r),o)}return a}dV.exports=vSe});var CO=p((qut,mV)=>{var _Se=zy(),$Se=Da(),TSe=pV(),RSe=RO();function bSe(r,e){if(r==null)return{};var t=_Se(RSe(r),function(n){return[n]});return e=$Se(e),TSe(r,t,function(n,i){return e(n,i[0])})}mV.exports=bSe});var hV=p((xut,yV)=>{function CSe(r,e,t){switch(t.length){case 0:return r.call(e);case 1:return r.call(e,t[0]);case 2:return r.call(e,t[0],t[1]);case 3:return r.call(e,t[0],t[1],t[2])}return r.apply(e,t)}yV.exports=CSe});var _V=p((Lut,vV)=>{var ASe=hV(),gV=Math.max;function wSe(r,e,t){return e=gV(e===void 0?r.length-1:e,0),function(){for(var n=arguments,i=-1,a=gV(n.length-e,0),s=Array(a);++i<a;)s[i]=n[e+i];i=-1;for(var o=Array(e+1);++i<e;)o[i]=n[i];return o[e]=t(s),ASe(r,this,o)}}vV.exports=wSe});var TV=p((jut,$V)=>{function DSe(r){return function(){return r}}$V.exports=DSe});var CV=p((Uut,bV)=>{var SSe=TV(),RV=_O(),MSe=yf(),PSe=RV?function(r,e){return RV(r,"toString",{configurable:!0,enumerable:!1,value:SSe(e),writable:!0})}:MSe;bV.exports=PSe});var wV=p((But,AV)=>{var ESe=800,OSe=16,kSe=Date.now;function ISe(r){var e=0,t=0;return function(){var n=kSe(),i=OSe-(n-t);if(t=n,i>0){if(++e>=ESe)return arguments[0]}else e=0;return r.apply(void 0,arguments)}}AV.exports=ISe});var SV=p((Gut,DV)=>{var FSe=CV(),NSe=wV(),qSe=NSe(FSe);DV.exports=qSe});var E0=p((Kut,MV)=>{var xSe=yf(),LSe=_V(),jSe=SV();function USe(r,e){return jSe(LSe(r,e,xSe),r+"")}MV.exports=USe});var Wv=p((Hut,PV)=>{var BSe=Yy(),GSe=gs(),KSe=Uv(),HSe=ys();function VSe(r,e,t){if(!HSe(t))return!1;var n=typeof e;return(n=="number"?GSe(t)&&KSe(e,t.length):n=="string"&&e in t)?BSe(t[e],r):!1}PV.exports=VSe});var OV=p((Vut,EV)=>{var WSe=E0(),zSe=Wv();function YSe(r){return WSe(function(e,t){var n=-1,i=t.length,a=i>1?t[i-1]:void 0,s=i>2?t[2]:void 0;for(a=r.length>3&&typeof a=="function"?(i--,a):void 0,s&&zSe(t[0],t[1],s)&&(a=i<3?void 0:a,i=1),e=Object(e);++n<i;){var o=t[n];o&&r(e,o,n,a)}return e})}EV.exports=YSe});var zv=p((Wut,kV)=>{var XSe=Gv(),JSe=rh(),QSe=OV(),ZSe=gs(),eMe=Uy(),tMe=zi(),rMe=Object.prototype,nMe=rMe.hasOwnProperty,iMe=QSe(function(r,e){if(eMe(e)||ZSe(e)){JSe(e,tMe(e),r);return}for(var t in e)nMe.call(e,t)&&XSe(r,t,e[t])});kV.exports=iMe});var k0=p(At=>{"use strict";var Wl=At&&At.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),oh=At&&At.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(At,"__esModule",{value:!0});At.serializeProduction=At.serializeGrammar=At.Terminal=At.Alternation=At.RepetitionWithSeparator=At.Repetition=At.RepetitionMandatoryWithSeparator=At.RepetitionMandatory=At.Option=At.Alternative=At.Rule=At.NonTerminal=At.AbstractProduction=void 0;var IV=oh(Tn()),aMe=oh(Rn()),AO=oh(Vv()),sMe=oh(bO()),co=oh(CO()),fo=oh(zv());function oMe(r){return lMe(r)?r.LABEL:r.name}function lMe(r){return(0,AO.default)(r.LABEL)&&r.LABEL!==""}var po=function(){function r(e){this._definition=e}return Object.defineProperty(r.prototype,"definition",{get:function(){return this._definition},set:function(e){this._definition=e},enumerable:!1,configurable:!0}),r.prototype.accept=function(e){e.visit(this),(0,aMe.default)(this.definition,function(t){t.accept(e)})},r}();At.AbstractProduction=po;var FV=function(r){Wl(e,r);function e(t){var n=r.call(this,[])||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return Object.defineProperty(e.prototype,"definition",{get:function(){return this.referencedRule!==void 0?this.referencedRule.definition:[]},set:function(t){},enumerable:!1,configurable:!0}),e.prototype.accept=function(t){t.visit(this)},e}(po);At.NonTerminal=FV;var NV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.orgText="",(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.Rule=NV;var qV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.ignoreAmbiguities=!1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.Alternative=qV;var xV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.Option=xV;var LV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.RepetitionMandatory=LV;var jV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.RepetitionMandatoryWithSeparator=jV;var UV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.Repetition=UV;var BV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return e}(po);At.RepetitionWithSeparator=BV;var GV=function(r){Wl(e,r);function e(t){var n=r.call(this,t.definition)||this;return n.idx=1,n.ignoreAmbiguities=!1,n.hasPredicates=!1,(0,fo.default)(n,(0,co.default)(t,function(i){return i!==void 0})),n}return Object.defineProperty(e.prototype,"definition",{get:function(){return this._definition},set:function(t){this._definition=t},enumerable:!1,configurable:!0}),e}(po);At.Alternation=GV;var O0=function(){function r(e){this.idx=1,(0,fo.default)(this,(0,co.default)(e,function(t){return t!==void 0}))}return r.prototype.accept=function(e){e.visit(this)},r}();At.Terminal=O0;function uMe(r){return(0,IV.default)(r,Yv)}At.serializeGrammar=uMe;function Yv(r){function e(a){return(0,IV.default)(a,Yv)}if(r instanceof FV){var t={type:"NonTerminal",name:r.nonTerminalName,idx:r.idx};return(0,AO.default)(r.label)&&(t.label=r.label),t}else{if(r instanceof qV)return{type:"Alternative",definition:e(r.definition)};if(r instanceof xV)return{type:"Option",idx:r.idx,definition:e(r.definition)};if(r instanceof LV)return{type:"RepetitionMandatory",idx:r.idx,definition:e(r.definition)};if(r instanceof jV)return{type:"RepetitionMandatoryWithSeparator",idx:r.idx,separator:Yv(new O0({terminalType:r.separator})),definition:e(r.definition)};if(r instanceof BV)return{type:"RepetitionWithSeparator",idx:r.idx,separator:Yv(new O0({terminalType:r.separator})),definition:e(r.definition)};if(r instanceof UV)return{type:"Repetition",idx:r.idx,definition:e(r.definition)};if(r instanceof GV)return{type:"Alternation",idx:r.idx,definition:e(r.definition)};if(r instanceof O0){var n={type:"Terminal",name:r.terminalType.name,label:oMe(r.terminalType),idx:r.idx};(0,AO.default)(r.label)&&(n.terminalLabel=r.label);var i=r.terminalType.PATTERN;return r.terminalType.PATTERN&&(n.pattern=(0,sMe.default)(i)?i.source:i),n}else{if(r instanceof NV)return{type:"Rule",name:r.name,orgText:r.orgText,definition:e(r.definition)};throw Error("non exhaustive match")}}}At.serializeProduction=Yv});var KV=p(I0=>{"use strict";Object.defineProperty(I0,"__esModule",{value:!0});I0.GAstVisitor=void 0;var mo=k0(),cMe=function(){function r(){}return r.prototype.visit=function(e){var t=e;switch(t.constructor){case mo.NonTerminal:return this.visitNonTerminal(t);case mo.Alternative:return this.visitAlternative(t);case mo.Option:return this.visitOption(t);case mo.RepetitionMandatory:return this.visitRepetitionMandatory(t);case mo.RepetitionMandatoryWithSeparator:return this.visitRepetitionMandatoryWithSeparator(t);case mo.RepetitionWithSeparator:return this.visitRepetitionWithSeparator(t);case mo.Repetition:return this.visitRepetition(t);case mo.Alternation:return this.visitAlternation(t);case mo.Terminal:return this.visitTerminal(t);case mo.Rule:return this.visitRule(t);default:throw Error("non exhaustive match")}},r.prototype.visitNonTerminal=function(e){},r.prototype.visitAlternative=function(e){},r.prototype.visitOption=function(e){},r.prototype.visitRepetition=function(e){},r.prototype.visitRepetitionMandatory=function(e){},r.prototype.visitRepetitionMandatoryWithSeparator=function(e){},r.prototype.visitRepetitionWithSeparator=function(e){},r.prototype.visitAlternation=function(e){},r.prototype.visitTerminal=function(e){},r.prototype.visitRule=function(e){},r}();I0.GAstVisitor=cMe});var VV=p((Xut,HV)=>{var fMe=xu();function dMe(r,e){var t;return fMe(r,function(n,i,a){return t=e(n,i,a),!t}),!!t}HV.exports=dMe});var F0=p((Jut,WV)=>{var pMe=nO(),mMe=Da(),yMe=VV(),hMe=jt(),gMe=Wv();function vMe(r,e,t){var n=hMe(r)?pMe:yMe;return t&&gMe(r,e,t)&&(e=void 0),n(r,mMe(e,3))}WV.exports=vMe});var YV=p((Qut,zV)=>{function _Me(r,e){for(var t=-1,n=r==null?0:r.length;++t<n;)if(!e(r[t],t,r))return!1;return!0}zV.exports=_Me});var JV=p((Zut,XV)=>{var $Me=xu();function TMe(r,e){var t=!0;return $Me(r,function(n,i,a){return t=!!e(n,i,a),t}),t}XV.exports=TMe});var Xv=p((ect,QV)=>{var RMe=YV(),bMe=JV(),CMe=Da(),AMe=jt(),wMe=Wv();function DMe(r,e,t){var n=AMe(r)?RMe:bMe;return t&&wMe(r,e,t)&&(e=void 0),n(r,CMe(e,3))}QV.exports=DMe});var wO=p((tct,ZV)=>{function SMe(r,e,t,n){for(var i=r.length,a=t+(n?1:-1);n?a--:++a<i;)if(e(r[a],a,r))return a;return-1}ZV.exports=SMe});var t7=p((rct,e7)=>{function MMe(r){return r!==r}e7.exports=MMe});var n7=p((nct,r7)=>{function PMe(r,e,t){for(var n=t-1,i=r.length;++n<i;)if(r[n]===e)return n;return-1}r7.exports=PMe});var N0=p((ict,i7)=>{var EMe=wO(),OMe=t7(),kMe=n7();function IMe(r,e,t){return e===e?kMe(r,e,t):EMe(r,OMe,t)}i7.exports=IMe});var zl=p((act,a7)=>{var FMe=N0(),NMe=gs(),qMe=Vv(),xMe=sh(),LMe=lo(),jMe=Math.max;function UMe(r,e,t,n){r=NMe(r)?r:LMe(r),t=t&&!n?xMe(t):0;var i=r.length;return t<0&&(t=jMe(i+t,0)),qMe(r)?t<=i&&r.indexOf(e,t)>-1:!!i&&FMe(r,e,t)>-1}a7.exports=UMe});var s7=p(Sa=>{"use strict";var SO=Sa&&Sa.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Sa,"__esModule",{value:!0});Sa.getProductionDslName=Sa.isBranchingProd=Sa.isOptionalProd=Sa.isSequenceProd=void 0;var BMe=SO(F0()),GMe=SO(Xv()),KMe=SO(zl()),hr=k0();function HMe(r){return r instanceof hr.Alternative||r instanceof hr.Option||r instanceof hr.Repetition||r instanceof hr.RepetitionMandatory||r instanceof hr.RepetitionMandatoryWithSeparator||r instanceof hr.RepetitionWithSeparator||r instanceof hr.Terminal||r instanceof hr.Rule}Sa.isSequenceProd=HMe;function DO(r,e){e===void 0&&(e=[]);var t=r instanceof hr.Option||r instanceof hr.Repetition||r instanceof hr.RepetitionWithSeparator;return t?!0:r instanceof hr.Alternation?(0,BMe.default)(r.definition,function(n){return DO(n,e)}):r instanceof hr.NonTerminal&&(0,KMe.default)(e,r)?!1:r instanceof hr.AbstractProduction?(r instanceof hr.NonTerminal&&e.push(r),(0,GMe.default)(r.definition,function(n){return DO(n,e)})):!1}Sa.isOptionalProd=DO;function VMe(r){return r instanceof hr.Alternation}Sa.isBranchingProd=VMe;function WMe(r){if(r instanceof hr.NonTerminal)return"SUBRULE";if(r instanceof hr.Option)return"OPTION";if(r instanceof hr.Alternation)return"OR";if(r instanceof hr.RepetitionMandatory)return"AT_LEAST_ONE";if(r instanceof hr.RepetitionMandatoryWithSeparator)return"AT_LEAST_ONE_SEP";if(r instanceof hr.RepetitionWithSeparator)return"MANY_SEP";if(r instanceof hr.Repetition)return"MANY";if(r instanceof hr.Terminal)return"CONSUME";throw Error("non exhaustive match")}Sa.getProductionDslName=WMe});var Ur=p(lt=>{"use strict";Object.defineProperty(lt,"__esModule",{value:!0});lt.isSequenceProd=lt.isBranchingProd=lt.isOptionalProd=lt.getProductionDslName=lt.GAstVisitor=lt.serializeProduction=lt.serializeGrammar=lt.Alternative=lt.Alternation=lt.RepetitionWithSeparator=lt.RepetitionMandatoryWithSeparator=lt.RepetitionMandatory=lt.Repetition=lt.Option=lt.NonTerminal=lt.Terminal=lt.Rule=void 0;var Ma=k0();Object.defineProperty(lt,"Rule",{enumerable:!0,get:function(){return Ma.Rule}});Object.defineProperty(lt,"Terminal",{enumerable:!0,get:function(){return Ma.Terminal}});Object.defineProperty(lt,"NonTerminal",{enumerable:!0,get:function(){return Ma.NonTerminal}});Object.defineProperty(lt,"Option",{enumerable:!0,get:function(){return Ma.Option}});Object.defineProperty(lt,"Repetition",{enumerable:!0,get:function(){return Ma.Repetition}});Object.defineProperty(lt,"RepetitionMandatory",{enumerable:!0,get:function(){return Ma.RepetitionMandatory}});Object.defineProperty(lt,"RepetitionMandatoryWithSeparator",{enumerable:!0,get:function(){return Ma.RepetitionMandatoryWithSeparator}});Object.defineProperty(lt,"RepetitionWithSeparator",{enumerable:!0,get:function(){return Ma.RepetitionWithSeparator}});Object.defineProperty(lt,"Alternation",{enumerable:!0,get:function(){return Ma.Alternation}});Object.defineProperty(lt,"Alternative",{enumerable:!0,get:function(){return Ma.Alternative}});Object.defineProperty(lt,"serializeGrammar",{enumerable:!0,get:function(){return Ma.serializeGrammar}});Object.defineProperty(lt,"serializeProduction",{enumerable:!0,get:function(){return Ma.serializeProduction}});var zMe=KV();Object.defineProperty(lt,"GAstVisitor",{enumerable:!0,get:function(){return zMe.GAstVisitor}});var q0=s7();Object.defineProperty(lt,"getProductionDslName",{enumerable:!0,get:function(){return q0.getProductionDslName}});Object.defineProperty(lt,"isOptionalProd",{enumerable:!0,get:function(){return q0.isOptionalProd}});Object.defineProperty(lt,"isBranchingProd",{enumerable:!0,get:function(){return q0.isBranchingProd}});Object.defineProperty(lt,"isSequenceProd",{enumerable:!0,get:function(){return q0.isSequenceProd}})});var x0=p(lh=>{"use strict";var u7=lh&&lh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(lh,"__esModule",{value:!0});lh.RestWalker=void 0;var YMe=u7(P0()),o7=u7(Rn()),wi=Ur(),XMe=function(){function r(){}return r.prototype.walk=function(e,t){var n=this;t===void 0&&(t=[]),(0,o7.default)(e.definition,function(i,a){var s=(0,YMe.default)(e.definition,a+1);if(i instanceof wi.NonTerminal)n.walkProdRef(i,s,t);else if(i instanceof wi.Terminal)n.walkTerminal(i,s,t);else if(i instanceof wi.Alternative)n.walkFlat(i,s,t);else if(i instanceof wi.Option)n.walkOption(i,s,t);else if(i instanceof wi.RepetitionMandatory)n.walkAtLeastOne(i,s,t);else if(i instanceof wi.RepetitionMandatoryWithSeparator)n.walkAtLeastOneSep(i,s,t);else if(i instanceof wi.RepetitionWithSeparator)n.walkManySep(i,s,t);else if(i instanceof wi.Repetition)n.walkMany(i,s,t);else if(i instanceof wi.Alternation)n.walkOr(i,s,t);else throw Error("non exhaustive match")})},r.prototype.walkTerminal=function(e,t,n){},r.prototype.walkProdRef=function(e,t,n){},r.prototype.walkFlat=function(e,t,n){var i=t.concat(n);this.walk(e,i)},r.prototype.walkOption=function(e,t,n){var i=t.concat(n);this.walk(e,i)},r.prototype.walkAtLeastOne=function(e,t,n){var i=[new wi.Option({definition:e.definition})].concat(t,n);this.walk(e,i)},r.prototype.walkAtLeastOneSep=function(e,t,n){var i=l7(e,t,n);this.walk(e,i)},r.prototype.walkMany=function(e,t,n){var i=[new wi.Option({definition:e.definition})].concat(t,n);this.walk(e,i)},r.prototype.walkManySep=function(e,t,n){var i=l7(e,t,n);this.walk(e,i)},r.prototype.walkOr=function(e,t,n){var i=this,a=t.concat(n);(0,o7.default)(e.definition,function(s){var o=new wi.Alternative({definition:[s]});i.walk(o,a)})},r}();lh.RestWalker=XMe;function l7(r,e,t){var n=[new wi.Option({definition:[new wi.Terminal({terminalType:r.separator})].concat(r.definition)})],i=n.concat(e,t);return i}});var p7=p((uct,d7)=>{var c7=pf(),JMe=Ev(),QMe=jt(),f7=c7?c7.isConcatSpreadable:void 0;function ZMe(r){return QMe(r)||JMe(r)||!!(f7&&r&&r[f7])}d7.exports=ZMe});var L0=p((cct,y7)=>{var ePe=_0(),tPe=p7();function m7(r,e,t,n,i){var a=-1,s=r.length;for(t||(t=tPe),i||(i=[]);++a<s;){var o=r[a];e>0&&t(o)?e>1?m7(o,e-1,t,n,i):ePe(i,o):n||(i[i.length]=o)}return i}y7.exports=m7});var vs=p((fct,h7)=>{var rPe=L0();function nPe(r){var e=r==null?0:r.length;return e?rPe(r,1):[]}h7.exports=nPe});var MO=p((dct,g7)=>{var iPe=N0();function aPe(r,e){var t=r==null?0:r.length;return!!t&&iPe(r,e,0)>-1}g7.exports=aPe});var PO=p((pct,v7)=>{function sPe(r,e,t){for(var n=-1,i=r==null?0:r.length;++n<i;)if(t(e,r[n]))return!0;return!1}v7.exports=sPe});var j0=p((mct,_7)=>{function oPe(){}_7.exports=oPe});var T7=p((yct,$7)=>{var EO=XE(),lPe=j0(),uPe=v0(),cPe=1/0,fPe=EO&&1/uPe(new EO([,-0]))[1]==cPe?function(r){return new EO(r)}:lPe;$7.exports=fPe});var OO=p((hct,R7)=>{var dPe=h0(),pPe=MO(),mPe=PO(),yPe=g0(),hPe=T7(),gPe=v0(),vPe=200;function _Pe(r,e,t){var n=-1,i=pPe,a=r.length,s=!0,o=[],u=o;if(t)s=!1,i=mPe;else if(a>=vPe){var c=e?null:hPe(r);if(c)return gPe(c);s=!1,i=yPe,u=new dPe}else u=e?[]:o;e:for(;++n<a;){var f=r[n],d=e?e(f):f;if(f=t||f!==0?f:0,s&&d===d){for(var m=u.length;m--;)if(u[m]===d)continue e;e&&u.push(d),o.push(f)}else i(u,d,t)||(u!==o&&u.push(d),o.push(f))}return o}R7.exports=_Pe});var U0=p((gct,b7)=>{var $Pe=OO();function TPe(r){return r&&r.length?$Pe(r):[]}b7.exports=TPe});var FO=p(Pa=>{"use strict";var IO=Pa&&Pa.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Pa,"__esModule",{value:!0});Pa.firstForTerminal=Pa.firstForBranching=Pa.firstForSequence=Pa.first=void 0;var RPe=IO(vs()),A7=IO(U0()),bPe=IO(Tn()),C7=Ur(),kO=Ur();function B0(r){if(r instanceof C7.NonTerminal)return B0(r.referencedRule);if(r instanceof C7.Terminal)return S7(r);if((0,kO.isSequenceProd)(r))return w7(r);if((0,kO.isBranchingProd)(r))return D7(r);throw Error("non exhaustive match")}Pa.first=B0;function w7(r){for(var e=[],t=r.definition,n=0,i=t.length>n,a,s=!0;i&&s;)a=t[n],s=(0,kO.isOptionalProd)(a),e=e.concat(B0(a)),n=n+1,i=t.length>n;return(0,A7.default)(e)}Pa.firstForSequence=w7;function D7(r){var e=(0,bPe.default)(r.definition,function(t){return B0(t)});return(0,A7.default)((0,RPe.default)(e))}Pa.firstForBranching=D7;function S7(r){return[r.terminalType]}Pa.firstForTerminal=S7});var NO=p(G0=>{"use strict";Object.defineProperty(G0,"__esModule",{value:!0});G0.IN=void 0;G0.IN="_~IN~_"});var k7=p(Di=>{"use strict";var CPe=Di&&Di.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),M7=Di&&Di.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Di,"__esModule",{value:!0});Di.buildInProdFollowPrefix=Di.buildBetweenProdsFollowPrefix=Di.computeAllProdsFollows=Di.ResyncFollowsWalker=void 0;var APe=x0(),wPe=FO(),DPe=M7(Rn()),SPe=M7(zv()),P7=NO(),MPe=Ur(),E7=function(r){CPe(e,r);function e(t){var n=r.call(this)||this;return n.topProd=t,n.follows={},n}return e.prototype.startWalking=function(){return this.walk(this.topProd),this.follows},e.prototype.walkTerminal=function(t,n,i){},e.prototype.walkProdRef=function(t,n,i){var a=O7(t.referencedRule,t.idx)+this.topProd.name,s=n.concat(i),o=new MPe.Alternative({definition:s}),u=(0,wPe.first)(o);this.follows[a]=u},e}(APe.RestWalker);Di.ResyncFollowsWalker=E7;function PPe(r){var e={};return(0,DPe.default)(r,function(t){var n=new E7(t).startWalking();(0,SPe.default)(e,n)}),e}Di.computeAllProdsFollows=PPe;function O7(r,e){return r.name+e+P7.IN}Di.buildBetweenProdsFollowPrefix=O7;function EPe(r){var e=r.terminalType.name;return e+r.idx+P7.IN}Di.buildInProdFollowPrefix=EPe});var hf=p((Tct,I7)=>{function OPe(r){return r===void 0}I7.exports=OPe});var N7=p((Rct,F7)=>{function kPe(r){return r&&r.length?r[0]:void 0}F7.exports=kPe});var uh=p((bct,q7)=>{q7.exports=N7()});var Jv=p((Cct,x7)=>{function IPe(r){for(var e=-1,t=r==null?0:r.length,n=0,i=[];++e<t;){var a=r[e];a&&(i[n++]=a)}return i}x7.exports=IPe});var qO=p((Act,L7)=>{var FPe=xu();function NPe(r,e){var t=[];return FPe(r,function(n,i,a){e(n,i,a)&&t.push(n)}),t}L7.exports=NPe});var U7=p((wct,j7)=>{var qPe="Expected a function";function xPe(r){if(typeof r!="function")throw new TypeError(qPe);return function(){var e=arguments;switch(e.length){case 0:return!r.call(this);case 1:return!r.call(this,e[0]);case 2:return!r.call(this,e[0],e[1]);case 3:return!r.call(this,e[0],e[1],e[2])}return!r.apply(this,e)}}j7.exports=xPe});var K0=p((Dct,B7)=>{var LPe=$0(),jPe=qO(),UPe=Da(),BPe=jt(),GPe=U7();function KPe(r,e){var t=BPe(r)?LPe:jPe;return t(r,GPe(UPe(e,3)))}B7.exports=KPe});var K7=p((Sct,G7)=>{var HPe=h0(),VPe=MO(),WPe=PO(),zPe=zy(),YPe=Vy(),XPe=g0(),JPe=200;function QPe(r,e,t,n){var i=-1,a=VPe,s=!0,o=r.length,u=[],c=e.length;if(!o)return u;t&&(e=zPe(e,YPe(t))),n?(a=WPe,s=!1):e.length>=JPe&&(a=XPe,s=!1,e=new HPe(e));e:for(;++i<o;){var f=r[i],d=t==null?f:t(f);if(f=n||f!==0?f:0,s&&d===d){for(var m=c;m--;)if(e[m]===d)continue e;u.push(f)}else a(e,d,n)||u.push(f)}return u}G7.exports=QPe});var V7=p((Mct,H7)=>{var ZPe=gs(),eEe=hs();function tEe(r){return eEe(r)&&ZPe(r)}H7.exports=tEe});var H0=p((Pct,z7)=>{var rEe=K7(),nEe=L0(),iEe=E0(),W7=V7(),aEe=iEe(function(r,e){return W7(r)?rEe(r,nEe(e,1,W7,!0)):[]});z7.exports=aEe});var X7=p((Ect,Y7)=>{var sEe=N0(),oEe=sh(),lEe=Math.max;function uEe(r,e,t){var n=r==null?0:r.length;if(!n)return-1;var i=t==null?0:oEe(t);return i<0&&(i=lEe(n+i,0)),sEe(r,e,i)}Y7.exports=uEe});var Q7=p((Oct,J7)=>{var cEe=Da(),fEe=gs(),dEe=zi();function pEe(r){return function(e,t,n){var i=Object(e);if(!fEe(e)){var a=cEe(t,3);e=dEe(e),t=function(o){return a(i[o],o,i)}}var s=r(e,t,n);return s>-1?i[a?e[s]:s]:void 0}}J7.exports=pEe});var e5=p((kct,Z7)=>{var mEe=wO(),yEe=Da(),hEe=sh(),gEe=Math.max;function vEe(r,e,t){var n=r==null?0:r.length;if(!n)return-1;var i=t==null?0:hEe(t);return i<0&&(i=gEe(n+i,0)),mEe(r,yEe(e,3),i)}Z7.exports=vEe});var V0=p((Ict,t5)=>{var _Ee=Q7(),$Ee=e5(),TEe=_Ee($Ee);t5.exports=TEe});var Qv=p((Fct,r5)=>{var REe=$0(),bEe=qO(),CEe=Da(),AEe=jt();function wEe(r,e){var t=AEe(r)?REe:bEe;return t(r,CEe(e,3))}r5.exports=wEe});var xO=p((Nct,i5)=>{var DEe=E0(),SEe=Yy(),MEe=Wv(),PEe=Kv(),n5=Object.prototype,EEe=n5.hasOwnProperty,OEe=DEe(function(r,e){r=Object(r);var t=-1,n=e.length,i=n>2?e[2]:void 0;for(i&&MEe(e[0],e[1],i)&&(n=1);++t<n;)for(var a=e[t],s=PEe(a),o=-1,u=s.length;++o<u;){var c=s[o],f=r[c];(f===void 0||SEe(f,n5[c])&&!EEe.call(r,c))&&(r[c]=a[c])}return r});i5.exports=OEe});var s5=p((qct,a5)=>{function kEe(r,e,t,n){var i=-1,a=r==null?0:r.length;for(n&&a&&(t=r[++i]);++i<a;)t=e(t,r[i],i,r);return t}a5.exports=kEe});var l5=p((xct,o5)=>{function IEe(r,e,t,n,i){return i(r,function(a,s,o){t=n?(n=!1,a):e(t,a,s,o)}),t}o5.exports=IEe});var Yl=p((Lct,u5)=>{var FEe=s5(),NEe=xu(),qEe=Da(),xEe=l5(),LEe=jt();function jEe(r,e,t){var n=LEe(r)?FEe:xEe,i=arguments.length<3;return n(r,qEe(e,4),t,i,NEe)}u5.exports=jEe});var z0=p(ch=>{"use strict";Object.defineProperty(ch,"__esModule",{value:!0});ch.clearRegExpParserCache=ch.getRegExpAst=void 0;var UEe=Rv(),W0={},BEe=new UEe.RegExpParser;function GEe(r){var e=r.toString();if(W0.hasOwnProperty(e))return W0[e];var t=BEe.pattern(e);return W0[e]=t,t}ch.getRegExpAst=GEe;function KEe(){W0={}}ch.clearRegExpParserCache=KEe});var y5=p(Kn=>{"use strict";var HEe=Kn&&Kn.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),fh=Kn&&Kn.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Kn,"__esModule",{value:!0});Kn.canMatchCharCode=Kn.firstCharOptimizedIndices=Kn.getOptimizedStartCodesIndices=Kn.failedOptimizationPrefixMsg=void 0;var d5=Rv(),VEe=fh(jt()),WEe=fh(Xv()),zEe=fh(Rn()),LO=fh(V0()),YEe=fh(lo()),UO=fh(zl()),c5=ah(),p5=z0(),Xl=BO(),m5="Complement Sets are not supported for first char optimization";Kn.failedOptimizationPrefixMsg=`Unable to use "first char" lexer optimizations:
`;function XEe(r,e){e===void 0&&(e=!1);try{var t=(0,p5.getRegExpAst)(r),n=X0(t.value,{},t.flags.ignoreCase);return n}catch(a){if(a.message===m5)e&&(0,c5.PRINT_WARNING)("".concat(Kn.failedOptimizationPrefixMsg)+"	Unable to optimize: < ".concat(r.toString(),` >
`)+`	Complement Sets cannot be automatically optimized.
	This will disable the lexer's first char optimizations.
	See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.`);else{var i="";e&&(i=`
	This will disable the lexer's first char optimizations.
	See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.`),(0,c5.PRINT_ERROR)("".concat(Kn.failedOptimizationPrefixMsg,`
`)+"	Failed parsing: < ".concat(r.toString(),` >
`)+"	Using the regexp-to-ast library version: ".concat(d5.VERSION,`
`)+"	Please open an issue at: https://github.com/bd82/regexp-to-ast/issues"+i)}}return[]}Kn.getOptimizedStartCodesIndices=XEe;function X0(r,e,t){switch(r.type){case"Disjunction":for(var n=0;n<r.value.length;n++)X0(r.value[n],e,t);break;case"Alternative":for(var i=r.value,n=0;n<i.length;n++){var a=i[n];switch(a.type){case"EndAnchor":case"GroupBackReference":case"Lookahead":case"NegativeLookahead":case"StartAnchor":case"WordBoundary":case"NonWordBoundary":continue}var s=a;switch(s.type){case"Character":Y0(s.value,e,t);break;case"Set":if(s.complement===!0)throw Error(m5);(0,zEe.default)(s.value,function(c){if(typeof c=="number")Y0(c,e,t);else{var f=c;if(t===!0)for(var d=f.from;d<=f.to;d++)Y0(d,e,t);else{for(var d=f.from;d<=f.to&&d<Xl.minOptimizationVal;d++)Y0(d,e,t);if(f.to>=Xl.minOptimizationVal)for(var m=f.from>=Xl.minOptimizationVal?f.from:Xl.minOptimizationVal,h=f.to,y=(0,Xl.charCodeToOptimizedIndex)(m),_=(0,Xl.charCodeToOptimizedIndex)(h),w=y;w<=_;w++)e[w]=w}}});break;case"Group":X0(s.value,e,t);break;default:throw Error("Non Exhaustive Match")}var o=s.quantifier!==void 0&&s.quantifier.atLeast===0;if(s.type==="Group"&&jO(s)===!1||s.type!=="Group"&&o===!1)break}break;default:throw Error("non exhaustive match!")}return(0,YEe.default)(e)}Kn.firstCharOptimizedIndices=X0;function Y0(r,e,t){var n=(0,Xl.charCodeToOptimizedIndex)(r);e[n]=n,t===!0&&JEe(r,e)}function JEe(r,e){var t=String.fromCharCode(r),n=t.toUpperCase();if(n!==t){var i=(0,Xl.charCodeToOptimizedIndex)(n.charCodeAt(0));e[i]=i}else{var a=t.toLowerCase();if(a!==t){var i=(0,Xl.charCodeToOptimizedIndex)(a.charCodeAt(0));e[i]=i}}}function f5(r,e){return(0,LO.default)(r.value,function(t){if(typeof t=="number")return(0,UO.default)(e,t);var n=t;return(0,LO.default)(e,function(i){return n.from<=i&&i<=n.to})!==void 0})}function jO(r){var e=r.quantifier;return e&&e.atLeast===0?!0:r.value?(0,VEe.default)(r.value)?(0,WEe.default)(r.value,jO):jO(r.value):!1}var QEe=function(r){HEe(e,r);function e(t){var n=r.call(this)||this;return n.targetCharCodes=t,n.found=!1,n}return e.prototype.visitChildren=function(t){if(this.found!==!0){switch(t.type){case"Lookahead":this.visitLookahead(t);return;case"NegativeLookahead":this.visitNegativeLookahead(t);return}r.prototype.visitChildren.call(this,t)}},e.prototype.visitCharacter=function(t){(0,UO.default)(this.targetCharCodes,t.value)&&(this.found=!0)},e.prototype.visitSet=function(t){t.complement?f5(t,this.targetCharCodes)===void 0&&(this.found=!0):f5(t,this.targetCharCodes)!==void 0&&(this.found=!0)},e}(d5.BaseRegExpVisitor);function ZEe(r,e){if(e instanceof RegExp){var t=(0,p5.getRegExpAst)(e),n=new QEe(r);return n.visit(t),n.found}else return(0,LO.default)(e,function(i){return(0,UO.default)(r,i.charCodeAt(0))})!==void 0}Kn.canMatchCharCode=ZEe});var BO=p(de=>{"use strict";var v5=de&&de.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),Or=de&&de.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(de,"__esModule",{value:!0});de.charCodeToOptimizedIndex=de.minOptimizationVal=de.buildLineBreakIssueMessage=de.LineTerminatorOptimizedTester=de.isShortPattern=de.isCustomPattern=de.cloneEmptyGroups=de.performWarningRuntimeChecks=de.performRuntimeChecks=de.addStickyFlag=de.addStartOfInput=de.findUnreachablePatterns=de.findModesThatDoNotExist=de.findInvalidGroupType=de.findDuplicatePatterns=de.findUnsupportedFlags=de.findStartOfInputAnchor=de.findEmptyMatchRegExps=de.findEndOfInputAnchor=de.findInvalidPatterns=de.findMissingPatterns=de.validatePatterns=de.analyzeTokenTypes=de.enableSticky=de.disableSticky=de.SUPPORT_STICKY=de.MODES=de.DEFAULT_MODE=void 0;var _5=Rv(),Kt=Zv(),eOe=Or(uh()),$5=Or(Wi()),T5=Or(Jv()),Q0=Or(jt()),tOe=Or(lo()),rOe=Or(vs()),R5=Or(K0()),b5=Or(H0()),h5=Or(X7()),gr=Or(Tn()),Jl=Or(Rn()),Ql=Or(Vv()),eb=Or(By()),KO=Or(hf()),nOe=Or(V0()),Hn=Or(Yi()),iOe=Or(zi()),Lu=Or(bO()),yo=Or(Qv()),aOe=Or(xO()),Z0=Or(Yl()),tb=Or(zl()),g5=ah(),dh=y5(),C5=z0(),gf="PATTERN";de.DEFAULT_MODE="defaultMode";de.MODES="modes";de.SUPPORT_STICKY=typeof new RegExp("(?:)").sticky=="boolean";function sOe(){de.SUPPORT_STICKY=!1}de.disableSticky=sOe;function oOe(){de.SUPPORT_STICKY=!0}de.enableSticky=oOe;function lOe(r,e){e=(0,aOe.default)(e,{useSticky:de.SUPPORT_STICKY,debug:!1,safeMode:!1,positionTracking:"full",lineTerminatorCharacters:["\r",`
`],tracer:function(C,b){return b()}});var t=e.tracer;t("initCharCodeToOptimizedIndexMap",function(){vOe()});var n;t("Reject Lexer.NA",function(){n=(0,R5.default)(r,function(C){return C[gf]===Kt.Lexer.NA})});var i=!1,a;t("Transform Patterns",function(){i=!1,a=(0,gr.default)(n,function(C){var b=C[gf];if((0,Lu.default)(b)){var I=b.source;return I.length===1&&I!=="^"&&I!=="$"&&I!=="."&&!b.ignoreCase?I:I.length===2&&I[0]==="\\"&&!(0,tb.default)(["d","D","s","S","t","r","n","t","0","c","b","B","f","v","w","W"],I[1])?I[1]:e.useSticky?VO(b):HO(b)}else{if((0,eb.default)(b))return i=!0,{exec:b};if(typeof b=="object")return i=!0,b;if(typeof b=="string"){if(b.length===1)return b;var L=b.replace(/[\\^$.*+?()[\]{}|]/g,"\\$&"),W=new RegExp(L);return e.useSticky?VO(W):HO(W)}else throw Error("non exhaustive match")}})});var s,o,u,c,f;t("misc mapping",function(){s=(0,gr.default)(n,function(C){return C.tokenTypeIdx}),o=(0,gr.default)(n,function(C){var b=C.GROUP;if(b!==Kt.Lexer.SKIPPED){if((0,Ql.default)(b))return b;if((0,KO.default)(b))return!1;throw Error("non exhaustive match")}}),u=(0,gr.default)(n,function(C){var b=C.LONGER_ALT;if(b){var I=(0,Q0.default)(b)?(0,gr.default)(b,function(L){return(0,h5.default)(n,L)}):[(0,h5.default)(n,b)];return I}}),c=(0,gr.default)(n,function(C){return C.PUSH_MODE}),f=(0,gr.default)(n,function(C){return(0,Hn.default)(C,"POP_MODE")})});var d;t("Line Terminator Handling",function(){var C=x5(e.lineTerminatorCharacters);d=(0,gr.default)(n,function(b){return!1}),e.positionTracking!=="onlyOffset"&&(d=(0,gr.default)(n,function(b){return(0,Hn.default)(b,"LINE_BREAKS")?!!b.LINE_BREAKS:N5(b,C)===!1&&(0,dh.canMatchCharCode)(C,b.PATTERN)}))});var m,h,y,_;t("Misc Mapping #2",function(){m=(0,gr.default)(n,zO),h=(0,gr.default)(a,F5),y=(0,Z0.default)(n,function(C,b){var I=b.GROUP;return(0,Ql.default)(I)&&I!==Kt.Lexer.SKIPPED&&(C[I]=[]),C},{}),_=(0,gr.default)(a,function(C,b){return{pattern:a[b],longerAlt:u[b],canLineTerminator:d[b],isCustom:m[b],short:h[b],group:o[b],push:c[b],pop:f[b],tokenTypeIdx:s[b],tokenType:n[b]}})});var w=!0,S=[];return e.safeMode||t("First Char Optimization",function(){S=(0,Z0.default)(n,function(C,b,I){if(typeof b.PATTERN=="string"){var L=b.PATTERN.charCodeAt(0),W=WO(L);GO(C,W,_[I])}else if((0,Q0.default)(b.START_CHARS_HINT)){var _e;(0,Jl.default)(b.START_CHARS_HINT,function(Ye){var or=typeof Ye=="string"?Ye.charCodeAt(0):Ye,he=WO(or);_e!==he&&(_e=he,GO(C,he,_[I]))})}else if((0,Lu.default)(b.PATTERN))if(b.PATTERN.unicode)w=!1,e.ensureOptimizations&&(0,g5.PRINT_ERROR)("".concat(dh.failedOptimizationPrefixMsg)+"	Unable to analyze < ".concat(b.PATTERN.toString(),` > pattern.
`)+`	The regexp unicode flag is not currently supported by the regexp-to-ast library.
	This will disable the lexer's first char optimizations.
	For details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE`);else{var Je=(0,dh.getOptimizedStartCodesIndices)(b.PATTERN,e.ensureOptimizations);(0,$5.default)(Je)&&(w=!1),(0,Jl.default)(Je,function(Ye){GO(C,Ye,_[I])})}else e.ensureOptimizations&&(0,g5.PRINT_ERROR)("".concat(dh.failedOptimizationPrefixMsg)+"	TokenType: <".concat(b.name,`> is using a custom token pattern without providing <start_chars_hint> parameter.
`)+`	This will disable the lexer's first char optimizations.
	For details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE`),w=!1;return C},[])}),{emptyGroups:y,patternIdxToConfig:_,charCodeToPatternIdxToConfig:S,hasCustom:i,canBeOptimized:w}}de.analyzeTokenTypes=lOe;function uOe(r,e){var t=[],n=A5(r);t=t.concat(n.errors);var i=w5(n.valid),a=i.valid;return t=t.concat(i.errors),t=t.concat(cOe(a)),t=t.concat(O5(a)),t=t.concat(k5(a,e)),t=t.concat(I5(a)),t}de.validatePatterns=uOe;function cOe(r){var e=[],t=(0,yo.default)(r,function(n){return(0,Lu.default)(n[gf])});return e=e.concat(D5(t)),e=e.concat(M5(t)),e=e.concat(P5(t)),e=e.concat(E5(t)),e=e.concat(S5(t)),e}function A5(r){var e=(0,yo.default)(r,function(i){return!(0,Hn.default)(i,gf)}),t=(0,gr.default)(e,function(i){return{message:"Token Type: ->"+i.name+"<- missing static 'PATTERN' property",type:Kt.LexerDefinitionErrorType.MISSING_PATTERN,tokenTypes:[i]}}),n=(0,b5.default)(r,e);return{errors:t,valid:n}}de.findMissingPatterns=A5;function w5(r){var e=(0,yo.default)(r,function(i){var a=i[gf];return!(0,Lu.default)(a)&&!(0,eb.default)(a)&&!(0,Hn.default)(a,"exec")&&!(0,Ql.default)(a)}),t=(0,gr.default)(e,function(i){return{message:"Token Type: ->"+i.name+"<- static 'PATTERN' can only be a RegExp, a Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.",type:Kt.LexerDefinitionErrorType.INVALID_PATTERN,tokenTypes:[i]}}),n=(0,b5.default)(r,e);return{errors:t,valid:n}}de.findInvalidPatterns=w5;var fOe=/[^\\][$]/;function D5(r){var e=function(i){v5(a,i);function a(){var s=i!==null&&i.apply(this,arguments)||this;return s.found=!1,s}return a.prototype.visitEndAnchor=function(s){this.found=!0},a}(_5.BaseRegExpVisitor),t=(0,yo.default)(r,function(i){var a=i.PATTERN;try{var s=(0,C5.getRegExpAst)(a),o=new e;return o.visit(s),o.found}catch{return fOe.test(a.source)}}),n=(0,gr.default)(t,function(i){return{message:`Unexpected RegExp Anchor Error:
	Token Type: ->`+i.name+`<- static 'PATTERN' cannot contain end of input anchor '$'
	See chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS	for details.`,type:Kt.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,tokenTypes:[i]}});return n}de.findEndOfInputAnchor=D5;function S5(r){var e=(0,yo.default)(r,function(n){var i=n.PATTERN;return i.test("")}),t=(0,gr.default)(e,function(n){return{message:"Token Type: ->"+n.name+"<- static 'PATTERN' must not match an empty string",type:Kt.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,tokenTypes:[n]}});return t}de.findEmptyMatchRegExps=S5;var dOe=/[^\\[][\^]|^\^/;function M5(r){var e=function(i){v5(a,i);function a(){var s=i!==null&&i.apply(this,arguments)||this;return s.found=!1,s}return a.prototype.visitStartAnchor=function(s){this.found=!0},a}(_5.BaseRegExpVisitor),t=(0,yo.default)(r,function(i){var a=i.PATTERN;try{var s=(0,C5.getRegExpAst)(a),o=new e;return o.visit(s),o.found}catch{return dOe.test(a.source)}}),n=(0,gr.default)(t,function(i){return{message:`Unexpected RegExp Anchor Error:
	Token Type: ->`+i.name+`<- static 'PATTERN' cannot contain start of input anchor '^'
	See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS	for details.`,type:Kt.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,tokenTypes:[i]}});return n}de.findStartOfInputAnchor=M5;function P5(r){var e=(0,yo.default)(r,function(n){var i=n[gf];return i instanceof RegExp&&(i.multiline||i.global)}),t=(0,gr.default)(e,function(n){return{message:"Token Type: ->"+n.name+"<- static 'PATTERN' may NOT contain global('g') or multiline('m')",type:Kt.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,tokenTypes:[n]}});return t}de.findUnsupportedFlags=P5;function E5(r){var e=[],t=(0,gr.default)(r,function(a){return(0,Z0.default)(r,function(s,o){return a.PATTERN.source===o.PATTERN.source&&!(0,tb.default)(e,o)&&o.PATTERN!==Kt.Lexer.NA&&(e.push(o),s.push(o)),s},[])});t=(0,T5.default)(t);var n=(0,yo.default)(t,function(a){return a.length>1}),i=(0,gr.default)(n,function(a){var s=(0,gr.default)(a,function(u){return u.name}),o=(0,eOe.default)(a).PATTERN;return{message:"The same RegExp pattern ->".concat(o,"<-")+"has been used in all of the following Token Types: ".concat(s.join(", ")," <-"),type:Kt.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,tokenTypes:a}});return i}de.findDuplicatePatterns=E5;function O5(r){var e=(0,yo.default)(r,function(n){if(!(0,Hn.default)(n,"GROUP"))return!1;var i=n.GROUP;return i!==Kt.Lexer.SKIPPED&&i!==Kt.Lexer.NA&&!(0,Ql.default)(i)}),t=(0,gr.default)(e,function(n){return{message:"Token Type: ->"+n.name+"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String",type:Kt.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,tokenTypes:[n]}});return t}de.findInvalidGroupType=O5;function k5(r,e){var t=(0,yo.default)(r,function(i){return i.PUSH_MODE!==void 0&&!(0,tb.default)(e,i.PUSH_MODE)}),n=(0,gr.default)(t,function(i){var a="Token Type: ->".concat(i.name,"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->").concat(i.PUSH_MODE,"<-")+"which does not exist";return{message:a,type:Kt.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,tokenTypes:[i]}});return n}de.findModesThatDoNotExist=k5;function I5(r){var e=[],t=(0,Z0.default)(r,function(n,i,a){var s=i.PATTERN;return s===Kt.Lexer.NA||((0,Ql.default)(s)?n.push({str:s,idx:a,tokenType:i}):(0,Lu.default)(s)&&mOe(s)&&n.push({str:s.source,idx:a,tokenType:i})),n},[]);return(0,Jl.default)(r,function(n,i){(0,Jl.default)(t,function(a){var s=a.str,o=a.idx,u=a.tokenType;if(i<o&&pOe(s,n.PATTERN)){var c="Token: ->".concat(u.name,`<- can never be matched.
`)+"Because it appears AFTER the Token Type ->".concat(n.name,"<-")+`in the lexer's definition.
See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;e.push({message:c,type:Kt.LexerDefinitionErrorType.UNREACHABLE_PATTERN,tokenTypes:[n,u]})}})}),e}de.findUnreachablePatterns=I5;function pOe(r,e){if((0,Lu.default)(e)){var t=e.exec(r);return t!==null&&t.index===0}else{if((0,eb.default)(e))return e(r,0,[],{});if((0,Hn.default)(e,"exec"))return e.exec(r,0,[],{});if(typeof e=="string")return e===r;throw Error("non exhaustive match")}}function mOe(r){var e=[".","\\","[","]","|","^","$","(",")","?","*","+","{"];return(0,nOe.default)(e,function(t){return r.source.indexOf(t)!==-1})===void 0}function HO(r){var e=r.ignoreCase?"i":"";return new RegExp("^(?:".concat(r.source,")"),e)}de.addStartOfInput=HO;function VO(r){var e=r.ignoreCase?"iy":"y";return new RegExp("".concat(r.source),e)}de.addStickyFlag=VO;function yOe(r,e,t){var n=[];return(0,Hn.default)(r,de.DEFAULT_MODE)||n.push({message:"A MultiMode Lexer cannot be initialized without a <"+de.DEFAULT_MODE+`> property in its definition
`,type:Kt.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE}),(0,Hn.default)(r,de.MODES)||n.push({message:"A MultiMode Lexer cannot be initialized without a <"+de.MODES+`> property in its definition
`,type:Kt.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY}),(0,Hn.default)(r,de.MODES)&&(0,Hn.default)(r,de.DEFAULT_MODE)&&!(0,Hn.default)(r.modes,r.defaultMode)&&n.push({message:"A MultiMode Lexer cannot be initialized with a ".concat(de.DEFAULT_MODE,": <").concat(r.defaultMode,">")+`which does not exist
`,type:Kt.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST}),(0,Hn.default)(r,de.MODES)&&(0,Jl.default)(r.modes,function(i,a){(0,Jl.default)(i,function(s,o){if((0,KO.default)(s))n.push({message:"A Lexer cannot be initialized using an undefined Token Type. Mode:"+"<".concat(a,"> at index: <").concat(o,`>
`),type:Kt.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED});else if((0,Hn.default)(s,"LONGER_ALT")){var u=(0,Q0.default)(s.LONGER_ALT)?s.LONGER_ALT:[s.LONGER_ALT];(0,Jl.default)(u,function(c){!(0,KO.default)(c)&&!(0,tb.default)(i,c)&&n.push({message:"A MultiMode Lexer cannot be initialized with a longer_alt <".concat(c.name,"> on token <").concat(s.name,"> outside of mode <").concat(a,`>
`),type:Kt.LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE})})}})}),n}de.performRuntimeChecks=yOe;function hOe(r,e,t){var n=[],i=!1,a=(0,T5.default)((0,rOe.default)((0,tOe.default)(r.modes))),s=(0,R5.default)(a,function(u){return u[gf]===Kt.Lexer.NA}),o=x5(t);return e&&(0,Jl.default)(s,function(u){var c=N5(u,o);if(c!==!1){var f=q5(u,c),d={message:f,type:c.issue,tokenType:u};n.push(d)}else(0,Hn.default)(u,"LINE_BREAKS")?u.LINE_BREAKS===!0&&(i=!0):(0,dh.canMatchCharCode)(o,u.PATTERN)&&(i=!0)}),e&&!i&&n.push({message:`Warning: No LINE_BREAKS Found.
	This Lexer has been defined to track line and column information,
	But none of the Token Types can be identified as matching a line terminator.
	See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS 
	for details.`,type:Kt.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS}),n}de.performWarningRuntimeChecks=hOe;function gOe(r){var e={},t=(0,iOe.default)(r);return(0,Jl.default)(t,function(n){var i=r[n];if((0,Q0.default)(i))e[n]=[];else throw Error("non exhaustive match")}),e}de.cloneEmptyGroups=gOe;function zO(r){var e=r.PATTERN;if((0,Lu.default)(e))return!1;if((0,eb.default)(e))return!0;if((0,Hn.default)(e,"exec"))return!0;if((0,Ql.default)(e))return!1;throw Error("non exhaustive match")}de.isCustomPattern=zO;function F5(r){return(0,Ql.default)(r)&&r.length===1?r.charCodeAt(0):!1}de.isShortPattern=F5;de.LineTerminatorOptimizedTester={test:function(r){for(var e=r.length,t=this.lastIndex;t<e;t++){var n=r.charCodeAt(t);if(n===10)return this.lastIndex=t+1,!0;if(n===13)return r.charCodeAt(t+1)===10?this.lastIndex=t+2:this.lastIndex=t+1,!0}return!1},lastIndex:0};function N5(r,e){if((0,Hn.default)(r,"LINE_BREAKS"))return!1;if((0,Lu.default)(r.PATTERN)){try{(0,dh.canMatchCharCode)(e,r.PATTERN)}catch(t){return{issue:Kt.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,errMsg:t.message}}return!1}else{if((0,Ql.default)(r.PATTERN))return!1;if(zO(r))return{issue:Kt.LexerDefinitionErrorType.CUSTOM_LINE_BREAK};throw Error("non exhaustive match")}}function q5(r,e){if(e.issue===Kt.LexerDefinitionErrorType.IDENTIFY_TERMINATOR)return`Warning: unable to identify line terminator usage in pattern.
`+"	The problem is in the <".concat(r.name,`> Token Type
`)+"	 Root cause: ".concat(e.errMsg,`.
`)+"	For details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR";if(e.issue===Kt.LexerDefinitionErrorType.CUSTOM_LINE_BREAK)return`Warning: A Custom Token Pattern should specify the <line_breaks> option.
`+"	The problem is in the <".concat(r.name,`> Token Type
`)+"	For details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK";throw Error("non exhaustive match")}de.buildLineBreakIssueMessage=q5;function x5(r){var e=(0,gr.default)(r,function(t){return(0,Ql.default)(t)?t.charCodeAt(0):t});return e}function GO(r,e,t){r[e]===void 0?r[e]=[t]:r[e].push(t)}de.minOptimizationVal=256;var J0=[];function WO(r){return r<de.minOptimizationVal?r:J0[r]}de.charCodeToOptimizedIndex=WO;function vOe(){if((0,$5.default)(J0)){J0=new Array(65536);for(var r=0;r<65536;r++)J0[r]=r>255?255+~~(r/255):r}}});var rb=p((Gct,L5)=>{function _Oe(r){var e=r==null?0:r.length;return e?r[e-1]:void 0}L5.exports=_Oe});var _f=p(Ze=>{"use strict";var ho=Ze&&Ze.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Ze,"__esModule",{value:!0});Ze.isTokenType=Ze.hasExtendingTokensTypesMapProperty=Ze.hasExtendingTokensTypesProperty=Ze.hasCategoriesProperty=Ze.hasShortKeyProperty=Ze.singleAssignCategoriesToksMap=Ze.assignCategoriesMapProp=Ze.assignCategoriesTokensProp=Ze.assignTokenDefaultProps=Ze.expandCategories=Ze.augmentTokenTypes=Ze.tokenIdxToClass=Ze.tokenShortNameIdx=Ze.tokenStructuredMatcherNoCategories=Ze.tokenStructuredMatcher=void 0;var $Oe=ho(Wi()),TOe=ho(Jv()),ROe=ho(jt()),bOe=ho(vs()),COe=ho(H0()),AOe=ho(Tn()),vf=ho(Rn()),e_=ho(Yi()),wOe=ho(zl()),DOe=ho(Vl());function SOe(r,e){var t=r.tokenTypeIdx;return t===e.tokenTypeIdx?!0:e.isParent===!0&&e.categoryMatchesMap[t]===!0}Ze.tokenStructuredMatcher=SOe;function MOe(r,e){return r.tokenTypeIdx===e.tokenTypeIdx}Ze.tokenStructuredMatcherNoCategories=MOe;Ze.tokenShortNameIdx=1;Ze.tokenIdxToClass={};function POe(r){var e=j5(r);U5(e),G5(e),B5(e),(0,vf.default)(e,function(t){t.isParent=t.categoryMatches.length>0})}Ze.augmentTokenTypes=POe;function j5(r){for(var e=(0,DOe.default)(r),t=r,n=!0;n;){t=(0,TOe.default)((0,bOe.default)((0,AOe.default)(t,function(a){return a.CATEGORIES})));var i=(0,COe.default)(t,e);e=e.concat(i),(0,$Oe.default)(i)?n=!1:t=i}return e}Ze.expandCategories=j5;function U5(r){(0,vf.default)(r,function(e){K5(e)||(Ze.tokenIdxToClass[Ze.tokenShortNameIdx]=e,e.tokenTypeIdx=Ze.tokenShortNameIdx++),YO(e)&&!(0,ROe.default)(e.CATEGORIES)&&(e.CATEGORIES=[e.CATEGORIES]),YO(e)||(e.CATEGORIES=[]),H5(e)||(e.categoryMatches=[]),V5(e)||(e.categoryMatchesMap={})})}Ze.assignTokenDefaultProps=U5;function B5(r){(0,vf.default)(r,function(e){e.categoryMatches=[],(0,vf.default)(e.categoryMatchesMap,function(t,n){e.categoryMatches.push(Ze.tokenIdxToClass[n].tokenTypeIdx)})})}Ze.assignCategoriesTokensProp=B5;function G5(r){(0,vf.default)(r,function(e){XO([],e)})}Ze.assignCategoriesMapProp=G5;function XO(r,e){(0,vf.default)(r,function(t){e.categoryMatchesMap[t.tokenTypeIdx]=!0}),(0,vf.default)(e.CATEGORIES,function(t){var n=r.concat(e);(0,wOe.default)(n,t)||XO(n,t)})}Ze.singleAssignCategoriesToksMap=XO;function K5(r){return(0,e_.default)(r,"tokenTypeIdx")}Ze.hasShortKeyProperty=K5;function YO(r){return(0,e_.default)(r,"CATEGORIES")}Ze.hasCategoriesProperty=YO;function H5(r){return(0,e_.default)(r,"categoryMatches")}Ze.hasExtendingTokensTypesProperty=H5;function V5(r){return(0,e_.default)(r,"categoryMatchesMap")}Ze.hasExtendingTokensTypesMapProperty=V5;function EOe(r){return(0,e_.default)(r,"tokenTypeIdx")}Ze.isTokenType=EOe});var JO=p(nb=>{"use strict";Object.defineProperty(nb,"__esModule",{value:!0});nb.defaultLexerErrorProvider=void 0;nb.defaultLexerErrorProvider={buildUnableToPopLexerModeMessage:function(r){return"Unable to pop Lexer Mode after encountering Token ->".concat(r.image,"<- The Mode Stack is empty")},buildUnexpectedCharactersMessage:function(r,e,t,n,i){return"unexpected character: ->".concat(r.charAt(e),"<- at offset: ").concat(e,",")+" skipped ".concat(t," characters.")}}});var Zv=p(eu=>{"use strict";var Xi=eu&&eu.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(eu,"__esModule",{value:!0});eu.Lexer=eu.LexerDefinitionErrorType=void 0;var Zl=BO(),QO=Xi(j0()),ib=Xi(Wi()),OOe=Xi(jt()),kOe=Xi(rb()),IOe=Xi(K0()),W5=Xi(Tn()),ZO=Xi(Rn()),FOe=Xi(zi()),NOe=Xi(hf()),z5=Xi(yf()),Y5=Xi(zv()),qOe=Xi(Yl()),X5=Xi(Vl()),e1=ah(),xOe=_f(),LOe=JO(),jOe=z0(),UOe;(function(r){r[r.MISSING_PATTERN=0]="MISSING_PATTERN",r[r.INVALID_PATTERN=1]="INVALID_PATTERN",r[r.EOI_ANCHOR_FOUND=2]="EOI_ANCHOR_FOUND",r[r.UNSUPPORTED_FLAGS_FOUND=3]="UNSUPPORTED_FLAGS_FOUND",r[r.DUPLICATE_PATTERNS_FOUND=4]="DUPLICATE_PATTERNS_FOUND",r[r.INVALID_GROUP_TYPE_FOUND=5]="INVALID_GROUP_TYPE_FOUND",r[r.PUSH_MODE_DOES_NOT_EXIST=6]="PUSH_MODE_DOES_NOT_EXIST",r[r.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE=7]="MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE",r[r.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY=8]="MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY",r[r.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST=9]="MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST",r[r.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED=10]="LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED",r[r.SOI_ANCHOR_FOUND=11]="SOI_ANCHOR_FOUND",r[r.EMPTY_MATCH_PATTERN=12]="EMPTY_MATCH_PATTERN",r[r.NO_LINE_BREAKS_FLAGS=13]="NO_LINE_BREAKS_FLAGS",r[r.UNREACHABLE_PATTERN=14]="UNREACHABLE_PATTERN",r[r.IDENTIFY_TERMINATOR=15]="IDENTIFY_TERMINATOR",r[r.CUSTOM_LINE_BREAK=16]="CUSTOM_LINE_BREAK",r[r.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE=17]="MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE"})(UOe=eu.LexerDefinitionErrorType||(eu.LexerDefinitionErrorType={}));var t_={deferDefinitionErrorsHandling:!1,positionTracking:"full",lineTerminatorsPattern:/\n|\r\n?/g,lineTerminatorCharacters:[`
`,"\r"],ensureOptimizations:!1,safeMode:!1,errorMessageProvider:LOe.defaultLexerErrorProvider,traceInitPerf:!1,skipValidations:!1,recoveryEnabled:!0};Object.freeze(t_);var BOe=function(){function r(e,t){t===void 0&&(t=t_);var n=this;if(this.lexerDefinition=e,this.lexerDefinitionErrors=[],this.lexerDefinitionWarning=[],this.patternIdxToConfig={},this.charCodeToPatternIdxToConfig={},this.modes=[],this.emptyGroups={},this.trackStartLines=!0,this.trackEndLines=!0,this.hasCustom=!1,this.canModeBeOptimized={},this.TRACE_INIT=function(a,s){if(n.traceInitPerf===!0){n.traceInitIndent++;var o=new Array(n.traceInitIndent+1).join("	");n.traceInitIndent<n.traceInitMaxIdent&&console.log("".concat(o,"--> <").concat(a,">"));var u=(0,e1.timer)(s),c=u.time,f=u.value,d=c>10?console.warn:console.log;return n.traceInitIndent<n.traceInitMaxIdent&&d("".concat(o,"<-- <").concat(a,"> time: ").concat(c,"ms")),n.traceInitIndent--,f}else return s()},typeof t=="boolean")throw Error(`The second argument to the Lexer constructor is now an ILexerConfig Object.
a boolean 2nd argument is no longer supported`);this.config=(0,Y5.default)({},t_,t);var i=this.config.traceInitPerf;i===!0?(this.traceInitMaxIdent=1/0,this.traceInitPerf=!0):typeof i=="number"&&(this.traceInitMaxIdent=i,this.traceInitPerf=!0),this.traceInitIndent=-1,this.TRACE_INIT("Lexer Constructor",function(){var a,s=!0;n.TRACE_INIT("Lexer Config handling",function(){if(n.config.lineTerminatorsPattern===t_.lineTerminatorsPattern)n.config.lineTerminatorsPattern=Zl.LineTerminatorOptimizedTester;else if(n.config.lineTerminatorCharacters===t_.lineTerminatorCharacters)throw Error(`Error: Missing <lineTerminatorCharacters> property on the Lexer config.
	For details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS`);if(t.safeMode&&t.ensureOptimizations)throw Error('"safeMode" and "ensureOptimizations" flags are mutually exclusive.');n.trackStartLines=/full|onlyStart/i.test(n.config.positionTracking),n.trackEndLines=/full/i.test(n.config.positionTracking),(0,OOe.default)(e)?a={modes:{defaultMode:(0,X5.default)(e)},defaultMode:Zl.DEFAULT_MODE}:(s=!1,a=(0,X5.default)(e))}),n.config.skipValidations===!1&&(n.TRACE_INIT("performRuntimeChecks",function(){n.lexerDefinitionErrors=n.lexerDefinitionErrors.concat((0,Zl.performRuntimeChecks)(a,n.trackStartLines,n.config.lineTerminatorCharacters))}),n.TRACE_INIT("performWarningRuntimeChecks",function(){n.lexerDefinitionWarning=n.lexerDefinitionWarning.concat((0,Zl.performWarningRuntimeChecks)(a,n.trackStartLines,n.config.lineTerminatorCharacters))})),a.modes=a.modes?a.modes:{},(0,ZO.default)(a.modes,function(f,d){a.modes[d]=(0,IOe.default)(f,function(m){return(0,NOe.default)(m)})});var o=(0,FOe.default)(a.modes);if((0,ZO.default)(a.modes,function(f,d){n.TRACE_INIT("Mode: <".concat(d,"> processing"),function(){if(n.modes.push(d),n.config.skipValidations===!1&&n.TRACE_INIT("validatePatterns",function(){n.lexerDefinitionErrors=n.lexerDefinitionErrors.concat((0,Zl.validatePatterns)(f,o))}),(0,ib.default)(n.lexerDefinitionErrors)){(0,xOe.augmentTokenTypes)(f);var m;n.TRACE_INIT("analyzeTokenTypes",function(){m=(0,Zl.analyzeTokenTypes)(f,{lineTerminatorCharacters:n.config.lineTerminatorCharacters,positionTracking:t.positionTracking,ensureOptimizations:t.ensureOptimizations,safeMode:t.safeMode,tracer:n.TRACE_INIT})}),n.patternIdxToConfig[d]=m.patternIdxToConfig,n.charCodeToPatternIdxToConfig[d]=m.charCodeToPatternIdxToConfig,n.emptyGroups=(0,Y5.default)({},n.emptyGroups,m.emptyGroups),n.hasCustom=m.hasCustom||n.hasCustom,n.canModeBeOptimized[d]=m.canBeOptimized}})}),n.defaultMode=a.defaultMode,!(0,ib.default)(n.lexerDefinitionErrors)&&!n.config.deferDefinitionErrorsHandling){var u=(0,W5.default)(n.lexerDefinitionErrors,function(f){return f.message}),c=u.join(`-----------------------
`);throw new Error(`Errors detected in definition of Lexer:
`+c)}(0,ZO.default)(n.lexerDefinitionWarning,function(f){(0,e1.PRINT_WARNING)(f.message)}),n.TRACE_INIT("Choosing sub-methods implementations",function(){if(Zl.SUPPORT_STICKY?(n.chopInput=z5.default,n.match=n.matchWithTest):(n.updateLastIndex=QO.default,n.match=n.matchWithExec),s&&(n.handleModes=QO.default),n.trackStartLines===!1&&(n.computeNewColumn=z5.default),n.trackEndLines===!1&&(n.updateTokenEndLineColumnLocation=QO.default),/full/i.test(n.config.positionTracking))n.createTokenInstance=n.createFullToken;else if(/onlyStart/i.test(n.config.positionTracking))n.createTokenInstance=n.createStartOnlyToken;else if(/onlyOffset/i.test(n.config.positionTracking))n.createTokenInstance=n.createOffsetOnlyToken;else throw Error('Invalid <positionTracking> config option: "'.concat(n.config.positionTracking,'"'));n.hasCustom?(n.addToken=n.addTokenUsingPush,n.handlePayload=n.handlePayloadWithCustom):(n.addToken=n.addTokenUsingMemberAccess,n.handlePayload=n.handlePayloadNoCustom)}),n.TRACE_INIT("Failed Optimization Warnings",function(){var f=(0,qOe.default)(n.canModeBeOptimized,function(d,m,h){return m===!1&&d.push(h),d},[]);if(t.ensureOptimizations&&!(0,ib.default)(f))throw Error("Lexer Modes: < ".concat(f.join(", "),` > cannot be optimized.
`)+`	 Disable the "ensureOptimizations" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.
	 Or inspect the console log for details on how to resolve these issues.`)}),n.TRACE_INIT("clearRegExpParserCache",function(){(0,jOe.clearRegExpParserCache)()}),n.TRACE_INIT("toFastProperties",function(){(0,e1.toFastProperties)(n)})})}return r.prototype.tokenize=function(e,t){if(t===void 0&&(t=this.defaultMode),!(0,ib.default)(this.lexerDefinitionErrors)){var n=(0,W5.default)(this.lexerDefinitionErrors,function(a){return a.message}),i=n.join(`-----------------------
`);throw new Error(`Unable to Tokenize because Errors detected in definition of Lexer:
`+i)}return this.tokenizeInternal(e,t)},r.prototype.tokenizeInternal=function(e,t){var n=this,i,a,s,o,u,c,f,d,m,h,y,_,w,S,C,b,I=e,L=I.length,W=0,_e=0,Je=this.hasCustom?0:Math.floor(e.length/10),Ye=new Array(Je),or=[],he=this.trackStartLines?1:void 0,tt=this.trackStartLines?1:void 0,z=(0,Zl.cloneEmptyGroups)(this.emptyGroups),H=this.trackStartLines,ne=this.config.lineTerminatorsPattern,me=0,Ge=[],Ke=[],Se=[],Sr=[];Object.freeze(Sr);var fr;function un(){return Ge}function Wa(yn){var Ya=(0,Zl.charCodeToOptimizedIndex)(yn),Xa=Ke[Ya];return Xa===void 0?Sr:Xa}var Gi=function(yn){if(Se.length===1&&yn.tokenType.PUSH_MODE===void 0){var Ya=n.config.errorMessageProvider.buildUnableToPopLexerModeMessage(yn);or.push({offset:yn.startOffset,line:yn.startLine,column:yn.startColumn,length:yn.image.length,message:Ya})}else{Se.pop();var Xa=(0,kOe.default)(Se);Ge=n.patternIdxToConfig[Xa],Ke=n.charCodeToPatternIdxToConfig[Xa],me=Ge.length;var zs=n.canModeBeOptimized[Xa]&&n.config.safeMode===!1;Ke&&zs?fr=Wa:fr=un}};function zm(yn){Se.push(yn),Ke=this.charCodeToPatternIdxToConfig[yn],Ge=this.patternIdxToConfig[yn],me=Ge.length,me=Ge.length;var Ya=this.canModeBeOptimized[yn]&&this.config.safeMode===!1;Ke&&Ya?fr=Wa:fr=un}zm.call(this,t);for(var si,Ym=this.config.recoveryEnabled;W<L;){c=null;var Xm=I.charCodeAt(W),Jm=fr(Xm),jg=Jm.length;for(i=0;i<jg;i++){si=Jm[i];var xr=si.pattern;f=null;var Sl=si.short;if(Sl!==!1?Xm===Sl&&(c=xr):si.isCustom===!0?(b=xr.exec(I,W,Ye,z),b!==null?(c=b[0],b.payload!==void 0&&(f=b.payload)):c=null):(this.updateLastIndex(xr,W),c=this.match(xr,e,W)),c!==null){if(u=si.longerAlt,u!==void 0){var Ug=u.length;for(s=0;s<Ug;s++){var Hs=Ge[u[s]],Bc=Hs.pattern;if(d=null,Hs.isCustom===!0?(b=Bc.exec(I,W,Ye,z),b!==null?(o=b[0],b.payload!==void 0&&(d=b.payload)):o=null):(this.updateLastIndex(Bc,W),o=this.match(Bc,e,W)),o&&o.length>c.length){c=o,f=d,si=Hs;break}}}break}}if(c!==null){if(m=c.length,h=si.group,h!==void 0&&(y=si.tokenTypeIdx,_=this.createTokenInstance(c,W,y,si.tokenType,he,tt,m),this.handlePayload(_,f),h===!1?_e=this.addToken(Ye,_e,_):z[h].push(_)),e=this.chopInput(e,m),W=W+m,tt=this.computeNewColumn(tt,m),H===!0&&si.canLineTerminator===!0){var Vs=0,Gc=void 0,ma=void 0;ne.lastIndex=0;do Gc=ne.test(c),Gc===!0&&(ma=ne.lastIndex-1,Vs++);while(Gc===!0);Vs!==0&&(he=he+Vs,tt=m-ma,this.updateTokenEndLineColumnLocation(_,h,ma,Vs,he,tt,m))}this.handleModes(si,Gi,zm,_)}else{for(var za=W,Qm=he,Zm=tt,Ki=Ym===!1;Ki===!1&&W<L;)for(e=this.chopInput(e,1),W++,a=0;a<me;a++){var Ws=Ge[a],xr=Ws.pattern,Sl=Ws.short;if(Sl!==!1?I.charCodeAt(W)===Sl&&(Ki=!0):Ws.isCustom===!0?Ki=xr.exec(I,W,Ye,z)!==null:(this.updateLastIndex(xr,W),Ki=xr.exec(e)!==null),Ki===!0)break}if(w=W-za,C=this.config.errorMessageProvider.buildUnexpectedCharactersMessage(I,za,w,Qm,Zm),or.push({offset:za,line:Qm,column:Zm,length:w,message:C}),Ym===!1)break}}return this.hasCustom||(Ye.length=_e),{tokens:Ye,groups:z,errors:or}},r.prototype.handleModes=function(e,t,n,i){if(e.pop===!0){var a=e.push;t(i),a!==void 0&&n.call(this,a)}else e.push!==void 0&&n.call(this,e.push)},r.prototype.chopInput=function(e,t){return e.substring(t)},r.prototype.updateLastIndex=function(e,t){e.lastIndex=t},r.prototype.updateTokenEndLineColumnLocation=function(e,t,n,i,a,s,o){var u,c;t!==void 0&&(u=n===o-1,c=u?-1:0,i===1&&u===!0||(e.endLine=a+c,e.endColumn=s-1+-c))},r.prototype.computeNewColumn=function(e,t){return e+t},r.prototype.createOffsetOnlyToken=function(e,t,n,i){return{image:e,startOffset:t,tokenTypeIdx:n,tokenType:i}},r.prototype.createStartOnlyToken=function(e,t,n,i,a,s){return{image:e,startOffset:t,startLine:a,startColumn:s,tokenTypeIdx:n,tokenType:i}},r.prototype.createFullToken=function(e,t,n,i,a,s,o){return{image:e,startOffset:t,endOffset:t+o-1,startLine:a,endLine:a,startColumn:s,endColumn:s+o-1,tokenTypeIdx:n,tokenType:i}},r.prototype.addTokenUsingPush=function(e,t,n){return e.push(n),t},r.prototype.addTokenUsingMemberAccess=function(e,t,n){return e[t]=n,t++,t},r.prototype.handlePayloadNoCustom=function(e,t){},r.prototype.handlePayloadWithCustom=function(e,t){t!==null&&(e.payload=t)},r.prototype.matchWithTest=function(e,t,n){var i=e.test(t);return i===!0?t.substring(n,e.lastIndex):null},r.prototype.matchWithExec=function(e,t){var n=e.exec(t);return n!==null?n[0]:null},r.SKIPPED="This marks a skipped Token pattern, this means each token identified by it willbe consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.",r.NA=/NOT_APPLICABLE/,r}();eu.Lexer=BOe});var $f=p(dn=>{"use strict";var t1=dn&&dn.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(dn,"__esModule",{value:!0});dn.tokenMatcher=dn.createTokenInstance=dn.EOF=dn.createToken=dn.hasTokenLabel=dn.tokenName=dn.tokenLabel=void 0;var GOe=t1(Vv()),tu=t1(Yi()),KOe=t1(hf()),HOe=Zv(),r1=_f();function VOe(r){return aW(r)?r.LABEL:r.name}dn.tokenLabel=VOe;function WOe(r){return r.name}dn.tokenName=WOe;function aW(r){return(0,GOe.default)(r.LABEL)&&r.LABEL!==""}dn.hasTokenLabel=aW;var zOe="parent",J5="categories",Q5="label",Z5="group",eW="push_mode",tW="pop_mode",rW="longer_alt",nW="line_breaks",iW="start_chars_hint";function sW(r){return YOe(r)}dn.createToken=sW;function YOe(r){var e=r.pattern,t={};if(t.name=r.name,(0,KOe.default)(e)||(t.PATTERN=e),(0,tu.default)(r,zOe))throw`The parent property is no longer supported.
See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.`;return(0,tu.default)(r,J5)&&(t.CATEGORIES=r[J5]),(0,r1.augmentTokenTypes)([t]),(0,tu.default)(r,Q5)&&(t.LABEL=r[Q5]),(0,tu.default)(r,Z5)&&(t.GROUP=r[Z5]),(0,tu.default)(r,tW)&&(t.POP_MODE=r[tW]),(0,tu.default)(r,eW)&&(t.PUSH_MODE=r[eW]),(0,tu.default)(r,rW)&&(t.LONGER_ALT=r[rW]),(0,tu.default)(r,nW)&&(t.LINE_BREAKS=r[nW]),(0,tu.default)(r,iW)&&(t.START_CHARS_HINT=r[iW]),t}dn.EOF=sW({name:"EOF",pattern:HOe.Lexer.NA});(0,r1.augmentTokenTypes)([dn.EOF]);function XOe(r,e,t,n,i,a,s,o){return{image:e,startOffset:t,endOffset:n,startLine:i,endLine:a,startColumn:s,endColumn:o,tokenTypeIdx:r.tokenTypeIdx,tokenType:r}}dn.createTokenInstance=XOe;function JOe(r,e){return(0,r1.tokenStructuredMatcher)(r,e)}dn.tokenMatcher=JOe});var mh=p(_s=>{"use strict";var a1=_s&&_s.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(_s,"__esModule",{value:!0});_s.defaultGrammarValidatorErrorProvider=_s.defaultGrammarResolverErrorProvider=_s.defaultParserErrorProvider=void 0;var ph=$f(),i1=a1(uh()),ju=a1(Tn()),QOe=a1(Yl()),n1=Ur(),oW=Ur();_s.defaultParserErrorProvider={buildMismatchTokenMessage:function(r){var e=r.expected,t=r.actual,n=r.previous,i=r.ruleName,a=(0,ph.hasTokenLabel)(e),s=a?"--> ".concat((0,ph.tokenLabel)(e)," <--"):"token of type --> ".concat(e.name," <--"),o="Expecting ".concat(s," but found --> '").concat(t.image,"' <--");return o},buildNotAllInputParsedMessage:function(r){var e=r.firstRedundant,t=r.ruleName;return"Redundant input, expecting EOF but found: "+e.image},buildNoViableAltMessage:function(r){var e=r.expectedPathsPerAlt,t=r.actual,n=r.previous,i=r.customUserDescription,a=r.ruleName,s="Expecting: ",o=(0,i1.default)(t).image,u=`
but found: '`+o+"'";if(i)return s+i+u;var c=(0,QOe.default)(e,function(h,y){return h.concat(y)},[]),f=(0,ju.default)(c,function(h){return"[".concat((0,ju.default)(h,function(y){return(0,ph.tokenLabel)(y)}).join(", "),"]")}),d=(0,ju.default)(f,function(h,y){return"  ".concat(y+1,". ").concat(h)}),m=`one of these possible Token sequences:
`.concat(d.join(`
`));return s+m+u},buildEarlyExitMessage:function(r){var e=r.expectedIterationPaths,t=r.actual,n=r.customUserDescription,i=r.ruleName,a="Expecting: ",s=(0,i1.default)(t).image,o=`
but found: '`+s+"'";if(n)return a+n+o;var u=(0,ju.default)(e,function(f){return"[".concat((0,ju.default)(f,function(d){return(0,ph.tokenLabel)(d)}).join(","),"]")}),c=`expecting at least one iteration which starts with one of these possible Token sequences::
  `+"<".concat(u.join(" ,"),">");return a+c+o}};Object.freeze(_s.defaultParserErrorProvider);_s.defaultGrammarResolverErrorProvider={buildRuleNotFoundError:function(r,e){var t="Invalid grammar, reference to a rule which is not defined: ->"+e.nonTerminalName+`<-
inside top level rule: ->`+r.name+"<-";return t}};_s.defaultGrammarValidatorErrorProvider={buildDuplicateFoundError:function(r,e){function t(f){return f instanceof n1.Terminal?f.terminalType.name:f instanceof n1.NonTerminal?f.nonTerminalName:""}var n=r.name,i=(0,i1.default)(e),a=i.idx,s=(0,oW.getProductionDslName)(i),o=t(i),u=a>0,c="->".concat(s).concat(u?a:"","<- ").concat(o?"with argument: ->".concat(o,"<-"):"",`
                  appears more than once (`).concat(e.length," times) in the top level rule: ->").concat(n,`<-.                  
                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES 
                  `);return c=c.replace(/[ \t]+/g," "),c=c.replace(/\s\s+/g,`
`),c},buildNamespaceConflictError:function(r){var e=`Namespace conflict found in grammar.
`+"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <".concat(r.name,`>.
`)+`To resolve this make sure each Terminal and Non-Terminal names are unique
This is easy to accomplish by using the convention that Terminal names start with an uppercase letter
and Non-Terminal names start with a lower case letter.`;return e},buildAlternationPrefixAmbiguityError:function(r){var e=(0,ju.default)(r.prefixPath,function(i){return(0,ph.tokenLabel)(i)}).join(", "),t=r.alternation.idx===0?"":r.alternation.idx,n="Ambiguous alternatives: <".concat(r.ambiguityIndices.join(" ,"),`> due to common lookahead prefix
`)+"in <OR".concat(t,"> inside <").concat(r.topLevelRule.name,`> Rule,
`)+"<".concat(e,`> may appears as a prefix path in all these alternatives.
`)+`See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX
For Further details.`;return n},buildAlternationAmbiguityError:function(r){var e=(0,ju.default)(r.prefixPath,function(i){return(0,ph.tokenLabel)(i)}).join(", "),t=r.alternation.idx===0?"":r.alternation.idx,n="Ambiguous Alternatives Detected: <".concat(r.ambiguityIndices.join(" ,"),"> in <OR").concat(t,">")+" inside <".concat(r.topLevelRule.name,`> Rule,
`)+"<".concat(e,`> may appears as a prefix path in all these alternatives.
`);return n=n+`See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES
For Further details.`,n},buildEmptyRepetitionError:function(r){var e=(0,oW.getProductionDslName)(r.repetition);r.repetition.idx!==0&&(e+=r.repetition.idx);var t="The repetition <".concat(e,"> within Rule <").concat(r.topLevelRule.name,`> can never consume any tokens.
`)+"This could lead to an infinite loop.";return t},buildTokenNameError:function(r){return"deprecated"},buildEmptyAlternationError:function(r){var e="Ambiguous empty alternative: <".concat(r.emptyChoiceIdx+1,">")+" in <OR".concat(r.alternation.idx,"> inside <").concat(r.topLevelRule.name,`> Rule.
`)+"Only the last alternative may be an empty alternative.";return e},buildTooManyAlternativesError:function(r){var e=`An Alternation cannot have more than 256 alternatives:
`+"<OR".concat(r.alternation.idx,"> inside <").concat(r.topLevelRule.name,`> Rule.
 has `).concat(r.alternation.definition.length+1," alternatives.");return e},buildLeftRecursionError:function(r){var e=r.topLevelRule.name,t=(0,ju.default)(r.leftRecursionPath,function(a){return a.name}),n="".concat(e," --> ").concat(t.concat([e]).join(" --> ")),i=`Left Recursion found in grammar.
`+"rule: <".concat(e,`> can be invoked from itself (directly or indirectly)
`)+`without consuming any Tokens. The grammar path that causes this is: 
 `.concat(n,`
`)+` To fix this refactor your grammar to remove the left recursion.
see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;return i},buildInvalidRuleNameError:function(r){return"deprecated"},buildDuplicateRuleNameError:function(r){var e;r.topLevelRule instanceof n1.Rule?e=r.topLevelRule.name:e=r.topLevelRule;var t="Duplicate definition, rule: ->".concat(e,"<- is already defined in the grammar: ->").concat(r.grammarName,"<-");return t}}});var cW=p(go=>{"use strict";var ZOe=go&&go.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),lW=go&&go.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(go,"__esModule",{value:!0});go.GastRefResolverVisitor=go.resolveGrammar=void 0;var e1e=Si(),t1e=lW(Rn()),r1e=lW(lo()),n1e=Ur();function i1e(r,e){var t=new uW(r,e);return t.resolveRefs(),t.errors}go.resolveGrammar=i1e;var uW=function(r){ZOe(e,r);function e(t,n){var i=r.call(this)||this;return i.nameToTopRule=t,i.errMsgProvider=n,i.errors=[],i}return e.prototype.resolveRefs=function(){var t=this;(0,t1e.default)((0,r1e.default)(this.nameToTopRule),function(n){t.currTopLevel=n,n.accept(t)})},e.prototype.visitNonTerminal=function(t){var n=this.nameToTopRule[t.nonTerminalName];if(n)t.referencedRule=n;else{var i=this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel,t);this.errors.push({message:i,type:e1e.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,ruleName:this.currTopLevel.name,unresolvedRefName:t.nonTerminalName})}},e}(n1e.GAstVisitor);go.GastRefResolverVisitor=uW});var dW=p((Xct,fW)=>{function a1e(r,e,t,n){for(var i=-1,a=r==null?0:r.length;++i<a;){var s=r[i];e(n,s,t(s),r)}return n}fW.exports=a1e});var mW=p((Jct,pW)=>{var s1e=xu();function o1e(r,e,t,n){return s1e(r,function(i,a,s){e(n,i,t(i),s)}),n}pW.exports=o1e});var hW=p((Qct,yW)=>{var l1e=dW(),u1e=mW(),c1e=Da(),f1e=jt();function d1e(r,e){return function(t,n){var i=f1e(t)?l1e:u1e,a=e?e():{};return i(t,r,c1e(n,2),a)}}yW.exports=d1e});var s1=p((Zct,gW)=>{var p1e=A0(),m1e=hW(),y1e=Object.prototype,h1e=y1e.hasOwnProperty,g1e=m1e(function(r,e,t){h1e.call(r,t)?r[t].push(e):p1e(r,t,[e])});gW.exports=g1e});var ab=p((eft,vW)=>{var v1e=L0(),_1e=Tn();function $1e(r,e){return v1e(_1e(r,e),1)}vW.exports=$1e});var sb=p((tft,_W)=>{var T1e=M0(),R1e=sh();function b1e(r,e,t){var n=r==null?0:r.length;return n?(e=t||e===void 0?1:R1e(e),e=n-e,T1e(r,0,e<0?0:e)):[]}_W.exports=b1e});var n_=p(vr=>{"use strict";var Rf=vr&&vr.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),bf=vr&&vr.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(vr,"__esModule",{value:!0});vr.nextPossibleTokensAfter=vr.possiblePathsFrom=vr.NextTerminalAfterAtLeastOneSepWalker=vr.NextTerminalAfterAtLeastOneWalker=vr.NextTerminalAfterManySepWalker=vr.NextTerminalAfterManyWalker=vr.AbstractNextTerminalAfterProductionWalker=vr.NextAfterTokenWalker=vr.AbstractNextPossibleTokensWalker=void 0;var TW=x0(),lb=bf(uh()),ob=bf(Wi()),$W=bf(sb()),mi=bf(P0()),C1e=bf(rb()),A1e=bf(Rn()),Tf=bf(Vl()),w1e=FO(),rt=Ur(),RW=function(r){Rf(e,r);function e(t,n){var i=r.call(this)||this;return i.topProd=t,i.path=n,i.possibleTokTypes=[],i.nextProductionName="",i.nextProductionOccurrence=0,i.found=!1,i.isAtEndOfPath=!1,i}return e.prototype.startWalking=function(){if(this.found=!1,this.path.ruleStack[0]!==this.topProd.name)throw Error("The path does not start with the walker's top Rule!");return this.ruleStack=(0,Tf.default)(this.path.ruleStack).reverse(),this.occurrenceStack=(0,Tf.default)(this.path.occurrenceStack).reverse(),this.ruleStack.pop(),this.occurrenceStack.pop(),this.updateExpectedNext(),this.walk(this.topProd),this.possibleTokTypes},e.prototype.walk=function(t,n){n===void 0&&(n=[]),this.found||r.prototype.walk.call(this,t,n)},e.prototype.walkProdRef=function(t,n,i){if(t.referencedRule.name===this.nextProductionName&&t.idx===this.nextProductionOccurrence){var a=n.concat(i);this.updateExpectedNext(),this.walk(t.referencedRule,a)}},e.prototype.updateExpectedNext=function(){(0,ob.default)(this.ruleStack)?(this.nextProductionName="",this.nextProductionOccurrence=0,this.isAtEndOfPath=!0):(this.nextProductionName=this.ruleStack.pop(),this.nextProductionOccurrence=this.occurrenceStack.pop())},e}(TW.RestWalker);vr.AbstractNextPossibleTokensWalker=RW;var D1e=function(r){Rf(e,r);function e(t,n){var i=r.call(this,t,n)||this;return i.path=n,i.nextTerminalName="",i.nextTerminalOccurrence=0,i.nextTerminalName=i.path.lastTok.name,i.nextTerminalOccurrence=i.path.lastTokOccurrence,i}return e.prototype.walkTerminal=function(t,n,i){if(this.isAtEndOfPath&&t.terminalType.name===this.nextTerminalName&&t.idx===this.nextTerminalOccurrence&&!this.found){var a=n.concat(i),s=new rt.Alternative({definition:a});this.possibleTokTypes=(0,w1e.first)(s),this.found=!0}},e}(RW);vr.NextAfterTokenWalker=D1e;var r_=function(r){Rf(e,r);function e(t,n){var i=r.call(this)||this;return i.topRule=t,i.occurrence=n,i.result={token:void 0,occurrence:void 0,isEndOfRule:void 0},i}return e.prototype.startWalking=function(){return this.walk(this.topRule),this.result},e}(TW.RestWalker);vr.AbstractNextTerminalAfterProductionWalker=r_;var S1e=function(r){Rf(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.walkMany=function(t,n,i){if(t.idx===this.occurrence){var a=(0,lb.default)(n.concat(i));this.result.isEndOfRule=a===void 0,a instanceof rt.Terminal&&(this.result.token=a.terminalType,this.result.occurrence=a.idx)}else r.prototype.walkMany.call(this,t,n,i)},e}(r_);vr.NextTerminalAfterManyWalker=S1e;var M1e=function(r){Rf(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.walkManySep=function(t,n,i){if(t.idx===this.occurrence){var a=(0,lb.default)(n.concat(i));this.result.isEndOfRule=a===void 0,a instanceof rt.Terminal&&(this.result.token=a.terminalType,this.result.occurrence=a.idx)}else r.prototype.walkManySep.call(this,t,n,i)},e}(r_);vr.NextTerminalAfterManySepWalker=M1e;var P1e=function(r){Rf(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.walkAtLeastOne=function(t,n,i){if(t.idx===this.occurrence){var a=(0,lb.default)(n.concat(i));this.result.isEndOfRule=a===void 0,a instanceof rt.Terminal&&(this.result.token=a.terminalType,this.result.occurrence=a.idx)}else r.prototype.walkAtLeastOne.call(this,t,n,i)},e}(r_);vr.NextTerminalAfterAtLeastOneWalker=P1e;var E1e=function(r){Rf(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.walkAtLeastOneSep=function(t,n,i){if(t.idx===this.occurrence){var a=(0,lb.default)(n.concat(i));this.result.isEndOfRule=a===void 0,a instanceof rt.Terminal&&(this.result.token=a.terminalType,this.result.occurrence=a.idx)}else r.prototype.walkAtLeastOneSep.call(this,t,n,i)},e}(r_);vr.NextTerminalAfterAtLeastOneSepWalker=E1e;function bW(r,e,t){t===void 0&&(t=[]),t=(0,Tf.default)(t);var n=[],i=0;function a(c){return c.concat((0,mi.default)(r,i+1))}function s(c){var f=bW(a(c),e,t);return n.concat(f)}for(;t.length<e&&i<r.length;){var o=r[i];if(o instanceof rt.Alternative)return s(o.definition);if(o instanceof rt.NonTerminal)return s(o.definition);if(o instanceof rt.Option)n=s(o.definition);else if(o instanceof rt.RepetitionMandatory){var u=o.definition.concat([new rt.Repetition({definition:o.definition})]);return s(u)}else if(o instanceof rt.RepetitionMandatoryWithSeparator){var u=[new rt.Alternative({definition:o.definition}),new rt.Repetition({definition:[new rt.Terminal({terminalType:o.separator})].concat(o.definition)})];return s(u)}else if(o instanceof rt.RepetitionWithSeparator){var u=o.definition.concat([new rt.Repetition({definition:[new rt.Terminal({terminalType:o.separator})].concat(o.definition)})]);n=s(u)}else if(o instanceof rt.Repetition){var u=o.definition.concat([new rt.Repetition({definition:o.definition})]);n=s(u)}else{if(o instanceof rt.Alternation)return(0,A1e.default)(o.definition,function(c){(0,ob.default)(c.definition)===!1&&(n=s(c.definition))}),n;if(o instanceof rt.Terminal)t.push(o.terminalType);else throw Error("non exhaustive match")}i++}return n.push({partialPath:t,suffixDef:(0,mi.default)(r,i)}),n}vr.possiblePathsFrom=bW;function O1e(r,e,t,n){var i="EXIT_NONE_TERMINAL",a=[i],s="EXIT_ALTERNATIVE",o=!1,u=e.length,c=u-n-1,f=[],d=[];for(d.push({idx:-1,def:r,ruleStack:[],occurrenceStack:[]});!(0,ob.default)(d);){var m=d.pop();if(m===s){o&&(0,C1e.default)(d).idx<=c&&d.pop();continue}var h=m.def,y=m.idx,_=m.ruleStack,w=m.occurrenceStack;if(!(0,ob.default)(h)){var S=h[0];if(S===i){var C={idx:y,def:(0,mi.default)(h),ruleStack:(0,$W.default)(_),occurrenceStack:(0,$W.default)(w)};d.push(C)}else if(S instanceof rt.Terminal)if(y<u-1){var b=y+1,I=e[b];if(t(I,S.terminalType)){var C={idx:b,def:(0,mi.default)(h),ruleStack:_,occurrenceStack:w};d.push(C)}}else if(y===u-1)f.push({nextTokenType:S.terminalType,nextTokenOccurrence:S.idx,ruleStack:_,occurrenceStack:w}),o=!0;else throw Error("non exhaustive match");else if(S instanceof rt.NonTerminal){var L=(0,Tf.default)(_);L.push(S.nonTerminalName);var W=(0,Tf.default)(w);W.push(S.idx);var C={idx:y,def:S.definition.concat(a,(0,mi.default)(h)),ruleStack:L,occurrenceStack:W};d.push(C)}else if(S instanceof rt.Option){var _e={idx:y,def:(0,mi.default)(h),ruleStack:_,occurrenceStack:w};d.push(_e),d.push(s);var Je={idx:y,def:S.definition.concat((0,mi.default)(h)),ruleStack:_,occurrenceStack:w};d.push(Je)}else if(S instanceof rt.RepetitionMandatory){var Ye=new rt.Repetition({definition:S.definition,idx:S.idx}),or=S.definition.concat([Ye],(0,mi.default)(h)),C={idx:y,def:or,ruleStack:_,occurrenceStack:w};d.push(C)}else if(S instanceof rt.RepetitionMandatoryWithSeparator){var he=new rt.Terminal({terminalType:S.separator}),Ye=new rt.Repetition({definition:[he].concat(S.definition),idx:S.idx}),or=S.definition.concat([Ye],(0,mi.default)(h)),C={idx:y,def:or,ruleStack:_,occurrenceStack:w};d.push(C)}else if(S instanceof rt.RepetitionWithSeparator){var _e={idx:y,def:(0,mi.default)(h),ruleStack:_,occurrenceStack:w};d.push(_e),d.push(s);var he=new rt.Terminal({terminalType:S.separator}),tt=new rt.Repetition({definition:[he].concat(S.definition),idx:S.idx}),or=S.definition.concat([tt],(0,mi.default)(h)),Je={idx:y,def:or,ruleStack:_,occurrenceStack:w};d.push(Je)}else if(S instanceof rt.Repetition){var _e={idx:y,def:(0,mi.default)(h),ruleStack:_,occurrenceStack:w};d.push(_e),d.push(s);var tt=new rt.Repetition({definition:S.definition,idx:S.idx}),or=S.definition.concat([tt],(0,mi.default)(h)),Je={idx:y,def:or,ruleStack:_,occurrenceStack:w};d.push(Je)}else if(S instanceof rt.Alternation)for(var z=S.definition.length-1;z>=0;z--){var H=S.definition[z],ne={idx:y,def:H.definition.concat((0,mi.default)(h)),ruleStack:_,occurrenceStack:w};d.push(ne),d.push(s)}else if(S instanceof rt.Alternative)d.push({idx:y,def:S.definition.concat((0,mi.default)(h)),ruleStack:_,occurrenceStack:w});else if(S instanceof rt.Rule)d.push(k1e(S,y,_,w));else throw Error("non exhaustive match")}}return f}vr.nextPossibleTokensAfter=O1e;function k1e(r,e,t,n){var i=(0,Tf.default)(t);i.push(r.name);var a=(0,Tf.default)(n);return a.push(1),{idx:e,def:r.definition,ruleStack:i,occurrenceStack:a}}});var yh=p($t=>{"use strict";var DW=$t&&$t.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),wf=$t&&$t.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty($t,"__esModule",{value:!0});$t.areTokenCategoriesNotUsed=$t.isStrictPrefixOfPath=$t.containsPath=$t.getLookaheadPathsForOptionalProd=$t.getLookaheadPathsForOr=$t.lookAheadSequenceFromAlternatives=$t.buildSingleAlternativeLookaheadFunction=$t.buildAlternativesLookAheadFunc=$t.buildLookaheadFuncForOptionalProd=$t.buildLookaheadFuncForOr=$t.getLookaheadPaths=$t.getProdType=$t.PROD_TYPE=void 0;var l1=wf(Wi()),SW=wf(vs()),Af=wf(Xv()),ub=wf(Tn()),Cf=wf(Rn()),CW=wf(Yi()),MW=wf(Yl()),AW=n_(),I1e=x0(),cb=_f(),Uu=Ur(),F1e=Ur(),Zr;(function(r){r[r.OPTION=0]="OPTION",r[r.REPETITION=1]="REPETITION",r[r.REPETITION_MANDATORY=2]="REPETITION_MANDATORY",r[r.REPETITION_MANDATORY_WITH_SEPARATOR=3]="REPETITION_MANDATORY_WITH_SEPARATOR",r[r.REPETITION_WITH_SEPARATOR=4]="REPETITION_WITH_SEPARATOR",r[r.ALTERNATION=5]="ALTERNATION"})(Zr=$t.PROD_TYPE||($t.PROD_TYPE={}));function PW(r){if(r instanceof Uu.Option||r==="Option")return Zr.OPTION;if(r instanceof Uu.Repetition||r==="Repetition")return Zr.REPETITION;if(r instanceof Uu.RepetitionMandatory||r==="RepetitionMandatory")return Zr.REPETITION_MANDATORY;if(r instanceof Uu.RepetitionMandatoryWithSeparator||r==="RepetitionMandatoryWithSeparator")return Zr.REPETITION_MANDATORY_WITH_SEPARATOR;if(r instanceof Uu.RepetitionWithSeparator||r==="RepetitionWithSeparator")return Zr.REPETITION_WITH_SEPARATOR;if(r instanceof Uu.Alternation||r==="Alternation")return Zr.ALTERNATION;throw Error("non exhaustive match")}$t.getProdType=PW;function N1e(r){var e=r.occurrence,t=r.rule,n=r.prodType,i=r.maxLookahead,a=PW(n);return a===Zr.ALTERNATION?c1(e,t,i):f1(e,t,a,i)}$t.getLookaheadPaths=N1e;function q1e(r,e,t,n,i,a){var s=c1(r,e,t),o=d1(s)?cb.tokenStructuredMatcherNoCategories:cb.tokenStructuredMatcher;return a(s,n,o,i)}$t.buildLookaheadFuncForOr=q1e;function x1e(r,e,t,n,i,a){var s=f1(r,e,i,t),o=d1(s)?cb.tokenStructuredMatcherNoCategories:cb.tokenStructuredMatcher;return a(s[0],o,n)}$t.buildLookaheadFuncForOptionalProd=x1e;function L1e(r,e,t,n){var i=r.length,a=(0,Af.default)(r,function(u){return(0,Af.default)(u,function(c){return c.length===1})});if(e)return function(u){for(var c=(0,ub.default)(u,function(b){return b.GATE}),f=0;f<i;f++){var d=r[f],m=d.length,h=c[f];if(!(h!==void 0&&h.call(this)===!1))e:for(var y=0;y<m;y++){for(var _=d[y],w=_.length,S=0;S<w;S++){var C=this.LA(S+1);if(t(C,_[S])===!1)continue e}return f}}};if(a&&!n){var s=(0,ub.default)(r,function(u){return(0,SW.default)(u)}),o=(0,MW.default)(s,function(u,c,f){return(0,Cf.default)(c,function(d){(0,CW.default)(u,d.tokenTypeIdx)||(u[d.tokenTypeIdx]=f),(0,Cf.default)(d.categoryMatches,function(m){(0,CW.default)(u,m)||(u[m]=f)})}),u},{});return function(){var u=this.LA(1);return o[u.tokenTypeIdx]}}else return function(){for(var u=0;u<i;u++){var c=r[u],f=c.length;e:for(var d=0;d<f;d++){for(var m=c[d],h=m.length,y=0;y<h;y++){var _=this.LA(y+1);if(t(_,m[y])===!1)continue e}return u}}}}$t.buildAlternativesLookAheadFunc=L1e;function j1e(r,e,t){var n=(0,Af.default)(r,function(c){return c.length===1}),i=r.length;if(n&&!t){var a=(0,SW.default)(r);if(a.length===1&&(0,l1.default)(a[0].categoryMatches)){var s=a[0],o=s.tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===o}}else{var u=(0,MW.default)(a,function(c,f,d){return c[f.tokenTypeIdx]=!0,(0,Cf.default)(f.categoryMatches,function(m){c[m]=!0}),c},[]);return function(){var c=this.LA(1);return u[c.tokenTypeIdx]===!0}}}else return function(){e:for(var c=0;c<i;c++){for(var f=r[c],d=f.length,m=0;m<d;m++){var h=this.LA(m+1);if(e(h,f[m])===!1)continue e}return!0}return!1}}$t.buildSingleAlternativeLookaheadFunction=j1e;var U1e=function(r){DW(e,r);function e(t,n,i){var a=r.call(this)||this;return a.topProd=t,a.targetOccurrence=n,a.targetProdType=i,a}return e.prototype.startWalking=function(){return this.walk(this.topProd),this.restDef},e.prototype.checkIsTarget=function(t,n,i,a){return t.idx===this.targetOccurrence&&this.targetProdType===n?(this.restDef=i.concat(a),!0):!1},e.prototype.walkOption=function(t,n,i){this.checkIsTarget(t,Zr.OPTION,n,i)||r.prototype.walkOption.call(this,t,n,i)},e.prototype.walkAtLeastOne=function(t,n,i){this.checkIsTarget(t,Zr.REPETITION_MANDATORY,n,i)||r.prototype.walkOption.call(this,t,n,i)},e.prototype.walkAtLeastOneSep=function(t,n,i){this.checkIsTarget(t,Zr.REPETITION_MANDATORY_WITH_SEPARATOR,n,i)||r.prototype.walkOption.call(this,t,n,i)},e.prototype.walkMany=function(t,n,i){this.checkIsTarget(t,Zr.REPETITION,n,i)||r.prototype.walkOption.call(this,t,n,i)},e.prototype.walkManySep=function(t,n,i){this.checkIsTarget(t,Zr.REPETITION_WITH_SEPARATOR,n,i)||r.prototype.walkOption.call(this,t,n,i)},e}(I1e.RestWalker),EW=function(r){DW(e,r);function e(t,n,i){var a=r.call(this)||this;return a.targetOccurrence=t,a.targetProdType=n,a.targetRef=i,a.result=[],a}return e.prototype.checkIsTarget=function(t,n){t.idx===this.targetOccurrence&&this.targetProdType===n&&(this.targetRef===void 0||t===this.targetRef)&&(this.result=t.definition)},e.prototype.visitOption=function(t){this.checkIsTarget(t,Zr.OPTION)},e.prototype.visitRepetition=function(t){this.checkIsTarget(t,Zr.REPETITION)},e.prototype.visitRepetitionMandatory=function(t){this.checkIsTarget(t,Zr.REPETITION_MANDATORY)},e.prototype.visitRepetitionMandatoryWithSeparator=function(t){this.checkIsTarget(t,Zr.REPETITION_MANDATORY_WITH_SEPARATOR)},e.prototype.visitRepetitionWithSeparator=function(t){this.checkIsTarget(t,Zr.REPETITION_WITH_SEPARATOR)},e.prototype.visitAlternation=function(t){this.checkIsTarget(t,Zr.ALTERNATION)},e}(F1e.GAstVisitor);function wW(r){for(var e=new Array(r),t=0;t<r;t++)e[t]=[];return e}function o1(r){for(var e=[""],t=0;t<r.length;t++){for(var n=r[t],i=[],a=0;a<e.length;a++){var s=e[a];i.push(s+"_"+n.tokenTypeIdx);for(var o=0;o<n.categoryMatches.length;o++){var u="_"+n.categoryMatches[o];i.push(s+u)}}e=i}return e}function B1e(r,e,t){for(var n=0;n<r.length;n++)if(n!==t)for(var i=r[n],a=0;a<e.length;a++){var s=e[a];if(i[s]===!0)return!1}return!0}function u1(r,e){for(var t=(0,ub.default)(r,function(f){return(0,AW.possiblePathsFrom)([f],1)}),n=wW(t.length),i=(0,ub.default)(t,function(f){var d={};return(0,Cf.default)(f,function(m){var h=o1(m.partialPath);(0,Cf.default)(h,function(y){d[y]=!0})}),d}),a=t,s=1;s<=e;s++){var o=a;a=wW(o.length);for(var u=function(f){for(var d=o[f],m=0;m<d.length;m++){var h=d[m].partialPath,y=d[m].suffixDef,_=o1(h),w=B1e(i,_,f);if(w||(0,l1.default)(y)||h.length===e){var S=n[f];if(OW(S,h)===!1){S.push(h);for(var C=0;C<_.length;C++){var b=_[C];i[f][b]=!0}}}else{var I=(0,AW.possiblePathsFrom)(y,s+1,h);a[f]=a[f].concat(I),(0,Cf.default)(I,function(L){var W=o1(L.partialPath);(0,Cf.default)(W,function(_e){i[f][_e]=!0})})}}},c=0;c<o.length;c++)u(c)}return n}$t.lookAheadSequenceFromAlternatives=u1;function c1(r,e,t,n){var i=new EW(r,Zr.ALTERNATION,n);return e.accept(i),u1(i.result,t)}$t.getLookaheadPathsForOr=c1;function f1(r,e,t,n){var i=new EW(r,t);e.accept(i);var a=i.result,s=new U1e(e,r,t),o=s.startWalking(),u=new Uu.Alternative({definition:a}),c=new Uu.Alternative({definition:o});return u1([u,c],n)}$t.getLookaheadPathsForOptionalProd=f1;function OW(r,e){e:for(var t=0;t<r.length;t++){var n=r[t];if(n.length===e.length){for(var i=0;i<n.length;i++){var a=e[i],s=n[i],o=a===s||s.categoryMatchesMap[a.tokenTypeIdx]!==void 0;if(o===!1)continue e}return!0}}return!1}$t.containsPath=OW;function G1e(r,e){return r.length<e.length&&(0,Af.default)(r,function(t,n){var i=e[n];return t===i||i.categoryMatchesMap[t.tokenTypeIdx]})}$t.isStrictPrefixOfPath=G1e;function d1(r){return(0,Af.default)(r,function(e){return(0,Af.default)(e,function(t){return(0,Af.default)(t,function(n){return(0,l1.default)(n.categoryMatches)})})})}$t.areTokenCategoriesNotUsed=d1});var s_=p(ut=>{"use strict";var m1=ut&&ut.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),p1=ut&&ut.__assign||function(){return p1=Object.assign||function(r){for(var e,t=1,n=arguments.length;t<n;t++){e=arguments[t];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(r[i]=e[i])}return r},p1.apply(this,arguments)},bn=ut&&ut.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(ut,"__esModule",{value:!0});ut.checkPrefixAlternativesAmbiguities=ut.validateSomeNonEmptyLookaheadPath=ut.validateTooManyAlts=ut.RepetitionCollector=ut.validateAmbiguousAlternationAlternatives=ut.validateEmptyOrAlternative=ut.getFirstNoneTerminal=ut.validateNoLeftRecursion=ut.validateRuleIsOverridden=ut.validateRuleDoesNotAlreadyExist=ut.OccurrenceValidationCollector=ut.identifyProductionForDuplicates=ut.validateGrammar=ut.validateLookahead=void 0;var kW=bn(uh()),fb=bn(Wi()),K1e=bn(P0()),IW=bn(vs()),H1e=bn(Qv()),V1e=bn(K0()),W1e=bn(H0()),Bu=bn(Tn()),a_=bn(Rn()),z1e=bn(s1()),y1=bn(Yl()),Y1e=bn(CO()),X1e=bn(lo()),h1=bn(zl()),ru=bn(ab()),J1e=bn(Vl()),Ts=Si(),g1=Ur(),hh=yh(),Q1e=n_(),$s=Ur(),v1=Ur(),Z1e=bn(sb()),eke=bn(Jv()),tke=_f();function rke(r){var e=r.lookaheadStrategy.validate({rules:r.rules,tokenTypes:r.tokenTypes,grammarName:r.grammarName});return(0,Bu.default)(e,function(t){return p1({type:Ts.ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION},t)})}ut.validateLookahead=rke;function nke(r,e,t,n){var i=(0,ru.default)(r,function(u){return ike(u,t)}),a=cke(r,e,t),s=(0,ru.default)(r,function(u){return UW(u,t)}),o=(0,ru.default)(r,function(u){return xW(u,r,n,t)});return i.concat(a,s,o)}ut.validateGrammar=nke;function ike(r,e){var t=new qW;r.accept(t);var n=t.allProductions,i=(0,z1e.default)(n,FW),a=(0,Y1e.default)(i,function(o){return o.length>1}),s=(0,Bu.default)((0,X1e.default)(a),function(o){var u=(0,kW.default)(o),c=e.buildDuplicateFoundError(r,o),f=(0,g1.getProductionDslName)(u),d={message:c,type:Ts.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,ruleName:r.name,dslName:f,occurrence:u.idx},m=NW(u);return m&&(d.parameter=m),d});return s}function FW(r){return"".concat((0,g1.getProductionDslName)(r),"_#_").concat(r.idx,"_#_").concat(NW(r))}ut.identifyProductionForDuplicates=FW;function NW(r){return r instanceof $s.Terminal?r.terminalType.name:r instanceof $s.NonTerminal?r.nonTerminalName:""}var qW=function(r){m1(e,r);function e(){var t=r!==null&&r.apply(this,arguments)||this;return t.allProductions=[],t}return e.prototype.visitNonTerminal=function(t){this.allProductions.push(t)},e.prototype.visitOption=function(t){this.allProductions.push(t)},e.prototype.visitRepetitionWithSeparator=function(t){this.allProductions.push(t)},e.prototype.visitRepetitionMandatory=function(t){this.allProductions.push(t)},e.prototype.visitRepetitionMandatoryWithSeparator=function(t){this.allProductions.push(t)},e.prototype.visitRepetition=function(t){this.allProductions.push(t)},e.prototype.visitAlternation=function(t){this.allProductions.push(t)},e.prototype.visitTerminal=function(t){this.allProductions.push(t)},e}(v1.GAstVisitor);ut.OccurrenceValidationCollector=qW;function xW(r,e,t,n){var i=[],a=(0,y1.default)(e,function(o,u){return u.name===r.name?o+1:o},0);if(a>1){var s=n.buildDuplicateRuleNameError({topLevelRule:r,grammarName:t});i.push({message:s,type:Ts.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:r.name})}return i}ut.validateRuleDoesNotAlreadyExist=xW;function ake(r,e,t){var n=[],i;return(0,h1.default)(e,r)||(i="Invalid rule override, rule: ->".concat(r,"<- cannot be overridden in the grammar: ->").concat(t,"<-")+"as it is not defined in any of the super grammars ",n.push({message:i,type:Ts.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,ruleName:r})),n}ut.validateRuleIsOverridden=ake;function LW(r,e,t,n){n===void 0&&(n=[]);var i=[],a=i_(e.definition);if((0,fb.default)(a))return[];var s=r.name,o=(0,h1.default)(a,r);o&&i.push({message:t.buildLeftRecursionError({topLevelRule:r,leftRecursionPath:n}),type:Ts.ParserDefinitionErrorType.LEFT_RECURSION,ruleName:s});var u=(0,W1e.default)(a,n.concat([r])),c=(0,ru.default)(u,function(f){var d=(0,J1e.default)(n);return d.push(f),LW(r,f,t,d)});return i.concat(c)}ut.validateNoLeftRecursion=LW;function i_(r){var e=[];if((0,fb.default)(r))return e;var t=(0,kW.default)(r);if(t instanceof $s.NonTerminal)e.push(t.referencedRule);else if(t instanceof $s.Alternative||t instanceof $s.Option||t instanceof $s.RepetitionMandatory||t instanceof $s.RepetitionMandatoryWithSeparator||t instanceof $s.RepetitionWithSeparator||t instanceof $s.Repetition)e=e.concat(i_(t.definition));else if(t instanceof $s.Alternation)e=(0,IW.default)((0,Bu.default)(t.definition,function(s){return i_(s.definition)}));else if(!(t instanceof $s.Terminal))throw Error("non exhaustive match");var n=(0,g1.isOptionalProd)(t),i=r.length>1;if(n&&i){var a=(0,K1e.default)(r);return e.concat(i_(a))}else return e}ut.getFirstNoneTerminal=i_;var _1=function(r){m1(e,r);function e(){var t=r!==null&&r.apply(this,arguments)||this;return t.alternations=[],t}return e.prototype.visitAlternation=function(t){this.alternations.push(t)},e}(v1.GAstVisitor);function ske(r,e){var t=new _1;r.accept(t);var n=t.alternations,i=(0,ru.default)(n,function(a){var s=(0,Z1e.default)(a.definition);return(0,ru.default)(s,function(o,u){var c=(0,Q1e.nextPossibleTokensAfter)([o],[],tke.tokenStructuredMatcher,1);return(0,fb.default)(c)?[{message:e.buildEmptyAlternationError({topLevelRule:r,alternation:a,emptyChoiceIdx:u}),type:Ts.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,ruleName:r.name,occurrence:a.idx,alternative:u+1}]:[]})});return i}ut.validateEmptyOrAlternative=ske;function oke(r,e,t){var n=new _1;r.accept(n);var i=n.alternations;i=(0,V1e.default)(i,function(s){return s.ignoreAmbiguities===!0});var a=(0,ru.default)(i,function(s){var o=s.idx,u=s.maxLookahead||e,c=(0,hh.getLookaheadPathsForOr)(o,r,u,s),f=uke(c,s,r,t),d=BW(c,s,r,t);return f.concat(d)});return a}ut.validateAmbiguousAlternationAlternatives=oke;var jW=function(r){m1(e,r);function e(){var t=r!==null&&r.apply(this,arguments)||this;return t.allProductions=[],t}return e.prototype.visitRepetitionWithSeparator=function(t){this.allProductions.push(t)},e.prototype.visitRepetitionMandatory=function(t){this.allProductions.push(t)},e.prototype.visitRepetitionMandatoryWithSeparator=function(t){this.allProductions.push(t)},e.prototype.visitRepetition=function(t){this.allProductions.push(t)},e}(v1.GAstVisitor);ut.RepetitionCollector=jW;function UW(r,e){var t=new _1;r.accept(t);var n=t.alternations,i=(0,ru.default)(n,function(a){return a.definition.length>255?[{message:e.buildTooManyAlternativesError({topLevelRule:r,alternation:a}),type:Ts.ParserDefinitionErrorType.TOO_MANY_ALTS,ruleName:r.name,occurrence:a.idx}]:[]});return i}ut.validateTooManyAlts=UW;function lke(r,e,t){var n=[];return(0,a_.default)(r,function(i){var a=new jW;i.accept(a);var s=a.allProductions;(0,a_.default)(s,function(o){var u=(0,hh.getProdType)(o),c=o.maxLookahead||e,f=o.idx,d=(0,hh.getLookaheadPathsForOptionalProd)(f,i,u,c),m=d[0];if((0,fb.default)((0,IW.default)(m))){var h=t.buildEmptyRepetitionError({topLevelRule:i,repetition:o});n.push({message:h,type:Ts.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,ruleName:i.name})}})}),n}ut.validateSomeNonEmptyLookaheadPath=lke;function uke(r,e,t,n){var i=[],a=(0,y1.default)(r,function(o,u,c){return e.definition[c].ignoreAmbiguities===!0||(0,a_.default)(u,function(f){var d=[c];(0,a_.default)(r,function(m,h){c!==h&&(0,hh.containsPath)(m,f)&&e.definition[h].ignoreAmbiguities!==!0&&d.push(h)}),d.length>1&&!(0,hh.containsPath)(i,f)&&(i.push(f),o.push({alts:d,path:f}))}),o},[]),s=(0,Bu.default)(a,function(o){var u=(0,Bu.default)(o.alts,function(f){return f+1}),c=n.buildAlternationAmbiguityError({topLevelRule:t,alternation:e,ambiguityIndices:u,prefixPath:o.path});return{message:c,type:Ts.ParserDefinitionErrorType.AMBIGUOUS_ALTS,ruleName:t.name,occurrence:e.idx,alternatives:o.alts}});return s}function BW(r,e,t,n){var i=(0,y1.default)(r,function(s,o,u){var c=(0,Bu.default)(o,function(f){return{idx:u,path:f}});return s.concat(c)},[]),a=(0,eke.default)((0,ru.default)(i,function(s){var o=e.definition[s.idx];if(o.ignoreAmbiguities===!0)return[];var u=s.idx,c=s.path,f=(0,H1e.default)(i,function(m){return e.definition[m.idx].ignoreAmbiguities!==!0&&m.idx<u&&(0,hh.isStrictPrefixOfPath)(m.path,c)}),d=(0,Bu.default)(f,function(m){var h=[m.idx+1,u+1],y=e.idx===0?"":e.idx,_=n.buildAlternationPrefixAmbiguityError({topLevelRule:t,alternation:e,ambiguityIndices:h,prefixPath:m.path});return{message:_,type:Ts.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,ruleName:t.name,occurrence:y,alternatives:h}});return d}));return a}ut.checkPrefixAlternativesAmbiguities=BW;function cke(r,e,t){var n=[],i=(0,Bu.default)(e,function(a){return a.name});return(0,a_.default)(r,function(a){var s=a.name;if((0,h1.default)(i,s)){var o=t.buildNamespaceConflictError(a);n.push({message:o,type:Ts.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,ruleName:s})}}),n}});var VW=p(Gu=>{"use strict";var GW=Gu&&Gu.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Gu,"__esModule",{value:!0});Gu.validateGrammar=Gu.resolveGrammar=void 0;var fke=GW(Rn()),KW=GW(xO()),dke=cW(),pke=s_(),HW=mh();function mke(r){var e=(0,KW.default)(r,{errMsgProvider:HW.defaultGrammarResolverErrorProvider}),t={};return(0,fke.default)(r.rules,function(n){t[n.name]=n}),(0,dke.resolveGrammar)(t,e.errMsgProvider)}Gu.resolveGrammar=mke;function yke(r){return r=(0,KW.default)(r,{errMsgProvider:HW.defaultGrammarValidatorErrorProvider}),(0,pke.validateGrammar)(r.rules,r.tokenTypes,r.errMsgProvider,r.grammarName)}Gu.validateGrammar=yke});var gh=p(Vn=>{"use strict";var o_=Vn&&Vn.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),hke=Vn&&Vn.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Vn,"__esModule",{value:!0});Vn.EarlyExitException=Vn.NotAllInputParsedException=Vn.NoViableAltException=Vn.MismatchedTokenException=Vn.isRecognitionException=void 0;var gke=hke(zl()),WW="MismatchedTokenException",zW="NoViableAltException",YW="EarlyExitException",XW="NotAllInputParsedException",JW=[WW,zW,YW,XW];Object.freeze(JW);function vke(r){return(0,gke.default)(JW,r.name)}Vn.isRecognitionException=vke;var db=function(r){o_(e,r);function e(t,n){var i=this.constructor,a=r.call(this,t)||this;return a.token=n,a.resyncedTokens=[],Object.setPrototypeOf(a,i.prototype),Error.captureStackTrace&&Error.captureStackTrace(a,a.constructor),a}return e}(Error),_ke=function(r){o_(e,r);function e(t,n,i){var a=r.call(this,t,n)||this;return a.previousToken=i,a.name=WW,a}return e}(db);Vn.MismatchedTokenException=_ke;var $ke=function(r){o_(e,r);function e(t,n,i){var a=r.call(this,t,n)||this;return a.previousToken=i,a.name=zW,a}return e}(db);Vn.NoViableAltException=$ke;var Tke=function(r){o_(e,r);function e(t,n){var i=r.call(this,t,n)||this;return i.name=XW,i}return e}(db);Vn.NotAllInputParsedException=Tke;var Rke=function(r){o_(e,r);function e(t,n,i){var a=r.call(this,t,n)||this;return a.previousToken=i,a.name=YW,a}return e}(db);Vn.EarlyExitException=Rke});var T1=p(en=>{"use strict";var bke=en&&en.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),Ku=en&&en.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(en,"__esModule",{value:!0});en.attemptInRepetitionRecovery=en.Recoverable=en.InRuleRecoveryException=en.IN_RULE_RECOVERY_EXCEPTION=en.EOF_FOLLOW_KEY=void 0;var l_=$f(),Cke=Ku(Wi()),QW=Ku(sb()),Ake=Ku(vs()),$1=Ku(Tn()),ZW=Ku(V0()),wke=Ku(Yi()),Dke=Ku(zl()),Ske=Ku(Vl()),Mke=gh(),Pke=NO(),Eke=Si();en.EOF_FOLLOW_KEY={};en.IN_RULE_RECOVERY_EXCEPTION="InRuleRecoveryException";var e9=function(r){bke(e,r);function e(t){var n=r.call(this,t)||this;return n.name=en.IN_RULE_RECOVERY_EXCEPTION,n}return e}(Error);en.InRuleRecoveryException=e9;var Oke=function(){function r(){}return r.prototype.initRecoverable=function(e){this.firstAfterRepMap={},this.resyncFollows={},this.recoveryEnabled=(0,wke.default)(e,"recoveryEnabled")?e.recoveryEnabled:Eke.DEFAULT_PARSER_CONFIG.recoveryEnabled,this.recoveryEnabled&&(this.attemptInRepetitionRecovery=t9)},r.prototype.getTokenToInsert=function(e){var t=(0,l_.createTokenInstance)(e,"",NaN,NaN,NaN,NaN,NaN,NaN);return t.isInsertedInRecovery=!0,t},r.prototype.canTokenTypeBeInsertedInRecovery=function(e){return!0},r.prototype.canTokenTypeBeDeletedInRecovery=function(e){return!0},r.prototype.tryInRepetitionRecovery=function(e,t,n,i){for(var a=this,s=this.findReSyncTokenType(),o=this.exportLexerState(),u=[],c=!1,f=this.LA(1),d=this.LA(1),m=function(){var h=a.LA(0),y=a.errorMessageProvider.buildMismatchTokenMessage({expected:i,actual:f,previous:h,ruleName:a.getCurrRuleFullName()}),_=new Mke.MismatchedTokenException(y,f,a.LA(0));_.resyncedTokens=(0,QW.default)(u),a.SAVE_ERROR(_)};!c;)if(this.tokenMatcher(d,i)){m();return}else if(n.call(this)){m(),e.apply(this,t);return}else this.tokenMatcher(d,s)?c=!0:(d=this.SKIP_TOKEN(),this.addToResyncTokens(d,u));this.importLexerState(o)},r.prototype.shouldInRepetitionRecoveryBeTried=function(e,t,n){return!(n===!1||this.tokenMatcher(this.LA(1),e)||this.isBackTracking()||this.canPerformInRuleRecovery(e,this.getFollowsForInRuleRecovery(e,t)))},r.prototype.getFollowsForInRuleRecovery=function(e,t){var n=this.getCurrentGrammarPath(e,t),i=this.getNextPossibleTokenTypes(n);return i},r.prototype.tryInRuleRecovery=function(e,t){if(this.canRecoverWithSingleTokenInsertion(e,t)){var n=this.getTokenToInsert(e);return n}if(this.canRecoverWithSingleTokenDeletion(e)){var i=this.SKIP_TOKEN();return this.consumeToken(),i}throw new e9("sad sad panda")},r.prototype.canPerformInRuleRecovery=function(e,t){return this.canRecoverWithSingleTokenInsertion(e,t)||this.canRecoverWithSingleTokenDeletion(e)},r.prototype.canRecoverWithSingleTokenInsertion=function(e,t){var n=this;if(!this.canTokenTypeBeInsertedInRecovery(e)||(0,Cke.default)(t))return!1;var i=this.LA(1),a=(0,ZW.default)(t,function(s){return n.tokenMatcher(i,s)})!==void 0;return a},r.prototype.canRecoverWithSingleTokenDeletion=function(e){if(!this.canTokenTypeBeDeletedInRecovery(e))return!1;var t=this.tokenMatcher(this.LA(2),e);return t},r.prototype.isInCurrentRuleReSyncSet=function(e){var t=this.getCurrFollowKey(),n=this.getFollowSetFromFollowKey(t);return(0,Dke.default)(n,e)},r.prototype.findReSyncTokenType=function(){for(var e=this.flattenFollowSet(),t=this.LA(1),n=2;;){var i=(0,ZW.default)(e,function(a){var s=(0,l_.tokenMatcher)(t,a);return s});if(i!==void 0)return i;t=this.LA(n),n++}},r.prototype.getCurrFollowKey=function(){if(this.RULE_STACK.length===1)return en.EOF_FOLLOW_KEY;var e=this.getLastExplicitRuleShortName(),t=this.getLastExplicitRuleOccurrenceIndex(),n=this.getPreviousExplicitRuleShortName();return{ruleName:this.shortRuleNameToFullName(e),idxInCallingRule:t,inRule:this.shortRuleNameToFullName(n)}},r.prototype.buildFullFollowKeyStack=function(){var e=this,t=this.RULE_STACK,n=this.RULE_OCCURRENCE_STACK;return(0,$1.default)(t,function(i,a){return a===0?en.EOF_FOLLOW_KEY:{ruleName:e.shortRuleNameToFullName(i),idxInCallingRule:n[a],inRule:e.shortRuleNameToFullName(t[a-1])}})},r.prototype.flattenFollowSet=function(){var e=this,t=(0,$1.default)(this.buildFullFollowKeyStack(),function(n){return e.getFollowSetFromFollowKey(n)});return(0,Ake.default)(t)},r.prototype.getFollowSetFromFollowKey=function(e){if(e===en.EOF_FOLLOW_KEY)return[l_.EOF];var t=e.ruleName+e.idxInCallingRule+Pke.IN+e.inRule;return this.resyncFollows[t]},r.prototype.addToResyncTokens=function(e,t){return this.tokenMatcher(e,l_.EOF)||t.push(e),t},r.prototype.reSyncTo=function(e){for(var t=[],n=this.LA(1);this.tokenMatcher(n,e)===!1;)n=this.SKIP_TOKEN(),this.addToResyncTokens(n,t);return(0,QW.default)(t)},r.prototype.attemptInRepetitionRecovery=function(e,t,n,i,a,s,o){},r.prototype.getCurrentGrammarPath=function(e,t){var n=this.getHumanReadableRuleStack(),i=(0,Ske.default)(this.RULE_OCCURRENCE_STACK),a={ruleStack:n,occurrenceStack:i,lastTok:e,lastTokOccurrence:t};return a},r.prototype.getHumanReadableRuleStack=function(){var e=this;return(0,$1.default)(this.RULE_STACK,function(t){return e.shortRuleNameToFullName(t)})},r}();en.Recoverable=Oke;function t9(r,e,t,n,i,a,s){var o=this.getKeyForAutomaticLookahead(n,i),u=this.firstAfterRepMap[o];if(u===void 0){var c=this.getCurrRuleFullName(),f=this.getGAstProductions()[c],d=new a(f,i);u=d.startWalking(),this.firstAfterRepMap[o]=u}var m=u.token,h=u.occurrence,y=u.isEndOfRule;this.RULE_STACK.length===1&&y&&m===void 0&&(m=l_.EOF,h=1),!(m===void 0||h===void 0)&&this.shouldInRepetitionRecoveryBeTried(m,h,s)&&this.tryInRepetitionRecovery(r,e,t,m)}en.attemptInRepetitionRecovery=t9});var pb=p(Et=>{"use strict";Object.defineProperty(Et,"__esModule",{value:!0});Et.getKeyForAutomaticLookahead=Et.AT_LEAST_ONE_SEP_IDX=Et.MANY_SEP_IDX=Et.AT_LEAST_ONE_IDX=Et.MANY_IDX=Et.OPTION_IDX=Et.OR_IDX=Et.BITS_FOR_ALT_IDX=Et.BITS_FOR_RULE_IDX=Et.BITS_FOR_OCCURRENCE_IDX=Et.BITS_FOR_METHOD_TYPE=void 0;Et.BITS_FOR_METHOD_TYPE=4;Et.BITS_FOR_OCCURRENCE_IDX=8;Et.BITS_FOR_RULE_IDX=12;Et.BITS_FOR_ALT_IDX=8;Et.OR_IDX=1<<Et.BITS_FOR_OCCURRENCE_IDX;Et.OPTION_IDX=2<<Et.BITS_FOR_OCCURRENCE_IDX;Et.MANY_IDX=3<<Et.BITS_FOR_OCCURRENCE_IDX;Et.AT_LEAST_ONE_IDX=4<<Et.BITS_FOR_OCCURRENCE_IDX;Et.MANY_SEP_IDX=5<<Et.BITS_FOR_OCCURRENCE_IDX;Et.AT_LEAST_ONE_SEP_IDX=6<<Et.BITS_FOR_OCCURRENCE_IDX;function kke(r,e,t){return t|e|r}Et.getKeyForAutomaticLookahead=kke;var lft=32-Et.BITS_FOR_ALT_IDX});var b1=p(Hu=>{"use strict";var mb=Hu&&Hu.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var n=0,i=e.length,a;n<i;n++)(a||!(n in e))&&(a||(a=Array.prototype.slice.call(e,0,n)),a[n]=e[n]);return r.concat(a||Array.prototype.slice.call(e))},r9=Hu&&Hu.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Hu,"__esModule",{value:!0});Hu.LLkLookaheadStrategy=void 0;var R1=r9(ab()),Ike=r9(Wi()),yb=mh(),Fke=Si(),hb=s_(),u_=yh(),Nke=function(){function r(e){var t;this.maxLookahead=(t=e?.maxLookahead)!==null&&t!==void 0?t:Fke.DEFAULT_PARSER_CONFIG.maxLookahead}return r.prototype.validate=function(e){var t=this.validateNoLeftRecursion(e.rules);if((0,Ike.default)(t)){var n=this.validateEmptyOrAlternatives(e.rules),i=this.validateAmbiguousAlternationAlternatives(e.rules,this.maxLookahead),a=this.validateSomeNonEmptyLookaheadPath(e.rules,this.maxLookahead),s=mb(mb(mb(mb([],t,!0),n,!0),i,!0),a,!0);return s}return t},r.prototype.validateNoLeftRecursion=function(e){return(0,R1.default)(e,function(t){return(0,hb.validateNoLeftRecursion)(t,t,yb.defaultGrammarValidatorErrorProvider)})},r.prototype.validateEmptyOrAlternatives=function(e){return(0,R1.default)(e,function(t){return(0,hb.validateEmptyOrAlternative)(t,yb.defaultGrammarValidatorErrorProvider)})},r.prototype.validateAmbiguousAlternationAlternatives=function(e,t){return(0,R1.default)(e,function(n){return(0,hb.validateAmbiguousAlternationAlternatives)(n,t,yb.defaultGrammarValidatorErrorProvider)})},r.prototype.validateSomeNonEmptyLookaheadPath=function(e,t){return(0,hb.validateSomeNonEmptyLookaheadPath)(e,t,yb.defaultGrammarValidatorErrorProvider)},r.prototype.buildLookaheadForAlternation=function(e){return(0,u_.buildLookaheadFuncForOr)(e.prodOccurrence,e.rule,e.maxLookahead,e.hasPredicates,e.dynamicTokensEnabled,u_.buildAlternativesLookAheadFunc)},r.prototype.buildLookaheadForOptional=function(e){return(0,u_.buildLookaheadFuncForOptionalProd)(e.prodOccurrence,e.rule,e.maxLookahead,e.dynamicTokensEnabled,(0,u_.getProdType)(e.prodType),u_.buildSingleAlternativeLookaheadFunction)},r}();Hu.LLkLookaheadStrategy=Nke});var s9=p(vo=>{"use strict";var qke=vo&&vo.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),i9=vo&&vo.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(vo,"__esModule",{value:!0});vo.collectMethods=vo.LooksAhead=void 0;var Df=i9(Rn()),C1=i9(Yi()),n9=Si(),nu=pb(),xke=Ur(),vh=Ur(),Lke=b1(),jke=function(){function r(){}return r.prototype.initLooksAhead=function(e){this.dynamicTokensEnabled=(0,C1.default)(e,"dynamicTokensEnabled")?e.dynamicTokensEnabled:n9.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled,this.maxLookahead=(0,C1.default)(e,"maxLookahead")?e.maxLookahead:n9.DEFAULT_PARSER_CONFIG.maxLookahead,this.lookaheadStrategy=(0,C1.default)(e,"lookaheadStrategy")?e.lookaheadStrategy:new Lke.LLkLookaheadStrategy({maxLookahead:this.maxLookahead}),this.lookAheadFuncsCache=new Map},r.prototype.preComputeLookaheadFunctions=function(e){var t=this;(0,Df.default)(e,function(n){t.TRACE_INIT("".concat(n.name," Rule Lookahead"),function(){var i=a9(n),a=i.alternation,s=i.repetition,o=i.option,u=i.repetitionMandatory,c=i.repetitionMandatoryWithSeparator,f=i.repetitionWithSeparator;(0,Df.default)(a,function(d){var m=d.idx===0?"":d.idx;t.TRACE_INIT("".concat((0,vh.getProductionDslName)(d)).concat(m),function(){var h=t.lookaheadStrategy.buildLookaheadForAlternation({prodOccurrence:d.idx,rule:n,maxLookahead:d.maxLookahead||t.maxLookahead,hasPredicates:d.hasPredicates,dynamicTokensEnabled:t.dynamicTokensEnabled}),y=(0,nu.getKeyForAutomaticLookahead)(t.fullRuleNameToShort[n.name],nu.OR_IDX,d.idx);t.setLaFuncCache(y,h)})}),(0,Df.default)(s,function(d){t.computeLookaheadFunc(n,d.idx,nu.MANY_IDX,"Repetition",d.maxLookahead,(0,vh.getProductionDslName)(d))}),(0,Df.default)(o,function(d){t.computeLookaheadFunc(n,d.idx,nu.OPTION_IDX,"Option",d.maxLookahead,(0,vh.getProductionDslName)(d))}),(0,Df.default)(u,function(d){t.computeLookaheadFunc(n,d.idx,nu.AT_LEAST_ONE_IDX,"RepetitionMandatory",d.maxLookahead,(0,vh.getProductionDslName)(d))}),(0,Df.default)(c,function(d){t.computeLookaheadFunc(n,d.idx,nu.AT_LEAST_ONE_SEP_IDX,"RepetitionMandatoryWithSeparator",d.maxLookahead,(0,vh.getProductionDslName)(d))}),(0,Df.default)(f,function(d){t.computeLookaheadFunc(n,d.idx,nu.MANY_SEP_IDX,"RepetitionWithSeparator",d.maxLookahead,(0,vh.getProductionDslName)(d))})})})},r.prototype.computeLookaheadFunc=function(e,t,n,i,a,s){var o=this;this.TRACE_INIT("".concat(s).concat(t===0?"":t),function(){var u=o.lookaheadStrategy.buildLookaheadForOptional({prodOccurrence:t,rule:e,maxLookahead:a||o.maxLookahead,dynamicTokensEnabled:o.dynamicTokensEnabled,prodType:i}),c=(0,nu.getKeyForAutomaticLookahead)(o.fullRuleNameToShort[e.name],n,t);o.setLaFuncCache(c,u)})},r.prototype.getKeyForAutomaticLookahead=function(e,t){var n=this.getLastExplicitRuleShortName();return(0,nu.getKeyForAutomaticLookahead)(n,e,t)},r.prototype.getLaFuncFromCache=function(e){return this.lookAheadFuncsCache.get(e)},r.prototype.setLaFuncCache=function(e,t){this.lookAheadFuncsCache.set(e,t)},r}();vo.LooksAhead=jke;var Uke=function(r){qke(e,r);function e(){var t=r!==null&&r.apply(this,arguments)||this;return t.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]},t}return e.prototype.reset=function(){this.dslMethods={option:[],alternation:[],repetition:[],repetitionWithSeparator:[],repetitionMandatory:[],repetitionMandatoryWithSeparator:[]}},e.prototype.visitOption=function(t){this.dslMethods.option.push(t)},e.prototype.visitRepetitionWithSeparator=function(t){this.dslMethods.repetitionWithSeparator.push(t)},e.prototype.visitRepetitionMandatory=function(t){this.dslMethods.repetitionMandatory.push(t)},e.prototype.visitRepetitionMandatoryWithSeparator=function(t){this.dslMethods.repetitionMandatoryWithSeparator.push(t)},e.prototype.visitRepetition=function(t){this.dslMethods.repetition.push(t)},e.prototype.visitAlternation=function(t){this.dslMethods.alternation.push(t)},e}(xke.GAstVisitor),gb=new Uke;function a9(r){gb.reset(),r.accept(gb);var e=gb.dslMethods;return gb.reset(),e}vo.collectMethods=a9});var o9=p(_o=>{"use strict";Object.defineProperty(_o,"__esModule",{value:!0});_o.addNoneTerminalToCst=_o.addTerminalToCst=_o.setNodeLocationFull=_o.setNodeLocationOnlyOffset=void 0;function Bke(r,e){isNaN(r.startOffset)===!0?(r.startOffset=e.startOffset,r.endOffset=e.endOffset):r.endOffset<e.endOffset&&(r.endOffset=e.endOffset)}_o.setNodeLocationOnlyOffset=Bke;function Gke(r,e){isNaN(r.startOffset)===!0?(r.startOffset=e.startOffset,r.startColumn=e.startColumn,r.startLine=e.startLine,r.endOffset=e.endOffset,r.endColumn=e.endColumn,r.endLine=e.endLine):r.endOffset<e.endOffset&&(r.endOffset=e.endOffset,r.endColumn=e.endColumn,r.endLine=e.endLine)}_o.setNodeLocationFull=Gke;function Kke(r,e,t){r.children[t]===void 0?r.children[t]=[e]:r.children[t].push(e)}_o.addTerminalToCst=Kke;function Hke(r,e,t){r.children[e]===void 0?r.children[e]=[t]:r.children[e].push(t)}_o.addNoneTerminalToCst=Hke});var l9=p(vb=>{"use strict";Object.defineProperty(vb,"__esModule",{value:!0});vb.defineNameProp=void 0;var Vke="name";function Wke(r,e){Object.defineProperty(r,Vke,{enumerable:!1,configurable:!0,writable:!1,value:e})}vb.defineNameProp=Wke});var y9=p(kn=>{"use strict";var iu=kn&&kn.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(kn,"__esModule",{value:!0});kn.validateMissingCstMethods=kn.validateVisitor=kn.CstVisitorDefinitionError=kn.createBaseVisitorConstructorWithDefaults=kn.createBaseSemanticVisitorConstructor=kn.defaultVisit=void 0;var zke=iu(Wi()),Yke=iu(Jv()),Xke=iu(jt()),u9=iu(Tn()),Jke=iu(Rn()),Qke=iu(Qv()),Zke=iu(zi()),eIe=iu(By()),tIe=iu(hf()),c9=l9();function f9(r,e){for(var t=(0,Zke.default)(r),n=t.length,i=0;i<n;i++)for(var a=t[i],s=r[a],o=s.length,u=0;u<o;u++){var c=s[u];c.tokenTypeIdx===void 0&&this[c.name](c.children,e)}}kn.defaultVisit=f9;function rIe(r,e){var t=function(){};(0,c9.defineNameProp)(t,r+"BaseSemantics");var n={visit:function(i,a){if((0,Xke.default)(i)&&(i=i[0]),!(0,tIe.default)(i))return this[i.name](i.children,a)},validateVisitor:function(){var i=p9(this,e);if(!(0,zke.default)(i)){var a=(0,u9.default)(i,function(s){return s.msg});throw Error("Errors Detected in CST Visitor <".concat(this.constructor.name,`>:
	`)+"".concat(a.join(`

`).replace(/\n/g,`
	`)))}}};return t.prototype=n,t.prototype.constructor=t,t._RULE_NAMES=e,t}kn.createBaseSemanticVisitorConstructor=rIe;function nIe(r,e,t){var n=function(){};(0,c9.defineNameProp)(n,r+"BaseSemanticsWithDefaults");var i=Object.create(t.prototype);return(0,Jke.default)(e,function(a){i[a]=f9}),n.prototype=i,n.prototype.constructor=n,n}kn.createBaseVisitorConstructorWithDefaults=nIe;var d9;(function(r){r[r.REDUNDANT_METHOD=0]="REDUNDANT_METHOD",r[r.MISSING_METHOD=1]="MISSING_METHOD"})(d9=kn.CstVisitorDefinitionError||(kn.CstVisitorDefinitionError={}));function p9(r,e){var t=m9(r,e);return t}kn.validateVisitor=p9;function m9(r,e){var t=(0,Qke.default)(e,function(i){return(0,eIe.default)(r[i])===!1}),n=(0,u9.default)(t,function(i){return{msg:"Missing visitor method: <".concat(i,"> on ").concat(r.constructor.name," CST Visitor."),type:d9.MISSING_METHOD,methodName:i}});return(0,Yke.default)(n)}kn.validateMissingCstMethods=m9});var _9=p($h=>{"use strict";var _b=$h&&$h.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty($h,"__esModule",{value:!0});$h.TreeBuilder=void 0;var _h=o9(),yi=_b(j0()),iIe=_b(Yi()),h9=_b(zi()),g9=_b(hf()),v9=y9(),aIe=Si(),sIe=function(){function r(){}return r.prototype.initTreeBuilder=function(e){if(this.CST_STACK=[],this.outputCst=e.outputCst,this.nodeLocationTracking=(0,iIe.default)(e,"nodeLocationTracking")?e.nodeLocationTracking:aIe.DEFAULT_PARSER_CONFIG.nodeLocationTracking,!this.outputCst)this.cstInvocationStateUpdate=yi.default,this.cstFinallyStateUpdate=yi.default,this.cstPostTerminal=yi.default,this.cstPostNonTerminal=yi.default,this.cstPostRule=yi.default;else if(/full/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=_h.setNodeLocationFull,this.setNodeLocationFromNode=_h.setNodeLocationFull,this.cstPostRule=yi.default,this.setInitialNodeLocation=this.setInitialNodeLocationFullRecovery):(this.setNodeLocationFromToken=yi.default,this.setNodeLocationFromNode=yi.default,this.cstPostRule=this.cstPostRuleFull,this.setInitialNodeLocation=this.setInitialNodeLocationFullRegular);else if(/onlyOffset/i.test(this.nodeLocationTracking))this.recoveryEnabled?(this.setNodeLocationFromToken=_h.setNodeLocationOnlyOffset,this.setNodeLocationFromNode=_h.setNodeLocationOnlyOffset,this.cstPostRule=yi.default,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRecovery):(this.setNodeLocationFromToken=yi.default,this.setNodeLocationFromNode=yi.default,this.cstPostRule=this.cstPostRuleOnlyOffset,this.setInitialNodeLocation=this.setInitialNodeLocationOnlyOffsetRegular);else if(/none/i.test(this.nodeLocationTracking))this.setNodeLocationFromToken=yi.default,this.setNodeLocationFromNode=yi.default,this.cstPostRule=yi.default,this.setInitialNodeLocation=yi.default;else throw Error('Invalid <nodeLocationTracking> config option: "'.concat(e.nodeLocationTracking,'"'))},r.prototype.setInitialNodeLocationOnlyOffsetRecovery=function(e){e.location={startOffset:NaN,endOffset:NaN}},r.prototype.setInitialNodeLocationOnlyOffsetRegular=function(e){e.location={startOffset:this.LA(1).startOffset,endOffset:NaN}},r.prototype.setInitialNodeLocationFullRecovery=function(e){e.location={startOffset:NaN,startLine:NaN,startColumn:NaN,endOffset:NaN,endLine:NaN,endColumn:NaN}},r.prototype.setInitialNodeLocationFullRegular=function(e){var t=this.LA(1);e.location={startOffset:t.startOffset,startLine:t.startLine,startColumn:t.startColumn,endOffset:NaN,endLine:NaN,endColumn:NaN}},r.prototype.cstInvocationStateUpdate=function(e){var t={name:e,children:Object.create(null)};this.setInitialNodeLocation(t),this.CST_STACK.push(t)},r.prototype.cstFinallyStateUpdate=function(){this.CST_STACK.pop()},r.prototype.cstPostRuleFull=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset?(n.endOffset=t.endOffset,n.endLine=t.endLine,n.endColumn=t.endColumn):(n.startOffset=NaN,n.startLine=NaN,n.startColumn=NaN)},r.prototype.cstPostRuleOnlyOffset=function(e){var t=this.LA(0),n=e.location;n.startOffset<=t.startOffset?n.endOffset=t.endOffset:n.startOffset=NaN},r.prototype.cstPostTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,_h.addTerminalToCst)(n,t,e),this.setNodeLocationFromToken(n.location,t)},r.prototype.cstPostNonTerminal=function(e,t){var n=this.CST_STACK[this.CST_STACK.length-1];(0,_h.addNoneTerminalToCst)(n,t,e),this.setNodeLocationFromNode(n.location,e.location)},r.prototype.getBaseCstVisitorConstructor=function(){if((0,g9.default)(this.baseCstVisitorConstructor)){var e=(0,v9.createBaseSemanticVisitorConstructor)(this.className,(0,h9.default)(this.gastProductionsCache));return this.baseCstVisitorConstructor=e,e}return this.baseCstVisitorConstructor},r.prototype.getBaseCstVisitorConstructorWithDefaults=function(){if((0,g9.default)(this.baseCstVisitorWithDefaultsConstructor)){var e=(0,v9.createBaseVisitorConstructorWithDefaults)(this.className,(0,h9.default)(this.gastProductionsCache),this.getBaseCstVisitorConstructor());return this.baseCstVisitorWithDefaultsConstructor=e,e}return this.baseCstVisitorWithDefaultsConstructor},r.prototype.getLastExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-1]},r.prototype.getPreviousExplicitRuleShortName=function(){var e=this.RULE_STACK;return e[e.length-2]},r.prototype.getLastExplicitRuleOccurrenceIndex=function(){var e=this.RULE_OCCURRENCE_STACK;return e[e.length-1]},r}();$h.TreeBuilder=sIe});var T9=p($b=>{"use strict";Object.defineProperty($b,"__esModule",{value:!0});$b.LexerAdapter=void 0;var $9=Si(),oIe=function(){function r(){}return r.prototype.initLexerAdapter=function(){this.tokVector=[],this.tokVectorLength=0,this.currIdx=-1},Object.defineProperty(r.prototype,"input",{get:function(){return this.tokVector},set:function(e){if(this.selfAnalysisDone!==!0)throw Error("Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.");this.reset(),this.tokVector=e,this.tokVectorLength=e.length},enumerable:!1,configurable:!0}),r.prototype.SKIP_TOKEN=function(){return this.currIdx<=this.tokVector.length-2?(this.consumeToken(),this.LA(1)):$9.END_OF_FILE},r.prototype.LA=function(e){var t=this.currIdx+e;return t<0||this.tokVectorLength<=t?$9.END_OF_FILE:this.tokVector[t]},r.prototype.consumeToken=function(){this.currIdx++},r.prototype.exportLexerState=function(){return this.currIdx},r.prototype.importLexerState=function(e){this.currIdx=e},r.prototype.resetLexerState=function(){this.currIdx=-1},r.prototype.moveToTerminatedState=function(){this.currIdx=this.tokVector.length-1},r.prototype.getLexerPosition=function(){return this.exportLexerState()},r}();$b.LexerAdapter=oIe});var b9=p(Th=>{"use strict";var R9=Th&&Th.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Th,"__esModule",{value:!0});Th.RecognizerApi=void 0;var lIe=R9(lo()),uIe=R9(zl()),cIe=gh(),A1=Si(),fIe=mh(),dIe=s_(),pIe=Ur(),mIe=function(){function r(){}return r.prototype.ACTION=function(e){return e.call(this)},r.prototype.consume=function(e,t,n){return this.consumeInternal(t,e,n)},r.prototype.subrule=function(e,t,n){return this.subruleInternal(t,e,n)},r.prototype.option=function(e,t){return this.optionInternal(t,e)},r.prototype.or=function(e,t){return this.orInternal(t,e)},r.prototype.many=function(e,t){return this.manyInternal(e,t)},r.prototype.atLeastOne=function(e,t){return this.atLeastOneInternal(e,t)},r.prototype.CONSUME=function(e,t){return this.consumeInternal(e,0,t)},r.prototype.CONSUME1=function(e,t){return this.consumeInternal(e,1,t)},r.prototype.CONSUME2=function(e,t){return this.consumeInternal(e,2,t)},r.prototype.CONSUME3=function(e,t){return this.consumeInternal(e,3,t)},r.prototype.CONSUME4=function(e,t){return this.consumeInternal(e,4,t)},r.prototype.CONSUME5=function(e,t){return this.consumeInternal(e,5,t)},r.prototype.CONSUME6=function(e,t){return this.consumeInternal(e,6,t)},r.prototype.CONSUME7=function(e,t){return this.consumeInternal(e,7,t)},r.prototype.CONSUME8=function(e,t){return this.consumeInternal(e,8,t)},r.prototype.CONSUME9=function(e,t){return this.consumeInternal(e,9,t)},r.prototype.SUBRULE=function(e,t){return this.subruleInternal(e,0,t)},r.prototype.SUBRULE1=function(e,t){return this.subruleInternal(e,1,t)},r.prototype.SUBRULE2=function(e,t){return this.subruleInternal(e,2,t)},r.prototype.SUBRULE3=function(e,t){return this.subruleInternal(e,3,t)},r.prototype.SUBRULE4=function(e,t){return this.subruleInternal(e,4,t)},r.prototype.SUBRULE5=function(e,t){return this.subruleInternal(e,5,t)},r.prototype.SUBRULE6=function(e,t){return this.subruleInternal(e,6,t)},r.prototype.SUBRULE7=function(e,t){return this.subruleInternal(e,7,t)},r.prototype.SUBRULE8=function(e,t){return this.subruleInternal(e,8,t)},r.prototype.SUBRULE9=function(e,t){return this.subruleInternal(e,9,t)},r.prototype.OPTION=function(e){return this.optionInternal(e,0)},r.prototype.OPTION1=function(e){return this.optionInternal(e,1)},r.prototype.OPTION2=function(e){return this.optionInternal(e,2)},r.prototype.OPTION3=function(e){return this.optionInternal(e,3)},r.prototype.OPTION4=function(e){return this.optionInternal(e,4)},r.prototype.OPTION5=function(e){return this.optionInternal(e,5)},r.prototype.OPTION6=function(e){return this.optionInternal(e,6)},r.prototype.OPTION7=function(e){return this.optionInternal(e,7)},r.prototype.OPTION8=function(e){return this.optionInternal(e,8)},r.prototype.OPTION9=function(e){return this.optionInternal(e,9)},r.prototype.OR=function(e){return this.orInternal(e,0)},r.prototype.OR1=function(e){return this.orInternal(e,1)},r.prototype.OR2=function(e){return this.orInternal(e,2)},r.prototype.OR3=function(e){return this.orInternal(e,3)},r.prototype.OR4=function(e){return this.orInternal(e,4)},r.prototype.OR5=function(e){return this.orInternal(e,5)},r.prototype.OR6=function(e){return this.orInternal(e,6)},r.prototype.OR7=function(e){return this.orInternal(e,7)},r.prototype.OR8=function(e){return this.orInternal(e,8)},r.prototype.OR9=function(e){return this.orInternal(e,9)},r.prototype.MANY=function(e){this.manyInternal(0,e)},r.prototype.MANY1=function(e){this.manyInternal(1,e)},r.prototype.MANY2=function(e){this.manyInternal(2,e)},r.prototype.MANY3=function(e){this.manyInternal(3,e)},r.prototype.MANY4=function(e){this.manyInternal(4,e)},r.prototype.MANY5=function(e){this.manyInternal(5,e)},r.prototype.MANY6=function(e){this.manyInternal(6,e)},r.prototype.MANY7=function(e){this.manyInternal(7,e)},r.prototype.MANY8=function(e){this.manyInternal(8,e)},r.prototype.MANY9=function(e){this.manyInternal(9,e)},r.prototype.MANY_SEP=function(e){this.manySepFirstInternal(0,e)},r.prototype.MANY_SEP1=function(e){this.manySepFirstInternal(1,e)},r.prototype.MANY_SEP2=function(e){this.manySepFirstInternal(2,e)},r.prototype.MANY_SEP3=function(e){this.manySepFirstInternal(3,e)},r.prototype.MANY_SEP4=function(e){this.manySepFirstInternal(4,e)},r.prototype.MANY_SEP5=function(e){this.manySepFirstInternal(5,e)},r.prototype.MANY_SEP6=function(e){this.manySepFirstInternal(6,e)},r.prototype.MANY_SEP7=function(e){this.manySepFirstInternal(7,e)},r.prototype.MANY_SEP8=function(e){this.manySepFirstInternal(8,e)},r.prototype.MANY_SEP9=function(e){this.manySepFirstInternal(9,e)},r.prototype.AT_LEAST_ONE=function(e){this.atLeastOneInternal(0,e)},r.prototype.AT_LEAST_ONE1=function(e){return this.atLeastOneInternal(1,e)},r.prototype.AT_LEAST_ONE2=function(e){this.atLeastOneInternal(2,e)},r.prototype.AT_LEAST_ONE3=function(e){this.atLeastOneInternal(3,e)},r.prototype.AT_LEAST_ONE4=function(e){this.atLeastOneInternal(4,e)},r.prototype.AT_LEAST_ONE5=function(e){this.atLeastOneInternal(5,e)},r.prototype.AT_LEAST_ONE6=function(e){this.atLeastOneInternal(6,e)},r.prototype.AT_LEAST_ONE7=function(e){this.atLeastOneInternal(7,e)},r.prototype.AT_LEAST_ONE8=function(e){this.atLeastOneInternal(8,e)},r.prototype.AT_LEAST_ONE9=function(e){this.atLeastOneInternal(9,e)},r.prototype.AT_LEAST_ONE_SEP=function(e){this.atLeastOneSepFirstInternal(0,e)},r.prototype.AT_LEAST_ONE_SEP1=function(e){this.atLeastOneSepFirstInternal(1,e)},r.prototype.AT_LEAST_ONE_SEP2=function(e){this.atLeastOneSepFirstInternal(2,e)},r.prototype.AT_LEAST_ONE_SEP3=function(e){this.atLeastOneSepFirstInternal(3,e)},r.prototype.AT_LEAST_ONE_SEP4=function(e){this.atLeastOneSepFirstInternal(4,e)},r.prototype.AT_LEAST_ONE_SEP5=function(e){this.atLeastOneSepFirstInternal(5,e)},r.prototype.AT_LEAST_ONE_SEP6=function(e){this.atLeastOneSepFirstInternal(6,e)},r.prototype.AT_LEAST_ONE_SEP7=function(e){this.atLeastOneSepFirstInternal(7,e)},r.prototype.AT_LEAST_ONE_SEP8=function(e){this.atLeastOneSepFirstInternal(8,e)},r.prototype.AT_LEAST_ONE_SEP9=function(e){this.atLeastOneSepFirstInternal(9,e)},r.prototype.RULE=function(e,t,n){if(n===void 0&&(n=A1.DEFAULT_RULE_CONFIG),(0,uIe.default)(this.definedRulesNames,e)){var i=fIe.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({topLevelRule:e,grammarName:this.className}),a={message:i,type:A1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,ruleName:e};this.definitionErrors.push(a)}this.definedRulesNames.push(e);var s=this.defineRule(e,t,n);return this[e]=s,s},r.prototype.OVERRIDE_RULE=function(e,t,n){n===void 0&&(n=A1.DEFAULT_RULE_CONFIG);var i=(0,dIe.validateRuleIsOverridden)(e,this.definedRulesNames,this.className);this.definitionErrors=this.definitionErrors.concat(i);var a=this.defineRule(e,t,n);return this[e]=a,a},r.prototype.BACKTRACK=function(e,t){return function(){this.isBackTrackingStack.push(1);var n=this.saveRecogState();try{return e.apply(this,t),!0}catch(i){if((0,cIe.isRecognitionException)(i))return!1;throw i}finally{this.reloadRecogState(n),this.isBackTrackingStack.pop()}}},r.prototype.getGAstProductions=function(){return this.gastProductionsCache},r.prototype.getSerializedGastProductions=function(){return(0,pIe.serializeGrammar)((0,lIe.default)(this.gastProductionsCache))},r}();Th.RecognizerApi=mIe});var E9=p(bh=>{"use strict";var $o=bh&&bh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(bh,"__esModule",{value:!0});bh.RecognizerEngine=void 0;var C9=$o(Wi()),w1=$o(jt()),D1=$o(vs()),A9=$o(Xv()),yIe=$o(U0()),hIe=$o(ys()),c_=$o(Yi()),f_=$o(lo()),w9=$o(Yl()),D9=$o(Vl()),Ji=pb(),Tb=gh(),S9=yh(),Rh=n_(),M9=Si(),gIe=T1(),P9=$f(),d_=_f(),vIe=function(){function r(){}return r.prototype.initRecognizerEngine=function(e,t){if(this.className=this.constructor.name,this.shortRuleNameToFull={},this.fullRuleNameToShort={},this.ruleShortNameIdx=256,this.tokenMatcher=d_.tokenStructuredMatcherNoCategories,this.subruleIdx=0,this.definedRulesNames=[],this.tokensMap={},this.isBackTrackingStack=[],this.RULE_STACK=[],this.RULE_OCCURRENCE_STACK=[],this.gastProductionsCache={},(0,c_.default)(t,"serializedGrammar"))throw Error(`The Parser's configuration can no longer contain a <serializedGrammar> property.
	See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0
	For Further details.`);if((0,w1.default)(e)){if((0,C9.default)(e))throw Error(`A Token Vocabulary cannot be empty.
	Note that the first argument for the parser constructor
	is no longer a Token vector (since v4.0).`);if(typeof e[0].startOffset=="number")throw Error(`The Parser constructor no longer accepts a token vector as the first argument.
	See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0
	For Further details.`)}if((0,w1.default)(e))this.tokensMap=(0,w9.default)(e,function(o,u){return o[u.name]=u,o},{});else if((0,c_.default)(e,"modes")&&(0,A9.default)((0,D1.default)((0,f_.default)(e.modes)),d_.isTokenType)){var n=(0,D1.default)((0,f_.default)(e.modes)),i=(0,yIe.default)(n);this.tokensMap=(0,w9.default)(i,function(o,u){return o[u.name]=u,o},{})}else if((0,hIe.default)(e))this.tokensMap=(0,D9.default)(e);else throw new Error("<tokensDictionary> argument must be An Array of Token constructors, A dictionary of Token constructors or an IMultiModeLexerDefinition");this.tokensMap.EOF=P9.EOF;var a=(0,c_.default)(e,"modes")?(0,D1.default)((0,f_.default)(e.modes)):(0,f_.default)(e),s=(0,A9.default)(a,function(o){return(0,C9.default)(o.categoryMatches)});this.tokenMatcher=s?d_.tokenStructuredMatcherNoCategories:d_.tokenStructuredMatcher,(0,d_.augmentTokenTypes)((0,f_.default)(this.tokensMap))},r.prototype.defineRule=function(e,t,n){if(this.selfAnalysisDone)throw Error("Grammar rule <".concat(e,`> may not be defined after the 'performSelfAnalysis' method has been called'
`)+"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.");var i=(0,c_.default)(n,"resyncEnabled")?n.resyncEnabled:M9.DEFAULT_RULE_CONFIG.resyncEnabled,a=(0,c_.default)(n,"recoveryValueFunc")?n.recoveryValueFunc:M9.DEFAULT_RULE_CONFIG.recoveryValueFunc,s=this.ruleShortNameIdx<<Ji.BITS_FOR_METHOD_TYPE+Ji.BITS_FOR_OCCURRENCE_IDX;this.ruleShortNameIdx++,this.shortRuleNameToFull[s]=e,this.fullRuleNameToShort[e]=s;var o;this.outputCst===!0?o=function(){for(var f=[],d=0;d<arguments.length;d++)f[d]=arguments[d];try{this.ruleInvocationStateUpdate(s,e,this.subruleIdx),t.apply(this,f);var m=this.CST_STACK[this.CST_STACK.length-1];return this.cstPostRule(m),m}catch(h){return this.invokeRuleCatch(h,i,a)}finally{this.ruleFinallyStateUpdate()}}:o=function(){for(var f=[],d=0;d<arguments.length;d++)f[d]=arguments[d];try{return this.ruleInvocationStateUpdate(s,e,this.subruleIdx),t.apply(this,f)}catch(m){return this.invokeRuleCatch(m,i,a)}finally{this.ruleFinallyStateUpdate()}};var u=Object.assign(o,{ruleName:e,originalGrammarAction:t});return u},r.prototype.invokeRuleCatch=function(e,t,n){var i=this.RULE_STACK.length===1,a=t&&!this.isBackTracking()&&this.recoveryEnabled;if((0,Tb.isRecognitionException)(e)){var s=e;if(a){var o=this.findReSyncTokenType();if(this.isInCurrentRuleReSyncSet(o))if(s.resyncedTokens=this.reSyncTo(o),this.outputCst){var u=this.CST_STACK[this.CST_STACK.length-1];return u.recoveredNode=!0,u}else return n();else{if(this.outputCst){var u=this.CST_STACK[this.CST_STACK.length-1];u.recoveredNode=!0,s.partialCstResult=u}throw s}}else{if(i)return this.moveToTerminatedState(),n();throw s}}else throw e},r.prototype.optionInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.OPTION_IDX,t);return this.optionInternalLogic(e,t,n)},r.prototype.optionInternalLogic=function(e,t,n){var i=this,a=this.getLaFuncFromCache(n),s;if(typeof e!="function"){s=e.DEF;var o=e.GATE;if(o!==void 0){var u=a;a=function(){return o.call(i)&&u.call(i)}}}else s=e;if(a.call(this)===!0)return s.call(this)},r.prototype.atLeastOneInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.AT_LEAST_ONE_IDX,e);return this.atLeastOneInternalLogic(e,t,n)},r.prototype.atLeastOneInternalLogic=function(e,t,n){var i=this,a=this.getLaFuncFromCache(n),s;if(typeof t!="function"){s=t.DEF;var o=t.GATE;if(o!==void 0){var u=a;a=function(){return o.call(i)&&u.call(i)}}}else s=t;if(a.call(this)===!0)for(var c=this.doSingleRepetition(s);a.call(this)===!0&&c===!0;)c=this.doSingleRepetition(s);else throw this.raiseEarlyExitException(e,S9.PROD_TYPE.REPETITION_MANDATORY,t.ERR_MSG);this.attemptInRepetitionRecovery(this.atLeastOneInternal,[e,t],a,Ji.AT_LEAST_ONE_IDX,e,Rh.NextTerminalAfterAtLeastOneWalker)},r.prototype.atLeastOneSepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.AT_LEAST_ONE_SEP_IDX,e);this.atLeastOneSepFirstInternalLogic(e,t,n)},r.prototype.atLeastOneSepFirstInternalLogic=function(e,t,n){var i=this,a=t.DEF,s=t.SEP,o=this.getLaFuncFromCache(n);if(o.call(this)===!0){a.call(this);for(var u=function(){return i.tokenMatcher(i.LA(1),s)};this.tokenMatcher(this.LA(1),s)===!0;)this.CONSUME(s),a.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,s,u,a,Rh.NextTerminalAfterAtLeastOneSepWalker],u,Ji.AT_LEAST_ONE_SEP_IDX,e,Rh.NextTerminalAfterAtLeastOneSepWalker)}else throw this.raiseEarlyExitException(e,S9.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR,t.ERR_MSG)},r.prototype.manyInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.MANY_IDX,e);return this.manyInternalLogic(e,t,n)},r.prototype.manyInternalLogic=function(e,t,n){var i=this,a=this.getLaFuncFromCache(n),s;if(typeof t!="function"){s=t.DEF;var o=t.GATE;if(o!==void 0){var u=a;a=function(){return o.call(i)&&u.call(i)}}}else s=t;for(var c=!0;a.call(this)===!0&&c===!0;)c=this.doSingleRepetition(s);this.attemptInRepetitionRecovery(this.manyInternal,[e,t],a,Ji.MANY_IDX,e,Rh.NextTerminalAfterManyWalker,c)},r.prototype.manySepFirstInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.MANY_SEP_IDX,e);this.manySepFirstInternalLogic(e,t,n)},r.prototype.manySepFirstInternalLogic=function(e,t,n){var i=this,a=t.DEF,s=t.SEP,o=this.getLaFuncFromCache(n);if(o.call(this)===!0){a.call(this);for(var u=function(){return i.tokenMatcher(i.LA(1),s)};this.tokenMatcher(this.LA(1),s)===!0;)this.CONSUME(s),a.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,s,u,a,Rh.NextTerminalAfterManySepWalker],u,Ji.MANY_SEP_IDX,e,Rh.NextTerminalAfterManySepWalker)}},r.prototype.repetitionSepSecondInternal=function(e,t,n,i,a){for(;n();)this.CONSUME(t),i.call(this);this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal,[e,t,n,i,a],n,Ji.AT_LEAST_ONE_SEP_IDX,e,a)},r.prototype.doSingleRepetition=function(e){var t=this.getLexerPosition();e.call(this);var n=this.getLexerPosition();return n>t},r.prototype.orInternal=function(e,t){var n=this.getKeyForAutomaticLookahead(Ji.OR_IDX,t),i=(0,w1.default)(e)?e:e.DEF,a=this.getLaFuncFromCache(n),s=a.call(this,i);if(s!==void 0){var o=i[s];return o.ALT.call(this)}this.raiseNoAltException(t,e.ERR_MSG)},r.prototype.ruleFinallyStateUpdate=function(){if(this.RULE_STACK.pop(),this.RULE_OCCURRENCE_STACK.pop(),this.cstFinallyStateUpdate(),this.RULE_STACK.length===0&&this.isAtEndOfInput()===!1){var e=this.LA(1),t=this.errorMessageProvider.buildNotAllInputParsedMessage({firstRedundant:e,ruleName:this.getCurrRuleFullName()});this.SAVE_ERROR(new Tb.NotAllInputParsedException(t,e))}},r.prototype.subruleInternal=function(e,t,n){var i;try{var a=n!==void 0?n.ARGS:void 0;return this.subruleIdx=t,i=e.apply(this,a),this.cstPostNonTerminal(i,n!==void 0&&n.LABEL!==void 0?n.LABEL:e.ruleName),i}catch(s){throw this.subruleInternalError(s,n,e.ruleName)}},r.prototype.subruleInternalError=function(e,t,n){throw(0,Tb.isRecognitionException)(e)&&e.partialCstResult!==void 0&&(this.cstPostNonTerminal(e.partialCstResult,t!==void 0&&t.LABEL!==void 0?t.LABEL:n),delete e.partialCstResult),e},r.prototype.consumeInternal=function(e,t,n){var i;try{var a=this.LA(1);this.tokenMatcher(a,e)===!0?(this.consumeToken(),i=a):this.consumeInternalError(e,a,n)}catch(s){i=this.consumeInternalRecovery(e,t,s)}return this.cstPostTerminal(n!==void 0&&n.LABEL!==void 0?n.LABEL:e.name,i),i},r.prototype.consumeInternalError=function(e,t,n){var i,a=this.LA(0);throw n!==void 0&&n.ERR_MSG?i=n.ERR_MSG:i=this.errorMessageProvider.buildMismatchTokenMessage({expected:e,actual:t,previous:a,ruleName:this.getCurrRuleFullName()}),this.SAVE_ERROR(new Tb.MismatchedTokenException(i,t,a))},r.prototype.consumeInternalRecovery=function(e,t,n){if(this.recoveryEnabled&&n.name==="MismatchedTokenException"&&!this.isBackTracking()){var i=this.getFollowsForInRuleRecovery(e,t);try{return this.tryInRuleRecovery(e,i)}catch(a){throw a.name===gIe.IN_RULE_RECOVERY_EXCEPTION?n:a}}else throw n},r.prototype.saveRecogState=function(){var e=this.errors,t=(0,D9.default)(this.RULE_STACK);return{errors:e,lexerState:this.exportLexerState(),RULE_STACK:t,CST_STACK:this.CST_STACK}},r.prototype.reloadRecogState=function(e){this.errors=e.errors,this.importLexerState(e.lexerState),this.RULE_STACK=e.RULE_STACK},r.prototype.ruleInvocationStateUpdate=function(e,t,n){this.RULE_OCCURRENCE_STACK.push(n),this.RULE_STACK.push(e),this.cstInvocationStateUpdate(t)},r.prototype.isBackTracking=function(){return this.isBackTrackingStack.length!==0},r.prototype.getCurrRuleFullName=function(){var e=this.getLastExplicitRuleShortName();return this.shortRuleNameToFull[e]},r.prototype.shortRuleNameToFullName=function(e){return this.shortRuleNameToFull[e]},r.prototype.isAtEndOfInput=function(){return this.tokenMatcher(this.LA(1),P9.EOF)},r.prototype.reset=function(){this.resetLexerState(),this.subruleIdx=0,this.isBackTrackingStack=[],this.errors=[],this.RULE_STACK=[],this.CST_STACK=[],this.RULE_OCCURRENCE_STACK=[]},r}();bh.RecognizerEngine=vIe});var F9=p(Ch=>{"use strict";var I9=Ch&&Ch.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Ch,"__esModule",{value:!0});Ch.ErrorHandler=void 0;var S1=gh(),_Ie=I9(Yi()),O9=I9(Vl()),k9=yh(),$Ie=Si(),TIe=function(){function r(){}return r.prototype.initErrorHandler=function(e){this._errors=[],this.errorMessageProvider=(0,_Ie.default)(e,"errorMessageProvider")?e.errorMessageProvider:$Ie.DEFAULT_PARSER_CONFIG.errorMessageProvider},r.prototype.SAVE_ERROR=function(e){if((0,S1.isRecognitionException)(e))return e.context={ruleStack:this.getHumanReadableRuleStack(),ruleOccurrenceStack:(0,O9.default)(this.RULE_OCCURRENCE_STACK)},this._errors.push(e),e;throw Error("Trying to save an Error which is not a RecognitionException")},Object.defineProperty(r.prototype,"errors",{get:function(){return(0,O9.default)(this._errors)},set:function(e){this._errors=e},enumerable:!1,configurable:!0}),r.prototype.raiseEarlyExitException=function(e,t,n){for(var i=this.getCurrRuleFullName(),a=this.getGAstProductions()[i],s=(0,k9.getLookaheadPathsForOptionalProd)(e,a,t,this.maxLookahead),o=s[0],u=[],c=1;c<=this.maxLookahead;c++)u.push(this.LA(c));var f=this.errorMessageProvider.buildEarlyExitMessage({expectedIterationPaths:o,actual:u,previous:this.LA(0),customUserDescription:n,ruleName:i});throw this.SAVE_ERROR(new S1.EarlyExitException(f,this.LA(1),this.LA(0)))},r.prototype.raiseNoAltException=function(e,t){for(var n=this.getCurrRuleFullName(),i=this.getGAstProductions()[n],a=(0,k9.getLookaheadPathsForOr)(e,i,this.maxLookahead),s=[],o=1;o<=this.maxLookahead;o++)s.push(this.LA(o));var u=this.LA(0),c=this.errorMessageProvider.buildNoViableAltMessage({expectedPathsPerAlt:a,actual:s,previous:u,customUserDescription:t,ruleName:this.getCurrRuleFullName()});throw this.SAVE_ERROR(new S1.NoViableAltException(c,this.LA(1),u))},r}();Ch.ErrorHandler=TIe});var x9=p(Ah=>{"use strict";var q9=Ah&&Ah.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Ah,"__esModule",{value:!0});Ah.ContentAssist=void 0;var N9=n_(),RIe=q9(uh()),bIe=q9(hf()),CIe=function(){function r(){}return r.prototype.initContentAssist=function(){},r.prototype.computeContentAssist=function(e,t){var n=this.gastProductionsCache[e];if((0,bIe.default)(n))throw Error("Rule ->".concat(e,"<- does not exist in this grammar."));return(0,N9.nextPossibleTokensAfter)([n],t,this.tokenMatcher,this.maxLookahead)},r.prototype.getNextPossibleTokenTypes=function(e){var t=(0,RIe.default)(e.ruleStack),n=this.getGAstProductions(),i=n[t],a=new N9.NextAfterTokenWalker(i,e).startWalking();return a},r}();Ah.ContentAssist=CIe});var W9=p(wh=>{"use strict";var Dh=wh&&wh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(wh,"__esModule",{value:!0});wh.GastRecorder=void 0;var Rb=Dh(rb()),AIe=Dh(jt()),wIe=Dh(F0()),DIe=Dh(Rn()),B9=Dh(By()),m_=Dh(Yi()),To=Ur(),SIe=Zv(),G9=_f(),K9=$f(),MIe=Si(),PIe=pb(),Cb={description:"This Object indicates the Parser is during Recording Phase"};Object.freeze(Cb);var L9=!0,j9=Math.pow(2,PIe.BITS_FOR_OCCURRENCE_IDX)-1,H9=(0,K9.createToken)({name:"RECORDING_PHASE_TOKEN",pattern:SIe.Lexer.NA});(0,G9.augmentTokenTypes)([H9]);var V9=(0,K9.createTokenInstance)(H9,`This IToken indicates the Parser is in Recording Phase
	See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details`,-1,-1,-1,-1,-1,-1);Object.freeze(V9);var EIe={name:`This CSTNode indicates the Parser is in Recording Phase
	See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details`,children:{}},OIe=function(){function r(){}return r.prototype.initGastRecorder=function(e){this.recordingProdStack=[],this.RECORDING_PHASE=!1},r.prototype.enableRecording=function(){var e=this;this.RECORDING_PHASE=!0,this.TRACE_INIT("Enable Recording",function(){for(var t=function(i){var a=i>0?i:"";e["CONSUME".concat(a)]=function(s,o){return this.consumeInternalRecord(s,i,o)},e["SUBRULE".concat(a)]=function(s,o){return this.subruleInternalRecord(s,i,o)},e["OPTION".concat(a)]=function(s){return this.optionInternalRecord(s,i)},e["OR".concat(a)]=function(s){return this.orInternalRecord(s,i)},e["MANY".concat(a)]=function(s){this.manyInternalRecord(i,s)},e["MANY_SEP".concat(a)]=function(s){this.manySepFirstInternalRecord(i,s)},e["AT_LEAST_ONE".concat(a)]=function(s){this.atLeastOneInternalRecord(i,s)},e["AT_LEAST_ONE_SEP".concat(a)]=function(s){this.atLeastOneSepFirstInternalRecord(i,s)}},n=0;n<10;n++)t(n);e.consume=function(i,a,s){return this.consumeInternalRecord(a,i,s)},e.subrule=function(i,a,s){return this.subruleInternalRecord(a,i,s)},e.option=function(i,a){return this.optionInternalRecord(a,i)},e.or=function(i,a){return this.orInternalRecord(a,i)},e.many=function(i,a){this.manyInternalRecord(i,a)},e.atLeastOne=function(i,a){this.atLeastOneInternalRecord(i,a)},e.ACTION=e.ACTION_RECORD,e.BACKTRACK=e.BACKTRACK_RECORD,e.LA=e.LA_RECORD})},r.prototype.disableRecording=function(){var e=this;this.RECORDING_PHASE=!1,this.TRACE_INIT("Deleting Recording methods",function(){for(var t=e,n=0;n<10;n++){var i=n>0?n:"";delete t["CONSUME".concat(i)],delete t["SUBRULE".concat(i)],delete t["OPTION".concat(i)],delete t["OR".concat(i)],delete t["MANY".concat(i)],delete t["MANY_SEP".concat(i)],delete t["AT_LEAST_ONE".concat(i)],delete t["AT_LEAST_ONE_SEP".concat(i)]}delete t.consume,delete t.subrule,delete t.option,delete t.or,delete t.many,delete t.atLeastOne,delete t.ACTION,delete t.BACKTRACK,delete t.LA})},r.prototype.ACTION_RECORD=function(e){},r.prototype.BACKTRACK_RECORD=function(e,t){return function(){return!0}},r.prototype.LA_RECORD=function(e){return MIe.END_OF_FILE},r.prototype.topLevelRuleRecord=function(e,t){try{var n=new To.Rule({definition:[],name:e});return n.name=e,this.recordingProdStack.push(n),t.call(this),this.recordingProdStack.pop(),n}catch(i){if(i.KNOWN_RECORDER_ERROR!==!0)try{i.message=i.message+`
	 This error was thrown during the "grammar recording phase" For more info see:
	https://chevrotain.io/docs/guide/internals.html#grammar-recording`}catch{throw i}throw i}},r.prototype.optionInternalRecord=function(e,t){return p_.call(this,To.Option,e,t)},r.prototype.atLeastOneInternalRecord=function(e,t){p_.call(this,To.RepetitionMandatory,t,e)},r.prototype.atLeastOneSepFirstInternalRecord=function(e,t){p_.call(this,To.RepetitionMandatoryWithSeparator,t,e,L9)},r.prototype.manyInternalRecord=function(e,t){p_.call(this,To.Repetition,t,e)},r.prototype.manySepFirstInternalRecord=function(e,t){p_.call(this,To.RepetitionWithSeparator,t,e,L9)},r.prototype.orInternalRecord=function(e,t){return kIe.call(this,e,t)},r.prototype.subruleInternalRecord=function(e,t,n){if(bb(t),!e||(0,m_.default)(e,"ruleName")===!1){var i=new Error("<SUBRULE".concat(U9(t),"> argument is invalid")+" expecting a Parser method reference but got: <".concat(JSON.stringify(e),">")+`
 inside top level rule: <`.concat(this.recordingProdStack[0].name,">"));throw i.KNOWN_RECORDER_ERROR=!0,i}var a=(0,Rb.default)(this.recordingProdStack),s=e.ruleName,o=new To.NonTerminal({idx:t,nonTerminalName:s,label:n?.LABEL,referencedRule:void 0});return a.definition.push(o),this.outputCst?EIe:Cb},r.prototype.consumeInternalRecord=function(e,t,n){if(bb(t),!(0,G9.hasShortKeyProperty)(e)){var i=new Error("<CONSUME".concat(U9(t),"> argument is invalid")+" expecting a TokenType reference but got: <".concat(JSON.stringify(e),">")+`
 inside top level rule: <`.concat(this.recordingProdStack[0].name,">"));throw i.KNOWN_RECORDER_ERROR=!0,i}var a=(0,Rb.default)(this.recordingProdStack),s=new To.Terminal({idx:t,terminalType:e,label:n?.LABEL});return a.definition.push(s),V9},r}();wh.GastRecorder=OIe;function p_(r,e,t,n){n===void 0&&(n=!1),bb(t);var i=(0,Rb.default)(this.recordingProdStack),a=(0,B9.default)(e)?e:e.DEF,s=new r({definition:[],idx:t});return n&&(s.separator=e.SEP),(0,m_.default)(e,"MAX_LOOKAHEAD")&&(s.maxLookahead=e.MAX_LOOKAHEAD),this.recordingProdStack.push(s),a.call(this),i.definition.push(s),this.recordingProdStack.pop(),Cb}function kIe(r,e){var t=this;bb(e);var n=(0,Rb.default)(this.recordingProdStack),i=(0,AIe.default)(r)===!1,a=i===!1?r:r.DEF,s=new To.Alternation({definition:[],idx:e,ignoreAmbiguities:i&&r.IGNORE_AMBIGUITIES===!0});(0,m_.default)(r,"MAX_LOOKAHEAD")&&(s.maxLookahead=r.MAX_LOOKAHEAD);var o=(0,wIe.default)(a,function(u){return(0,B9.default)(u.GATE)});return s.hasPredicates=o,n.definition.push(s),(0,DIe.default)(a,function(u){var c=new To.Alternative({definition:[]});s.definition.push(c),(0,m_.default)(u,"IGNORE_AMBIGUITIES")?c.ignoreAmbiguities=u.IGNORE_AMBIGUITIES:(0,m_.default)(u,"GATE")&&(c.ignoreAmbiguities=!0),t.recordingProdStack.push(c),u.ALT.call(t),t.recordingProdStack.pop()}),Cb}function U9(r){return r===0?"":"".concat(r)}function bb(r){if(r<0||r>j9){var e=new Error("Invalid DSL Method idx value: <".concat(r,`>
	`)+"Idx value must be a none negative value smaller than ".concat(j9+1));throw e.KNOWN_RECORDER_ERROR=!0,e}}});var z9=p(Sh=>{"use strict";var IIe=Sh&&Sh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Sh,"__esModule",{value:!0});Sh.PerformanceTracer=void 0;var FIe=IIe(Yi()),NIe=ah(),qIe=Si(),xIe=function(){function r(){}return r.prototype.initPerformanceTracer=function(e){if((0,FIe.default)(e,"traceInitPerf")){var t=e.traceInitPerf,n=typeof t=="number";this.traceInitMaxIdent=n?t:1/0,this.traceInitPerf=n?t>0:t}else this.traceInitMaxIdent=0,this.traceInitPerf=qIe.DEFAULT_PARSER_CONFIG.traceInitPerf;this.traceInitIndent=-1},r.prototype.TRACE_INIT=function(e,t){if(this.traceInitPerf===!0){this.traceInitIndent++;var n=new Array(this.traceInitIndent+1).join("	");this.traceInitIndent<this.traceInitMaxIdent&&console.log("".concat(n,"--> <").concat(e,">"));var i=(0,NIe.timer)(t),a=i.time,s=i.value,o=a>10?console.warn:console.log;return this.traceInitIndent<this.traceInitMaxIdent&&o("".concat(n,"<-- <").concat(e,"> time: ").concat(a,"ms")),this.traceInitIndent--,s}else return t()},r}();Sh.PerformanceTracer=xIe});var Y9=p(Ab=>{"use strict";Object.defineProperty(Ab,"__esModule",{value:!0});Ab.applyMixins=void 0;function LIe(r,e){e.forEach(function(t){var n=t.prototype;Object.getOwnPropertyNames(n).forEach(function(i){if(i!=="constructor"){var a=Object.getOwnPropertyDescriptor(n,i);a&&(a.get||a.set)?Object.defineProperty(r.prototype,i,a):r.prototype[i]=t.prototype[i]}})})}Ab.applyMixins=LIe});var Si=p(Yt=>{"use strict";var Z9=Yt&&Yt.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),Mh=Yt&&Yt.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Yt,"__esModule",{value:!0});Yt.EmbeddedActionsParser=Yt.CstParser=Yt.Parser=Yt.EMPTY_ALT=Yt.ParserDefinitionErrorType=Yt.DEFAULT_RULE_CONFIG=Yt.DEFAULT_PARSER_CONFIG=Yt.END_OF_FILE=void 0;var M1=Mh(Wi()),jIe=Mh(Tn()),UIe=Mh(Rn()),Vu=Mh(lo()),X9=Mh(Yi()),ez=Mh(Vl()),BIe=ah(),GIe=k7(),J9=$f(),tz=mh(),Q9=VW(),KIe=T1(),HIe=s9(),VIe=_9(),WIe=T9(),zIe=b9(),YIe=E9(),XIe=F9(),JIe=x9(),QIe=W9(),ZIe=z9(),eFe=Y9(),tFe=s_();Yt.END_OF_FILE=(0,J9.createTokenInstance)(J9.EOF,"",NaN,NaN,NaN,NaN,NaN,NaN);Object.freeze(Yt.END_OF_FILE);Yt.DEFAULT_PARSER_CONFIG=Object.freeze({recoveryEnabled:!1,maxLookahead:3,dynamicTokensEnabled:!1,outputCst:!0,errorMessageProvider:tz.defaultParserErrorProvider,nodeLocationTracking:"none",traceInitPerf:!1,skipValidations:!1});Yt.DEFAULT_RULE_CONFIG=Object.freeze({recoveryValueFunc:function(){},resyncEnabled:!0});var rFe;(function(r){r[r.INVALID_RULE_NAME=0]="INVALID_RULE_NAME",r[r.DUPLICATE_RULE_NAME=1]="DUPLICATE_RULE_NAME",r[r.INVALID_RULE_OVERRIDE=2]="INVALID_RULE_OVERRIDE",r[r.DUPLICATE_PRODUCTIONS=3]="DUPLICATE_PRODUCTIONS",r[r.UNRESOLVED_SUBRULE_REF=4]="UNRESOLVED_SUBRULE_REF",r[r.LEFT_RECURSION=5]="LEFT_RECURSION",r[r.NONE_LAST_EMPTY_ALT=6]="NONE_LAST_EMPTY_ALT",r[r.AMBIGUOUS_ALTS=7]="AMBIGUOUS_ALTS",r[r.CONFLICT_TOKENS_RULES_NAMESPACE=8]="CONFLICT_TOKENS_RULES_NAMESPACE",r[r.INVALID_TOKEN_NAME=9]="INVALID_TOKEN_NAME",r[r.NO_NON_EMPTY_LOOKAHEAD=10]="NO_NON_EMPTY_LOOKAHEAD",r[r.AMBIGUOUS_PREFIX_ALTS=11]="AMBIGUOUS_PREFIX_ALTS",r[r.TOO_MANY_ALTS=12]="TOO_MANY_ALTS",r[r.CUSTOM_LOOKAHEAD_VALIDATION=13]="CUSTOM_LOOKAHEAD_VALIDATION"})(rFe=Yt.ParserDefinitionErrorType||(Yt.ParserDefinitionErrorType={}));function nFe(r){return r===void 0&&(r=void 0),function(){return r}}Yt.EMPTY_ALT=nFe;var wb=function(){function r(e,t){this.definitionErrors=[],this.selfAnalysisDone=!1;var n=this;if(n.initErrorHandler(t),n.initLexerAdapter(),n.initLooksAhead(t),n.initRecognizerEngine(e,t),n.initRecoverable(t),n.initTreeBuilder(t),n.initContentAssist(),n.initGastRecorder(t),n.initPerformanceTracer(t),(0,X9.default)(t,"ignoredIssues"))throw new Error(`The <ignoredIssues> IParserConfig property has been deprecated.
	Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.
	See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES
	For further details.`);this.skipValidations=(0,X9.default)(t,"skipValidations")?t.skipValidations:Yt.DEFAULT_PARSER_CONFIG.skipValidations}return r.performSelfAnalysis=function(e){throw Error("The **static** `performSelfAnalysis` method has been deprecated.	\nUse the **instance** method with the same name instead.")},r.prototype.performSelfAnalysis=function(){var e=this;this.TRACE_INIT("performSelfAnalysis",function(){var t;e.selfAnalysisDone=!0;var n=e.className;e.TRACE_INIT("toFastProps",function(){(0,BIe.toFastProperties)(e)}),e.TRACE_INIT("Grammar Recording",function(){try{e.enableRecording(),(0,UIe.default)(e.definedRulesNames,function(a){var s=e[a],o=s.originalGrammarAction,u;e.TRACE_INIT("".concat(a," Rule"),function(){u=e.topLevelRuleRecord(a,o)}),e.gastProductionsCache[a]=u})}finally{e.disableRecording()}});var i=[];if(e.TRACE_INIT("Grammar Resolving",function(){i=(0,Q9.resolveGrammar)({rules:(0,Vu.default)(e.gastProductionsCache)}),e.definitionErrors=e.definitionErrors.concat(i)}),e.TRACE_INIT("Grammar Validations",function(){if((0,M1.default)(i)&&e.skipValidations===!1){var a=(0,Q9.validateGrammar)({rules:(0,Vu.default)(e.gastProductionsCache),tokenTypes:(0,Vu.default)(e.tokensMap),errMsgProvider:tz.defaultGrammarValidatorErrorProvider,grammarName:n}),s=(0,tFe.validateLookahead)({lookaheadStrategy:e.lookaheadStrategy,rules:(0,Vu.default)(e.gastProductionsCache),tokenTypes:(0,Vu.default)(e.tokensMap),grammarName:n});e.definitionErrors=e.definitionErrors.concat(a,s)}}),(0,M1.default)(e.definitionErrors)&&(e.recoveryEnabled&&e.TRACE_INIT("computeAllProdsFollows",function(){var a=(0,GIe.computeAllProdsFollows)((0,Vu.default)(e.gastProductionsCache));e.resyncFollows=a}),e.TRACE_INIT("ComputeLookaheadFunctions",function(){var a,s;(s=(a=e.lookaheadStrategy).initialize)===null||s===void 0||s.call(a,{rules:(0,Vu.default)(e.gastProductionsCache)}),e.preComputeLookaheadFunctions((0,Vu.default)(e.gastProductionsCache))})),!r.DEFER_DEFINITION_ERRORS_HANDLING&&!(0,M1.default)(e.definitionErrors))throw t=(0,jIe.default)(e.definitionErrors,function(a){return a.message}),new Error(`Parser Definition Errors detected:
 `.concat(t.join(`
-------------------------------
`)))})},r.DEFER_DEFINITION_ERRORS_HANDLING=!1,r}();Yt.Parser=wb;(0,eFe.applyMixins)(wb,[KIe.Recoverable,HIe.LooksAhead,VIe.TreeBuilder,WIe.LexerAdapter,YIe.RecognizerEngine,zIe.RecognizerApi,XIe.ErrorHandler,JIe.ContentAssist,QIe.GastRecorder,ZIe.PerformanceTracer]);var iFe=function(r){Z9(e,r);function e(t,n){n===void 0&&(n=Yt.DEFAULT_PARSER_CONFIG);var i=(0,ez.default)(n);return i.outputCst=!0,r.call(this,t,i)||this}return e}(wb);Yt.CstParser=iFe;var aFe=function(r){Z9(e,r);function e(t,n){n===void 0&&(n=Yt.DEFAULT_PARSER_CONFIG);var i=(0,ez.default)(n);return i.outputCst=!1,r.call(this,t,i)||this}return e}(wb);Yt.EmbeddedActionsParser=aFe});var nz=p(Wu=>{"use strict";var sFe=Wu&&Wu.__extends||function(){var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,i){n.__proto__=i}||function(n,i){for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(n[a]=i[a])},r(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");r(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}}(),Ph=Wu&&Wu.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Wu,"__esModule",{value:!0});Wu.buildModel=void 0;var rz=Ur(),y_=Ph(Tn()),oFe=Ph(vs()),lFe=Ph(lo()),uFe=Ph(F0()),cFe=Ph(s1()),fFe=Ph(zv());function dFe(r){var e=new pFe,t=(0,lFe.default)(r);return(0,y_.default)(t,function(n){return e.visitRule(n)})}Wu.buildModel=dFe;var pFe=function(r){sFe(e,r);function e(){return r!==null&&r.apply(this,arguments)||this}return e.prototype.visitRule=function(t){var n=this.visitEach(t.definition),i=(0,cFe.default)(n,function(s){return s.propertyName}),a=(0,y_.default)(i,function(s,o){var u=!(0,uFe.default)(s,function(f){return!f.canBeNull}),c=s[0].type;return s.length>1&&(c=(0,y_.default)(s,function(f){return f.type})),{name:o,type:c,optional:u}});return{name:t.name,properties:a}},e.prototype.visitAlternative=function(t){return this.visitEachAndOverrideWith(t.definition,{canBeNull:!0})},e.prototype.visitOption=function(t){return this.visitEachAndOverrideWith(t.definition,{canBeNull:!0})},e.prototype.visitRepetition=function(t){return this.visitEachAndOverrideWith(t.definition,{canBeNull:!0})},e.prototype.visitRepetitionMandatory=function(t){return this.visitEach(t.definition)},e.prototype.visitRepetitionMandatoryWithSeparator=function(t){return this.visitEach(t.definition).concat({propertyName:t.separator.name,canBeNull:!0,type:Db(t.separator)})},e.prototype.visitRepetitionWithSeparator=function(t){return this.visitEachAndOverrideWith(t.definition,{canBeNull:!0}).concat({propertyName:t.separator.name,canBeNull:!0,type:Db(t.separator)})},e.prototype.visitAlternation=function(t){return this.visitEachAndOverrideWith(t.definition,{canBeNull:!0})},e.prototype.visitTerminal=function(t){return[{propertyName:t.label||t.terminalType.name,canBeNull:!1,type:Db(t)}]},e.prototype.visitNonTerminal=function(t){return[{propertyName:t.label||t.nonTerminalName,canBeNull:!1,type:Db(t)}]},e.prototype.visitEachAndOverrideWith=function(t,n){return(0,y_.default)(this.visitEach(t),function(i){return(0,fFe.default)({},i,n)})},e.prototype.visitEach=function(t){var n=this;return(0,oFe.default)((0,y_.default)(t,function(i){return n.visit(i)}))},e}(rz.GAstVisitor);function Db(r){return r instanceof rz.NonTerminal?{kind:"rule",name:r.referencedRule.name}:{kind:"token"}}});var az=p((wft,iz)=>{var mFe=M0();function yFe(r,e,t){var n=r.length;return t=t===void 0?n:t,!e&&t>=n?r:mFe(r,e,t)}iz.exports=yFe});var P1=p((Dft,sz)=>{var hFe="\\ud800-\\udfff",gFe="\\u0300-\\u036f",vFe="\\ufe20-\\ufe2f",_Fe="\\u20d0-\\u20ff",$Fe=gFe+vFe+_Fe,TFe="\\ufe0e\\ufe0f",RFe="\\u200d",bFe=RegExp("["+RFe+hFe+$Fe+TFe+"]");function CFe(r){return bFe.test(r)}sz.exports=CFe});var lz=p((Sft,oz)=>{function AFe(r){return r.split("")}oz.exports=AFe});var hz=p((Mft,yz)=>{var uz="\\ud800-\\udfff",wFe="\\u0300-\\u036f",DFe="\\ufe20-\\ufe2f",SFe="\\u20d0-\\u20ff",MFe=wFe+DFe+SFe,PFe="\\ufe0e\\ufe0f",EFe="["+uz+"]",E1="["+MFe+"]",O1="\\ud83c[\\udffb-\\udfff]",OFe="(?:"+E1+"|"+O1+")",cz="[^"+uz+"]",fz="(?:\\ud83c[\\udde6-\\uddff]){2}",dz="[\\ud800-\\udbff][\\udc00-\\udfff]",kFe="\\u200d",pz=OFe+"?",mz="["+PFe+"]?",IFe="(?:"+kFe+"(?:"+[cz,fz,dz].join("|")+")"+mz+pz+")*",FFe=mz+pz+IFe,NFe="(?:"+[cz+E1+"?",E1,fz,dz,EFe].join("|")+")",qFe=RegExp(O1+"(?="+O1+")|"+NFe+FFe,"g");function xFe(r){return r.match(qFe)||[]}yz.exports=xFe});var vz=p((Pft,gz)=>{var LFe=lz(),jFe=P1(),UFe=hz();function BFe(r){return jFe(r)?UFe(r):LFe(r)}gz.exports=BFe});var $z=p((Eft,_z)=>{var GFe=az(),KFe=P1(),HFe=vz(),VFe=hO();function WFe(r){return function(e){e=VFe(e);var t=KFe(e)?HFe(e):void 0,n=t?t[0]:e.charAt(0),i=t?GFe(t,1).join(""):e.slice(1);return n[r]()+i}}_z.exports=WFe});var Rz=p((Oft,Tz)=>{var zFe=$z(),YFe=zFe("toUpperCase");Tz.exports=YFe});var wz=p(Eh=>{"use strict";var Oh=Eh&&Eh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Eh,"__esModule",{value:!0});Eh.genDts=void 0;var XFe=Oh(vs()),JFe=Oh(jt()),Sb=Oh(Tn()),QFe=Oh(Yl()),ZFe=Oh(U0()),Cz=Oh(Rz());function eNe(r,e){var t=[];return t=t.concat('import type { CstNode, ICstVisitor, IToken } from "chevrotain";'),t=t.concat((0,XFe.default)((0,Sb.default)(r,function(n){return tNe(n)}))),e.includeVisitorInterface&&(t=t.concat(aNe(e.visitorInterfaceName,r))),t.join(`

`)+`
`}Eh.genDts=eNe;function tNe(r){var e=rNe(r),t=nNe(r);return[e,t]}function rNe(r){var e=Az(r.name),t=k1(r.name);return"export interface ".concat(e,` extends CstNode {
  name: "`).concat(r.name,`";
  children: `).concat(t,`;
}`)}function nNe(r){var e=k1(r.name);return"export type ".concat(e,` = {
  `).concat((0,Sb.default)(r.properties,function(t){return iNe(t)}).join(`
  `),`
};`)}function iNe(r){var e=oNe(r.type);return"".concat(r.name).concat(r.optional?"?":"",": ").concat(e,"[];")}function aNe(r,e){return"export interface ".concat(r,`<IN, OUT> extends ICstVisitor<IN, OUT> {
  `).concat((0,Sb.default)(e,function(t){return sNe(t)}).join(`
  `),`
}`)}function sNe(r){var e=k1(r.name);return"".concat(r.name,"(children: ").concat(e,", param?: IN): OUT;")}function oNe(r){if((0,JFe.default)(r)){var e=(0,ZFe.default)((0,Sb.default)(r,function(n){return bz(n)})),t=(0,QFe.default)(e,function(n,i){return n+" | "+i});return"("+t+")"}else return bz(r)}function bz(r){return r.kind==="token"?"IToken":Az(r.name)}function Az(r){return(0,Cz.default)(r)+"CstNode"}function k1(r){return(0,Cz.default)(r)+"CstChildren"}});var Dz=p(kh=>{"use strict";var Mb=kh&&kh.__assign||function(){return Mb=Object.assign||function(r){for(var e,t=1,n=arguments.length;t<n;t++){e=arguments[t];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(r[i]=e[i])}return r},Mb.apply(this,arguments)};Object.defineProperty(kh,"__esModule",{value:!0});kh.generateCstDts=void 0;var lNe=nz(),uNe=wz(),cNe={includeVisitorInterface:!0,visitorInterfaceName:"ICstNodeVisitor"};function fNe(r,e){var t=Mb(Mb({},cNe),e),n=(0,lNe.buildModel)(r);return(0,uNe.genDts)(n,t)}kh.generateCstDts=fNe});var Mz=p(Pb=>{"use strict";Object.defineProperty(Pb,"__esModule",{value:!0});Pb.createSyntaxDiagramsCode=void 0;var Sz=KE();function dNe(r,e){var t=e===void 0?{}:e,n=t.resourceBase,i=n===void 0?"https://unpkg.com/chevrotain@".concat(Sz.VERSION,"/diagrams/"):n,a=t.css,s=a===void 0?"https://unpkg.com/chevrotain@".concat(Sz.VERSION,"/diagrams/diagrams.css"):a,o=`
<!-- This is a generated file -->
<!DOCTYPE html>
<meta charset="utf-8">
<style>
  body {
    background-color: hsl(30, 20%, 95%)
  }
</style>

`,u=`
<link rel='stylesheet' href='`.concat(s,`'>
`),c=`
<script src='`.concat(i,`vendor/railroad-diagrams.js'></script>
<script src='`).concat(i,`src/diagrams_builder.js'></script>
<script src='`).concat(i,`src/diagrams_behavior.js'></script>
<script src='`).concat(i,`src/main.js'></script>
`),f=`
<div id="diagrams" align="center"></div>    
`,d=`
<script>
    window.serializedGrammar = `.concat(JSON.stringify(r,null,"  "),`;
</script>
`),m=`
<script>
    var diagramsDiv = document.getElementById("diagrams");
    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);
</script>
`;return o+u+c+f+d+m}Pb.createSyntaxDiagramsCode=dNe});var Sf=p(ae=>{"use strict";Object.defineProperty(ae,"__esModule",{value:!0});ae.Parser=ae.createSyntaxDiagramsCode=ae.clearCache=ae.generateCstDts=ae.GAstVisitor=ae.serializeProduction=ae.serializeGrammar=ae.Terminal=ae.Rule=ae.RepetitionWithSeparator=ae.RepetitionMandatoryWithSeparator=ae.RepetitionMandatory=ae.Repetition=ae.Option=ae.NonTerminal=ae.Alternative=ae.Alternation=ae.defaultLexerErrorProvider=ae.NoViableAltException=ae.NotAllInputParsedException=ae.MismatchedTokenException=ae.isRecognitionException=ae.EarlyExitException=ae.defaultParserErrorProvider=ae.LLkLookaheadStrategy=ae.getLookaheadPaths=ae.tokenName=ae.tokenMatcher=ae.tokenLabel=ae.EOF=ae.createTokenInstance=ae.createToken=ae.LexerDefinitionErrorType=ae.Lexer=ae.EMPTY_ALT=ae.ParserDefinitionErrorType=ae.EmbeddedActionsParser=ae.CstParser=ae.VERSION=void 0;var pNe=KE();Object.defineProperty(ae,"VERSION",{enumerable:!0,get:function(){return pNe.VERSION}});var Eb=Si();Object.defineProperty(ae,"CstParser",{enumerable:!0,get:function(){return Eb.CstParser}});Object.defineProperty(ae,"EmbeddedActionsParser",{enumerable:!0,get:function(){return Eb.EmbeddedActionsParser}});Object.defineProperty(ae,"ParserDefinitionErrorType",{enumerable:!0,get:function(){return Eb.ParserDefinitionErrorType}});Object.defineProperty(ae,"EMPTY_ALT",{enumerable:!0,get:function(){return Eb.EMPTY_ALT}});var Pz=Zv();Object.defineProperty(ae,"Lexer",{enumerable:!0,get:function(){return Pz.Lexer}});Object.defineProperty(ae,"LexerDefinitionErrorType",{enumerable:!0,get:function(){return Pz.LexerDefinitionErrorType}});var Ih=$f();Object.defineProperty(ae,"createToken",{enumerable:!0,get:function(){return Ih.createToken}});Object.defineProperty(ae,"createTokenInstance",{enumerable:!0,get:function(){return Ih.createTokenInstance}});Object.defineProperty(ae,"EOF",{enumerable:!0,get:function(){return Ih.EOF}});Object.defineProperty(ae,"tokenLabel",{enumerable:!0,get:function(){return Ih.tokenLabel}});Object.defineProperty(ae,"tokenMatcher",{enumerable:!0,get:function(){return Ih.tokenMatcher}});Object.defineProperty(ae,"tokenName",{enumerable:!0,get:function(){return Ih.tokenName}});var mNe=yh();Object.defineProperty(ae,"getLookaheadPaths",{enumerable:!0,get:function(){return mNe.getLookaheadPaths}});var yNe=b1();Object.defineProperty(ae,"LLkLookaheadStrategy",{enumerable:!0,get:function(){return yNe.LLkLookaheadStrategy}});var hNe=mh();Object.defineProperty(ae,"defaultParserErrorProvider",{enumerable:!0,get:function(){return hNe.defaultParserErrorProvider}});var h_=gh();Object.defineProperty(ae,"EarlyExitException",{enumerable:!0,get:function(){return h_.EarlyExitException}});Object.defineProperty(ae,"isRecognitionException",{enumerable:!0,get:function(){return h_.isRecognitionException}});Object.defineProperty(ae,"MismatchedTokenException",{enumerable:!0,get:function(){return h_.MismatchedTokenException}});Object.defineProperty(ae,"NotAllInputParsedException",{enumerable:!0,get:function(){return h_.NotAllInputParsedException}});Object.defineProperty(ae,"NoViableAltException",{enumerable:!0,get:function(){return h_.NoViableAltException}});var gNe=JO();Object.defineProperty(ae,"defaultLexerErrorProvider",{enumerable:!0,get:function(){return gNe.defaultLexerErrorProvider}});var Ro=Ur();Object.defineProperty(ae,"Alternation",{enumerable:!0,get:function(){return Ro.Alternation}});Object.defineProperty(ae,"Alternative",{enumerable:!0,get:function(){return Ro.Alternative}});Object.defineProperty(ae,"NonTerminal",{enumerable:!0,get:function(){return Ro.NonTerminal}});Object.defineProperty(ae,"Option",{enumerable:!0,get:function(){return Ro.Option}});Object.defineProperty(ae,"Repetition",{enumerable:!0,get:function(){return Ro.Repetition}});Object.defineProperty(ae,"RepetitionMandatory",{enumerable:!0,get:function(){return Ro.RepetitionMandatory}});Object.defineProperty(ae,"RepetitionMandatoryWithSeparator",{enumerable:!0,get:function(){return Ro.RepetitionMandatoryWithSeparator}});Object.defineProperty(ae,"RepetitionWithSeparator",{enumerable:!0,get:function(){return Ro.RepetitionWithSeparator}});Object.defineProperty(ae,"Rule",{enumerable:!0,get:function(){return Ro.Rule}});Object.defineProperty(ae,"Terminal",{enumerable:!0,get:function(){return Ro.Terminal}});var I1=Ur();Object.defineProperty(ae,"serializeGrammar",{enumerable:!0,get:function(){return I1.serializeGrammar}});Object.defineProperty(ae,"serializeProduction",{enumerable:!0,get:function(){return I1.serializeProduction}});Object.defineProperty(ae,"GAstVisitor",{enumerable:!0,get:function(){return I1.GAstVisitor}});var vNe=Dz();Object.defineProperty(ae,"generateCstDts",{enumerable:!0,get:function(){return vNe.generateCstDts}});function _Ne(){console.warn(`The clearCache function was 'soft' removed from the Chevrotain API.
	 It performs no action other than printing this message.
	 Please avoid using it as it will be completely removed in the future`)}ae.clearCache=_Ne;var $Ne=Mz();Object.defineProperty(ae,"createSyntaxDiagramsCode",{enumerable:!0,get:function(){return $Ne.createSyntaxDiagramsCode}});var TNe=function(){function r(){throw new Error(`The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.	
See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0`)}return r}();ae.Parser=TNe});var Nz=p($e=>{"use strict";var Ez=$e&&$e.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty($e,"__esModule",{value:!0});$e.createATN=$e.RuleTransition=$e.EpsilonTransition=$e.AtomTransition=$e.AbstractTransition=$e.ATN_LOOP_END=$e.ATN_PLUS_LOOP_BACK=$e.ATN_STAR_LOOP_ENTRY=$e.ATN_STAR_LOOP_BACK=$e.ATN_BLOCK_END=$e.ATN_RULE_STOP=$e.ATN_TOKEN_START=$e.ATN_STAR_BLOCK_START=$e.ATN_PLUS_BLOCK_START=$e.ATN_RULE_START=$e.ATN_BASIC=$e.ATN_INVALID_TYPE=$e.buildATNKey=void 0;var Oz=Ez(Tn()),RNe=Ez(Qv()),Mi=Sf();function v_(r,e,t){return`${r.name}_${e}_${t}`}$e.buildATNKey=v_;$e.ATN_INVALID_TYPE=0;$e.ATN_BASIC=1;$e.ATN_RULE_START=2;$e.ATN_PLUS_BLOCK_START=4;$e.ATN_STAR_BLOCK_START=5;$e.ATN_TOKEN_START=6;$e.ATN_RULE_STOP=7;$e.ATN_BLOCK_END=8;$e.ATN_STAR_LOOP_BACK=9;$e.ATN_STAR_LOOP_ENTRY=10;$e.ATN_PLUS_LOOP_BACK=11;$e.ATN_LOOP_END=12;var Fh=class{constructor(e){this.target=e}isEpsilon(){return!1}};$e.AbstractTransition=Fh;var Ob=class extends Fh{constructor(e,t){super(e),this.tokenType=t}};$e.AtomTransition=Ob;var kb=class extends Fh{constructor(e){super(e)}isEpsilon(){return!0}};$e.EpsilonTransition=kb;var g_=class extends Fh{constructor(e,t,n){super(e),this.rule=t,this.followState=n}isEpsilon(){return!0}};$e.RuleTransition=g_;function bNe(r){let e={decisionMap:{},decisionStates:[],ruleToStartState:new Map,ruleToStopState:new Map,states:[]};CNe(e,r);let t=r.length;for(let n=0;n<t;n++){let i=r[n],a=Mf(e,i,i);a!==void 0&&FNe(e,i,a)}return e}$e.createATN=bNe;function CNe(r,e){let t=e.length;for(let n=0;n<t;n++){let i=e[n],a=Cn(r,i,void 0,{type:$e.ATN_RULE_START}),s=Cn(r,i,void 0,{type:$e.ATN_RULE_STOP});a.stop=s,r.ruleToStartState.set(i,a),r.ruleToStopState.set(i,s)}}function kz(r,e,t){return t instanceof Mi.Terminal?F1(r,e,t.terminalType,t):t instanceof Mi.NonTerminal?INe(r,e,t):t instanceof Mi.Alternation?MNe(r,e,t):t instanceof Mi.Option?PNe(r,e,t):t instanceof Mi.Repetition?ANe(r,e,t):t instanceof Mi.RepetitionWithSeparator?wNe(r,e,t):t instanceof Mi.RepetitionMandatory?DNe(r,e,t):t instanceof Mi.RepetitionMandatoryWithSeparator?SNe(r,e,t):Mf(r,e,t)}function ANe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_STAR_BLOCK_START});zu(r,n);let i=Nh(r,e,n,t,Mf(r,e,t));return Fz(r,e,t,i)}function wNe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_STAR_BLOCK_START});zu(r,n);let i=Nh(r,e,n,t,Mf(r,e,t)),a=F1(r,e,t.separator,t);return Fz(r,e,t,i,a)}function DNe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_PLUS_BLOCK_START});zu(r,n);let i=Nh(r,e,n,t,Mf(r,e,t));return Iz(r,e,t,i)}function SNe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_PLUS_BLOCK_START});zu(r,n);let i=Nh(r,e,n,t,Mf(r,e,t)),a=F1(r,e,t.separator,t);return Iz(r,e,t,i,a)}function MNe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_BASIC});zu(r,n);let i=(0,Oz.default)(t.definition,s=>kz(r,e,s));return Nh(r,e,n,t,...i)}function PNe(r,e,t){let n=Cn(r,e,t,{type:$e.ATN_BASIC});zu(r,n);let i=Nh(r,e,n,t,Mf(r,e,t));return ENe(r,e,t,i)}function Mf(r,e,t){let n=(0,RNe.default)((0,Oz.default)(t.definition,i=>kz(r,e,i)),i=>i!==void 0);return n.length===1?n[0]:n.length===0?void 0:kNe(r,n)}function Iz(r,e,t,n,i){let a=n.left,s=n.right,o=Cn(r,e,t,{type:$e.ATN_PLUS_LOOP_BACK});zu(r,o);let u=Cn(r,e,t,{type:$e.ATN_LOOP_END});return a.loopback=o,u.loopback=o,r.decisionMap[v_(e,i?"RepetitionMandatoryWithSeparator":"RepetitionMandatory",t.idx)]=o,tn(s,o),i===void 0?(tn(o,a),tn(o,u)):(tn(o,u),tn(o,i.left),tn(i.right,a)),{left:a,right:u}}function Fz(r,e,t,n,i){let a=n.left,s=n.right,o=Cn(r,e,t,{type:$e.ATN_STAR_LOOP_ENTRY});zu(r,o);let u=Cn(r,e,t,{type:$e.ATN_LOOP_END}),c=Cn(r,e,t,{type:$e.ATN_STAR_LOOP_BACK});return o.loopback=c,u.loopback=c,tn(o,a),tn(o,u),tn(s,c),i!==void 0?(tn(c,u),tn(c,i.left),tn(i.right,a)):tn(c,o),r.decisionMap[v_(e,i?"RepetitionWithSeparator":"Repetition",t.idx)]=o,{left:o,right:u}}function ENe(r,e,t,n){let i=n.left,a=n.right;return tn(i,a),r.decisionMap[v_(e,"Option",t.idx)]=i,n}function zu(r,e){return r.decisionStates.push(e),e.decision=r.decisionStates.length-1,e.decision}function Nh(r,e,t,n,...i){let a=Cn(r,e,n,{type:$e.ATN_BLOCK_END,start:t});t.end=a;for(let o of i)o!==void 0?(tn(t,o.left),tn(o.right,a)):tn(t,a);let s={left:t,right:a};return r.decisionMap[v_(e,ONe(n),n.idx)]=t,s}function ONe(r){if(r instanceof Mi.Alternation)return"Alternation";if(r instanceof Mi.Option)return"Option";if(r instanceof Mi.Repetition)return"Repetition";if(r instanceof Mi.RepetitionWithSeparator)return"RepetitionWithSeparator";if(r instanceof Mi.RepetitionMandatory)return"RepetitionMandatory";if(r instanceof Mi.RepetitionMandatoryWithSeparator)return"RepetitionMandatoryWithSeparator";throw new Error("Invalid production type encountered")}function kNe(r,e){let t=e.length;for(let a=0;a<t-1;a++){let s=e[a],o;s.left.transitions.length===1&&(o=s.left.transitions[0]);let u=o instanceof g_,c=o,f=e[a+1].left;s.left.type===$e.ATN_BASIC&&s.right.type===$e.ATN_BASIC&&o!==void 0&&(u&&c.followState===s.right||o.target===s.right)?(u?c.followState=f:o.target=f,NNe(r,s.right)):tn(s.right,f)}let n=e[0],i=e[t-1];return{left:n.left,right:i.right}}function F1(r,e,t,n){let i=Cn(r,e,n,{type:$e.ATN_BASIC}),a=Cn(r,e,n,{type:$e.ATN_BASIC});return N1(i,new Ob(a,t)),{left:i,right:a}}function INe(r,e,t){let n=t.referencedRule,i=r.ruleToStartState.get(n),a=Cn(r,e,t,{type:$e.ATN_BASIC}),s=Cn(r,e,t,{type:$e.ATN_BASIC}),o=new g_(i,n,s);return N1(a,o),{left:a,right:s}}function FNe(r,e,t){let n=r.ruleToStartState.get(e);tn(n,t.left);let i=r.ruleToStopState.get(e);return tn(t.right,i),{left:n,right:i}}function tn(r,e){let t=new kb(e);N1(r,t)}function Cn(r,e,t,n){let i=Object.assign({atn:r,production:t,epsilonOnlyTransitions:!1,rule:e,transitions:[],nextTokenWithinRule:[],stateNumber:r.states.length},n);return r.states.push(i),i}function N1(r,e){r.transitions.length===0&&(r.epsilonOnlyTransitions=e.isEpsilon()),r.transitions.push(e)}function NNe(r,e){r.states.splice(r.states.indexOf(e),1)}});var xz=p(bo=>{"use strict";var qNe=bo&&bo.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(bo,"__esModule",{value:!0});bo.getATNConfigKey=bo.ATNConfigSet=bo.DFA_ERROR=void 0;var xNe=qNe(Tn());bo.DFA_ERROR={};var q1=class{constructor(){this.map={},this.configs=[]}get size(){return this.configs.length}finalize(){this.map={}}add(e){let t=qz(e);t in this.map||(this.map[t]=this.configs.length,this.configs.push(e))}get elements(){return this.configs}get alts(){return(0,xNe.default)(this.configs,e=>e.alt)}get key(){let e="";for(let t in this.map)e+=t+":";return e}};bo.ATNConfigSet=q1;function qz(r,e=!0){return`${e?`a${r.alt}`:""}s${r.state.stateNumber}:${r.stack.map(t=>t.stateNumber.toString()).join("_")}`}bo.getATNConfigKey=qz});var jz=p((Lft,Lz)=>{var LNe=eh();function jNe(r,e,t){for(var n=-1,i=r.length;++n<i;){var a=r[n],s=e(a);if(s!=null&&(o===void 0?s===s&&!LNe(s):t(s,o)))var o=s,u=a}return u}Lz.exports=jNe});var Bz=p((jft,Uz)=>{function UNe(r,e){return r<e}Uz.exports=UNe});var Kz=p((Uft,Gz)=>{var BNe=jz(),GNe=Bz(),KNe=yf();function HNe(r){return r&&r.length?BNe(r,KNe,GNe):void 0}Gz.exports=HNe});var Vz=p((Bft,Hz)=>{var VNe=Da(),WNe=OO();function zNe(r,e){return r&&r.length?WNe(r,VNe(e,2)):[]}Hz.exports=zNe});var Zz=p(qh=>{"use strict";var Xu=qh&&qh.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(qh,"__esModule",{value:!0});qh.LLStarLookaheadStrategy=void 0;var Qi=Sf(),Rs=Nz(),Yu=xz(),YNe=Xu(Kz()),XNe=Xu(ab()),JNe=Xu(Vz()),__=Xu(Tn()),QNe=Xu(vs()),x1=Xu(Rn()),ZNe=Xu(Wi()),Wz=Xu(Yl());function eqe(r,e){let t={};return n=>{let i=n.toString(),a=t[i];return a!==void 0||(a={atnStartState:r,decision:e,states:{}},t[i]=a),a}}var Ib=class{constructor(){this.predicates=[]}is(e){return e>=this.predicates.length||this.predicates[e]}set(e,t){this.predicates[e]=t}toString(){let e="",t=this.predicates.length;for(let n=0;n<t;n++)e+=this.predicates[n]===!0?"1":"0";return e}},zz=new Ib,j1=class extends Qi.LLkLookaheadStrategy{constructor(e){var t;super(),this.logging=(t=e?.logging)!==null&&t!==void 0?t:n=>console.log(n)}initialize(e){this.atn=(0,Rs.createATN)(e.rules),this.dfas=tqe(this.atn)}validateAmbiguousAlternationAlternatives(){return[]}validateEmptyOrAlternatives(){return[]}buildLookaheadForAlternation(e){let{prodOccurrence:t,rule:n,hasPredicates:i,dynamicTokensEnabled:a}=e,s=this.dfas,o=this.logging,u=(0,Rs.buildATNKey)(n,"Alternation",t),f=this.atn.decisionMap[u].decision,d=(0,__.default)((0,Qi.getLookaheadPaths)({maxLookahead:1,occurrence:t,prodType:"Alternation",rule:n}),m=>(0,__.default)(m,h=>h[0]));if(Yz(d,!1)&&!a){let m=(0,Wz.default)(d,(h,y,_)=>((0,x1.default)(y,w=>{w&&(h[w.tokenTypeIdx]=_,(0,x1.default)(w.categoryMatches,S=>{h[S]=_}))}),h),{});return i?function(h){var y;let _=this.LA(1),w=m[_.tokenTypeIdx];if(h!==void 0&&w!==void 0){let S=(y=h[w])===null||y===void 0?void 0:y.GATE;if(S!==void 0&&S.call(this)===!1)return}return w}:function(){let h=this.LA(1);return m[h.tokenTypeIdx]}}else return i?function(m){let h=new Ib,y=m===void 0?0:m.length;for(let w=0;w<y;w++){let S=m?.[w].GATE;h.set(w,S===void 0||S.call(this))}let _=L1.call(this,s,f,h,o);return typeof _=="number"?_:void 0}:function(){let m=L1.call(this,s,f,zz,o);return typeof m=="number"?m:void 0}}buildLookaheadForOptional(e){let{prodOccurrence:t,rule:n,prodType:i,dynamicTokensEnabled:a}=e,s=this.dfas,o=this.logging,u=(0,Rs.buildATNKey)(n,i,t),f=this.atn.decisionMap[u].decision,d=(0,__.default)((0,Qi.getLookaheadPaths)({maxLookahead:1,occurrence:t,prodType:i,rule:n}),m=>(0,__.default)(m,h=>h[0]));if(Yz(d)&&d[0][0]&&!a){let m=d[0],h=(0,QNe.default)(m);if(h.length===1&&(0,ZNe.default)(h[0].categoryMatches)){let _=h[0].tokenTypeIdx;return function(){return this.LA(1).tokenTypeIdx===_}}else{let y=(0,Wz.default)(h,(_,w)=>(w!==void 0&&(_[w.tokenTypeIdx]=!0,(0,x1.default)(w.categoryMatches,S=>{_[S]=!0})),_),{});return function(){let _=this.LA(1);return y[_.tokenTypeIdx]===!0}}}return function(){let m=L1.call(this,s,f,zz,o);return typeof m=="object"?!1:m===0}}};qh.LLStarLookaheadStrategy=j1;function Yz(r,e=!0){let t=new Set;for(let n of r){let i=new Set;for(let a of n){if(a===void 0){if(e)break;return!1}let s=[a.tokenTypeIdx].concat(a.categoryMatches);for(let o of s)if(t.has(o)){if(!i.has(o))return!1}else t.add(o),i.add(o)}}return!0}function tqe(r){let e=r.decisionStates.length,t=Array(e);for(let n=0;n<e;n++)t[n]=eqe(r.decisionStates[n],n);return t}function L1(r,e,t,n){let i=r[e](t),a=i.start;if(a===void 0){let o=dqe(i.atnStartState);a=Qz(i,Jz(o)),i.start=a}return rqe.apply(this,[i,a,t,n])}function rqe(r,e,t,n){let i=e,a=1,s=[],o=this.LA(a++);for(;;){let u=lqe(i,o);if(u===void 0&&(u=nqe.apply(this,[r,i,o,a,t,n])),u===Yu.DFA_ERROR)return oqe(s,i,o);if(u.isAcceptState===!0)return u.prediction;i=u,s.push(o),o=this.LA(a++)}}function nqe(r,e,t,n,i,a){let s=uqe(e.configs,t,i);if(s.size===0)return Xz(r,e,t,Yu.DFA_ERROR),Yu.DFA_ERROR;let o=Jz(s),u=fqe(s,i);if(u!==void 0)o.isAcceptState=!0,o.prediction=u,o.configs.uniqueAlt=u;else if(hqe(s)){let c=(0,YNe.default)(s.alts);o.isAcceptState=!0,o.prediction=c,o.configs.uniqueAlt=c,iqe.apply(this,[r,n,s.alts,a])}return o=Xz(r,e,t,o),o}function iqe(r,e,t,n){let i=[];for(let c=1;c<=e;c++)i.push(this.LA(c).tokenType);let a=r.atnStartState,s=a.rule,o=a.production,u=aqe({topLevelRule:s,ambiguityIndices:t,production:o,prefixPath:i});n(u)}function aqe(r){let e=(0,__.default)(r.prefixPath,i=>(0,Qi.tokenLabel)(i)).join(", "),t=r.production.idx===0?"":r.production.idx,n=`Ambiguous Alternatives Detected: <${r.ambiguityIndices.join(", ")}> in <${sqe(r.production)}${t}> inside <${r.topLevelRule.name}> Rule,
<${e}> may appears as a prefix path in all these alternatives.
`;return n=n+`See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES
For Further details.`,n}function sqe(r){if(r instanceof Qi.NonTerminal)return"SUBRULE";if(r instanceof Qi.Option)return"OPTION";if(r instanceof Qi.Alternation)return"OR";if(r instanceof Qi.RepetitionMandatory)return"AT_LEAST_ONE";if(r instanceof Qi.RepetitionMandatoryWithSeparator)return"AT_LEAST_ONE_SEP";if(r instanceof Qi.RepetitionWithSeparator)return"MANY_SEP";if(r instanceof Qi.Repetition)return"MANY";if(r instanceof Qi.Terminal)return"CONSUME";throw Error("non exhaustive match")}function oqe(r,e,t){let n=(0,XNe.default)(e.configs.elements,a=>a.state.transitions),i=(0,JNe.default)(n.filter(a=>a instanceof Rs.AtomTransition).map(a=>a.tokenType),a=>a.tokenTypeIdx);return{actualToken:t,possibleTokenTypes:i,tokenPath:r}}function lqe(r,e){return r.edges[e.tokenTypeIdx]}function uqe(r,e,t){let n=new Yu.ATNConfigSet,i=[];for(let s of r.elements){if(t.is(s.alt)===!1)continue;if(s.state.type===Rs.ATN_RULE_STOP){i.push(s);continue}let o=s.state.transitions.length;for(let u=0;u<o;u++){let c=s.state.transitions[u],f=cqe(c,e);f!==void 0&&n.add({state:f,alt:s.alt,stack:s.stack})}}let a;if(i.length===0&&n.size===1&&(a=n),a===void 0){a=new Yu.ATNConfigSet;for(let s of n.elements)Fb(s,a)}if(i.length>0&&!mqe(a))for(let s of i)a.add(s);return a}function cqe(r,e){if(r instanceof Rs.AtomTransition&&(0,Qi.tokenMatcher)(e,r.tokenType))return r.target}function fqe(r,e){let t;for(let n of r.elements)if(e.is(n.alt)===!0){if(t===void 0)t=n.alt;else if(t!==n.alt)return}return t}function Jz(r){return{configs:r,edges:{},isAcceptState:!1,prediction:-1}}function Xz(r,e,t,n){return n=Qz(r,n),e.edges[t.tokenTypeIdx]=n,n}function Qz(r,e){if(e===Yu.DFA_ERROR)return e;let t=e.configs.key,n=r.states[t];return n!==void 0?n:(e.configs.finalize(),r.states[t]=e,e)}function dqe(r){let e=new Yu.ATNConfigSet,t=r.transitions.length;for(let n=0;n<t;n++){let a={state:r.transitions[n].target,alt:n,stack:[]};Fb(a,e)}return e}function Fb(r,e){let t=r.state;if(t.type===Rs.ATN_RULE_STOP){if(r.stack.length>0){let i=[...r.stack],s={state:i.pop(),alt:r.alt,stack:i};Fb(s,e)}else e.add(r);return}t.epsilonOnlyTransitions||e.add(r);let n=t.transitions.length;for(let i=0;i<n;i++){let a=t.transitions[i],s=pqe(r,a);s!==void 0&&Fb(s,e)}}function pqe(r,e){if(e instanceof Rs.EpsilonTransition)return{state:e.target,alt:r.alt,stack:r.stack};if(e instanceof Rs.RuleTransition){let t=[...r.stack,e.followState];return{state:e.target,alt:r.alt,stack:t}}}function mqe(r){for(let e of r.elements)if(e.state.type===Rs.ATN_RULE_STOP)return!0;return!1}function yqe(r){for(let e of r.elements)if(e.state.type!==Rs.ATN_RULE_STOP)return!1;return!0}function hqe(r){if(yqe(r))return!0;let e=gqe(r.elements);return vqe(e)&&!_qe(e)}function gqe(r){let e=new Map;for(let t of r){let n=(0,Yu.getATNConfigKey)(t,!1),i=e.get(n);i===void 0&&(i={},e.set(n,i)),i[t.alt]=!0}return e}function vqe(r){for(let e of Array.from(r.values()))if(Object.keys(e).length>1)return!0;return!1}function _qe(r){for(let e of Array.from(r.values()))if(Object.keys(e).length===1)return!0;return!1}});var eY=p(Nb=>{"use strict";Object.defineProperty(Nb,"__esModule",{value:!0});Nb.LLStarLookaheadStrategy=void 0;var $qe=Zz();Object.defineProperty(Nb,"LLStarLookaheadStrategy",{enumerable:!0,get:function(){return $qe.LLStarLookaheadStrategy}})});var xb=p(Ea=>{"use strict";Object.defineProperty(Ea,"__esModule",{value:!0});Ea.RootCstNodeImpl=Ea.CompositeCstNodeImpl=Ea.LeafCstNodeImpl=Ea.AbstractCstNode=Ea.CstNodeBuilder=void 0;var tY=oy(),Tqe=Un(),rY=Ut(),U1=class{constructor(){this.nodeStack=[]}get current(){return this.nodeStack[this.nodeStack.length-1]}buildRootNode(e){return this.rootNode=new qb(e),this.nodeStack=[this.rootNode],this.rootNode}buildCompositeNode(e){let t=new R_;return t.feature=e,t.root=this.rootNode,this.current.children.push(t),this.nodeStack.push(t),t}buildLeafNode(e,t){let n=new T_(e.startOffset,e.image.length,(0,rY.tokenToRange)(e),e.tokenType,!1);return n.feature=t,n.root=this.rootNode,this.current.children.push(n),n}removeNode(e){let t=e.parent;if(t){let n=t.children.indexOf(e);n>=0&&t.children.splice(n,1)}}construct(e){let t=this.current;typeof e.$type=="string"&&(this.current.element=e),e.$cstNode=t;let n=this.nodeStack.pop();n?.children.length===0&&this.removeNode(n)}addHiddenTokens(e){for(let t of e){let n=new T_(t.startOffset,t.image.length,(0,rY.tokenToRange)(t),t.tokenType,!0);n.root=this.rootNode,this.addHiddenToken(this.rootNode,n)}}addHiddenToken(e,t){let{offset:n,end:i}=t;for(let a=0;a<e.children.length;a++){let s=e.children[a],{offset:o,end:u}=s;if((0,Tqe.isCompositeCstNode)(s)&&n>o&&i<u){this.addHiddenToken(s,t);return}else if(i<=o){e.children.splice(a,0,t);return}}e.children.push(t)}};Ea.CstNodeBuilder=U1;var $_=class{get hidden(){return!1}get element(){var e,t;let n=typeof((e=this._element)===null||e===void 0?void 0:e.$type)=="string"?this._element:(t=this.parent)===null||t===void 0?void 0:t.element;if(!n)throw new Error("This node has no associated AST element");return n}set element(e){this._element=e}get text(){return this.root.fullText.substring(this.offset,this.end)}};Ea.AbstractCstNode=$_;var T_=class extends $_{get offset(){return this._offset}get length(){return this._length}get end(){return this._offset+this._length}get hidden(){return this._hidden}get tokenType(){return this._tokenType}get range(){return this._range}constructor(e,t,n,i,a=!1){super(),this._hidden=a,this._offset=e,this._tokenType=i,this._length=t,this._range=n}};Ea.LeafCstNodeImpl=T_;var R_=class extends $_{constructor(){super(...arguments),this.children=new b_(this)}get offset(){var e,t;return(t=(e=this.firstNonHiddenNode)===null||e===void 0?void 0:e.offset)!==null&&t!==void 0?t:0}get length(){return this.end-this.offset}get end(){var e,t;return(t=(e=this.lastNonHiddenNode)===null||e===void 0?void 0:e.end)!==null&&t!==void 0?t:0}get range(){let e=this.firstNonHiddenNode,t=this.lastNonHiddenNode;if(e&&t){if(this._rangeCache===void 0){let{range:n}=e,{range:i}=t;this._rangeCache={start:n.start,end:i.end.line<n.start.line?n.start:i.end}}return this._rangeCache}else return{start:tY.Position.create(0,0),end:tY.Position.create(0,0)}}get firstNonHiddenNode(){for(let e of this.children)if(!e.hidden)return e;return this.children[0]}get lastNonHiddenNode(){for(let e=this.children.length-1;e>=0;e--){let t=this.children[e];if(!t.hidden)return t}return this.children[this.children.length-1]}};Ea.CompositeCstNodeImpl=R_;var b_=class extends Array{constructor(e){super(),this.parent=e,Object.setPrototypeOf(this,b_.prototype)}push(...e){return this.addParents(e),super.push(...e)}unshift(...e){return this.addParents(e),super.unshift(...e)}splice(e,t,...n){return this.addParents(n),super.splice(e,t,...n)}addParents(e){for(let t of e)t.parent=this.parent}},qb=class extends R_{get text(){return this._text.substring(this.offset,this.end)}get fullText(){return this._text}constructor(e){super(),this._text="",this._text=e??""}};Ea.RootCstNodeImpl=qb});var Bb=p(hi=>{"use strict";Object.defineProperty(hi,"__esModule",{value:!0});hi.LangiumCompletionParser=hi.LangiumParserErrorMessageProvider=hi.LangiumParser=hi.AbstractLangiumParser=hi.DatatypeSymbol=void 0;var jb=Sf(),Rqe=eY(),Lb=yt(),nY=$n(),iY=bt(),bqe=xb();hi.DatatypeSymbol=Symbol("Datatype");function B1(r){return r.$type===hi.DatatypeSymbol}var aY="\u200B",sY=r=>r.endsWith(aY)?r:r+aY,C_=class{constructor(e){this._unorderedGroups=new Map,this.lexer=e.parser.Lexer;let t=this.lexer.definition;this.wrapper=new H1(t,e.parser.ParserConfig)}alternatives(e,t){this.wrapper.wrapOr(e,t)}optional(e,t){this.wrapper.wrapOption(e,t)}many(e,t){this.wrapper.wrapMany(e,t)}atLeastOne(e,t){this.wrapper.wrapAtLeastOne(e,t)}isRecording(){return this.wrapper.IS_RECORDING}get unorderedGroups(){return this._unorderedGroups}getRuleStack(){return this.wrapper.RULE_STACK}finalize(){this.wrapper.wrapSelfAnalysis()}};hi.AbstractLangiumParser=C_;var G1=class extends C_{get current(){return this.stack[this.stack.length-1]}constructor(e){super(e),this.nodeBuilder=new bqe.CstNodeBuilder,this.stack=[],this.assignmentMap=new Map,this.linker=e.references.Linker,this.converter=e.parser.ValueConverter,this.astReflection=e.shared.AstReflection}rule(e,t){let n=e.fragment?void 0:(0,nY.isDataTypeRule)(e)?hi.DatatypeSymbol:(0,nY.getTypeName)(e),i=this.wrapper.DEFINE_RULE(sY(e.name),this.startImplementation(n,t).bind(this));return e.entry&&(this.mainRule=i),i}parse(e){this.nodeBuilder.buildRootNode(e);let t=this.lexer.tokenize(e);this.wrapper.input=t.tokens;let n=this.mainRule.call(this.wrapper,{});return this.nodeBuilder.addHiddenTokens(t.hidden),this.unorderedGroups.clear(),{value:n,lexerErrors:t.errors,parserErrors:this.wrapper.errors}}startImplementation(e,t){return n=>{if(!this.isRecording()){let a={$type:e};this.stack.push(a),e===hi.DatatypeSymbol&&(a.value="")}let i;try{i=t(n)}catch{i=void 0}return!this.isRecording()&&i===void 0&&(i=this.construct()),i}}consume(e,t,n){let i=this.wrapper.wrapConsume(e,t);if(!this.isRecording()&&!i.isInsertedInRecovery){let a=this.nodeBuilder.buildLeafNode(i,n),{assignment:s,isCrossRef:o}=this.getAssignment(n),u=this.current;if(s){let c=(0,Lb.isKeyword)(n)?i.image:this.converter.convert(i.image,a);this.assign(s.operator,s.feature,c,a,o)}else if(B1(u)){let c=i.image;(0,Lb.isKeyword)(n)||(c=this.converter.convert(c,a).toString()),u.value+=c}}}subrule(e,t,n,i){let a;this.isRecording()||(a=this.nodeBuilder.buildCompositeNode(n));let s=this.wrapper.wrapSubrule(e,t,i);!this.isRecording()&&a&&a.length>0&&this.performSubruleAssignment(s,n,a)}performSubruleAssignment(e,t,n){let{assignment:i,isCrossRef:a}=this.getAssignment(t);if(i)this.assign(i.operator,i.feature,e,n,a);else if(!i){let s=this.current;if(B1(s))s.value+=e.toString();else{let o=e.$type,u=this.assignWithoutOverride(e,s);o&&(u.$type=o);let c=u;this.stack.pop(),this.stack.push(c)}}}action(e,t){if(!this.isRecording()){let n=this.current;if(!n.$cstNode&&t.feature&&t.operator){n=this.construct(!1);let a=n.$cstNode.feature;this.nodeBuilder.buildCompositeNode(a)}let i={$type:e};this.stack.pop(),this.stack.push(i),t.feature&&t.operator&&this.assign(t.operator,t.feature,n,n.$cstNode,!1)}}construct(e=!0){if(this.isRecording())return;let t=this.current;return(0,iY.linkContentToContainer)(t),this.nodeBuilder.construct(t),e&&this.stack.pop(),B1(t)?this.converter.convert(t.value,t.$cstNode):(this.assignMandatoryProperties(t),t)}assignMandatoryProperties(e){let t=this.astReflection.getTypeMetaData(e.$type);for(let n of t.mandatory){let i=e[n.name];n.type==="array"&&!Array.isArray(i)?e[n.name]=[]:n.type==="boolean"&&i===void 0&&(e[n.name]=!1)}}getAssignment(e){if(!this.assignmentMap.has(e)){let t=(0,iY.getContainerOfType)(e,Lb.isAssignment);this.assignmentMap.set(e,{assignment:t,isCrossRef:t?(0,Lb.isCrossReference)(t.terminal):!1})}return this.assignmentMap.get(e)}assign(e,t,n,i,a){let s=this.current,o;switch(a&&typeof n=="string"?o=this.linker.buildReference(s,t,i,n):o=n,e){case"=":{s[t]=o;break}case"?=":{s[t]=!0;break}case"+=":Array.isArray(s[t])||(s[t]=[]),s[t].push(o)}}assignWithoutOverride(e,t){for(let[n,i]of Object.entries(t)){let a=e[n];a===void 0?e[n]=i:Array.isArray(a)&&Array.isArray(i)&&(i.push(...a),e[n]=i)}return e}get definitionErrors(){return this.wrapper.definitionErrors}};hi.LangiumParser=G1;var Ub=class{buildMismatchTokenMessage({expected:e,actual:t}){return`Expecting ${e.LABEL?"`"+e.LABEL+"`":e.name.endsWith(":KW")?`keyword '${e.name.substring(0,e.name.length-3)}'`:`token of type '${e.name}'`} but found \`${t.image}\`.`}buildNotAllInputParsedMessage({firstRedundant:e}){return`Expecting end of file but found \`${e.image}\`.`}buildNoViableAltMessage(e){return jb.defaultParserErrorProvider.buildNoViableAltMessage(e)}buildEarlyExitMessage(e){return jb.defaultParserErrorProvider.buildEarlyExitMessage(e)}};hi.LangiumParserErrorMessageProvider=Ub;var K1=class extends C_{constructor(){super(...arguments),this.tokens=[],this.elementStack=[],this.lastElementStack=[],this.nextTokenIndex=0,this.stackSize=0}action(){}construct(){}parse(e){this.resetState();let t=this.lexer.tokenize(e);return this.tokens=t.tokens,this.wrapper.input=[...this.tokens],this.mainRule.call(this.wrapper,{}),this.unorderedGroups.clear(),{tokens:this.tokens,elementStack:[...this.lastElementStack],tokenIndex:this.nextTokenIndex}}rule(e,t){let n=this.wrapper.DEFINE_RULE(sY(e.name),this.startImplementation(t).bind(this));return e.entry&&(this.mainRule=n),n}resetState(){this.elementStack=[],this.lastElementStack=[],this.nextTokenIndex=0,this.stackSize=0}startImplementation(e){return t=>{let n=this.keepStackSize();try{e(t)}finally{this.resetStackSize(n)}}}removeUnexpectedElements(){this.elementStack.splice(this.stackSize)}keepStackSize(){let e=this.elementStack.length;return this.stackSize=e,e}resetStackSize(e){this.removeUnexpectedElements(),this.stackSize=e}consume(e,t,n){this.wrapper.wrapConsume(e,t),this.isRecording()||(this.lastElementStack=[...this.elementStack,n],this.nextTokenIndex=this.currIdx+1)}subrule(e,t,n,i){this.before(n),this.wrapper.wrapSubrule(e,t,i),this.after(n)}before(e){this.isRecording()||this.elementStack.push(e)}after(e){if(!this.isRecording()){let t=this.elementStack.lastIndexOf(e);t>=0&&this.elementStack.splice(t)}}get currIdx(){return this.wrapper.currIdx}};hi.LangiumCompletionParser=K1;var Cqe={recoveryEnabled:!0,nodeLocationTracking:"full",skipValidations:!0,errorMessageProvider:new Ub},H1=class extends jb.EmbeddedActionsParser{constructor(e,t){let n=t&&"maxLookahead"in t;super(e,Object.assign(Object.assign(Object.assign({},Cqe),{lookaheadStrategy:n?new jb.LLkLookaheadStrategy({maxLookahead:t.maxLookahead}):new Rqe.LLStarLookaheadStrategy({logging:i=>{}})}),t))}get IS_RECORDING(){return this.RECORDING_PHASE}DEFINE_RULE(e,t){return this.RULE(e,t)}wrapSelfAnalysis(){this.performSelfAnalysis()}wrapConsume(e,t){return this.consume(e,t)}wrapSubrule(e,t,n){return this.subrule(e,t,{ARGS:[n]})}wrapOr(e,t){this.or(e,t)}wrapOption(e,t){this.option(e,t)}wrapMany(e,t){this.many(e,t)}wrapAtLeastOne(e,t){this.atLeastOne(e,t)}}});var W1=p(xh=>{"use strict";Object.defineProperty(xh,"__esModule",{value:!0});xh.assertUnreachable=xh.ErrorWithLocation=void 0;var V1=class extends Error{constructor(e,t){super(e?`${t} at ${e.range.start.line}:${e.range.start.character}`:t)}};xh.ErrorWithLocation=V1;function Aqe(r){throw new Error("Error! The input value was not handled.")}xh.assertUnreachable=Aqe});var Hb=p(Kb=>{"use strict";Object.defineProperty(Kb,"__esModule",{value:!0});Kb.createParser=void 0;var oY=Sf(),Xt=yt(),A_=W1(),wqe=vn(),lY=$n(),uY=jr();function Dqe(r,e,t){return Sqe({parser:e,tokens:t,rules:new Map,ruleNames:new Map},r),e}Kb.createParser=Dqe;function Sqe(r,e){let t=(0,uY.getAllReachableRules)(e,!1),n=(0,wqe.stream)(e.rules).filter(Xt.isParserRule).filter(i=>t.has(i));for(let i of n){let a=Object.assign(Object.assign({},r),{consume:1,optional:1,subrule:1,many:1,or:1});a.rules.set(i.name,r.parser.rule(i,Pf(a,i.definition)))}}function Pf(r,e,t=!1){let n;if((0,Xt.isKeyword)(e))n=Fqe(r,e);else if((0,Xt.isAction)(e))n=Mqe(r,e);else if((0,Xt.isAssignment)(e))n=Pf(r,e.terminal);else if((0,Xt.isCrossReference)(e))n=cY(r,e);else if((0,Xt.isRuleCall)(e))n=Pqe(r,e);else if((0,Xt.isAlternatives)(e))n=Oqe(r,e);else if((0,Xt.isUnorderedGroup)(e))n=kqe(r,e);else if((0,Xt.isGroup)(e))n=Iqe(r,e);else throw new A_.ErrorWithLocation(e.$cstNode,`Unexpected element type: ${e.$type}`);return fY(r,t?void 0:Gb(e),n,e.cardinality)}function Mqe(r,e){let t=(0,lY.getTypeName)(e);return()=>r.parser.action(t,e)}function Pqe(r,e){let t=e.rule.ref;if((0,Xt.isParserRule)(t)){let n=r.subrule++,i=e.arguments.length>0?Eqe(t,e.arguments):()=>({});return a=>r.parser.subrule(n,dY(r,t),e,i(a))}else if((0,Xt.isTerminalRule)(t)){let n=r.consume++,i=z1(r,t.name);return()=>r.parser.consume(n,i,e)}else if(t)(0,A_.assertUnreachable)(t);else throw new A_.ErrorWithLocation(e.$cstNode,`Undefined rule type: ${e.$type}`)}function Eqe(r,e){let t=e.map(n=>au(n.value));return n=>{let i={};for(let a=0;a<t.length;a++){let s=r.parameters[a],o=t[a];i[s.name]=o(n)}return i}}function au(r){if((0,Xt.isDisjunction)(r)){let e=au(r.left),t=au(r.right);return n=>e(n)||t(n)}else if((0,Xt.isConjunction)(r)){let e=au(r.left),t=au(r.right);return n=>e(n)&&t(n)}else if((0,Xt.isNegation)(r)){let e=au(r.value);return t=>!e(t)}else if((0,Xt.isParameterReference)(r)){let e=r.parameter.ref.name;return t=>t!==void 0&&t[e]===!0}else if((0,Xt.isLiteralCondition)(r)){let e=Boolean(r.true);return()=>e}(0,A_.assertUnreachable)(r)}function Oqe(r,e){if(e.elements.length===1)return Pf(r,e.elements[0]);{let t=[];for(let i of e.elements){let a={ALT:Pf(r,i,!0)},s=Gb(i);s&&(a.GATE=au(s)),t.push(a)}let n=r.or++;return i=>r.parser.alternatives(n,t.map(a=>{let s={ALT:()=>a.ALT(i)},o=a.GATE;return o&&(s.GATE=()=>o(i)),s}))}}function kqe(r,e){if(e.elements.length===1)return Pf(r,e.elements[0]);let t=[];for(let o of e.elements){let u={ALT:Pf(r,o,!0)},c=Gb(o);c&&(u.GATE=au(c)),t.push(u)}let n=r.or++,i=(o,u)=>{let c=u.getRuleStack().join("-");return`uGroup_${o}_${c}`},a=o=>r.parser.alternatives(n,t.map((u,c)=>{let f={ALT:()=>!0},d=r.parser;f.ALT=()=>{if(u.ALT(o),!d.isRecording()){let h=i(n,d);d.unorderedGroups.get(h)||d.unorderedGroups.set(h,[]);let y=d.unorderedGroups.get(h);typeof y?.[c]>"u"&&(y[c]=!0)}};let m=u.GATE;return m?f.GATE=()=>m(o):f.GATE=()=>{let h=d.unorderedGroups.get(i(n,d));return!h?.[c]},f})),s=fY(r,Gb(e),a,"*");return o=>{s(o),r.parser.isRecording()||r.parser.unorderedGroups.delete(i(n,r.parser))}}function Iqe(r,e){let t=e.elements.map(n=>Pf(r,n));return n=>t.forEach(i=>i(n))}function Gb(r){if((0,Xt.isGroup)(r))return r.guardCondition}function cY(r,e,t=e.terminal){if(t)if((0,Xt.isRuleCall)(t)&&(0,Xt.isParserRule)(t.rule.ref)){let n=r.subrule++;return i=>r.parser.subrule(n,dY(r,t.rule.ref),e,i)}else if((0,Xt.isRuleCall)(t)&&(0,Xt.isTerminalRule)(t.rule.ref)){let n=r.consume++,i=z1(r,t.rule.ref.name);return()=>r.parser.consume(n,i,e)}else if((0,Xt.isKeyword)(t)){let n=r.consume++,i=z1(r,t.value);return()=>r.parser.consume(n,i,e)}else throw new Error("Could not build cross reference parser");else{if(!e.type.ref)throw new Error("Could not resolve reference to type: "+e.type.$refText);let n=(0,uY.findNameAssignment)(e.type.ref),i=n?.terminal;if(!i)throw new Error("Could not find name assignment for type: "+(0,lY.getTypeName)(e.type.ref));return cY(r,e,i)}}function Fqe(r,e){let t=r.consume++,n=r.tokens[e.value];if(!n)throw new Error("Could not find token for keyword: "+e.value);return()=>r.parser.consume(t,n,e)}function fY(r,e,t,n){let i=e&&au(e);if(!n)if(i){let a=r.or++;return s=>r.parser.alternatives(a,[{ALT:()=>t(s),GATE:()=>i(s)},{ALT:(0,oY.EMPTY_ALT)(),GATE:()=>!i(s)}])}else return t;if(n==="*"){let a=r.many++;return s=>r.parser.many(a,{DEF:()=>t(s),GATE:i?()=>i(s):void 0})}else if(n==="+"){let a=r.many++;if(i){let s=r.or++;return o=>r.parser.alternatives(s,[{ALT:()=>r.parser.atLeastOne(a,{DEF:()=>t(o)}),GATE:()=>i(o)},{ALT:(0,oY.EMPTY_ALT)(),GATE:()=>!i(o)}])}else return s=>r.parser.atLeastOne(a,{DEF:()=>t(s)})}else if(n==="?"){let a=r.optional++;return s=>r.parser.optional(a,{DEF:()=>t(s),GATE:i?()=>i(s):void 0})}else(0,A_.assertUnreachable)(n)}function dY(r,e){let t=Nqe(r,e),n=r.rules.get(t);if(!n)throw new Error(`Rule "${t}" not found."`);return n}function Nqe(r,e){if((0,Xt.isParserRule)(e))return e.name;if(r.ruleNames.has(e))return r.ruleNames.get(e);{let t=e,n=t.$container,i=e.$type;for(;!(0,Xt.isParserRule)(n);)((0,Xt.isGroup)(n)||(0,Xt.isAlternatives)(n)||(0,Xt.isUnorderedGroup)(n))&&(i=n.elements.indexOf(t).toString()+":"+i),t=n,n=n.$container;return i=n.name+":"+i,r.ruleNames.set(e,i),i}}function z1(r,e){let t=r.tokens[e];if(!t)throw new Error(`Token "${e}" not found."`);return t}});var Y1=p(Vb=>{"use strict";Object.defineProperty(Vb,"__esModule",{value:!0});Vb.createCompletionParser=void 0;var qqe=Bb(),xqe=Hb();function Lqe(r){let e=r.Grammar,t=r.parser.Lexer,n=new qqe.LangiumCompletionParser(r);return(0,xqe.createParser)(e,n,t.definition),n.finalize(),n}Vb.createCompletionParser=Lqe});var X1=p(Lh=>{"use strict";Object.defineProperty(Lh,"__esModule",{value:!0});Lh.prepareLangiumParser=Lh.createLangiumParser=void 0;var jqe=Bb(),Uqe=Hb();function Bqe(r){let e=pY(r);return e.finalize(),e}Lh.createLangiumParser=Bqe;function pY(r){let e=r.Grammar,t=r.parser.Lexer,n=new jqe.LangiumParser(r);return(0,Uqe.createParser)(e,n,t.definition)}Lh.prepareLangiumParser=pY});var Z1=p(zb=>{"use strict";Object.defineProperty(zb,"__esModule",{value:!0});zb.DefaultTokenBuilder=void 0;var Gqe=Sf(),J1=yt(),Kqe=$n(),Hqe=bt(),Vqe=jr(),Wb=sf(),Wqe=vn(),Q1=class{buildTokens(e,t){let n=(0,Wqe.stream)((0,Vqe.getAllReachableRules)(e,!1)),i=this.buildTerminalTokens(n),a=this.buildKeywordTokens(n,i,t);return i.forEach(s=>{let o=s.PATTERN;typeof o=="object"&&o&&"test"in o&&(0,Wb.isWhitespaceRegExp)(o)?a.unshift(s):a.push(s)}),a}buildTerminalTokens(e){return e.filter(J1.isTerminalRule).filter(t=>!t.fragment).map(t=>this.buildTerminalToken(t)).toArray()}buildTerminalToken(e){let t=(0,Kqe.terminalRegex)(e),n={name:e.name,PATTERN:new RegExp(t)};return e.hidden&&(n.GROUP=(0,Wb.isWhitespaceRegExp)(t)?Gqe.Lexer.SKIPPED:"hidden"),n}buildKeywordTokens(e,t,n){return e.filter(J1.isParserRule).flatMap(i=>(0,Hqe.streamAllContents)(i).filter(J1.isKeyword)).distinct(i=>i.value).toArray().sort((i,a)=>a.value.length-i.value.length).map(i=>this.buildKeywordToken(i,t,Boolean(n?.caseInsensitive)))}buildKeywordToken(e,t,n){return{name:e.value,PATTERN:this.buildKeywordPattern(e,n),LONGER_ALT:this.findLongerAlt(e,t)}}buildKeywordPattern(e,t){return t?new RegExp((0,Wb.getCaseInsensitivePattern)(e.value)):e.value}findLongerAlt(e,t){return t.reduce((n,i)=>{let a=i?.PATTERN;return a?.source&&(0,Wb.partialMatches)("^"+a.source+"$",e.value)&&n.push(i),n},[])}};zb.DefaultTokenBuilder=Q1});var tk=p(rn=>{"use strict";Object.defineProperty(rn,"__esModule",{value:!0});rn.convertBoolean=rn.convertNumber=rn.convertDate=rn.convertBigint=rn.convertInt=rn.convertID=rn.convertRegexLiteral=rn.convertString=rn.DefaultValueConverter=void 0;var mY=yt(),zqe=$n(),Yqe=jr(),ek=class{convert(e,t){let n=t.feature;if((0,mY.isCrossReference)(n)&&(n=(0,Yqe.getCrossReferenceTerminal)(n)),(0,mY.isRuleCall)(n)){let i=n.rule.ref;if(!i)throw new Error("This cst node was not parsed by a rule.");return this.runConverter(i,e,t)}return e}runConverter(e,t,n){var i;switch(e.name.toUpperCase()){case"INT":return vY(t);case"STRING":return yY(t);case"ID":return gY(t);case"REGEXLITERAL":return hY(t)}switch((i=(0,zqe.getRuleType)(e))===null||i===void 0?void 0:i.toLowerCase()){case"number":return TY(t);case"boolean":return RY(t);case"bigint":return _Y(t);case"date":return $Y(t);default:return t}}};rn.DefaultValueConverter=ek;function yY(r){let e="";for(let t=1;t<r.length-1;t++){let n=r.charAt(t);if(n==="\\"){let i=r.charAt(++t);e+=Xqe(i)}else e+=n}return e}rn.convertString=yY;function Xqe(r){switch(r){case"b":return"\b";case"f":return"\f";case"n":return`
`;case"r":return"\r";case"t":return"	";case"v":return"\v";case"0":return"\0";default:return r}}function hY(r){return r.substring(1,r.length-1)}rn.convertRegexLiteral=hY;function gY(r){return r.charAt(0)==="^"?r.substring(1):r}rn.convertID=gY;function vY(r){return parseInt(r)}rn.convertInt=vY;function _Y(r){return BigInt(r)}rn.convertBigint=_Y;function $Y(r){return new Date(r)}rn.convertDate=$Y;function TY(r){return Number(r)}rn.convertNumber=TY;function RY(r){return r.toLowerCase()==="true"}rn.convertBoolean=RY});var ik=p(Xb=>{"use strict";Object.defineProperty(Xb,"__esModule",{value:!0});Xb.DefaultLinker=void 0;var Jqe=Pe(),jh=Un(),Yb=bt(),Qqe=Ci(),rk=Iu(),nk=class{constructor(e){this.reflection=e.shared.AstReflection,this.langiumDocuments=()=>e.shared.workspace.LangiumDocuments,this.scopeProvider=e.references.ScopeProvider,this.astNodeLocator=e.workspace.AstNodeLocator}async link(e,t=Jqe.CancellationToken.None){for(let n of(0,Yb.streamAst)(e.parseResult.value))await(0,Qqe.interruptAndCheck)(t),(0,Yb.streamReferences)(n).forEach(i=>this.doLink(i,e));e.state=rk.DocumentState.Linked}doLink(e,t){let n=e.reference;if(n._ref===void 0)try{let i=this.getCandidate(e);if((0,jh.isLinkingError)(i))n._ref=i;else if(n._nodeDescription=i,this.langiumDocuments().hasDocument(i.documentUri)){let a=this.loadAstNode(i);n._ref=a??this.createLinkingError(e,i)}}catch(i){n._ref=Object.assign(Object.assign({},e),{message:`An error occurred while resolving reference to '${n.$refText}': ${i}`})}t.references.push(n)}unlink(e){for(let t of e.references)delete t._ref,delete t._nodeDescription;e.references=[]}getCandidate(e){let n=this.scopeProvider.getScope(e).getElement(e.reference.$refText);return n??this.createLinkingError(e)}buildReference(e,t,n,i){let a=this,s={$refNode:n,$refText:i,get ref(){var o;if((0,jh.isAstNode)(this._ref))return this._ref;if((0,jh.isAstNodeDescription)(this._nodeDescription)){let u=a.loadAstNode(this._nodeDescription);this._ref=u??a.createLinkingError({reference:s,container:e,property:t},this._nodeDescription)}else if(this._ref===void 0){let u=a.getLinkedNode({reference:s,container:e,property:t});if(u.error&&(0,Yb.getDocument)(e).state<rk.DocumentState.ComputedScopes)return;this._ref=(o=u.node)!==null&&o!==void 0?o:u.error,this._nodeDescription=u.descr}return(0,jh.isAstNode)(this._ref)?this._ref:void 0},get $nodeDescription(){return this._nodeDescription},get error(){return(0,jh.isLinkingError)(this._ref)?this._ref:void 0}};return s}getLinkedNode(e){try{let t=this.getCandidate(e);if((0,jh.isLinkingError)(t))return{error:t};let n=this.loadAstNode(t);return n?{node:n,descr:t}:{descr:t,error:this.createLinkingError(e,t)}}catch(t){return{error:Object.assign(Object.assign({},e),{message:`An error occurred while resolving reference to '${e.reference.$refText}': ${t}`})}}}loadAstNode(e){if(e.node)return e.node;let t=this.langiumDocuments().getOrCreateDocument(e.documentUri);return this.astNodeLocator.getAstNode(t.parseResult.value,e.path)}createLinkingError(e,t){let n=(0,Yb.getDocument)(e.container);n.state<rk.DocumentState.ComputedScopes&&console.warn(`Attempted reference resolution before document reached ComputedScopes state (${n.uri}).`);let i=this.reflection.getReferenceType(e);return Object.assign(Object.assign({},e),{message:`Could not resolve reference to ${i} named '${e.reference.$refText}'.`,targetDescription:t})}};Xb.DefaultLinker=nk});var sk=p(Jb=>{"use strict";Object.defineProperty(Jb,"__esModule",{value:!0});Jb.DefaultJsonSerializer=void 0;var w_=Un(),Zqe=bt(),exe=jr();function bY(r){return typeof r=="object"&&!!r&&("$ref"in r||"$error"in r)}var ak=class{constructor(e){this.ignoreProperties=new Set(["$container","$containerProperty","$containerIndex","$document","$cstNode"]),this.astNodeLocator=e.workspace.AstNodeLocator,this.nameProvider=e.references.NameProvider}serialize(e,t){let n=t?.replacer,i=(s,o)=>this.replacer(s,o,t);return JSON.stringify(e,n?(s,o)=>n(s,o,i):i,t?.space)}deserialize(e){let t=JSON.parse(e);return this.linkNode(t,t),t}replacer(e,t,{refText:n,sourceText:i,textRegions:a}={}){var s,o,u;if(!this.ignoreProperties.has(e))if((0,w_.isReference)(t)){let c=t.ref,f=n?t.$refText:void 0;return c?{$refText:f,$ref:"#"+(c&&this.astNodeLocator.getAstNodePath(c))}:{$refText:f,$error:(o=(s=t.error)===null||s===void 0?void 0:s.message)!==null&&o!==void 0?o:"Could not resolve reference"}}else{let c;if(a&&(0,w_.isAstNode)(t)&&(c=this.addAstNodeRegionWithAssignmentsTo(Object.assign({},t)),(!e||t.$document)&&c?.$textRegion))try{c.$textRegion.documentURI=(0,Zqe.getDocument)(t).uri.toString()}catch{}return i&&!e&&(0,w_.isAstNode)(t)&&(c??(c=Object.assign({},t)),c.$sourceText=(u=t.$cstNode)===null||u===void 0?void 0:u.text),c??t}}addAstNodeRegionWithAssignmentsTo(e){let t=n=>({offset:n.offset,end:n.end,length:n.length,range:n.range});if(e.$cstNode){let n=e.$textRegion=t(e.$cstNode),i=n.assignments={};return Object.keys(e).filter(a=>!a.startsWith("$")).forEach(a=>{let s=(0,exe.findNodesForProperty)(e.$cstNode,a).map(t);s.length!==0&&(i[a]=s)}),e}}linkNode(e,t,n,i,a){for(let[o,u]of Object.entries(e))if(Array.isArray(u))for(let c=0;c<u.length;c++){let f=u[c];bY(f)?u[c]=this.reviveReference(e,o,t,f):(0,w_.isAstNode)(f)&&this.linkNode(f,t,e,o,c)}else bY(u)?e[o]=this.reviveReference(e,o,t,u):(0,w_.isAstNode)(u)&&this.linkNode(u,t,e,o);let s=e;s.$container=n,s.$containerProperty=i,s.$containerIndex=a}reviveReference(e,t,n,i){let a=i.$refText;if(i.$ref){let s=this.getRefNode(n,i.$ref);return a||(a=this.nameProvider.getName(s)),{$refText:a??"",ref:s}}else if(i.$error){let s={$refText:a??""};return s.error={container:e,property:t,message:i.$error,reference:s},s}else return}getRefNode(e,t){return this.astNodeLocator.getAstNode(e,t.substring(1))}};Jb.DefaultJsonSerializer=ak});var lk=p(Qb=>{"use strict";Object.defineProperty(Qb,"__esModule",{value:!0});Qb.DefaultServiceRegistry=void 0;var txe=_n(),ok=class{register(e){if(!this.singleton&&!this.map){this.singleton=e;return}if(!this.map&&(this.map={},this.singleton)){for(let t of this.singleton.LanguageMetaData.fileExtensions)this.map[t]=this.singleton;this.singleton=void 0}for(let t of e.LanguageMetaData.fileExtensions)this.map[t]!==void 0&&this.map[t]!==e&&console.warn(`The file extension ${t} is used by multiple languages. It is now assigned to '${e.LanguageMetaData.languageId}'.`),this.map[t]=e}getServices(e){if(this.singleton!==void 0)return this.singleton;if(this.map===void 0)throw new Error("The service registry is empty. Use `register` to register the services of a language.");let t=txe.Utils.extname(e),n=this.map[t];if(!n)throw new Error(`The service registry contains no services for the extension '${t}'.`);return n}get all(){return this.singleton!==void 0?[this.singleton]:this.map!==void 0?Object.values(this.map):[]}};Qb.DefaultServiceRegistry=ok});var ck=p(Zb=>{"use strict";Object.defineProperty(Zb,"__esModule",{value:!0});Zb.ValidationRegistry=void 0;var rxe=us(),nxe=Ci(),uk=class{constructor(e){this.validationChecks=new rxe.MultiMap,this.reflection=e.shared.AstReflection}register(e,t=this){for(let[n,i]of Object.entries(e)){let a=i;if(Array.isArray(a))for(let s of a)this.doRegister(n,this.wrapValidationException(s,t));else typeof a=="function"&&this.doRegister(n,this.wrapValidationException(a,t))}}wrapValidationException(e,t){return async(n,i,a)=>{try{await e.call(t,n,i,a)}catch(s){if((0,nxe.isOperationCancelled)(s))throw s;console.error("An error occurred during validation:",s);let o=s instanceof Error?s.message:String(s);s instanceof Error&&s.stack&&console.error(s.stack),i("error","An error occurred during validation: "+o,{node:n})}}}doRegister(e,t){if(e==="AstNode"){this.validationChecks.add("AstNode",t);return}for(let n of this.reflection.getAllSubTypes(e))this.validationChecks.add(n,t)}getChecks(e){return this.validationChecks.get(e).concat(this.validationChecks.get("AstNode"))}};Zb.ValidationRegistry=uk});var mk=p(Uh=>{"use strict";Object.defineProperty(Uh,"__esModule",{value:!0});Uh.DefaultReferenceDescriptionProvider=Uh.DefaultAstNodeDescriptionProvider=void 0;var ixe=Pe(),axe=Un(),eC=bt(),fk=Ut(),sxe=Ci(),oxe=Bl(),dk=class{constructor(e){this.astNodeLocator=e.workspace.AstNodeLocator,this.nameProvider=e.references.NameProvider}createDescription(e,t,n=(0,eC.getDocument)(e)){var i;t??(t=this.nameProvider.getName(e));let a=this.astNodeLocator.getAstNodePath(e);if(!t)throw new Error(`Node at path ${a} has no name.`);let s=(i=this.nameProvider.getNameNode(e))!==null&&i!==void 0?i:e.$cstNode;return{node:e,name:t,nameSegment:(0,fk.toDocumentSegment)(s),selectionSegment:(0,fk.toDocumentSegment)(e.$cstNode),type:e.$type,documentUri:n.uri,path:a}}};Uh.DefaultAstNodeDescriptionProvider=dk;var pk=class{constructor(e){this.nodeLocator=e.workspace.AstNodeLocator}async createDescriptions(e,t=ixe.CancellationToken.None){let n=[],i=e.parseResult.value;for(let a of(0,eC.streamAst)(i))await(0,sxe.interruptAndCheck)(t),(0,eC.streamReferences)(a).filter(s=>!(0,axe.isLinkingError)(s)).forEach(s=>{let o=this.createDescription(s);o&&n.push(o)});return n}createDescription(e){let t=e.reference.$nodeDescription,n=e.reference.$refNode;if(!t||!n)return;let i=(0,eC.getDocument)(e.container).uri;return{sourceUri:i,sourcePath:this.nodeLocator.getAstNodePath(e.container),targetUri:t.documentUri,targetPath:t.path,segment:(0,fk.toDocumentSegment)(n),local:(0,oxe.equalURI)(t.documentUri,i)}}};Uh.DefaultReferenceDescriptionProvider=pk});var rC=p(tC=>{"use strict";Object.defineProperty(tC,"__esModule",{value:!0});tC.DefaultAstNodeLocator=void 0;var yk=class{constructor(){this.segmentSeparator="/",this.indexSeparator="@"}getAstNodePath(e){if(e.$container){let t=this.getAstNodePath(e.$container),n=this.getPathSegment(e);return t+this.segmentSeparator+n}return""}getPathSegment({$containerProperty:e,$containerIndex:t}){if(!e)throw new Error("Missing '$containerProperty' in AST node.");return t!==void 0?e+this.indexSeparator+t:e}getAstNode(e,t){return t.split(this.segmentSeparator).reduce((i,a)=>{if(!i||a.length===0)return i;let s=a.indexOf(this.indexSeparator);if(s>0){let o=a.substring(0,s),u=parseInt(a.substring(s+1)),c=i[o];return c?.[u]}return i[a]},e)}};tC.DefaultAstNodeLocator=yk});var gk=p(nC=>{"use strict";Object.defineProperty(nC,"__esModule",{value:!0});nC.DefaultConfigurationProvider=void 0;var lxe=Yr(),hk=class{constructor(e){this.settings={},this.workspaceConfig=!1,this.initialized=!1,this.serviceRegistry=e.ServiceRegistry,this.connection=e.lsp.Connection,e.lsp.LanguageServer.onInitialize(t=>{var n,i;this.workspaceConfig=(i=(n=t.capabilities.workspace)===null||n===void 0?void 0:n.configuration)!==null&&i!==void 0?i:!1}),e.lsp.LanguageServer.onInitialized(t=>{var n;let i=this.serviceRegistry.all;(n=e.lsp.Connection)===null||n===void 0||n.client.register(lxe.DidChangeConfigurationNotification.type,{section:i.map(a=>this.toSectionName(a.LanguageMetaData.languageId))})})}async initialize(){if(this.workspaceConfig&&this.connection){let t=this.serviceRegistry.all.map(i=>({section:this.toSectionName(i.LanguageMetaData.languageId)})),n=await this.connection.workspace.getConfiguration(t);t.forEach((i,a)=>{this.updateSectionConfiguration(i.section,n[a])})}this.initialized=!0}updateConfiguration(e){e.settings&&Object.keys(e.settings).forEach(t=>{this.updateSectionConfiguration(t,e.settings[t])})}updateSectionConfiguration(e,t){this.settings[e]=t}async getConfiguration(e,t){this.initialized||await this.initialize();let n=this.toSectionName(e);if(this.settings[n])return this.settings[n][t]}toSectionName(e){return`${e}`}};nC.DefaultConfigurationProvider=hk});var $k=p(aC=>{"use strict";Object.defineProperty(aC,"__esModule",{value:!0});aC.DefaultDocumentBuilder=void 0;var iC=Pe(),uxe=us(),vk=Ci(),Co=Iu(),_k=class{constructor(e){this.updateListeners=[],this.buildPhaseListeners=new uxe.MultiMap,this.langiumDocuments=e.workspace.LangiumDocuments,this.langiumDocumentFactory=e.workspace.LangiumDocumentFactory,this.indexManager=e.workspace.IndexManager,this.serviceRegistry=e.ServiceRegistry}async build(e,t={},n=iC.CancellationToken.None){await this.buildDocuments(e,t,n)}async update(e,t,n=iC.CancellationToken.None){for(let o of t)this.langiumDocuments.deleteDocument(o);this.indexManager.remove(t);for(let o of e)this.langiumDocuments.invalidateDocument(o);for(let o of this.updateListeners)o(e,t);await(0,vk.interruptAndCheck)(n);let i=e.map(o=>this.langiumDocuments.getOrCreateDocument(o)),a=this.collectDocuments(i,t),s={validationChecks:"all"};await this.buildDocuments(a,s,n)}onUpdate(e){return this.updateListeners.push(e),iC.Disposable.create(()=>{let t=this.updateListeners.indexOf(e);t>=0&&this.updateListeners.splice(t,1)})}collectDocuments(e,t){let n=e.map(s=>s.uri).concat(t),i=this.indexManager.getAffectedDocuments(n).toArray();i.forEach(s=>{this.serviceRegistry.getServices(s.uri).references.Linker.unlink(s),s.state=Math.min(s.state,Co.DocumentState.ComputedScopes)});let a=new Set([...e,...i,...this.langiumDocuments.all.filter(s=>s.state<Co.DocumentState.Validated)]);return Array.from(a)}async buildDocuments(e,t,n){await this.runCancelable(e,Co.DocumentState.Parsed,n,a=>this.langiumDocumentFactory.update(a)),await this.runCancelable(e,Co.DocumentState.IndexedContent,n,a=>this.indexManager.updateContent(a,n)),await this.runCancelable(e,Co.DocumentState.ComputedScopes,n,a=>this.computeScopes(a,n)),await this.runCancelable(e,Co.DocumentState.Linked,n,a=>this.serviceRegistry.getServices(a.uri).references.Linker.link(a,n)),await this.runCancelable(e,Co.DocumentState.IndexedReferences,n,a=>this.indexManager.updateReferences(a,n));let i=e.filter(a=>this.shouldValidate(a,t));await this.runCancelable(i,Co.DocumentState.Validated,n,a=>this.validate(a,n))}async runCancelable(e,t,n,i){let a=e.filter(s=>s.state<t);for(let s of a)await(0,vk.interruptAndCheck)(n),await i(s);await this.notifyBuildPhase(a,t,n)}onBuildPhase(e,t){return this.buildPhaseListeners.add(e,t),iC.Disposable.create(()=>{this.buildPhaseListeners.delete(e,t)})}async notifyBuildPhase(e,t,n){if(e.length===0)return;let i=this.buildPhaseListeners.get(t);for(let a of i)await(0,vk.interruptAndCheck)(n),await a(e,n)}async computeScopes(e,t){let n=this.serviceRegistry.getServices(e.uri).references.ScopeComputation;e.precomputedScopes=await n.computeLocalScopes(e,t),e.state=Co.DocumentState.ComputedScopes}shouldValidate(e,t){return t.validationChecks==="all"}async validate(e,t){let i=await this.serviceRegistry.getServices(e.uri).validation.DocumentValidator.validateDocument(e,t);e.diagnostics=i,e.state=Co.DocumentState.Validated}};aC.DefaultDocumentBuilder=_k});var Ck=p(sC=>{"use strict";Object.defineProperty(sC,"__esModule",{value:!0});sC.DefaultIndexManager=void 0;var CY=Pe(),cxe=bt(),Tk=vn(),Rk=Bl(),AY=Iu(),bk=class{constructor(e){this.simpleIndex=new Map,this.referenceIndex=new Map,this.globalScopeCache=new Map,this.serviceRegistry=e.ServiceRegistry,this.astReflection=e.AstReflection,this.langiumDocuments=()=>e.workspace.LangiumDocuments}findAllReferences(e,t){let n=(0,cxe.getDocument)(e).uri,i=[];return this.referenceIndex.forEach(a=>{a.forEach(s=>{(0,Rk.equalURI)(s.targetUri,n)&&s.targetPath===t&&i.push(s)})}),(0,Tk.stream)(i)}allElements(e=""){this.globalScopeCache.has("")||this.globalScopeCache.set("",Array.from(this.simpleIndex.values()).flat());let t=this.globalScopeCache.get(e);if(t)return(0,Tk.stream)(t);{let n=this.globalScopeCache.get("").filter(i=>this.astReflection.isSubtype(i.type,e));return this.globalScopeCache.set(e,n),(0,Tk.stream)(n)}}remove(e){for(let t of e){let n=t.toString();this.simpleIndex.delete(n),this.referenceIndex.delete(n),this.globalScopeCache.clear()}}async updateContent(e,t=CY.CancellationToken.None){this.globalScopeCache.clear();let i=await this.serviceRegistry.getServices(e.uri).references.ScopeComputation.computeExports(e,t);for(let a of i)a.node=void 0;this.simpleIndex.set(e.uri.toString(),i),e.state=AY.DocumentState.IndexedContent}async updateReferences(e,t=CY.CancellationToken.None){let i=await this.serviceRegistry.getServices(e.uri).workspace.ReferenceDescriptionProvider.createDescriptions(e,t);this.referenceIndex.set(e.uri.toString(),i),e.state=AY.DocumentState.IndexedReferences}getAffectedDocuments(e){return this.langiumDocuments().all.filter(t=>{if(e.some(n=>(0,Rk.equalURI)(t.uri,n)))return!1;for(let n of e)if(this.isAffected(t,n))return!0;return!1})}isAffected(e,t){let n=t.toString(),i=e.uri.toString();if(e.references.some(s=>s.error!==void 0))return!0;let a=this.referenceIndex.get(i);return a?a.filter(s=>!s.local).some(s=>(0,Rk.equalURI)(s.targetUri,n)):!1}};sC.DefaultIndexManager=bk});var Dk=p(oC=>{"use strict";Object.defineProperty(oC,"__esModule",{value:!0});oC.DefaultWorkspaceManager=void 0;var fxe=Pe(),Ak=_n(),dxe=Ci(),wk=class{constructor(e){this.serviceRegistry=e.ServiceRegistry,this.langiumDocuments=e.workspace.LangiumDocuments,this.documentBuilder=e.workspace.DocumentBuilder,this.fileSystemProvider=e.workspace.FileSystemProvider,this.mutex=e.workspace.MutexLock,e.lsp.LanguageServer.onInitialize(t=>{var n;this.folders=(n=t.workspaceFolders)!==null&&n!==void 0?n:void 0}),e.lsp.LanguageServer.onInitialized(t=>{this.mutex.lock(n=>{var i;return this.initializeWorkspace((i=this.folders)!==null&&i!==void 0?i:[],n)})})}async initializeWorkspace(e,t=fxe.CancellationToken.None){let n=this.serviceRegistry.all.flatMap(s=>s.LanguageMetaData.fileExtensions),i=[],a=s=>{i.push(s),this.langiumDocuments.hasDocument(s.uri)||this.langiumDocuments.addDocument(s)};await this.loadAdditionalDocuments(e,a),await Promise.all(e.map(s=>[s,this.getRootFolder(s)]).map(async s=>this.traverseFolder(...s,n,a))),await(0,dxe.interruptAndCheck)(t),await this.documentBuilder.build(i,void 0,t)}loadAdditionalDocuments(e,t){return Promise.resolve()}getRootFolder(e){return Ak.URI.parse(e.uri)}async traverseFolder(e,t,n,i){let a=await this.fileSystemProvider.readDirectory(t);await Promise.all(a.map(async s=>{if(this.includeEntry(e,s,n)){if(s.isDirectory)await this.traverseFolder(e,s.uri,n,i);else if(s.isFile){let o=this.langiumDocuments.getOrCreateDocument(s.uri);i(o)}}}))}includeEntry(e,t,n){let i=Ak.Utils.basename(t.uri);if(i.startsWith("."))return!1;if(t.isDirectory)return i!=="node_modules"&&i!=="out";if(t.isFile){let a=Ak.Utils.extname(t.uri);return n.includes(a)}return!1}};oC.DefaultWorkspaceManager=wk});var Ek=p(Ao=>{"use strict";Object.defineProperty(Ao,"__esModule",{value:!0});Ao.isTokenTypeDictionary=Ao.isIMultiModeLexerDefinition=Ao.isTokenTypeArray=Ao.DefaultLexer=void 0;var pxe=Sf(),Sk=class{constructor(e){let t=e.parser.TokenBuilder.buildTokens(e.Grammar,{caseInsensitive:e.LanguageMetaData.caseInsensitive});this.tokenTypes=this.toTokenTypeDictionary(t);let n=Mk(t)?Object.values(t):t;this.chevrotainLexer=new pxe.Lexer(n)}get definition(){return this.tokenTypes}tokenize(e){var t;let n=this.chevrotainLexer.tokenize(e);return{tokens:n.tokens,errors:n.errors,hidden:(t=n.groups.hidden)!==null&&t!==void 0?t:[]}}toTokenTypeDictionary(e){if(Mk(e))return e;let t=Pk(e)?Object.values(e.modes).flat():e,n={};return t.forEach(i=>n[i.name]=i),n}};Ao.DefaultLexer=Sk;function wY(r){return Array.isArray(r)&&(r.length===0||"name"in r[0])}Ao.isTokenTypeArray=wY;function Pk(r){return r&&"modes"in r&&"defaultMode"in r}Ao.isIMultiModeLexerDefinition=Pk;function Mk(r){return!wY(r)&&!Pk(r)}Ao.isTokenTypeDictionary=Mk});var Fk=p(Bh=>{"use strict";Object.defineProperty(Bh,"__esModule",{value:!0});Bh.isJSDoc=Bh.parseJSDoc=void 0;var Ft=Pe(),mxe=_n(),yxe=tR(),hxe=sf();function gxe(r,e,t){let n,i;typeof r=="string"?(i=e,n=t):(i=r.range.start,n=e),i||(i=Ft.Position.create(0,0));let a=MY(r),s=Ik(n),o=$xe({lines:a,position:i,options:s});return Axe({index:0,tokens:o,position:i})}Bh.parseJSDoc=gxe;function vxe(r,e){let t=Ik(e),n=MY(r);if(n.length===0)return!1;let i=n[0],a=n[n.length-1],s=t.start,o=t.end;return Boolean(s?.exec(i))&&Boolean(o?.exec(a))}Bh.isJSDoc=vxe;function MY(r){let e="";return typeof r=="string"?e=r:e=r.text,e.split(yxe.NEWLINE_REGEXP)}var DY=/\s*(@([\p{L}][\p{L}\p{N}]*)?)/uy,_xe=/\{(@[\p{L}][\p{L}\p{N}]*)(\s*)([^\r\n}]+)?\}/gu;function $xe(r){var e,t,n;let i=[],a=r.position.line,s=r.position.character;for(let o=0;o<r.lines.length;o++){let u=o===0,c=o===r.lines.length-1,f=r.lines[o],d=0;if(u&&r.options.start){let h=(e=r.options.start)===null||e===void 0?void 0:e.exec(f);h&&(d=h.index+h[0].length)}else{let h=(t=r.options.line)===null||t===void 0?void 0:t.exec(f);h&&(d=h.index+h[0].length)}if(c){let h=(n=r.options.end)===null||n===void 0?void 0:n.exec(f);h&&(f=f.substring(0,h.index))}if(f=f.substring(0,Cxe(f)),kk(f,0)>=f.length){if(i.length>0){let h=Ft.Position.create(a,s);i.push({type:"break",content:"",range:Ft.Range.create(h,h)})}}else{DY.lastIndex=d;let h=DY.exec(f);if(h){let y=h[0],_=h[1],w=Ft.Position.create(a,s+d),S=Ft.Position.create(a,s+d+y.length);i.push({type:"tag",content:_,range:Ft.Range.create(w,S)}),d+=y.length,d=kk(f,d)}if(d<f.length){let y=f.substring(d),_=Array.from(y.matchAll(_xe));i.push(...Txe(_,y,a,s+d))}}a++,s=0}return i.length>0&&i[i.length-1].type==="break"?i.slice(0,-1):i}function Txe(r,e,t,n){let i=[];if(r.length===0){let a=Ft.Position.create(t,n),s=Ft.Position.create(t,n+e.length);i.push({type:"text",content:e,range:Ft.Range.create(a,s)})}else{let a=0;for(let o of r){let u=o.index,c=e.substring(a,u);c.length>0&&i.push({type:"text",content:e.substring(a,u),range:Ft.Range.create(Ft.Position.create(t,a+n),Ft.Position.create(t,u+n))});let f=c.length+1,d=o[1];if(i.push({type:"inline-tag",content:d,range:Ft.Range.create(Ft.Position.create(t,a+f+n),Ft.Position.create(t,a+f+d.length+n))}),f+=d.length,o.length===4){f+=o[2].length;let m=o[3];i.push({type:"text",content:m,range:Ft.Range.create(Ft.Position.create(t,a+f+n),Ft.Position.create(t,a+f+m.length+n))})}else i.push({type:"text",content:"",range:Ft.Range.create(Ft.Position.create(t,a+f+n),Ft.Position.create(t,a+f+n))});a=u+o[0].length}let s=e.substring(a);s.length>0&&i.push({type:"text",content:s,range:Ft.Range.create(Ft.Position.create(t,a+n),Ft.Position.create(t,a+n+s.length))})}return i}var Rxe=/\S/,bxe=/\s*$/;function kk(r,e){let t=r.substring(e).match(Rxe);return t?e+t.index:r.length}function Cxe(r){let e=r.match(bxe);if(e&&typeof e.index=="number")return e.index}function Axe(r){var e,t,n,i;let a=Ft.Position.create(r.position.line,r.position.character);if(r.tokens.length===0)return new lC([],Ft.Range.create(a,a));let s=[];for(;r.index<r.tokens.length;){let c=wxe(r,s[s.length-1]);c&&s.push(c)}let o=(t=(e=s[0])===null||e===void 0?void 0:e.range.start)!==null&&t!==void 0?t:a,u=(i=(n=s[s.length-1])===null||n===void 0?void 0:n.range.end)!==null&&i!==void 0?i:a;return new lC(s,Ft.Range.create(o,u))}function wxe(r,e){let t=r.tokens[r.index];if(t.type==="tag")return EY(r,!1);if(t.type==="text"||t.type==="inline-tag")return PY(r);Dxe(t,e),r.index++}function Dxe(r,e){if(e){let t=new uC("",r.range);"inlines"in e?e.inlines.push(t):e.content.inlines.push(t)}}function PY(r){let e=r.tokens[r.index],t=e,n=e,i=[];for(;e&&e.type!=="break"&&e.type!=="tag";)i.push(Sxe(r)),n=e,e=r.tokens[r.index];return new S_(i,Ft.Range.create(t.range.start,n.range.end))}function Sxe(r){return r.tokens[r.index].type==="inline-tag"?EY(r,!0):OY(r)}function EY(r,e){let t=r.tokens[r.index++],n=t.content.substring(1),i=r.tokens[r.index];if(i?.type==="text")if(e){let a=OY(r);return new D_(n,new S_([a],a.range),e,Ft.Range.create(t.range.start,a.range.end))}else{let a=PY(r);return new D_(n,a,e,Ft.Range.create(t.range.start,a.range.end))}else{let a=t.range;return new D_(n,new S_([],a),e,a)}}function OY(r){let e=r.tokens[r.index++];return new uC(e.content,e.range)}function Ik(r){if(!r)return Ik({start:"/**",end:"*/",line:"*"});let{start:e,end:t,line:n}=r;return{start:Ok(e,!0),end:Ok(t,!1),line:Ok(n,!0)}}function Ok(r,e){if(typeof r=="string"||typeof r=="object"){let t=typeof r=="string"?(0,hxe.escapeRegExp)(r):r.source;return e?new RegExp(`^\\s*${t}`):new RegExp(`\\s*${t}\\s*$`)}else return r}var lC=class{constructor(e,t){this.elements=e,this.range=t}getTag(e){return this.getAllTags().find(t=>t.name===e)}getTags(e){return this.getAllTags().filter(t=>t.name===e)}getAllTags(){return this.elements.filter(e=>"name"in e)}toString(){let e="";for(let t of this.elements)if(e.length===0)e=t.toString();else{let n=t.toString();e+=SY(e)+n}return e.trim()}toMarkdown(e){let t="";for(let n of this.elements)if(t.length===0)t=n.toMarkdown(e);else{let i=n.toMarkdown(e);t+=SY(t)+i}return t.trim()}},D_=class{constructor(e,t,n,i){this.name=e,this.content=t,this.inline=n,this.range=i}toString(){let e=`@${this.name}`,t=this.content.toString();return this.content.inlines.length===1?e=`${e} ${t}`:this.content.inlines.length>1&&(e=`${e}
${t}`),this.inline?`{${e}}`:e}toMarkdown(e){let t=this.content.toMarkdown(e);if(this.inline){let a=Mxe(this.name,t,e??{});if(typeof a=="string")return a}let n="";e?.tag==="italic"||e?.tag===void 0?n="*":e?.tag==="bold"?n="**":e?.tag==="bold-italic"&&(n="***");let i=`${n}@${this.name}${n}`;return this.content.inlines.length===1?i=`${i} \u2014 ${t}`:this.content.inlines.length>1&&(i=`${i}
${t}`),this.inline?`{${i}}`:i}};function Mxe(r,e,t){var n,i;if(r==="linkplain"||r==="linkcode"||r==="link"){let a=e.indexOf(" "),s=e;if(a>0){let u=kk(e,a);s=e.substring(u),e=e.substring(0,a)}return(r==="linkcode"||r==="link"&&t.link==="code")&&(s=`\`${s}\``),(i=(n=t.renderLink)===null||n===void 0?void 0:n.call(t,e,s))!==null&&i!==void 0?i:Pxe(e,s)}}function Pxe(r,e){try{return mxe.URI.parse(r,!0),`[${e}](${r})`}catch{return r}}var S_=class{constructor(e,t){this.inlines=e,this.range=t}toString(){let e="";for(let t=0;t<this.inlines.length;t++){let n=this.inlines[t],i=this.inlines[t+1];e+=n.toString(),i&&i.range.start.line>n.range.start.line&&(e+=`
`)}return e}toMarkdown(e){let t="";for(let n=0;n<this.inlines.length;n++){let i=this.inlines[n],a=this.inlines[n+1];t+=i.toMarkdown(e),a&&a.range.start.line>i.range.start.line&&(t+=`
`)}return t}},uC=class{constructor(e,t){this.text=e,this.range=t}toString(){return this.text}toMarkdown(){return this.text}};function SY(r){return r.endsWith(`
`)?`
`:`

`}});var IY=p(cC=>{"use strict";Object.defineProperty(cC,"__esModule",{value:!0});cC.JSDocDocumentationProvider=void 0;var Exe=Un(),Oxe=bt(),kxe=Ut(),kY=Fk(),Nk=class{constructor(e){this.indexManager=e.shared.workspace.IndexManager,this.grammarConfig=e.parser.GrammarConfig}getDocumentation(e){let t=(0,kxe.findCommentNode)(e.$cstNode,this.grammarConfig.multilineCommentRules);if((0,Exe.isLeafCstNode)(t)&&(0,kY.isJSDoc)(t))return(0,kY.parseJSDoc)(t).toMarkdown({renderLink:(i,a)=>this.documentationLinkRenderer(e,i,a)})}documentationLinkRenderer(e,t,n){var i;let a=(i=this.findNameInPrecomputedScopes(e,t))!==null&&i!==void 0?i:this.findNameInGlobalScope(e,t);if(a&&a.nameSegment){let s=a.nameSegment.range.start.line+1,o=a.nameSegment.range.start.character+1,u=a.documentUri.with({fragment:`L${s},${o}`});return`[${n}](${u.toString()})`}else return}findNameInPrecomputedScopes(e,t){let i=(0,Oxe.getDocument)(e).precomputedScopes;if(!i)return;let a=e;do{let o=i.get(a).find(u=>u.name===t);if(o)return o;a=a.$container}while(a)}findNameInGlobalScope(e,t){return this.indexManager.allElements().find(i=>i.name===t)}};cC.JSDocDocumentationProvider=Nk});var qk=p(Ju=>{"use strict";var Ixe=Ju&&Ju.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),FY=Ju&&Ju.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Ixe(e,r,t)};Object.defineProperty(Ju,"__esModule",{value:!0});FY(IY(),Ju);FY(Fk(),Ju)});var a0=p(Gh=>{"use strict";Object.defineProperty(Gh,"__esModule",{value:!0});Gh.createDefaultSharedModule=Gh.createDefaultModule=void 0;var Fxe=Pe(),Nxe=bM(),qxe=l0(),xxe=Y1(),Lxe=UR(),jxe=fE(),Uxe=pE(),Bxe=DR(),Gxe=uE(),Kxe=hE(),Hxe=AE(),Vxe=DE(),Wxe=ME(),zxe=X1(),Yxe=Z1(),Xxe=tk(),Jxe=ik(),Qxe=wy(),Zxe=qR(),eLe=$R(),tLe=RR(),rLe=sk(),nLe=lk(),iLe=Ci(),aLe=AR(),sLe=ck(),NY=mk(),oLe=rC(),lLe=gk(),uLe=$k(),qY=Iu(),cLe=Ck(),fLe=Dk(),dLe=Ek(),pLe=qk();function mLe(r){return{documentation:{DocumentationProvider:e=>new pLe.JSDocDocumentationProvider(e)},parser:{GrammarConfig:e=>(0,qxe.createGrammarConfig)(e),LangiumParser:e=>(0,zxe.createLangiumParser)(e),CompletionParser:e=>(0,xxe.createCompletionParser)(e),ValueConverter:()=>new Xxe.DefaultValueConverter,TokenBuilder:()=>new Yxe.DefaultTokenBuilder,Lexer:e=>new dLe.DefaultLexer(e)},lsp:{CompletionProvider:e=>new Lxe.DefaultCompletionProvider(e),DocumentSymbolProvider:e=>new Uxe.DefaultDocumentSymbolProvider(e),HoverProvider:e=>new Kxe.MultilineCommentHoverProvider(e),FoldingRangeProvider:e=>new Bxe.DefaultFoldingRangeProvider(e),ReferencesProvider:e=>new Vxe.DefaultReferencesProvider(e),DefinitionProvider:e=>new Gxe.DefaultDefinitionProvider(e),DocumentHighlightProvider:e=>new jxe.DefaultDocumentHighlightProvider(e),RenameProvider:e=>new Wxe.DefaultRenameProvider(e)},workspace:{AstNodeLocator:()=>new oLe.DefaultAstNodeLocator,AstNodeDescriptionProvider:e=>new NY.DefaultAstNodeDescriptionProvider(e),ReferenceDescriptionProvider:e=>new NY.DefaultReferenceDescriptionProvider(e)},references:{Linker:e=>new Jxe.DefaultLinker(e),NameProvider:()=>new Qxe.DefaultNameProvider,ScopeProvider:e=>new tLe.DefaultScopeProvider(e),ScopeComputation:e=>new eLe.DefaultScopeComputation(e),References:e=>new Zxe.DefaultReferences(e)},serializer:{JsonSerializer:e=>new rLe.DefaultJsonSerializer(e)},validation:{DocumentValidator:e=>new aLe.DefaultDocumentValidator(e),ValidationRegistry:e=>new sLe.ValidationRegistry(e)},shared:()=>r.shared}}Gh.createDefaultModule=mLe;function yLe(r){return{ServiceRegistry:()=>new nLe.DefaultServiceRegistry,lsp:{Connection:()=>r.connection,LanguageServer:e=>new Hxe.DefaultLanguageServer(e)},workspace:{LangiumDocuments:e=>new qY.DefaultLangiumDocuments(e),LangiumDocumentFactory:e=>new qY.DefaultLangiumDocumentFactory(e),DocumentBuilder:e=>new uLe.DefaultDocumentBuilder(e),TextDocuments:()=>new Fxe.TextDocuments(Nxe.TextDocument),IndexManager:e=>new cLe.DefaultIndexManager(e),WorkspaceManager:e=>new fLe.DefaultWorkspaceManager(e),FileSystemProvider:e=>r.fileSystemProvider(e),MutexLock:()=>new iLe.MutexLock,ConfigurationProvider:e=>new lLe.DefaultConfigurationProvider(e)}}}Gh.createDefaultSharedModule=yLe});var LY=p(xY=>{"use strict";Object.defineProperty(xY,"__esModule",{value:!0})});var BY=p(Qu=>{"use strict";Object.defineProperty(Qu,"__esModule",{value:!0});Qu.joinTracedToNodeIf=Qu.joinTracedToNode=Qu.joinToNode=void 0;var xk=ef();function jY(r,e=String,{filter:t,prefix:n,suffix:i,separator:a,appendNewLineIfNotEmpty:s}={}){return gLe(r,(o,u,c,f)=>{if(t&&!t(u,c,f))return o;let d=e(u,c,f);return(o??(o=new xk.CompositeGeneratorNode)).append(n&&n(u,c,f)).append(d).append(i&&i(u,c,f)).appendIf(!f&&d!==void 0,a).appendNewLineIfNotEmptyIf(!o.isEmpty()&&!!s)})}Qu.joinToNode=jY;function UY(r,e){return(t,n=String,i)=>(0,xk.traceToNode)(r,e)(jY(t,r&&e?(a,s,o)=>(0,xk.traceToNode)(r,e,s)(n(a,s,o)):n,i))}Qu.joinTracedToNode=UY;function hLe(r,e,t){return r?UY(typeof e=="function"?e():e,t):()=>{}}Qu.joinTracedToNodeIf=hLe;function gLe(r,e,t){let n=r[Symbol.iterator](),i=n.next(),a=0,s=t;for(;!i.done;){let o=n.next();s=e(s,i.value,a,Boolean(o.done)),i=o,a++}return s}});var GY=p(gi=>{"use strict";var vLe=gi&&gi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Lk=gi&&gi.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&vLe(e,r,t)};Object.defineProperty(gi,"__esModule",{value:!0});gi.normalizeEOL=gi.expandToStringWithNL=gi.expandToString=void 0;Lk(ef(),gi);Lk(BY(),gi);Lk(xM(),gi);var jk=tR();Object.defineProperty(gi,"expandToString",{enumerable:!0,get:function(){return jk.expandToString}});Object.defineProperty(gi,"expandToStringWithNL",{enumerable:!0,get:function(){return jk.expandToStringWithNL}});Object.defineProperty(gi,"normalizeEOL",{enumerable:!0,get:function(){return jk.normalizeEOL}})});var HY=p(KY=>{"use strict";Object.defineProperty(KY,"__esModule",{value:!0})});var VY=p(wo=>{"use strict";var _Le=wo&&wo.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),fC=wo&&wo.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&_Le(e,r,t)};Object.defineProperty(wo,"__esModule",{value:!0});fC($P(),wo);fC(l0(),wo);fC(LE(),wo);fC(HY(),wo)});var zY=p(WY=>{"use strict";Object.defineProperty(WY,"__esModule",{value:!0})});var YY=p(Pi=>{"use strict";var $Le=Pi&&Pi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Zu=Pi&&Pi.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&$Le(e,r,t)};Object.defineProperty(Pi,"__esModule",{value:!0});Zu(Y1(),Pi);Zu(xb(),Pi);Zu(X1(),Pi);Zu(Bb(),Pi);Zu(Ek(),Pi);Zu(zY(),Pi);Zu(Z1(),Pi);Zu(tk(),Pi)});var XY=p(bs=>{"use strict";var TLe=bs&&bs.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),M_=bs&&bs.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&TLe(e,r,t)};Object.defineProperty(bs,"__esModule",{value:!0});M_(ik(),bs);M_(wy(),bs);M_(qR(),bs);M_($R(),bs);M_(RR(),bs)});var JY=p(Ef=>{"use strict";var RLe=Ef&&Ef.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),bLe=Ef&&Ef.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&RLe(e,r,t)};Object.defineProperty(Ef,"__esModule",{value:!0});bLe(sk(),Ef)});var QY=p(vi=>{"use strict";var CLe=vi&&vi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),su=vi&&vi.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&CLe(e,r,t)};Object.defineProperty(vi,"__esModule",{value:!0});su(bt(),vi);su(us(),vi);su(Ut(),vi);su(W1(),vi);su(jr(),vi);su(Ci(),vi);su(sf(),vi);su(vn(),vi);su(Bl(),vi)});var eX=p(ec=>{"use strict";var ALe=ec&&ec.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),ZY=ec&&ec.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&ALe(e,r,t)};Object.defineProperty(ec,"__esModule",{value:!0});ZY(AR(),ec);ZY(ck(),ec)});var tX=p(Ei=>{"use strict";var wLe=Ei&&Ei.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),tc=Ei&&Ei.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&wLe(e,r,t)};Object.defineProperty(Ei,"__esModule",{value:!0});tc(mk(),Ei);tc(rC(),Ei);tc(gk(),Ei);tc($k(),Ei);tc(Iu(),Ei);tc(jE(),Ei);tc(Ck(),Ei);tc(Dk(),Ei)});var be=p(Jt=>{"use strict";var rX=Jt&&Jt.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),DLe=Jt&&Jt.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),_i=Jt&&Jt.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&rX(e,r,t)},SLe=Jt&&Jt.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&rX(e,r,t);return DLe(e,r),e};Object.defineProperty(Jt,"__esModule",{value:!0});Jt.GrammarAST=void 0;_i(a0(),Jt);_i(mv(),Jt);_i(lk(),Jt);_i(LY(),Jt);_i(Un(),Jt);_i(qk(),Jt);_i(GY(),Jt);_i(VY(),Jt);_i(EE(),Jt);_i(YY(),Jt);_i(XY(),Jt);_i(JY(),Jt);_i(QY(),Jt);_i(eX(),Jt);_i(tX(),Jt);var MLe=SLe(yt());Jt.GrammarAST=MLe});var Uk=p((Ddt,nX)=>{"use strict";nX.exports=Pe()});var iX=p(dC=>{"use strict";Object.defineProperty(dC,"__esModule",{value:!0});dC.DefaultLauncherOptions=void 0;dC.DefaultLauncherOptions={}});var aX=p(pC=>{"use strict";Object.defineProperty(pC,"__esModule",{value:!0});pC.Version=void 0;pC.Version="0.6.1"});var Kk=p(pn=>{"use strict";Object.defineProperty(pn,"__esModule",{value:!0});pn.createTransport=pn.createServerSocketTransport=pn.parsePort=pn.parsePositiveInt=pn.createArgParser=pn.DefaultNodeLauncherOptions=pn.sanitizedArgHandler=pn.sanitizeArg=void 0;var Cs=WL(),PLe=be(),ELe=require("net"),P_=Uk(),OLe=iX(),kLe=aX();function Gk(r){return r.startsWith("=")?r.substring(1):r}pn.sanitizeArg=Gk;function Bk(r){return(e,t)=>r(Gk(e),t)}pn.sanitizedArgHandler=Bk;pn.DefaultNodeLauncherOptions=Object.assign({},OLe.DefaultLauncherOptions);function ILe(r=pn.DefaultNodeLauncherOptions){let e=new Cs.Command().version(kLe.Version).description("SysIDE").showHelpAfterError(!0).name("Launch SysIDE");return e.addOption(new Cs.Option("--node-ipc","Use Node IPC for LSP communication").conflicts(["stdio","socket","pipe","host","encoding"])).addOption(new Cs.Option("--stdio","Use stdio for LSP communication").conflicts(["node-ipc","socket","pipe","host","encoding"])).addOption(new Cs.Option("-s, --socket <socket>","Use socket for LSP communication").conflicts(["node-ipc","stdio","pipe"]).argParser(Bk(oX))).addOption(new Cs.Option("--pipe <pipe>","Use named pipe for LSP communication").conflicts(["node-ipc","stdio","socket","host"]).argParser(Gk)).addOption(new Cs.Option("--host <hostname>","Socket hostname").default("localhost").conflicts(["node-ipc","stdio","pipe"])).addOption(new Cs.Option("-e, --encoding <encoding>","Socket/pipe encoding").default("utf-8").choices(["utf-8","ascii"]).conflicts(["node-ipc","stdio"])).option("--clientProcessId <id>","Client process ID. The server will shutdown if the client dies unexpectedly",Bk(sX)),{command:e,parse:(t,n)=>(e.parse(t,n),Object.assign(Object.assign({},r),e.opts()))}}pn.createArgParser=ILe;function sX(r){let e=Number.parseInt(r,10);if(isNaN(e))throw new Cs.InvalidArgumentError("Value is not a number!");if(e<0)throw new Cs.InvalidArgumentError("Value has to be positive!");return e}pn.parsePositiveInt=sX;function oX(r){let e=Number.parseInt(r,10);if(isNaN(e))throw new Cs.InvalidArgumentError("Port is not a number!");if(e<0||e>65535)throw new Cs.InvalidArgumentError("Port has to be between in range (0, 65535)!");return e}pn.parsePort=oX;function lX(r,e,t="utf-8"){let n=(0,ELe.createConnection)(r,e);return[new P_.SocketMessageReader(n,t),new P_.SocketMessageWriter(n,t)]}pn.createServerSocketTransport=lX;function FLe(r){if("nodeIpc"in r)return[new P_.IPCMessageReader(process),new P_.IPCMessageWriter(process)];if("stdio"in r)return[process.stdin,process.stdout];if("pipe"in r)return(0,P_.createServerPipeTransport)(r.pipe,r.encoding);if("socket"in r)return lX(r.socket,r.host,r.encoding);(0,PLe.assertUnreachable)(r)}pn.createTransport=FLe});var uX=p(rc=>{"use strict";var NLe=rc&&rc.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(rc,"__esModule",{value:!0});rc.NodeFileSystem=rc.NodeFileSystemProvider=void 0;var Hk=NLe(require("fs")),qLe=_n(),mC=class{constructor(){this.encoding="utf-8"}readFile(e){return Hk.default.promises.readFile(e.fsPath,this.encoding)}readFileSync(e){return Hk.default.readFileSync(e.fsPath,this.encoding)}async readDirectory(e){return(await Hk.default.promises.readdir(e.fsPath,{withFileTypes:!0})).map(n=>({dirent:n,isFile:n.isFile(),isDirectory:n.isDirectory(),uri:qLe.Utils.joinPath(e,n.name)}))}};rc.NodeFileSystemProvider=mC;rc.NodeFileSystem={fileSystemProvider:()=>new mC}});var cX=p(Of=>{"use strict";var xLe=Of&&Of.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),LLe=Of&&Of.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&xLe(e,r,t)};Object.defineProperty(Of,"__esModule",{value:!0});LLe(uX(),Of)});var dX=p((kdt,fX)=>{fX.exports=cX()});var pX=p(yC=>{"use strict";Object.defineProperty(yC,"__esModule",{value:!0});yC.STDLIB=void 0;yC.STDLIB={version:"2024-02",tree:"https://github.com/Systems-Modeling/SysML-v2-Release/blob/2024-02/sysml.library/",raw:"https://raw.githubusercontent.com/Systems-Modeling/SysML-v2-Release/2024-02/sysml.library/",files:["Systems Library/Actions.sysml","Systems Library/Allocations.sysml","Systems Library/AnalysisCases.sysml","Systems Library/Attributes.sysml","Systems Library/Calculations.sysml","Systems Library/Cases.sysml","Systems Library/Connections.sysml","Systems Library/Constraints.sysml","Systems Library/Interfaces.sysml","Systems Library/Items.sysml","Systems Library/Metadata.sysml","Systems Library/Parts.sysml","Systems Library/Ports.sysml","Systems Library/Requirements.sysml","Systems Library/StandardViewDefinitions.sysml","Systems Library/States.sysml","Systems Library/SysML.sysml","Systems Library/UseCases.sysml","Systems Library/VerificationCases.sysml","Systems Library/Views.sysml","Kernel Libraries/Kernel Semantic Library/Base.kerml","Kernel Libraries/Kernel Semantic Library/Clocks.kerml","Kernel Libraries/Kernel Semantic Library/ControlPerformances.kerml","Kernel Libraries/Kernel Semantic Library/FeatureReferencingPerformances.kerml","Kernel Libraries/Kernel Semantic Library/KerML.kerml","Kernel Libraries/Kernel Semantic Library/Links.kerml","Kernel Libraries/Kernel Semantic Library/Metaobjects.kerml","Kernel Libraries/Kernel Semantic Library/Objects.kerml","Kernel Libraries/Kernel Semantic Library/Observation.kerml","Kernel Libraries/Kernel Semantic Library/Occurrences.kerml","Kernel Libraries/Kernel Semantic Library/Performances.kerml","Kernel Libraries/Kernel Semantic Library/SpatialFrames.kerml","Kernel Libraries/Kernel Semantic Library/StatePerformances.kerml","Kernel Libraries/Kernel Semantic Library/Transfers.kerml","Kernel Libraries/Kernel Semantic Library/TransitionPerformances.kerml","Kernel Libraries/Kernel Semantic Library/Triggers.kerml","Kernel Libraries/Kernel Function Library/BaseFunctions.kerml","Kernel Libraries/Kernel Function Library/BooleanFunctions.kerml","Kernel Libraries/Kernel Function Library/CollectionFunctions.kerml","Kernel Libraries/Kernel Function Library/ComplexFunctions.kerml","Kernel Libraries/Kernel Function Library/ControlFunctions.kerml","Kernel Libraries/Kernel Function Library/DataFunctions.kerml","Kernel Libraries/Kernel Function Library/IntegerFunctions.kerml","Kernel Libraries/Kernel Function Library/NaturalFunctions.kerml","Kernel Libraries/Kernel Function Library/NumericalFunctions.kerml","Kernel Libraries/Kernel Function Library/OccurrenceFunctions.kerml","Kernel Libraries/Kernel Function Library/RationalFunctions.kerml","Kernel Libraries/Kernel Function Library/RealFunctions.kerml","Kernel Libraries/Kernel Function Library/ScalarFunctions.kerml","Kernel Libraries/Kernel Function Library/SequenceFunctions.kerml","Kernel Libraries/Kernel Function Library/StringFunctions.kerml","Kernel Libraries/Kernel Function Library/TrigFunctions.kerml","Kernel Libraries/Kernel Function Library/VectorFunctions.kerml","Kernel Libraries/Kernel Data Type Library/Collections.kerml","Kernel Libraries/Kernel Data Type Library/ScalarValues.kerml","Kernel Libraries/Kernel Data Type Library/VectorValues.kerml","Domain Libraries/Requirement Derivation/DerivationConnections.sysml","Domain Libraries/Requirement Derivation/RequirementDerivation.sysml","Domain Libraries/Quantities and Units/ISQ.sysml","Domain Libraries/Quantities and Units/ISQAcoustics.sysml","Domain Libraries/Quantities and Units/ISQAtomicNuclear.sysml","Domain Libraries/Quantities and Units/ISQBase.sysml","Domain Libraries/Quantities and Units/ISQCharacteristicNumbers.sysml","Domain Libraries/Quantities and Units/ISQChemistryMolecular.sysml","Domain Libraries/Quantities and Units/ISQCondensedMatter.sysml","Domain Libraries/Quantities and Units/ISQElectromagnetism.sysml","Domain Libraries/Quantities and Units/ISQInformation.sysml","Domain Libraries/Quantities and Units/ISQLight.sysml","Domain Libraries/Quantities and Units/ISQMechanics.sysml","Domain Libraries/Quantities and Units/ISQSpaceTime.sysml","Domain Libraries/Quantities and Units/ISQThermodynamics.sysml","Domain Libraries/Quantities and Units/MeasurementRefCalculations.sysml","Domain Libraries/Quantities and Units/MeasurementReferences.sysml","Domain Libraries/Quantities and Units/Quantities.sysml","Domain Libraries/Quantities and Units/QuantityCalculations.sysml","Domain Libraries/Quantities and Units/SI.sysml","Domain Libraries/Quantities and Units/SIPrefixes.sysml","Domain Libraries/Quantities and Units/TensorCalculations.sysml","Domain Libraries/Quantities and Units/Time.sysml","Domain Libraries/Quantities and Units/USCustomaryUnits.sysml","Domain Libraries/Quantities and Units/VectorCalculations.sysml","Domain Libraries/Metadata/ImageMetadata.sysml","Domain Libraries/Metadata/ModelingMetadata.sysml","Domain Libraries/Metadata/ParametersOfInterestMetadata.sysml","Domain Libraries/Metadata/RiskMetadata.sysml","Domain Libraries/Geometry/ShapeItems.sysml","Domain Libraries/Geometry/SpatialItems.sysml","Domain Libraries/Cause and Effect/CausationConnections.sysml","Domain Libraries/Cause and Effect/CauseAndEffect.sysml","Domain Libraries/Analysis/AnalysisTooling.sysml","Domain Libraries/Analysis/SampledFunctions.sysml","Domain Libraries/Analysis/StateSpaceRepresentation.sysml","Domain Libraries/Analysis/TradeStudies.sysml"]}});var mX=p(Do=>{"use strict";var jLe=Do&&Do.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Do,"__esModule",{value:!0});Do.resolvePathURI=Do.pathToURI=Do.isUriLike=void 0;var ULe=jLe(require("path")),hC=_n();function Vk(r){return/^[a-zA-Z][a-zA-Z\d+.-]+:/.test(r)}Do.isUriLike=Vk;function BLe(r){return Vk(r)?hC.URI.parse(r):hC.URI.file(r)}Do.pathToURI=BLe;function GLe(r){return Vk(r)?hC.URI.parse(r):hC.URI.file(ULe.default.resolve(r))}Do.resolvePathURI=GLe});var Wk=p(nc=>{"use strict";var KLe=nc&&nc.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),yX=nc&&nc.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&KLe(e,r,t)};Object.defineProperty(nc,"__esModule",{value:!0});yX(pX(),nc);yX(mX(),nc)});var D=p(l=>{"use strict";Object.defineProperty(l,"__esModule",{value:!0});l.Featuring=l.isFeatureInverting=l.FeatureInverting=l.isFeatureChaining=l.FeatureChaining=l.isDisjoining=l.Disjoining=l.isDifferencing=l.Differencing=l.isDependency=l.Dependency=l.isConnector=l.Connector=l.isAssociation=l.Association=l.isAnnotation=l.Annotation=l.isType=l.Type=l.isPackage=l.Package=l.isTextualAnnotatingElement=l.TextualAnnotatingElement=l.isMetadataFeature=l.MetadataFeature=l.isNamespaceReference=l.NamespaceReference=l.isMembershipReference=l.MembershipReference=l.isRelationship=l.Relationship=l.isNamespace=l.Namespace=l.isAnnotatingElement=l.AnnotatingElement=l.isElementReference=l.ElementReference=l.isElement=l.Element=l.isTypeRelationship=l.TypeRelationship=l.isTransparentElement=l.TransparentElement=l.isNonOwnerType=l.NonOwnerType=l.isName=l.isInlineExpression=l.InlineExpression=l.isFeatureRelationship=l.FeatureRelationship=void 0;l.Specialization=l.isConjugation=l.Conjugation=l.isNamespaceImport=l.NamespaceImport=l.isMembershipImport=l.MembershipImport=l.isExpose=l.Expose=l.isTypeFeaturing=l.TypeFeaturing=l.isFeatureMembership=l.FeatureMembership=l.isSuccession=l.Succession=l.isItemFlow=l.ItemFlow=l.isConnectorAsUsage=l.ConnectorAsUsage=l.isBindingConnector=l.BindingConnector=l.isInteraction=l.Interaction=l.isAssociationStructure=l.AssociationStructure=l.isFeature=l.Feature=l.isClassifier=l.Classifier=l.isLibraryPackage=l.LibraryPackage=l.isTextualRepresentation=l.TextualRepresentation=l.isComment=l.Comment=l.isMetadataUsage=l.MetadataUsage=l.isTypeReference=l.TypeReference=l.isUnioning=l.Unioning=l.isMembership=l.Membership=l.isIntersecting=l.Intersecting=l.isInheritance=l.Inheritance=l.isImport=l.Import=l.isFeaturing=void 0;l.StateSubactionMembership=l.isResultExpressionMembership=l.ResultExpressionMembership=l.isRequirementConstraintMembership=l.RequirementConstraintMembership=l.isParameterMembership=l.ParameterMembership=l.isObjectiveMembership=l.ObjectiveMembership=l.isEndFeatureMembership=l.EndFeatureMembership=l.isSuccessionItemFlow=l.SuccessionItemFlow=l.isFlowConnectionUsage=l.FlowConnectionUsage=l.isSuccessionAsUsage=l.SuccessionAsUsage=l.isConnectionUsage=l.ConnectionUsage=l.isBindingConnectorAsUsage=l.BindingConnectorAsUsage=l.isFlowConnectionDefinition=l.FlowConnectionDefinition=l.isConnectionDefinition=l.ConnectionDefinition=l.isUsage=l.Usage=l.isStep=l.Step=l.isMultiplicity=l.Multiplicity=l.isItemFlowEnd=l.ItemFlowEnd=l.isItemFeature=l.ItemFeature=l.isDefinition=l.Definition=l.isDataType=l.DataType=l.isClass=l.Class=l.isDocumentation=l.Documentation=l.isFeatureReference=l.FeatureReference=l.isClassifierReference=l.ClassifierReference=l.isOwningMembership=l.OwningMembership=l.isSpecialization=void 0;l.AllocationDefinition=l.isReferenceUsage=l.ReferenceUsage=l.isOccurrenceUsage=l.OccurrenceUsage=l.isAttributeUsage=l.AttributeUsage=l.isExpression=l.Expression=l.isActionUsage=l.ActionUsage=l.isMultiplicityRange=l.MultiplicityRange=l.isAttributeDefinition=l.AttributeDefinition=l.isStructure=l.Structure=l.isOccurrenceDefinition=l.OccurrenceDefinition=l.isLifeClass=l.LifeClass=l.isBehavior=l.Behavior=l.isMetaclassReference=l.MetaclassReference=l.isConjugatedPortReference=l.ConjugatedPortReference=l.isVariantMembership=l.VariantMembership=l.isFeatureValue=l.FeatureValue=l.isElementFilterMembership=l.ElementFilterMembership=l.isSubsetting=l.Subsetting=l.isSubclassification=l.Subclassification=l.isFeatureTyping=l.FeatureTyping=l.isPortConjugation=l.PortConjugation=l.isNamespaceExpose=l.NamespaceExpose=l.isMembershipExpose=l.MembershipExpose=l.isViewRenderingMembership=l.ViewRenderingMembership=l.isTransitionFeatureMembership=l.TransitionFeatureMembership=l.isStateSubactionMembership=void 0;l.IfActionUsage=l.isControlNode=l.ControlNode=l.isCalculationUsage=l.CalculationUsage=l.isAssignmentActionUsage=l.AssignmentActionUsage=l.isAcceptActionUsage=l.AcceptActionUsage=l.isEnumerationDefinition=l.EnumerationDefinition=l.isMetaclass=l.Metaclass=l.isPortDefinition=l.PortDefinition=l.isItemDefinition=l.ItemDefinition=l.isConstraintDefinition=l.ConstraintDefinition=l.isSysMLFunction=l.SysMLFunction=l.isActionDefinition=l.ActionDefinition=l.isReferenceSubsetting=l.ReferenceSubsetting=l.isRedefinition=l.Redefinition=l.isConjugatedPortTyping=l.ConjugatedPortTyping=l.isRequirementVerificationMembership=l.RequirementVerificationMembership=l.isFramedConcernMembership=l.FramedConcernMembership=l.isSubjectMembership=l.SubjectMembership=l.isStakeholderMembership=l.StakeholderMembership=l.isReturnParameterMembership=l.ReturnParameterMembership=l.isActorMembership=l.ActorMembership=l.isSuccessionFlowConnectionUsage=l.SuccessionFlowConnectionUsage=l.isInterfaceUsage=l.InterfaceUsage=l.isAllocationUsage=l.AllocationUsage=l.isInterfaceDefinition=l.InterfaceDefinition=l.isAllocationDefinition=void 0;l.DecisionNode=l.isCaseUsage=l.CaseUsage=l.isConjugatedPortDefinition=l.ConjugatedPortDefinition=l.isPartDefinition=l.PartDefinition=l.isMetadataDefinition=l.MetadataDefinition=l.isRequirementDefinition=l.RequirementDefinition=l.isPredicate=l.Predicate=l.isStateDefinition=l.StateDefinition=l.isCalculationDefinition=l.CalculationDefinition=l.isPortUsage=l.PortUsage=l.isItemUsage=l.ItemUsage=l.isEventOccurrenceUsage=l.EventOccurrenceUsage=l.isConstraintUsage=l.ConstraintUsage=l.isEnumerationUsage=l.EnumerationUsage=l.isNullExpression=l.NullExpression=l.isMetadataAccessExpression=l.MetadataAccessExpression=l.isLiteralExpression=l.LiteralExpression=l.isInvocationExpression=l.InvocationExpression=l.isFeatureReferenceExpression=l.FeatureReferenceExpression=l.isBooleanExpression=l.BooleanExpression=l.isTransitionUsage=l.TransitionUsage=l.isStateUsage=l.StateUsage=l.isSendActionUsage=l.SendActionUsage=l.isPerformActionUsage=l.PerformActionUsage=l.isLoopActionUsage=l.LoopActionUsage=l.isIfActionUsage=void 0;l.VerificationCaseUsage=l.isUseCaseUsage=l.UseCaseUsage=l.isAnalysisCaseUsage=l.AnalysisCaseUsage=l.isViewDefinition=l.ViewDefinition=l.isRenderingDefinition=l.RenderingDefinition=l.isViewpointDefinition=l.ViewpointDefinition=l.isConcernDefinition=l.ConcernDefinition=l.isCaseDefinition=l.CaseDefinition=l.isPartUsage=l.PartUsage=l.isRequirementUsage=l.RequirementUsage=l.isAssertConstraintUsage=l.AssertConstraintUsage=l.isLiteralString=l.LiteralString=l.isLiteralNumber=l.LiteralNumber=l.isLiteralInfinity=l.LiteralInfinity=l.isLiteralBoolean=l.LiteralBoolean=l.isTriggerInvocationExpression=l.TriggerInvocationExpression=l.isOperatorExpression=l.OperatorExpression=l.isInvariant=l.Invariant=l.isIncludeUseCaseUsage=l.IncludeUseCaseUsage=l.isExhibitStateUsage=l.ExhibitStateUsage=l.isWhileLoopActionUsage=l.WhileLoopActionUsage=l.isForLoopActionUsage=l.ForLoopActionUsage=l.isMergeNode=l.MergeNode=l.isJoinNode=l.JoinNode=l.isForkNode=l.ForkNode=l.isDecisionNode=void 0;l.reflection=l.SysMlAstReflection=l.isVerificationCaseDefinition=l.VerificationCaseDefinition=l.isUseCaseDefinition=l.UseCaseDefinition=l.isAnalysisCaseDefinition=l.AnalysisCaseDefinition=l.isViewUsage=l.ViewUsage=l.isRenderingUsage=l.RenderingUsage=l.isViewpointUsage=l.ViewpointUsage=l.isConcernUsage=l.ConcernUsage=l.isSatisfyRequirementUsage=l.SatisfyRequirementUsage=l.isSelectExpression=l.SelectExpression=l.isFeatureChainExpression=l.FeatureChainExpression=l.isCollectExpression=l.CollectExpression=l.isVerificationCaseUsage=void 0;var HLe=be();l.FeatureRelationship="FeatureRelationship";function VLe(r){return l.reflection.isInstance(r,l.FeatureRelationship)}l.isFeatureRelationship=VLe;l.InlineExpression="InlineExpression";function WLe(r){return l.reflection.isInstance(r,l.InlineExpression)}l.isInlineExpression=WLe;function zLe(r){return typeof r=="string"&&(/[_a-zA-Z][\w_\d]*/.test(r)||/'(\\['"bftnr\\]|[^'\\])*'/.test(r))}l.isName=zLe;l.NonOwnerType="NonOwnerType";function YLe(r){return l.reflection.isInstance(r,l.NonOwnerType)}l.isNonOwnerType=YLe;l.TransparentElement="TransparentElement";function XLe(r){return l.reflection.isInstance(r,l.TransparentElement)}l.isTransparentElement=XLe;l.TypeRelationship="TypeRelationship";function JLe(r){return l.reflection.isInstance(r,l.TypeRelationship)}l.isTypeRelationship=JLe;l.Element="Element";function QLe(r){return l.reflection.isInstance(r,l.Element)}l.isElement=QLe;l.ElementReference="ElementReference";function ZLe(r){return l.reflection.isInstance(r,l.ElementReference)}l.isElementReference=ZLe;l.AnnotatingElement="AnnotatingElement";function eje(r){return l.reflection.isInstance(r,l.AnnotatingElement)}l.isAnnotatingElement=eje;l.Namespace="Namespace";function tje(r){return l.reflection.isInstance(r,l.Namespace)}l.isNamespace=tje;l.Relationship="Relationship";function rje(r){return l.reflection.isInstance(r,l.Relationship)}l.isRelationship=rje;l.MembershipReference="MembershipReference";function nje(r){return l.reflection.isInstance(r,l.MembershipReference)}l.isMembershipReference=nje;l.NamespaceReference="NamespaceReference";function ije(r){return l.reflection.isInstance(r,l.NamespaceReference)}l.isNamespaceReference=ije;l.MetadataFeature="MetadataFeature";function aje(r){return l.reflection.isInstance(r,l.MetadataFeature)}l.isMetadataFeature=aje;l.TextualAnnotatingElement="TextualAnnotatingElement";function sje(r){return l.reflection.isInstance(r,l.TextualAnnotatingElement)}l.isTextualAnnotatingElement=sje;l.Package="Package";function oje(r){return l.reflection.isInstance(r,l.Package)}l.isPackage=oje;l.Type="Type";function lje(r){return l.reflection.isInstance(r,l.Type)}l.isType=lje;l.Annotation="Annotation";function uje(r){return l.reflection.isInstance(r,l.Annotation)}l.isAnnotation=uje;l.Association="Association";function cje(r){return l.reflection.isInstance(r,l.Association)}l.isAssociation=cje;l.Connector="Connector";function fje(r){return l.reflection.isInstance(r,l.Connector)}l.isConnector=fje;l.Dependency="Dependency";function dje(r){return l.reflection.isInstance(r,l.Dependency)}l.isDependency=dje;l.Differencing="Differencing";function pje(r){return l.reflection.isInstance(r,l.Differencing)}l.isDifferencing=pje;l.Disjoining="Disjoining";function mje(r){return l.reflection.isInstance(r,l.Disjoining)}l.isDisjoining=mje;l.FeatureChaining="FeatureChaining";function yje(r){return l.reflection.isInstance(r,l.FeatureChaining)}l.isFeatureChaining=yje;l.FeatureInverting="FeatureInverting";function hje(r){return l.reflection.isInstance(r,l.FeatureInverting)}l.isFeatureInverting=hje;l.Featuring="Featuring";function gje(r){return l.reflection.isInstance(r,l.Featuring)}l.isFeaturing=gje;l.Import="Import";function vje(r){return l.reflection.isInstance(r,l.Import)}l.isImport=vje;l.Inheritance="Inheritance";function _je(r){return l.reflection.isInstance(r,l.Inheritance)}l.isInheritance=_je;l.Intersecting="Intersecting";function $je(r){return l.reflection.isInstance(r,l.Intersecting)}l.isIntersecting=$je;l.Membership="Membership";function Tje(r){return l.reflection.isInstance(r,l.Membership)}l.isMembership=Tje;l.Unioning="Unioning";function Rje(r){return l.reflection.isInstance(r,l.Unioning)}l.isUnioning=Rje;l.TypeReference="TypeReference";function bje(r){return l.reflection.isInstance(r,l.TypeReference)}l.isTypeReference=bje;l.MetadataUsage="MetadataUsage";function Cje(r){return l.reflection.isInstance(r,l.MetadataUsage)}l.isMetadataUsage=Cje;l.Comment="Comment";function Aje(r){return l.reflection.isInstance(r,l.Comment)}l.isComment=Aje;l.TextualRepresentation="TextualRepresentation";function wje(r){return l.reflection.isInstance(r,l.TextualRepresentation)}l.isTextualRepresentation=wje;l.LibraryPackage="LibraryPackage";function Dje(r){return l.reflection.isInstance(r,l.LibraryPackage)}l.isLibraryPackage=Dje;l.Classifier="Classifier";function Sje(r){return l.reflection.isInstance(r,l.Classifier)}l.isClassifier=Sje;l.Feature="Feature";function Mje(r){return l.reflection.isInstance(r,l.Feature)}l.isFeature=Mje;l.AssociationStructure="AssociationStructure";function Pje(r){return l.reflection.isInstance(r,l.AssociationStructure)}l.isAssociationStructure=Pje;l.Interaction="Interaction";function Eje(r){return l.reflection.isInstance(r,l.Interaction)}l.isInteraction=Eje;l.BindingConnector="BindingConnector";function Oje(r){return l.reflection.isInstance(r,l.BindingConnector)}l.isBindingConnector=Oje;l.ConnectorAsUsage="ConnectorAsUsage";function kje(r){return l.reflection.isInstance(r,l.ConnectorAsUsage)}l.isConnectorAsUsage=kje;l.ItemFlow="ItemFlow";function Ije(r){return l.reflection.isInstance(r,l.ItemFlow)}l.isItemFlow=Ije;l.Succession="Succession";function Fje(r){return l.reflection.isInstance(r,l.Succession)}l.isSuccession=Fje;l.FeatureMembership="FeatureMembership";function Nje(r){return l.reflection.isInstance(r,l.FeatureMembership)}l.isFeatureMembership=Nje;l.TypeFeaturing="TypeFeaturing";function qje(r){return l.reflection.isInstance(r,l.TypeFeaturing)}l.isTypeFeaturing=qje;l.Expose="Expose";function xje(r){return l.reflection.isInstance(r,l.Expose)}l.isExpose=xje;l.MembershipImport="MembershipImport";function Lje(r){return l.reflection.isInstance(r,l.MembershipImport)}l.isMembershipImport=Lje;l.NamespaceImport="NamespaceImport";function jje(r){return l.reflection.isInstance(r,l.NamespaceImport)}l.isNamespaceImport=jje;l.Conjugation="Conjugation";function Uje(r){return l.reflection.isInstance(r,l.Conjugation)}l.isConjugation=Uje;l.Specialization="Specialization";function Bje(r){return l.reflection.isInstance(r,l.Specialization)}l.isSpecialization=Bje;l.OwningMembership="OwningMembership";function Gje(r){return l.reflection.isInstance(r,l.OwningMembership)}l.isOwningMembership=Gje;l.ClassifierReference="ClassifierReference";function Kje(r){return l.reflection.isInstance(r,l.ClassifierReference)}l.isClassifierReference=Kje;l.FeatureReference="FeatureReference";function Hje(r){return l.reflection.isInstance(r,l.FeatureReference)}l.isFeatureReference=Hje;l.Documentation="Documentation";function Vje(r){return l.reflection.isInstance(r,l.Documentation)}l.isDocumentation=Vje;l.Class="Class";function Wje(r){return l.reflection.isInstance(r,l.Class)}l.isClass=Wje;l.DataType="DataType";function zje(r){return l.reflection.isInstance(r,l.DataType)}l.isDataType=zje;l.Definition="Definition";function Yje(r){return l.reflection.isInstance(r,l.Definition)}l.isDefinition=Yje;l.ItemFeature="ItemFeature";function Xje(r){return l.reflection.isInstance(r,l.ItemFeature)}l.isItemFeature=Xje;l.ItemFlowEnd="ItemFlowEnd";function Jje(r){return l.reflection.isInstance(r,l.ItemFlowEnd)}l.isItemFlowEnd=Jje;l.Multiplicity="Multiplicity";function Qje(r){return l.reflection.isInstance(r,l.Multiplicity)}l.isMultiplicity=Qje;l.Step="Step";function Zje(r){return l.reflection.isInstance(r,l.Step)}l.isStep=Zje;l.Usage="Usage";function eUe(r){return l.reflection.isInstance(r,l.Usage)}l.isUsage=eUe;l.ConnectionDefinition="ConnectionDefinition";function tUe(r){return l.reflection.isInstance(r,l.ConnectionDefinition)}l.isConnectionDefinition=tUe;l.FlowConnectionDefinition="FlowConnectionDefinition";function rUe(r){return l.reflection.isInstance(r,l.FlowConnectionDefinition)}l.isFlowConnectionDefinition=rUe;l.BindingConnectorAsUsage="BindingConnectorAsUsage";function nUe(r){return l.reflection.isInstance(r,l.BindingConnectorAsUsage)}l.isBindingConnectorAsUsage=nUe;l.ConnectionUsage="ConnectionUsage";function iUe(r){return l.reflection.isInstance(r,l.ConnectionUsage)}l.isConnectionUsage=iUe;l.SuccessionAsUsage="SuccessionAsUsage";function aUe(r){return l.reflection.isInstance(r,l.SuccessionAsUsage)}l.isSuccessionAsUsage=aUe;l.FlowConnectionUsage="FlowConnectionUsage";function sUe(r){return l.reflection.isInstance(r,l.FlowConnectionUsage)}l.isFlowConnectionUsage=sUe;l.SuccessionItemFlow="SuccessionItemFlow";function oUe(r){return l.reflection.isInstance(r,l.SuccessionItemFlow)}l.isSuccessionItemFlow=oUe;l.EndFeatureMembership="EndFeatureMembership";function lUe(r){return l.reflection.isInstance(r,l.EndFeatureMembership)}l.isEndFeatureMembership=lUe;l.ObjectiveMembership="ObjectiveMembership";function uUe(r){return l.reflection.isInstance(r,l.ObjectiveMembership)}l.isObjectiveMembership=uUe;l.ParameterMembership="ParameterMembership";function cUe(r){return l.reflection.isInstance(r,l.ParameterMembership)}l.isParameterMembership=cUe;l.RequirementConstraintMembership="RequirementConstraintMembership";function fUe(r){return l.reflection.isInstance(r,l.RequirementConstraintMembership)}l.isRequirementConstraintMembership=fUe;l.ResultExpressionMembership="ResultExpressionMembership";function dUe(r){return l.reflection.isInstance(r,l.ResultExpressionMembership)}l.isResultExpressionMembership=dUe;l.StateSubactionMembership="StateSubactionMembership";function pUe(r){return l.reflection.isInstance(r,l.StateSubactionMembership)}l.isStateSubactionMembership=pUe;l.TransitionFeatureMembership="TransitionFeatureMembership";function mUe(r){return l.reflection.isInstance(r,l.TransitionFeatureMembership)}l.isTransitionFeatureMembership=mUe;l.ViewRenderingMembership="ViewRenderingMembership";function yUe(r){return l.reflection.isInstance(r,l.ViewRenderingMembership)}l.isViewRenderingMembership=yUe;l.MembershipExpose="MembershipExpose";function hUe(r){return l.reflection.isInstance(r,l.MembershipExpose)}l.isMembershipExpose=hUe;l.NamespaceExpose="NamespaceExpose";function gUe(r){return l.reflection.isInstance(r,l.NamespaceExpose)}l.isNamespaceExpose=gUe;l.PortConjugation="PortConjugation";function vUe(r){return l.reflection.isInstance(r,l.PortConjugation)}l.isPortConjugation=vUe;l.FeatureTyping="FeatureTyping";function _Ue(r){return l.reflection.isInstance(r,l.FeatureTyping)}l.isFeatureTyping=_Ue;l.Subclassification="Subclassification";function $Ue(r){return l.reflection.isInstance(r,l.Subclassification)}l.isSubclassification=$Ue;l.Subsetting="Subsetting";function TUe(r){return l.reflection.isInstance(r,l.Subsetting)}l.isSubsetting=TUe;l.ElementFilterMembership="ElementFilterMembership";function RUe(r){return l.reflection.isInstance(r,l.ElementFilterMembership)}l.isElementFilterMembership=RUe;l.FeatureValue="FeatureValue";function bUe(r){return l.reflection.isInstance(r,l.FeatureValue)}l.isFeatureValue=bUe;l.VariantMembership="VariantMembership";function CUe(r){return l.reflection.isInstance(r,l.VariantMembership)}l.isVariantMembership=CUe;l.ConjugatedPortReference="ConjugatedPortReference";function AUe(r){return l.reflection.isInstance(r,l.ConjugatedPortReference)}l.isConjugatedPortReference=AUe;l.MetaclassReference="MetaclassReference";function wUe(r){return l.reflection.isInstance(r,l.MetaclassReference)}l.isMetaclassReference=wUe;l.Behavior="Behavior";function DUe(r){return l.reflection.isInstance(r,l.Behavior)}l.isBehavior=DUe;l.LifeClass="LifeClass";function SUe(r){return l.reflection.isInstance(r,l.LifeClass)}l.isLifeClass=SUe;l.OccurrenceDefinition="OccurrenceDefinition";function MUe(r){return l.reflection.isInstance(r,l.OccurrenceDefinition)}l.isOccurrenceDefinition=MUe;l.Structure="Structure";function PUe(r){return l.reflection.isInstance(r,l.Structure)}l.isStructure=PUe;l.AttributeDefinition="AttributeDefinition";function EUe(r){return l.reflection.isInstance(r,l.AttributeDefinition)}l.isAttributeDefinition=EUe;l.MultiplicityRange="MultiplicityRange";function OUe(r){return l.reflection.isInstance(r,l.MultiplicityRange)}l.isMultiplicityRange=OUe;l.ActionUsage="ActionUsage";function kUe(r){return l.reflection.isInstance(r,l.ActionUsage)}l.isActionUsage=kUe;l.Expression="Expression";function IUe(r){return l.reflection.isInstance(r,l.Expression)}l.isExpression=IUe;l.AttributeUsage="AttributeUsage";function FUe(r){return l.reflection.isInstance(r,l.AttributeUsage)}l.isAttributeUsage=FUe;l.OccurrenceUsage="OccurrenceUsage";function NUe(r){return l.reflection.isInstance(r,l.OccurrenceUsage)}l.isOccurrenceUsage=NUe;l.ReferenceUsage="ReferenceUsage";function qUe(r){return l.reflection.isInstance(r,l.ReferenceUsage)}l.isReferenceUsage=qUe;l.AllocationDefinition="AllocationDefinition";function xUe(r){return l.reflection.isInstance(r,l.AllocationDefinition)}l.isAllocationDefinition=xUe;l.InterfaceDefinition="InterfaceDefinition";function LUe(r){return l.reflection.isInstance(r,l.InterfaceDefinition)}l.isInterfaceDefinition=LUe;l.AllocationUsage="AllocationUsage";function jUe(r){return l.reflection.isInstance(r,l.AllocationUsage)}l.isAllocationUsage=jUe;l.InterfaceUsage="InterfaceUsage";function UUe(r){return l.reflection.isInstance(r,l.InterfaceUsage)}l.isInterfaceUsage=UUe;l.SuccessionFlowConnectionUsage="SuccessionFlowConnectionUsage";function BUe(r){return l.reflection.isInstance(r,l.SuccessionFlowConnectionUsage)}l.isSuccessionFlowConnectionUsage=BUe;l.ActorMembership="ActorMembership";function GUe(r){return l.reflection.isInstance(r,l.ActorMembership)}l.isActorMembership=GUe;l.ReturnParameterMembership="ReturnParameterMembership";function KUe(r){return l.reflection.isInstance(r,l.ReturnParameterMembership)}l.isReturnParameterMembership=KUe;l.StakeholderMembership="StakeholderMembership";function HUe(r){return l.reflection.isInstance(r,l.StakeholderMembership)}l.isStakeholderMembership=HUe;l.SubjectMembership="SubjectMembership";function VUe(r){return l.reflection.isInstance(r,l.SubjectMembership)}l.isSubjectMembership=VUe;l.FramedConcernMembership="FramedConcernMembership";function WUe(r){return l.reflection.isInstance(r,l.FramedConcernMembership)}l.isFramedConcernMembership=WUe;l.RequirementVerificationMembership="RequirementVerificationMembership";function zUe(r){return l.reflection.isInstance(r,l.RequirementVerificationMembership)}l.isRequirementVerificationMembership=zUe;l.ConjugatedPortTyping="ConjugatedPortTyping";function YUe(r){return l.reflection.isInstance(r,l.ConjugatedPortTyping)}l.isConjugatedPortTyping=YUe;l.Redefinition="Redefinition";function XUe(r){return l.reflection.isInstance(r,l.Redefinition)}l.isRedefinition=XUe;l.ReferenceSubsetting="ReferenceSubsetting";function JUe(r){return l.reflection.isInstance(r,l.ReferenceSubsetting)}l.isReferenceSubsetting=JUe;l.ActionDefinition="ActionDefinition";function QUe(r){return l.reflection.isInstance(r,l.ActionDefinition)}l.isActionDefinition=QUe;l.SysMLFunction="SysMLFunction";function ZUe(r){return l.reflection.isInstance(r,l.SysMLFunction)}l.isSysMLFunction=ZUe;l.ConstraintDefinition="ConstraintDefinition";function e3e(r){return l.reflection.isInstance(r,l.ConstraintDefinition)}l.isConstraintDefinition=e3e;l.ItemDefinition="ItemDefinition";function t3e(r){return l.reflection.isInstance(r,l.ItemDefinition)}l.isItemDefinition=t3e;l.PortDefinition="PortDefinition";function r3e(r){return l.reflection.isInstance(r,l.PortDefinition)}l.isPortDefinition=r3e;l.Metaclass="Metaclass";function n3e(r){return l.reflection.isInstance(r,l.Metaclass)}l.isMetaclass=n3e;l.EnumerationDefinition="EnumerationDefinition";function i3e(r){return l.reflection.isInstance(r,l.EnumerationDefinition)}l.isEnumerationDefinition=i3e;l.AcceptActionUsage="AcceptActionUsage";function a3e(r){return l.reflection.isInstance(r,l.AcceptActionUsage)}l.isAcceptActionUsage=a3e;l.AssignmentActionUsage="AssignmentActionUsage";function s3e(r){return l.reflection.isInstance(r,l.AssignmentActionUsage)}l.isAssignmentActionUsage=s3e;l.CalculationUsage="CalculationUsage";function o3e(r){return l.reflection.isInstance(r,l.CalculationUsage)}l.isCalculationUsage=o3e;l.ControlNode="ControlNode";function l3e(r){return l.reflection.isInstance(r,l.ControlNode)}l.isControlNode=l3e;l.IfActionUsage="IfActionUsage";function u3e(r){return l.reflection.isInstance(r,l.IfActionUsage)}l.isIfActionUsage=u3e;l.LoopActionUsage="LoopActionUsage";function c3e(r){return l.reflection.isInstance(r,l.LoopActionUsage)}l.isLoopActionUsage=c3e;l.PerformActionUsage="PerformActionUsage";function f3e(r){return l.reflection.isInstance(r,l.PerformActionUsage)}l.isPerformActionUsage=f3e;l.SendActionUsage="SendActionUsage";function d3e(r){return l.reflection.isInstance(r,l.SendActionUsage)}l.isSendActionUsage=d3e;l.StateUsage="StateUsage";function p3e(r){return l.reflection.isInstance(r,l.StateUsage)}l.isStateUsage=p3e;l.TransitionUsage="TransitionUsage";function m3e(r){return l.reflection.isInstance(r,l.TransitionUsage)}l.isTransitionUsage=m3e;l.BooleanExpression="BooleanExpression";function y3e(r){return l.reflection.isInstance(r,l.BooleanExpression)}l.isBooleanExpression=y3e;l.FeatureReferenceExpression="FeatureReferenceExpression";function h3e(r){return l.reflection.isInstance(r,l.FeatureReferenceExpression)}l.isFeatureReferenceExpression=h3e;l.InvocationExpression="InvocationExpression";function g3e(r){return l.reflection.isInstance(r,l.InvocationExpression)}l.isInvocationExpression=g3e;l.LiteralExpression="LiteralExpression";function v3e(r){return l.reflection.isInstance(r,l.LiteralExpression)}l.isLiteralExpression=v3e;l.MetadataAccessExpression="MetadataAccessExpression";function _3e(r){return l.reflection.isInstance(r,l.MetadataAccessExpression)}l.isMetadataAccessExpression=_3e;l.NullExpression="NullExpression";function $3e(r){return l.reflection.isInstance(r,l.NullExpression)}l.isNullExpression=$3e;l.EnumerationUsage="EnumerationUsage";function T3e(r){return l.reflection.isInstance(r,l.EnumerationUsage)}l.isEnumerationUsage=T3e;l.ConstraintUsage="ConstraintUsage";function R3e(r){return l.reflection.isInstance(r,l.ConstraintUsage)}l.isConstraintUsage=R3e;l.EventOccurrenceUsage="EventOccurrenceUsage";function b3e(r){return l.reflection.isInstance(r,l.EventOccurrenceUsage)}l.isEventOccurrenceUsage=b3e;l.ItemUsage="ItemUsage";function C3e(r){return l.reflection.isInstance(r,l.ItemUsage)}l.isItemUsage=C3e;l.PortUsage="PortUsage";function A3e(r){return l.reflection.isInstance(r,l.PortUsage)}l.isPortUsage=A3e;l.CalculationDefinition="CalculationDefinition";function w3e(r){return l.reflection.isInstance(r,l.CalculationDefinition)}l.isCalculationDefinition=w3e;l.StateDefinition="StateDefinition";function D3e(r){return l.reflection.isInstance(r,l.StateDefinition)}l.isStateDefinition=D3e;l.Predicate="Predicate";function S3e(r){return l.reflection.isInstance(r,l.Predicate)}l.isPredicate=S3e;l.RequirementDefinition="RequirementDefinition";function M3e(r){return l.reflection.isInstance(r,l.RequirementDefinition)}l.isRequirementDefinition=M3e;l.MetadataDefinition="MetadataDefinition";function P3e(r){return l.reflection.isInstance(r,l.MetadataDefinition)}l.isMetadataDefinition=P3e;l.PartDefinition="PartDefinition";function E3e(r){return l.reflection.isInstance(r,l.PartDefinition)}l.isPartDefinition=E3e;l.ConjugatedPortDefinition="ConjugatedPortDefinition";function O3e(r){return l.reflection.isInstance(r,l.ConjugatedPortDefinition)}l.isConjugatedPortDefinition=O3e;l.CaseUsage="CaseUsage";function k3e(r){return l.reflection.isInstance(r,l.CaseUsage)}l.isCaseUsage=k3e;l.DecisionNode="DecisionNode";function I3e(r){return l.reflection.isInstance(r,l.DecisionNode)}l.isDecisionNode=I3e;l.ForkNode="ForkNode";function F3e(r){return l.reflection.isInstance(r,l.ForkNode)}l.isForkNode=F3e;l.JoinNode="JoinNode";function N3e(r){return l.reflection.isInstance(r,l.JoinNode)}l.isJoinNode=N3e;l.MergeNode="MergeNode";function q3e(r){return l.reflection.isInstance(r,l.MergeNode)}l.isMergeNode=q3e;l.ForLoopActionUsage="ForLoopActionUsage";function x3e(r){return l.reflection.isInstance(r,l.ForLoopActionUsage)}l.isForLoopActionUsage=x3e;l.WhileLoopActionUsage="WhileLoopActionUsage";function L3e(r){return l.reflection.isInstance(r,l.WhileLoopActionUsage)}l.isWhileLoopActionUsage=L3e;l.ExhibitStateUsage="ExhibitStateUsage";function j3e(r){return l.reflection.isInstance(r,l.ExhibitStateUsage)}l.isExhibitStateUsage=j3e;l.IncludeUseCaseUsage="IncludeUseCaseUsage";function U3e(r){return l.reflection.isInstance(r,l.IncludeUseCaseUsage)}l.isIncludeUseCaseUsage=U3e;l.Invariant="Invariant";function B3e(r){return l.reflection.isInstance(r,l.Invariant)}l.isInvariant=B3e;l.OperatorExpression="OperatorExpression";function G3e(r){return l.reflection.isInstance(r,l.OperatorExpression)}l.isOperatorExpression=G3e;l.TriggerInvocationExpression="TriggerInvocationExpression";function K3e(r){return l.reflection.isInstance(r,l.TriggerInvocationExpression)}l.isTriggerInvocationExpression=K3e;l.LiteralBoolean="LiteralBoolean";function H3e(r){return l.reflection.isInstance(r,l.LiteralBoolean)}l.isLiteralBoolean=H3e;l.LiteralInfinity="LiteralInfinity";function V3e(r){return l.reflection.isInstance(r,l.LiteralInfinity)}l.isLiteralInfinity=V3e;l.LiteralNumber="LiteralNumber";function W3e(r){return l.reflection.isInstance(r,l.LiteralNumber)}l.isLiteralNumber=W3e;l.LiteralString="LiteralString";function z3e(r){return l.reflection.isInstance(r,l.LiteralString)}l.isLiteralString=z3e;l.AssertConstraintUsage="AssertConstraintUsage";function Y3e(r){return l.reflection.isInstance(r,l.AssertConstraintUsage)}l.isAssertConstraintUsage=Y3e;l.RequirementUsage="RequirementUsage";function X3e(r){return l.reflection.isInstance(r,l.RequirementUsage)}l.isRequirementUsage=X3e;l.PartUsage="PartUsage";function J3e(r){return l.reflection.isInstance(r,l.PartUsage)}l.isPartUsage=J3e;l.CaseDefinition="CaseDefinition";function Q3e(r){return l.reflection.isInstance(r,l.CaseDefinition)}l.isCaseDefinition=Q3e;l.ConcernDefinition="ConcernDefinition";function Z3e(r){return l.reflection.isInstance(r,l.ConcernDefinition)}l.isConcernDefinition=Z3e;l.ViewpointDefinition="ViewpointDefinition";function e2e(r){return l.reflection.isInstance(r,l.ViewpointDefinition)}l.isViewpointDefinition=e2e;l.RenderingDefinition="RenderingDefinition";function t2e(r){return l.reflection.isInstance(r,l.RenderingDefinition)}l.isRenderingDefinition=t2e;l.ViewDefinition="ViewDefinition";function r2e(r){return l.reflection.isInstance(r,l.ViewDefinition)}l.isViewDefinition=r2e;l.AnalysisCaseUsage="AnalysisCaseUsage";function n2e(r){return l.reflection.isInstance(r,l.AnalysisCaseUsage)}l.isAnalysisCaseUsage=n2e;l.UseCaseUsage="UseCaseUsage";function i2e(r){return l.reflection.isInstance(r,l.UseCaseUsage)}l.isUseCaseUsage=i2e;l.VerificationCaseUsage="VerificationCaseUsage";function a2e(r){return l.reflection.isInstance(r,l.VerificationCaseUsage)}l.isVerificationCaseUsage=a2e;l.CollectExpression="CollectExpression";function s2e(r){return l.reflection.isInstance(r,l.CollectExpression)}l.isCollectExpression=s2e;l.FeatureChainExpression="FeatureChainExpression";function o2e(r){return l.reflection.isInstance(r,l.FeatureChainExpression)}l.isFeatureChainExpression=o2e;l.SelectExpression="SelectExpression";function l2e(r){return l.reflection.isInstance(r,l.SelectExpression)}l.isSelectExpression=l2e;l.SatisfyRequirementUsage="SatisfyRequirementUsage";function u2e(r){return l.reflection.isInstance(r,l.SatisfyRequirementUsage)}l.isSatisfyRequirementUsage=u2e;l.ConcernUsage="ConcernUsage";function c2e(r){return l.reflection.isInstance(r,l.ConcernUsage)}l.isConcernUsage=c2e;l.ViewpointUsage="ViewpointUsage";function f2e(r){return l.reflection.isInstance(r,l.ViewpointUsage)}l.isViewpointUsage=f2e;l.RenderingUsage="RenderingUsage";function d2e(r){return l.reflection.isInstance(r,l.RenderingUsage)}l.isRenderingUsage=d2e;l.ViewUsage="ViewUsage";function p2e(r){return l.reflection.isInstance(r,l.ViewUsage)}l.isViewUsage=p2e;l.AnalysisCaseDefinition="AnalysisCaseDefinition";function m2e(r){return l.reflection.isInstance(r,l.AnalysisCaseDefinition)}l.isAnalysisCaseDefinition=m2e;l.UseCaseDefinition="UseCaseDefinition";function y2e(r){return l.reflection.isInstance(r,l.UseCaseDefinition)}l.isUseCaseDefinition=y2e;l.VerificationCaseDefinition="VerificationCaseDefinition";function h2e(r){return l.reflection.isInstance(r,l.VerificationCaseDefinition)}l.isVerificationCaseDefinition=h2e;var gC=class extends HLe.AbstractAstReflection{getAllTypes(){return["AcceptActionUsage","ActionDefinition","ActionUsage","ActorMembership","AllocationDefinition","AllocationUsage","AnalysisCaseDefinition","AnalysisCaseUsage","AnnotatingElement","Annotation","AssertConstraintUsage","AssignmentActionUsage","Association","AssociationStructure","AttributeDefinition","AttributeUsage","Behavior","BindingConnector","BindingConnectorAsUsage","BooleanExpression","CalculationDefinition","CalculationUsage","CaseDefinition","CaseUsage","Class","Classifier","ClassifierReference","CollectExpression","Comment","ConcernDefinition","ConcernUsage","ConjugatedPortDefinition","ConjugatedPortReference","ConjugatedPortTyping","Conjugation","ConnectionDefinition","ConnectionUsage","Connector","ConnectorAsUsage","ConstraintDefinition","ConstraintUsage","ControlNode","DataType","DecisionNode","Definition","Dependency","Differencing","Disjoining","Documentation","Element","ElementFilterMembership","ElementReference","EndFeatureMembership","EnumerationDefinition","EnumerationUsage","EventOccurrenceUsage","ExhibitStateUsage","Expose","Expression","Feature","FeatureChainExpression","FeatureChaining","FeatureInverting","FeatureMembership","FeatureReference","FeatureReferenceExpression","FeatureRelationship","FeatureTyping","FeatureValue","Featuring","FlowConnectionDefinition","FlowConnectionUsage","ForLoopActionUsage","ForkNode","FramedConcernMembership","IfActionUsage","Import","IncludeUseCaseUsage","Inheritance","InlineExpression","Interaction","InterfaceDefinition","InterfaceUsage","Intersecting","Invariant","InvocationExpression","ItemDefinition","ItemFeature","ItemFlow","ItemFlowEnd","ItemUsage","JoinNode","LibraryPackage","LifeClass","LiteralBoolean","LiteralExpression","LiteralInfinity","LiteralNumber","LiteralString","LoopActionUsage","Membership","MembershipExpose","MembershipImport","MembershipReference","MergeNode","Metaclass","MetaclassReference","MetadataAccessExpression","MetadataDefinition","MetadataFeature","MetadataUsage","Multiplicity","MultiplicityRange","Namespace","NamespaceExpose","NamespaceImport","NamespaceReference","NonOwnerType","NullExpression","ObjectiveMembership","OccurrenceDefinition","OccurrenceUsage","OperatorExpression","OwningMembership","Package","ParameterMembership","PartDefinition","PartUsage","PerformActionUsage","PortConjugation","PortDefinition","PortUsage","Predicate","Redefinition","ReferenceSubsetting","ReferenceUsage","Relationship","RenderingDefinition","RenderingUsage","RequirementConstraintMembership","RequirementDefinition","RequirementUsage","RequirementVerificationMembership","ResultExpressionMembership","ReturnParameterMembership","SatisfyRequirementUsage","SelectExpression","SendActionUsage","Specialization","StakeholderMembership","StateDefinition","StateSubactionMembership","StateUsage","Step","Structure","Subclassification","SubjectMembership","Subsetting","Succession","SuccessionAsUsage","SuccessionFlowConnectionUsage","SuccessionItemFlow","SysMLFunction","TextualAnnotatingElement","TextualRepresentation","TransitionFeatureMembership","TransitionUsage","TransparentElement","TriggerInvocationExpression","Type","TypeFeaturing","TypeReference","TypeRelationship","Unioning","Usage","UseCaseDefinition","UseCaseUsage","VariantMembership","VerificationCaseDefinition","VerificationCaseUsage","ViewDefinition","ViewRenderingMembership","ViewUsage","ViewpointDefinition","ViewpointUsage","WhileLoopActionUsage"]}computeIsSubtype(e,t){switch(e){case l.AcceptActionUsage:case l.AssignmentActionUsage:case l.ControlNode:case l.IfActionUsage:case l.SendActionUsage:case l.StateUsage:case l.TransitionUsage:return this.isSubtype(l.ActionUsage,t);case l.ActionDefinition:return this.isSubtype(l.Behavior,t)||this.isSubtype(l.OccurrenceDefinition,t);case l.ActionUsage:return this.isSubtype(l.OccurrenceUsage,t)||this.isSubtype(l.Step,t);case l.ActorMembership:case l.ReturnParameterMembership:case l.StakeholderMembership:case l.SubjectMembership:return this.isSubtype(l.ParameterMembership,t);case l.AllocationDefinition:case l.InterfaceDefinition:return this.isSubtype(l.ConnectionDefinition,t);case l.AllocationUsage:case l.InterfaceUsage:return this.isSubtype(l.ConnectionUsage,t);case l.AnalysisCaseDefinition:case l.UseCaseDefinition:case l.VerificationCaseDefinition:return this.isSubtype(l.CaseDefinition,t);case l.AnalysisCaseUsage:case l.UseCaseUsage:case l.VerificationCaseUsage:return this.isSubtype(l.CaseUsage,t);case l.AnnotatingElement:case l.Namespace:case l.Relationship:return this.isSubtype(l.Element,t);case l.Annotation:case l.Membership:return this.isSubtype(l.NonOwnerType,t)||this.isSubtype(l.Relationship,t);case l.AssertConstraintUsage:return this.isSubtype(l.ConstraintUsage,t)||this.isSubtype(l.Invariant,t);case l.Association:return this.isSubtype(l.Classifier,t)||this.isSubtype(l.Relationship,t);case l.AssociationStructure:return this.isSubtype(l.Association,t)||this.isSubtype(l.Structure,t);case l.AttributeDefinition:return this.isSubtype(l.DataType,t)||this.isSubtype(l.Definition,t);case l.AttributeUsage:case l.OccurrenceUsage:case l.ReferenceUsage:return this.isSubtype(l.Usage,t);case l.Behavior:case l.LifeClass:case l.Structure:return this.isSubtype(l.Class,t);case l.BindingConnector:case l.Succession:return this.isSubtype(l.Connector,t);case l.BindingConnectorAsUsage:return this.isSubtype(l.BindingConnector,t)||this.isSubtype(l.ConnectorAsUsage,t);case l.BooleanExpression:return this.isSubtype(l.Expression,t);case l.CalculationDefinition:return this.isSubtype(l.ActionDefinition,t)||this.isSubtype(l.SysMLFunction,t);case l.CalculationUsage:return this.isSubtype(l.ActionUsage,t)||this.isSubtype(l.Expression,t);case l.CaseDefinition:return this.isSubtype(l.CalculationDefinition,t);case l.CaseUsage:return this.isSubtype(l.CalculationUsage,t);case l.Class:case l.DataType:case l.Definition:return this.isSubtype(l.Classifier,t);case l.Classifier:case l.Feature:return this.isSubtype(l.Type,t);case l.ClassifierReference:case l.FeatureReference:return this.isSubtype(l.TypeReference,t);case l.CollectExpression:case l.FeatureChainExpression:case l.SelectExpression:return this.isSubtype(l.InlineExpression,t)||this.isSubtype(l.OperatorExpression,t);case l.Comment:case l.TextualRepresentation:return this.isSubtype(l.TextualAnnotatingElement,t);case l.ConcernDefinition:case l.ViewpointDefinition:return this.isSubtype(l.RequirementDefinition,t);case l.ConcernUsage:case l.ViewpointUsage:return this.isSubtype(l.RequirementUsage,t);case l.ConjugatedPortDefinition:return this.isSubtype(l.PortDefinition,t);case l.ConjugatedPortReference:case l.MetaclassReference:return this.isSubtype(l.ClassifierReference,t);case l.ConjugatedPortTyping:return this.isSubtype(l.FeatureTyping,t);case l.Conjugation:case l.Specialization:return this.isSubtype(l.Inheritance,t);case l.ConnectionDefinition:return this.isSubtype(l.AssociationStructure,t)||this.isSubtype(l.PartDefinition,t);case l.ConnectionUsage:return this.isSubtype(l.ConnectorAsUsage,t)||this.isSubtype(l.PartUsage,t);case l.Connector:return this.isSubtype(l.Feature,t)||this.isSubtype(l.Relationship,t);case l.ConnectorAsUsage:return this.isSubtype(l.Connector,t)||this.isSubtype(l.Usage,t);case l.ConstraintDefinition:return this.isSubtype(l.OccurrenceDefinition,t)||this.isSubtype(l.Predicate,t);case l.ConstraintUsage:return this.isSubtype(l.BooleanExpression,t)||this.isSubtype(l.OccurrenceUsage,t);case l.DecisionNode:case l.ForkNode:case l.JoinNode:case l.MergeNode:return this.isSubtype(l.ControlNode,t);case l.Dependency:case l.Featuring:case l.Import:case l.Inheritance:return this.isSubtype(l.Relationship,t);case l.Differencing:case l.Disjoining:case l.Intersecting:case l.Unioning:return this.isSubtype(l.Relationship,t)||this.isSubtype(l.TypeRelationship,t);case l.Documentation:return this.isSubtype(l.Comment,t);case l.ElementFilterMembership:case l.FeatureValue:case l.VariantMembership:return this.isSubtype(l.OwningMembership,t);case l.EndFeatureMembership:case l.ObjectiveMembership:case l.ParameterMembership:case l.RequirementConstraintMembership:case l.ResultExpressionMembership:case l.StateSubactionMembership:case l.TransitionFeatureMembership:case l.ViewRenderingMembership:return this.isSubtype(l.FeatureMembership,t);case l.EnumerationDefinition:return this.isSubtype(l.AttributeDefinition,t);case l.EnumerationUsage:return this.isSubtype(l.AttributeUsage,t);case l.EventOccurrenceUsage:case l.ItemUsage:case l.PortUsage:return this.isSubtype(l.OccurrenceUsage,t);case l.ExhibitStateUsage:return this.isSubtype(l.PerformActionUsage,t)||this.isSubtype(l.StateUsage,t);case l.Expose:case l.MembershipImport:case l.NamespaceImport:return this.isSubtype(l.Import,t);case l.Expression:return this.isSubtype(l.Step,t);case l.FeatureChaining:case l.FeatureInverting:return this.isSubtype(l.FeatureRelationship,t)||this.isSubtype(l.Relationship,t);case l.FeatureMembership:return this.isSubtype(l.Featuring,t)||this.isSubtype(l.OwningMembership,t);case l.FeatureReferenceExpression:case l.InvocationExpression:case l.LiteralExpression:case l.MetadataAccessExpression:case l.NullExpression:return this.isSubtype(l.Expression,t)||this.isSubtype(l.InlineExpression,t);case l.FeatureTyping:case l.Subclassification:case l.Subsetting:return this.isSubtype(l.Specialization,t);case l.FlowConnectionDefinition:return this.isSubtype(l.ActionDefinition,t)||this.isSubtype(l.ConnectionDefinition,t)||this.isSubtype(l.Interaction,t);case l.FlowConnectionUsage:return this.isSubtype(l.ActionUsage,t)||this.isSubtype(l.ConnectionUsage,t)||this.isSubtype(l.ItemFlow,t);case l.ForLoopActionUsage:case l.WhileLoopActionUsage:return this.isSubtype(l.LoopActionUsage,t);case l.FramedConcernMembership:case l.RequirementVerificationMembership:return this.isSubtype(l.RequirementConstraintMembership,t);case l.IncludeUseCaseUsage:return this.isSubtype(l.PerformActionUsage,t)||this.isSubtype(l.UseCaseUsage,t);case l.Interaction:return this.isSubtype(l.Association,t)||this.isSubtype(l.Behavior,t);case l.Invariant:return this.isSubtype(l.BooleanExpression,t);case l.ItemDefinition:case l.PortDefinition:return this.isSubtype(l.OccurrenceDefinition,t)||this.isSubtype(l.Structure,t);case l.ItemFeature:case l.ItemFlowEnd:case l.Multiplicity:case l.Step:case l.Usage:return this.isSubtype(l.Feature,t);case l.ItemFlow:return this.isSubtype(l.Connector,t)||this.isSubtype(l.Step,t);case l.LibraryPackage:return this.isSubtype(l.Package,t);case l.LiteralBoolean:case l.LiteralInfinity:case l.LiteralNumber:case l.LiteralString:return this.isSubtype(l.LiteralExpression,t);case l.LoopActionUsage:return this.isSubtype(l.ActionUsage,t)||this.isSubtype(l.TransparentElement,t);case l.MembershipExpose:return this.isSubtype(l.Expose,t)||this.isSubtype(l.MembershipImport,t);case l.MembershipReference:case l.NamespaceReference:return this.isSubtype(l.ElementReference,t);case l.Metaclass:return this.isSubtype(l.Structure,t);case l.MetadataDefinition:return this.isSubtype(l.ItemDefinition,t)||this.isSubtype(l.Metaclass,t);case l.MetadataFeature:return this.isSubtype(l.AnnotatingElement,t)||this.isSubtype(l.Feature,t);case l.MetadataUsage:return this.isSubtype(l.ItemUsage,t)||this.isSubtype(l.MetadataFeature,t);case l.MultiplicityRange:return this.isSubtype(l.Multiplicity,t);case l.NamespaceExpose:return this.isSubtype(l.Expose,t)||this.isSubtype(l.NamespaceImport,t);case l.NonOwnerType:return this.isSubtype(l.TransparentElement,t);case l.OccurrenceDefinition:return this.isSubtype(l.Class,t)||this.isSubtype(l.Definition,t);case l.OperatorExpression:return this.isSubtype(l.InlineExpression,t)||this.isSubtype(l.InvocationExpression,t);case l.OwningMembership:return this.isSubtype(l.Membership,t);case l.Package:case l.Type:return this.isSubtype(l.Namespace,t);case l.PartDefinition:return this.isSubtype(l.ItemDefinition,t);case l.PartUsage:return this.isSubtype(l.ItemUsage,t);case l.PerformActionUsage:return this.isSubtype(l.ActionUsage,t)||this.isSubtype(l.EventOccurrenceUsage,t);case l.PortConjugation:return this.isSubtype(l.Conjugation,t);case l.Predicate:return this.isSubtype(l.SysMLFunction,t);case l.Redefinition:case l.ReferenceSubsetting:return this.isSubtype(l.Subsetting,t);case l.RenderingDefinition:case l.ViewDefinition:return this.isSubtype(l.PartDefinition,t);case l.RenderingUsage:case l.ViewUsage:return this.isSubtype(l.PartUsage,t);case l.RequirementDefinition:return this.isSubtype(l.ConstraintDefinition,t);case l.RequirementUsage:return this.isSubtype(l.ConstraintUsage,t);case l.SatisfyRequirementUsage:return this.isSubtype(l.AssertConstraintUsage,t)||this.isSubtype(l.RequirementUsage,t);case l.StateDefinition:return this.isSubtype(l.ActionDefinition,t);case l.SuccessionAsUsage:return this.isSubtype(l.ConnectorAsUsage,t)||this.isSubtype(l.Succession,t);case l.SuccessionFlowConnectionUsage:return this.isSubtype(l.FlowConnectionUsage,t)||this.isSubtype(l.SuccessionItemFlow,t);case l.SuccessionItemFlow:return this.isSubtype(l.ItemFlow,t)||this.isSubtype(l.Succession,t);case l.SysMLFunction:return this.isSubtype(l.Behavior,t);case l.TextualAnnotatingElement:return this.isSubtype(l.AnnotatingElement,t);case l.TriggerInvocationExpression:return this.isSubtype(l.InvocationExpression,t);case l.TypeFeaturing:return this.isSubtype(l.FeatureRelationship,t)||this.isSubtype(l.Featuring,t);case l.TypeReference:return this.isSubtype(l.NamespaceReference,t);case l.TypeRelationship:return this.isSubtype(l.FeatureRelationship,t);default:return!1}}getReferenceType(e){let t=`${e.container.$type}:${e.property}`;switch(t){case"ClassifierReference:parts":case"ConjugatedPortReference:parts":case"ElementReference:parts":case"FeatureReference:parts":case"MembershipReference:parts":case"MetaclassReference:parts":case"NamespaceReference:parts":case"TypeReference:parts":return l.Element;default:throw new Error(`${t} is not a valid reference id.`)}}getTypeMetaData(e){switch(e){case"ElementReference":return{name:"ElementReference",mandatory:[{name:"parts",type:"array"}]};case"AnnotatingElement":return{name:"AnnotatingElement",mandatory:[{name:"about",type:"array"}]};case"Namespace":return{name:"Namespace",mandatory:[{name:"children",type:"array"},{name:"prefixes",type:"array"}]};case"Relationship":return{name:"Relationship",mandatory:[{name:"elements",type:"array"}]};case"Type":return{name:"Type",mandatory:[{name:"heritage",type:"array"},{name:"isSufficient",type:"boolean"},{name:"typeRelationships",type:"array"}]};case"Connector":return{name:"Connector",mandatory:[{name:"ends",type:"array"}]};case"Dependency":return{name:"Dependency",mandatory:[{name:"client",type:"array"},{name:"prefixes",type:"array"},{name:"supplier",type:"array"}]};case"Import":return{name:"Import",mandatory:[{name:"importsAll",type:"boolean"},{name:"isRecursive",type:"boolean"}]};case"Membership":return{name:"Membership",mandatory:[{name:"isAlias",type:"boolean"}]};case"LibraryPackage":return{name:"LibraryPackage",mandatory:[{name:"isStandard",type:"boolean"}]};case"Feature":return{name:"Feature",mandatory:[{name:"isNonunique",type:"boolean"},{name:"isOrdered",type:"boolean"}]};case"Definition":return{name:"Definition",mandatory:[{name:"isIndividual",type:"boolean"},{name:"isVariation",type:"boolean"}]};case"Usage":return{name:"Usage",mandatory:[{name:"isIndividual",type:"boolean"},{name:"isReference",type:"boolean"},{name:"isVariation",type:"boolean"}]};case"FlowConnectionUsage":return{name:"FlowConnectionUsage",mandatory:[{name:"messages",type:"array"}]};case"FeatureValue":return{name:"FeatureValue",mandatory:[{name:"isDefault",type:"boolean"},{name:"isInitial",type:"boolean"}]};case"StateUsage":return{name:"StateUsage",mandatory:[{name:"isParallel",type:"boolean"}]};case"InvocationExpression":return{name:"InvocationExpression",mandatory:[{name:"operands",type:"array"}]};case"StateDefinition":return{name:"StateDefinition",mandatory:[{name:"isParallel",type:"boolean"}]};case"Invariant":return{name:"Invariant",mandatory:[{name:"isNegated",type:"boolean"}]};case"LiteralBoolean":return{name:"LiteralBoolean",mandatory:[{name:"literal",type:"boolean"}]};default:return{name:e,mandatory:[]}}}};l.SysMlAstReflection=gC;l.reflection=new gC});var So=p(As=>{"use strict";var g2e=As&&As.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),v2e=As&&As.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),_2e=As&&As.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&g2e(e,r,t);return v2e(e,r),e};Object.defineProperty(As,"__esModule",{value:!0});As.typeIndex=void 0;var ic=_2e(D()),hX=new Set([ic.TransparentElement,ic.FeatureRelationship,ic.InlineExpression,ic.NonOwnerType,ic.TypeRelationship]),zk=class{constructor(){this.supertypes=new Map,this.subtypes=new Map,this.base=new ic.SysMlAstReflection;for(let e of this.base.getAllTypes()){let t=[],n=[],i=[];for(let s of this.base.getAllTypes())s!==e&&this.base.isSubtype(e,s)&&(hX.has(s)?t:this.base.isSubtype(s,ic.Namespace)?n:i).push(s);this.sortTypes(n),this.mergeTypes(n,this.sortTypes(i)),this.mergeTypes(n,this.sortTypes(t));let a=new Set(n);this.supertypes.set(e,a),a.forEach(s=>{this.getSubtypes(s).add(e)})}this.types=this.base.getAllTypes().filter(e=>!hX.has(e))}sortTypes(e){return e.sort((t,n)=>this.base.isSubtype(t,n)?-1:this.base.isSubtype(n,t)?1:0)}mergeTypes(e,t){return t.map(i=>{let a=e.findIndex(s=>!this.base.isSubtype(s,i));return a===-1&&(a=e.length),[a,i]}).sort(([i,a],[s,o])=>i-s).forEach(([i,a],s)=>e.splice(i+s,0,a)),e}getAllTypes(){return this.types}isSubtype(e,t){var n,i;return e===t||((i=(n=this.supertypes.get(e))===null||n===void 0?void 0:n.has(t))!==null&&i!==void 0?i:!1)}getInheritanceChain(e){var t;return(t=this.supertypes.get(e))!==null&&t!==void 0?t:new Set}getSubtypes(e){let t=this.subtypes.get(e);return t||(t=new Set,this.subtypes.set(e,t)),t}expandToDerivedTypes(e){let t=new Map,n=e.default;for(let i of this.base.getAllTypes()){let a=e[i];if(!a){let s=this.getInheritanceChain(i);for(let o of s)if(a=e[o],a)break}a||(a=n),a&&t.set(i,a)}return t}expandAndMerge(e,t=!1){let n=new Map(this.base.getAllTypes().map(a=>[a,[]])),i=t?(a,s)=>{a.unshift(...s)}:(a,s)=>{a.push(...s)};for(let a of this.base.getAllTypes()){let s=n.get(a),o=e[a];o&&i(s,o);let u=this.getInheritanceChain(a);for(let c of u)o=e[c],o&&i(s,o)}return n}chain(e,t){let n=new Map,i=t==="supertype-first";for(let a of this.base.getAllTypes()){let s=[],o=e[a];o&&s.push(o),this.getInheritanceChain(a).forEach(u=>{let c=e[u];c&&s.push(c)}),e.default&&s.push(e.default),n.set(a,i?s.reverse():s)}return n}isUnion(e){return e.startsWith("Named")||e.indexOf("Or")!==-1}};As.typeIndex=new zk;ic.reflection.isSubtype=function(r,e){return As.typeIndex.isSubtype(r,e)}});var E_=p(nn=>{"use strict";Object.defineProperty(nn,"__esModule",{value:!0});nn.flatten=nn.unique=nn.hardMixProtos=nn.nearestCommonProto=nn.protoChain=nn.copyProps=void 0;var $2e=(r,e,t=[])=>{let n=Object.getOwnPropertyDescriptors(e);for(let i of t)delete n[i];Object.defineProperties(r,n)};nn.copyProps=$2e;var T2e=(r,e=[r])=>{let t=Object.getPrototypeOf(r);return t===null?e:(0,nn.protoChain)(t,[...e,t])};nn.protoChain=T2e;var R2e=(...r)=>{if(r.length===0)return;let e,t=r.map(n=>(0,nn.protoChain)(n));for(;t.every(n=>n.length>0);){let n=t.map(a=>a.pop()),i=n[0];if(n.every(a=>a===i))e=i;else break}return e};nn.nearestCommonProto=R2e;var b2e=(r,e,t=[])=>{var n;let i=(n=(0,nn.nearestCommonProto)(...r))!==null&&n!==void 0?n:Object.prototype,a=Object.create(i),s=(0,nn.protoChain)(i);for(let o of r){let u=(0,nn.protoChain)(o);for(let c=u.length-1;c>=0;c--){let f=u[c];s.indexOf(f)===-1&&((0,nn.copyProps)(a,f,["constructor",...t]),s.push(f))}}return a.constructor=e,a};nn.hardMixProtos=b2e;var C2e=r=>r.filter((e,t)=>r.indexOf(e)==t);nn.unique=C2e;var A2e=r=>r.length===0?[]:r.length===1?r[0]:r.reduce((e,t)=>[...e,...t]);nn.flatten=A2e});var gX=p(Zi=>{"use strict";Object.defineProperty(Zi,"__esModule",{value:!0});Zi.softMixProtos=Zi.proxyMix=Zi.getIngredientWithProp=void 0;var w2e=E_(),D2e=(r,e)=>{let t=e.map(a=>(0,w2e.protoChain)(a)),n=0,i=!0;for(;i;){i=!1;for(let a=e.length-1;a>=0;a--){let s=t[a][n];if(s!=null&&(i=!0,Object.getOwnPropertyDescriptor(s,r)!=null))return t[a][0]}n++}};Zi.getIngredientWithProp=D2e;var S2e=(r,e=Object.prototype)=>new Proxy({},{getPrototypeOf(){return e},setPrototypeOf(){throw Error("Cannot set prototype of Proxies created by ts-mixer")},getOwnPropertyDescriptor(t,n){return Object.getOwnPropertyDescriptor((0,Zi.getIngredientWithProp)(n,r)||{},n)},defineProperty(){throw new Error("Cannot define new properties on Proxies created by ts-mixer")},has(t,n){return(0,Zi.getIngredientWithProp)(n,r)!==void 0||e[n]!==void 0},get(t,n){return((0,Zi.getIngredientWithProp)(n,r)||e)[n]},set(t,n,i){let a=(0,Zi.getIngredientWithProp)(n,r);if(a===void 0)throw new Error("Cannot set new properties on Proxies created by ts-mixer");return a[n]=i,!0},deleteProperty(){throw new Error("Cannot delete properties on Proxies created by ts-mixer")},ownKeys(){return r.map(Object.getOwnPropertyNames).reduce((t,n)=>n.concat(t.filter(i=>n.indexOf(i)<0)))}});Zi.proxyMix=S2e;var M2e=(r,e)=>(0,Zi.proxyMix)([...r,{constructor:e}]);Zi.softMixProtos=M2e});var Yk=p(vC=>{"use strict";Object.defineProperty(vC,"__esModule",{value:!0});vC.settings=void 0;vC.settings={initFunction:null,staticsStrategy:"copy",prototypeStrategy:"copy",decoratorInheritance:"deep"}});var _C=p(ac=>{"use strict";Object.defineProperty(ac,"__esModule",{value:!0});ac.hasMixin=ac.registerMixins=ac.getMixinsForClass=void 0;var P2e=E_(),Xk=new Map,E2e=r=>Xk.get(r);ac.getMixinsForClass=E2e;var O2e=(r,e)=>Xk.set(r,e);ac.registerMixins=O2e;var k2e=(r,e)=>{if(r instanceof e)return!0;let t=r.constructor,n=new Set,i=new Set;for(i.add(t);i.size>0;){if(i.has(e))return!0;i.forEach(s=>n.add(s));let a=new Set;i.forEach(s=>{var o;let u=(o=Xk.get(s))!==null&&o!==void 0?o:(0,P2e.protoChain)(s.prototype).map(c=>c.constructor).filter(c=>c!==null);u&&u.forEach(c=>{!n.has(c)&&!i.has(c)&&a.add(c)})}),i=a}return!1};ac.hasMixin=k2e});var Qk=p(ea=>{"use strict";Object.defineProperty(ea,"__esModule",{value:!0});ea.decorate=ea.getDecoratorsForClass=ea.directDecoratorSearch=ea.deepDecoratorSearch=void 0;var $C=E_(),I2e=_C(),vX=(r,e)=>{var t,n;let i=(0,$C.unique)([...Object.getOwnPropertyNames(r),...Object.getOwnPropertyNames(e)]),a={};for(let s of i)a[s]=(0,$C.unique)([...(t=r?.[s])!==null&&t!==void 0?t:[],...(n=e?.[s])!==null&&n!==void 0?n:[]]);return a},_X=(r,e)=>{var t,n,i,a;return{property:vX((t=r?.property)!==null&&t!==void 0?t:{},(n=e?.property)!==null&&n!==void 0?n:{}),method:vX((i=r?.method)!==null&&i!==void 0?i:{},(a=e?.method)!==null&&a!==void 0?a:{})}},$X=(r,e)=>{var t,n,i,a,s,o;return{class:(0,$C.unique)([...(t=r?.class)!==null&&t!==void 0?t:[],...(n=e?.class)!==null&&n!==void 0?n:[]]),static:_X((i=r?.static)!==null&&i!==void 0?i:{},(a=e?.static)!==null&&a!==void 0?a:{}),instance:_X((s=r?.instance)!==null&&s!==void 0?s:{},(o=e?.instance)!==null&&o!==void 0?o:{})}},Jk=new Map,F2e=(...r)=>{var e;let t=new Set,n=new Set([...r]);for(;n.size>0;)for(let i of n){let a=(0,$C.protoChain)(i.prototype).map(c=>c.constructor),s=(e=(0,I2e.getMixinsForClass)(i))!==null&&e!==void 0?e:[],u=[...a,...s].filter(c=>!t.has(c));for(let c of u)n.add(c);t.add(i),n.delete(i)}return[...t]},N2e=(...r)=>{let e=F2e(...r).map(t=>Jk.get(t)).filter(t=>!!t);return e.length==0?{}:e.length==1?e[0]:e.reduce((t,n)=>$X(t,n))};ea.deepDecoratorSearch=N2e;var q2e=(...r)=>{let e=r.map(t=>(0,ea.getDecoratorsForClass)(t));return e.length===0?{}:e.length===1?e[0]:e.reduce((t,n)=>$X(t,n))};ea.directDecoratorSearch=q2e;var x2e=r=>{let e=Jk.get(r);return e||(e={},Jk.set(r,e)),e};ea.getDecoratorsForClass=x2e;var L2e=r=>e=>{let t=(0,ea.getDecoratorsForClass)(e),n=t.class;return n||(n=[],t.class=n),n.push(r),r(e)},j2e=r=>(e,t,...n)=>{var i,a,s;let o=typeof e=="function"?"static":"instance",u=typeof e[t]=="function"?"method":"property",c=o==="static"?e:e.constructor,f=(0,ea.getDecoratorsForClass)(c),d=(i=f?.[o])!==null&&i!==void 0?i:{};f[o]=d;let m=(a=d?.[u])!==null&&a!==void 0?a:{};d[u]=m;let h=(s=m?.[t])!==null&&s!==void 0?s:[];return m[t]=h,h.push(r),r(e,t,...n)},U2e=r=>(...e)=>e.length===1?L2e(r)(e[0]):j2e(r)(...e);ea.decorate=U2e});var AX=p(Kh=>{"use strict";Object.defineProperty(Kh,"__esModule",{value:!0});Kh.mix=Kh.Mixin=void 0;var TX=gX(),O_=Yk(),Zk=E_(),RX=Qk(),B2e=_C();function CX(...r){var e,t,n;let i=r.map(u=>u.prototype),a=O_.settings.initFunction;if(a!==null){let u=i.map(d=>d[a]).filter(d=>typeof d=="function"),c=function(...d){for(let m of u)m.apply(this,d)},f={[a]:c};i.push(f)}function s(...u){for(let c of r)(0,Zk.copyProps)(this,new c(...u));a!==null&&typeof this[a]=="function"&&this[a].apply(this,u)}s.prototype=O_.settings.prototypeStrategy==="copy"?(0,Zk.hardMixProtos)(i,s):(0,TX.softMixProtos)(i,s),Object.setPrototypeOf(s,O_.settings.staticsStrategy==="copy"?(0,Zk.hardMixProtos)(r,null,["prototype"]):(0,TX.proxyMix)(r,Function.prototype));let o=s;if(O_.settings.decoratorInheritance!=="none"){let u=O_.settings.decoratorInheritance==="deep"?(0,RX.deepDecoratorSearch)(...r):(0,RX.directDecoratorSearch)(...r);for(let c of(e=u?.class)!==null&&e!==void 0?e:[]){let f=c(o);f&&(o=f)}bX((t=u?.static)!==null&&t!==void 0?t:{},o),bX((n=u?.instance)!==null&&n!==void 0?n:{},o.prototype)}return(0,B2e.registerMixins)(o,r),o}Kh.Mixin=CX;var bX=(r,e)=>{let t=r.property,n=r.method;if(t)for(let i in t)for(let a of t[i])a(e,i);if(n)for(let i in n)for(let a of n[i])a(e,i,Object.getOwnPropertyDescriptor(e,i))},G2e=(...r)=>e=>{let t=CX(...r.concat([e]));return Object.defineProperty(t,"name",{value:e.name,writable:!1}),t};Kh.mix=G2e});var nt=p(Oa=>{"use strict";Object.defineProperty(Oa,"__esModule",{value:!0});Oa.hasMixin=Oa.decorate=Oa.settings=Oa.mix=Oa.Mixin=void 0;var wX=AX();Object.defineProperty(Oa,"Mixin",{enumerable:!0,get:function(){return wX.Mixin}});Object.defineProperty(Oa,"mix",{enumerable:!0,get:function(){return wX.mix}});var K2e=Yk();Object.defineProperty(Oa,"settings",{enumerable:!0,get:function(){return K2e.settings}});var H2e=Qk();Object.defineProperty(Oa,"decorate",{enumerable:!0,get:function(){return H2e.decorate}});var V2e=_C();Object.defineProperty(Oa,"hasMixin",{enumerable:!0,get:function(){return V2e.hasMixin}})});var O=p(_r=>{"use strict";var W2e=_r&&_r.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),z2e=_r&&_r.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Y2e=_r&&_r.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&W2e(e,r,t);return z2e(e,r),e};Object.defineProperty(_r,"__esModule",{value:!0});_r.basicIdProvider=_r.BasicMetamodel=_r.isMetamodel=_r.metamodelOf=_r.IMPLICIT_MAP=_r.META_FACTORY=_r.mix=void 0;var SX=So(),DX=D(),X2e=Y2e(nt());function J2e(...r){return X2e.mix(...r)}_r.mix=J2e;_r.META_FACTORY={};_r.IMPLICIT_MAP={};function Q2e(r,e={}){let t=n=>{n.prototype.nodeType=function(){return r};let i=new Set(SX.typeIndex.getInheritanceChain(r));i.add(r),n.prototype.is=i.size>1?function(a){return i.has(a)}:function(a){return r===a}};return e==="abstract"?t:(_r.IMPLICIT_MAP[r]=Object.entries(e),function(n){t(n),_r.META_FACTORY[r]=(i,a)=>n.create(i,a),n.prototype.implicitGeneralizations=function(){return e}})}_r.metamodelOf=Q2e;function Z2e(r){return typeof r=="object"&&r!==null&&typeof r.elementId=="number"&&typeof r.document=="object"&&typeof r.isStandardElement=="boolean"}_r.isMetamodel=Z2e;var eI=class{constructor(e,t){this.setupState="none",this.isStandardElement=!1,this.notes=[],this.elementId=e,this._document=t}get document(){return this._document}set document(e){this._document=e}swapOwnership(e,t){return e&&e.setParent(void 0),t&&this.takeOwnership(t),t}takeOwnership(e){e.setParent(this)}unsetOwnership(e){e.setParent(void 0)}onOwnerSet(e,t){}setParent(e){let t=this._parent;this._parent=e,t!==e&&this.onParentSet(t,e),this.setOwner(e!=null&&e.is(DX.NonOwnerType)?e.parent():e,t)}setOwner(e,t){let n=this._owner;this._owner=e,n!==e&&this.onOwnerSet(n?[t!=null?t:this._parent,n]:void 0,e?[this._parent,e]:void 0)}onParentSet(e,t){}cst(){var e;return(e=this._ast)===null||e===void 0?void 0:e.$cstNode}ast(){return this._ast}parent(){return this._parent}owner(){return this._owner}nodeType(){var e,t;return(t=(e=this._ast)===null||e===void 0?void 0:e.$type)!==null&&t!==void 0?t:"Unknown"}implicitGeneralizations(){return{}}defaultGeneralTypes(){return[this.defaultSupertype()]}defaultSupertype(){return"base"}specializationKind(){return DX.Specialization}is(e){return SX.typeIndex.isSubtype(this.nodeType(),e)}isAny(...e){return e.some(t=>this.is(t))}static is(e){return t=>Boolean(t==null?void 0:t.is(e))}static isAny(...e){return t=>Boolean(t==null?void 0:t.isAny(...e))}static create(e,t,n){let i=new this(e(),t);return n!=null&&n.parent&&i.setParent(n.parent),i}};_r.BasicMetamodel=eI;function eBe(){let r=0;return()=>r++}_r.basicIdProvider=eBe});var kf=p(Oi=>{"use strict";Object.defineProperty(Oi,"__esModule",{value:!0});Oi.Name=Oi.computeQualifiedName=Oi.getName=Oi.concatNames=Oi.unsanitizeName=Oi.sanitizeName=void 0;var MX=D();function PX(r){if(!(!r||r.length===0))return r.startsWith("'")?r.slice(1,r.length-1).replaceAll(/\\([btnfr"'\\])/g,(e,t)=>{switch(t){case"b":return"\b";case"t":return"	";case"n":return`
`;case"f":return"\f";case"r":return"\r";case"'":return"'";case'"':return'"';case"\\":return"\\"}return t}):r}Oi.sanitizeName=PX;var tBe=/^[_a-zA-Z][\w_\d]*$/;function rBe(r){return tBe.test(r)?r:`'${r.replaceAll(/([\b\t\n\f\r'\\])/g,(e,t)=>{switch(t){case"\b":return"\\b";case"	":return"\\t";case`
`:return"\\n";case"\f":return"\\f";case"\r":return"\\r";case"'":return"\\'";case"\\":return"\\\\"}return t})}'`}Oi.unsanitizeName=rBe;function tI(r,e){return r+"::"+e}Oi.concatNames=tI;function EX(r){var e,t;return(t=(e=r.rawName)!==null&&e!==void 0?e:r.rawShortName)!==null&&t!==void 0?t:r.elementId.toString()}Oi.getName=EX;function nBe(r,e){var t;let n=EX(r),i="";for(;e!=null&&e.owner();){if(!e.is(MX.TransparentElement)){if(e.is(MX.Element))return tI(e.qualifiedName,n);i=(t=e.elementId.toString())!==null&&t!==void 0?t:"<unnamed>",n=tI(i,n)}e=e.owner()}return n}Oi.computeQualifiedName=nBe;var rI=class{constructor(e){this.set(e)}get declared(){return this._declared}get sanitized(){return this._name}set(e){this._declared=e,this._name=PX(e)}};Oi.Name=rI});var I_=p((OX,k_)=>{(function(){var r,e,t,n,i,a;typeof performance<"u"&&performance!==null&&performance.now?k_.exports=function(){return performance.now()}:typeof process<"u"&&process!==null&&process.hrtime?(k_.exports=function(){return(r()-i)/1e6},e=process.hrtime,r=function(){var s;return s=e(),s[0]*1e9+s[1]},n=r(),a=process.uptime()*1e9,i=n-a):Date.now?(k_.exports=function(){return Date.now()-t},t=Date.now()):(k_.exports=function(){return new Date().getTime()-t},t=new Date().getTime())}).call(OX)});var an=p(Ie=>{"use strict";var NX=Ie&&Ie.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})},qX=Ie&&Ie.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Ie,"__esModule",{value:!0});Ie.NonNullable=Ie.enumerable=Ie.waitAllPromises=Ie.backtrackToDirname=Ie.asyncWaitWhile=Ie.erase=Ie.stringifyFlags=Ie.flagNames=Ie.isPowerOf2=Ie.mergeWithPartial=Ie.Statistics=Ie.Timer=Ie.isJSONConvertible=Ie.stringify=Ie.toJSON=Ie.JSONreplacer=Ie.simplifyCstNode=Ie.cstNodeRuleName=Ie.JSONMetaReplacer=Ie.sanitizeRange=void 0;var kX=be(),IX=yt(),xX=Pe(),nI=D(),F_=qX(I_()),LX=Wn(),FX=qX(require("path"));function iBe(r){var e,t;let n={line:(e=r.start.line)!==null&&e!==void 0?e:0,character:(t=r.start.character)!==null&&t!==void 0?t:0},i={start:n,end:r.end};return xX.Range.is(i)?i:{start:n,end:n}}Ie.sanitizeRange=iBe;function jX(r,e){if(lI(e))return jX(r,e.toJSON());if(!(r.startsWith("$")||r.startsWith("_")))return r.length>0&&(0,LX.isMetamodel)(e)?e.is(nI.Element)?e.qualifiedName:`[Node ${e.nodeType()}]`:e}Ie.JSONMetaReplacer=jX;function UX(r){var e;if(!r)return;let t=r.feature;for(;t;){if((0,IX.isAbstractRule)(t))return t.name;if((0,IX.isRuleCall)(t))return(e=t.rule.ref)===null||e===void 0?void 0:e.name;t=t.$container}}Ie.cstNodeRuleName=UX;function BX(r,e=2){let t=[],n=r;for(;n;){let i=UX(n);if(i&&(t.push(i),t.length===e))break;n=n.parent}return{text:r.text,stack:t}}Ie.simplifyCstNode=BX;function oI(r,e){var t,n,i;if(lI(e))return oI(r,e.toJSON());if(r==="$meta")return!(0,LX.isMetamodel)(e)||!e.is(nI.Element)?e:{elementId:e.elementId,qualifiedName:e.qualifiedName};if(r==="$type")return e;if(r==="$cstNode")return e?BX(e):void 0;if(!(r.startsWith("$")||r.startsWith("_"))){if((0,nI.isElementReference)(e)){let a=(n=(t=e.$meta.to.target)===null||t===void 0?void 0:t.qualifiedName)!==null&&n!==void 0?n:null;return{$type:e.$type,$cstNode:e.$cstNode,text:(i=e.$cstNode)===null||i===void 0?void 0:i.text,reference:a,parts:e.parts.map(s=>{var o;return(o=s.ref)===null||o===void 0?void 0:o.$meta.qualifiedName})}}return e}}Ie.JSONreplacer=oI;function iI(r,e,t,n){if(typeof r!="object"||!r||("toJSON"in r&&r.toJSON instanceof Function&&(r=r.toJSON(e)),r=n.call(r,e,t),typeof r!="object"||!r||r instanceof Function||r instanceof Symbol))return r;if(Array.isArray(r))return r.map((a,s)=>iI(r,s.toString(),a,n)).filter(Ie.NonNullable);let i={};for(let a in r){if(typeof a!="string")continue;let s=r[a],o=iI(r,a,s,n);o!==void 0&&(i[a]=o)}return i}function aBe(r,e){return iI(r,"",r,e)}Ie.toJSON=aBe;function sBe(r,e=2){return typeof r!="object"?JSON.stringify(r):JSON.stringify(r,oI,e)}Ie.stringify=sBe;function lI(r){return typeof r=="object"&&r!==null&&r.toJSON instanceof Function}Ie.isJSONConvertible=lI;var TC=class{constructor(){this.start=(0,F_.default)()}elapsed(){return(0,F_.default)()-this.start}reset(){this.start=(0,F_.default)()}};Ie.Timer=TC;var aI=class{constructor(){this.timer=new TC,this.elapsed=0,this.hits=0}enter(){this.timer.reset()}exit(e=!1){this.elapsed+=this.timer.elapsed(),e||this.hits++}reset(){this.elapsed=0,this.hits=0}timeSpent(){return this.elapsed}timesEntered(){return this.hits}},sI=class{constructor(){this.stats={},this.stack=[]}enter(e){let t=this.stats[e];t||(t=new aI,this.stats[e]=t),this.stack.length>0&&this.stack[this.stack.length-1].exit(!0),this.stack.push(t),t.enter()}exit(e){var t;(t=this.stats[e])===null||t===void 0||t.exit(),this.stack.pop(),this.stack.length>0&&this.stack[this.stack.length-1].enter()}dump(){let e={};for(let[t,n]of Object.entries(this.stats))e[t]=[n.timeSpent(),n.timesEntered()];return e}reset(){this.stats={}}isEmpty(){return Object.keys(this.stats).length===0}get currentDepth(){return this.stack.length}};Ie.Statistics=sI;function GX(r,e){if(typeof r!="object"||r===null)return e!=null?e:r;if(e===void 0)return r;if(Array.isArray(r))return e;let t=e,n=Object.assign({},t);for(let[i,a]of Object.entries(r))i in t?n[i]=GX(a,t[i]):n[i]=a;return n}Ie.mergeWithPartial=GX;function KX(r){return r!==0&&!(r&r-1)}Ie.isPowerOf2=KX;function HX(r,e){if(r==0)return[];let t=e.get(r);if(t)return[t];let n=[];for(let[i,a]of e.entries())KX(i)&&(r&i)===r&&n.push(a);return n}Ie.flagNames=HX;function oBe(r,e){return HX(r,e).join(" | ")}Ie.stringifyFlags=oBe;function lBe(r,e){let t=r.indexOf(e);return t<0?r:r.splice(t,1)}Ie.erase=lBe;function uBe(r,{timeout:e=void 0,period:t=1}={},n=xX.CancellationToken.None){return NX(this,void 0,void 0,function*(){let i;return e&&(i=(0,F_.default)()+e),new Promise((a,s)=>{let o=()=>{r()?i&&(0,F_.default)()>i||n.isCancellationRequested?s(kX.OperationCancelled):setTimeout(o,t):a()};o()})})}Ie.asyncWaitWhile=uBe;function cBe(r,e){for(;;){let t=FX.default.basename(r);if(typeof e=="string"){if(t===e)return r}else if(e.test(t))return r;let n=FX.default.join(r,"..");if(n===r)return;r=n}}Ie.backtrackToDirname=cBe;function fBe(r,e){return NX(this,void 0,void 0,function*(){let t=[];return yield Promise.allSettled(r).then(n=>{n.forEach((i,a)=>{var s;if(i.status==="rejected"){let o=(s=e==null?void 0:e.call(void 0,i,a))!==null&&s!==void 0?s:`Promise failed: ${i.reason}`;i.reason instanceof Error&&(o+=`
`+i.reason.stack),console.error(o)}else t.push(i.value)})}),t})}Ie.waitAllPromises=fBe;function dBe(r,e,t){let n=function(i,a,s){let o=r;if(s){s.enumerable=o;return}if(o)return;let u;Object.defineProperty(i,a,{configurable:!0,enumerable:o,get(){return u},set(c){u=c}})};if(e){n(r,e,t);return}return n}Ie.enumerable=dBe;var pBe=r=>Boolean(r);Ie.NonNullable=pBe});var Hh=p(sc=>{"use strict";Object.defineProperty(sc,"__esModule",{value:!0});sc.removeIfObserved=sc.removeObserved=sc.ElementContainer=void 0;var mBe=O(),uI=class{constructor(...e){this.elements=[],this.caches=new Map,this.elements=e}toJSON(){return this.all}[Symbol.iterator](){return this.elements.values()[Symbol.iterator]()}invalidateCaches(){this.caches.clear()}clear(){this.elements.length=0,this.invalidateCaches()}push(...e){return this.invalidateCaches(),this.elements.push(...e)}remove(e){return VX(this.elements,()=>this.invalidateCaches(),e)}removeIf(e){return this.elements.length!==this.elements.removeIf(e)&&this.invalidateCaches(),this.elements.length}get length(){return this.elements.length}get(e){let t=this.all;if(!e)return t;let n=this.caches.get(e);return n||(n=t.filter(typeof e=="string"?mBe.BasicMetamodel.is(e):e),this.caches.set(e,n),n)}get all(){return this.elements}};sc.ElementContainer=uI;Array.prototype.removeIf=function(r){let e=this.length,t=0,n=0;for(;t<e;){let i=this[t];r(i,t)||(this[n]=i,n++),t++}return this.length=n,this.length};Array.prototype.remove=function(r){let e=this.indexOf(r);return e!==-1?(this.splice(e,1),!0):!1};function VX(r,e,t){return r.remove(t)?(e(t),!0):!1}sc.removeObserved=VX;function yBe(r,e,t){return r.removeIf((n,i)=>t(n,i)?(e(n,i),!0):!1)}sc.removeIfObserved=yBe});var RC=p(ou=>{"use strict";var Vh=ou&&ou.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},N_;Object.defineProperty(ou,"__esModule",{value:!0});ou.ElementMeta=ou.namedMembership=void 0;var WX=be(),If=D(),zX=O(),cI=kf(),q_=an(),hBe=Hh();function gBe(r){return r.is(If.MembershipImport)?r.element():r}ou.namedMembership=gBe;var oc=ou.ElementMeta=N_=class extends zX.BasicMetamodel{constructor(){super(...arguments),this._comments=[],this._metadata=[],this._docs=[],this._reps=[],this._name=new cI.Name,this._shortName=new cI.Name,this._qualifiedName="",this._memberLookup=new Map,this._metaclass="unset"}get isImpliedIncluded(){return this.setupState==="completed"}addExplicitAnnotatingElement(e){let t=()=>{if(e.document===this.document)return;let n=()=>this.removeExplicitAnnotatingElement(e,N_.CleanupToken);n.owner=this,e.document.onInvalidated.add(e,n)};switch(e.nodeType()){case"Comment":this._comments.push(e),t();break;case"Documentation":this._docs.push(e),t();break;case"TextualRepresentation":this._reps.push(e),t();break;case"MetadataFeature":case"MetadataUsage":this._metadata.push(e),t();break}}removeExplicitAnnotatingElement(e,t){let n=()=>{if(t===N_.CleanupToken)return;let i=e.document.onInvalidated,a=i.get(e).find(s=>s.owner===this);a&&i.delete(e,a)};switch(e.nodeType()){case"Comment":this._comments.remove(e),n();break;case"Documentation":this._docs.remove(e),n();break;case"TextualRepresentation":this._reps.remove(e),n();break;case"MetadataFeature":case"MetadataUsage":this._metadata.remove(e),n();break}}get comments(){return this._comments}get documentation(){return this._docs}get metadata(){return(0,WX.stream)(this._metadata)}get textualRepresentation(){return this._reps}get name(){return this._name.sanitized}get rawName(){return this._name.declared}get declaredName(){return this._declaredName}set declaredName(e){e!==this._declaredName&&(this._declaredName=e,this.setName(e))}setName(e){let t=this.name;this.updateName(this._name,e);let n=this.parent();n!=null&&n.is(If.Membership)&&n.name===t&&n.shortName===this.shortName&&n.updateName(n._name,e)}get shortName(){return this._shortName.sanitized}get rawShortName(){return this._shortName.declared}get declaredShortName(){return this._declaredShortName}set declaredShortName(e){e!==this._declaredShortName&&(this._declaredShortName=e,this.setShortName(e))}setShortName(e){let t=this.shortName;this.updateName(this._shortName,e);let n=this.parent();n!=null&&n.is(If.Membership)&&n.shortName===t&&n.name===this.name&&n.updateName(n._shortName,e)}get qualifiedName(){return this._qualifiedName}get description(){return this._description}findMember(e){return this._memberLookup.get(e)}hasMember(e){return this._memberLookup.has(e)}get namedMembers(){return this._memberLookup.entries()}get reservedNames(){return this._memberLookup.keys()}get metaclass(){if(!(!this._metaclass||this._metaclass==="unset"))return typeof this._metaclass=="function"?this._metaclass=this._metaclass():this._metaclass}setMetaclass(e){return this._metaclass=e,this}defaultSupertype(){return"base"}ast(){return this._ast}parent(){return this._parent}owner(){return this._owner}allMetadata(){return this.metadata}onOwnerSet(e,t){let n=e==null?void 0:e[0];if(n!=null&&n.is(If.Membership)){let s=e==null?void 0:e[1];n.name&&s.removeLookupMemberByName(n,n.name),n.shortName&&s.removeLookupMemberByName(n,n.shortName)}let i=t==null?void 0:t[0],a=t==null?void 0:t[1];i!=null&&i.is(If.Membership)&&(a==null||a.addLookupMember(i))}addLookupMember(e){e.name&&this._memberLookup.set(e.name,e),e.shortName&&this._memberLookup.set(e.shortName,e)}removeLookupMemberByName(e,t){if(!e)return;let n=this._memberLookup.get(t);n&&(n===e||n==="shadow")&&this._memberLookup.delete(t)}updateName(e,t){let n=this.owner(),i=e.sanitized;if(e.set(t),i!==e.sanitized&&(i&&n&&n.removeLookupMemberByName(this.parent(),i),this._qualifiedName=(0,cI.computeQualifiedName)(this,n),e.sanitized&&e.sanitized.length>0)){let a=this.parent();n&&!n._memberLookup.has(e.sanitized)&&(a!=null&&a.is(If.Membership))&&n._memberLookup.set(e.sanitized,a)}}parts(){return Object.fromEntries(this.collectParts())}ownedElements(){return(0,WX.stream)(this.collectParts()).map(([e,t])=>t).flat()}invalidateMemberCaches(){}swapEdgeOwnership(e,t){return t?(t[0].setElement(void 0),this.swapOwnership(e,t[0]),t[0].setElement(t[1]),t[0]):this.swapOwnership(e,void 0)}addOwnedEdges(e,t,n){return e.push(...t.map(([i,a])=>(this.takeOwnership(i),i.setElement(a),n==null||n([i,a]),i)))}addOwnedElements(e,t,n){return t.forEach(i=>{this.takeOwnership(i),n==null||n(i)}),e.push(...t)}removeOwnedElements(e,t,n){return t.forEach(i=>{e.remove(i)&&(n==null||n(i),this.unsetOwnership(i))}),e.length}removeOwnedElementsIf(e,t,n){return(0,hBe.removeIfObserved)(e,i=>{n==null||n(i),this.unsetOwnership(i)},t),e.length}static applyElementOptions(e,t){t!=null&&t.declaredName&&(e.declaredName=t.declaredName),t!=null&&t.declaredShortName&&(e.declaredShortName=t.declaredShortName)}static create(e,t,n){let i=super.create(e,t,n);return n&&N_.applyElementOptions(i,n),i}};oc.CleanupToken={};Vh([q_.enumerable],oc.prototype,"name",null);Vh([q_.enumerable],oc.prototype,"declaredName",null);Vh([q_.enumerable],oc.prototype,"shortName",null);Vh([q_.enumerable],oc.prototype,"declaredShortName",null);Vh([q_.enumerable],oc.prototype,"qualifiedName",null);ou.ElementMeta=oc=N_=Vh([(0,zX.metamodelOf)(If.Element,"abstract")],oc)});var dI=p(Ff=>{"use strict";var vBe=Ff&&Ff.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},fI;Object.defineProperty(Ff,"__esModule",{value:!0});Ff.AnnotatingElementMeta=void 0;var _Be=D(),$Be=Ae(),TBe=O(),RBe=RC(),YX=Ff.AnnotatingElementMeta=fI=class extends RBe.ElementMeta{constructor(){super(...arguments),this._annotations=[]}get unlinkAnnotation(){return e=>{let t=e.element();!e.isImplied&&t&&t.removeExplicitAnnotatingElement(this)}}addAnnotation(...e){return this.addOwnedEdges(this._annotations,e,([t,n])=>{t.isImplied||n.addExplicitAnnotatingElement(this)})}removeAnnotation(...e){return this.removeOwnedElements(this._annotations,e,this.unlinkAnnotation)}removeAnnotationIf(e){return this.removeOwnedElementsIf(this._annotations,e,this.unlinkAnnotation)}annotations(){return this._annotations}annotatedElements(){let e=this.annotations(),t=this.owner();return e.length===0&&t?[t]:e.map(n=>n.element()).filter($Be.NonNullable)}ast(){return this._ast}collectParts(){return[["about",this._annotations]]}static applyAnnotatingElementOptions(e,t){t.annotations&&e.addAnnotation(...t.annotations)}static create(e,t,n){let i=super.create(e,t,n);return n&&fI.applyAnnotatingElementOptions(i,n),i}};Ff.AnnotatingElementMeta=YX=fI=vBe([(0,TBe.metamodelOf)(_Be.AnnotatingElement,"abstract")],YX)});var Mo=p(bC=>{"use strict";Object.defineProperty(bC,"__esModule",{value:!0});bC.Target=void 0;var pI=class{constructor(e){this.ref=e}get target(){var e;return(e=this.ref)!==null&&e!==void 0?e:void 0}get cached(){return this.ref!==void 0}set(e){this.ref=e!=null?e:null}toJSON(){return this.target?{reference_:this.target.qualifiedName}:this.target}reset(){this.ref=void 0}};bC.Target=pI});var mI=p(Nf=>{"use strict";var bBe=Nf&&Nf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Nf,"__esModule",{value:!0});Nf.ElementReferenceMeta=void 0;var CBe=D(),ABe=Mo(),JX=O(),XX=Nf.ElementReferenceMeta=class extends JX.BasicMetamodel{constructor(){super(...arguments),this.to=new ABe.Target,this.found=[],this.text=""}owner(){return this._owner}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Nf.ElementReferenceMeta=XX=bBe([(0,JX.metamodelOf)(CBe.ElementReference)],XX)});var yI=p(qf=>{"use strict";var x_=qf&&qf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(qf,"__esModule",{value:!0});qf.RelationshipMeta=void 0;var wBe=be(),Wh=D(),CC=Ae(),DBe=Hh(),SBe=O(),MBe=re(),zh=qf.RelationshipMeta=class extends MBe.ElementMeta{constructor(){super(...arguments),this._children=new DBe.ElementContainer,this._isImplied=!1}get comments(){return this._children.get(Wh.Comment).concat(this._comments)}get documentation(){return this._children.get(Wh.Documentation).concat(this._docs)}get metadata(){return(0,wBe.stream)(this._children.get(Wh.MetadataFeature)).concat(this._metadata)}get textualRepresentation(){return this._children.get(Wh.TextualRepresentation).concat(this._reps)}onParentSet(e,t){(!this._source||this._source===e)&&(this._source=t),super.onParentSet(e,t)}get isImplied(){return this._isImplied}get children(){return this._children.all}source(){return this._source}setSource(e){this._source=e}get visibility(){var e;return(e=this._visibility)!==null&&e!==void 0?e:0}set visibility(e){this._visibility=e}clearVisibility(){return this._visibility=void 0,this}get hasExplicitVisibility(){return this._visibility!==void 0}element(){return this._element}setElement(e){if(this._element===e)return;let t=this._element;this._element=e,this.onTargetSet(t,e)}onTargetSet(e,t){}ast(){return this._ast}finalElement(){var e;let t=this.element();return t!=null&&t.is(Wh.Feature)&&t.chainings.length>0?(e=t.chainings.at(-1))===null||e===void 0?void 0:e.element():t}collectParts(){var e;let t=[];((e=this.source())===null||e===void 0?void 0:e.parent())===this&&t.push(["source",[this.source()]]);let n=this.element();return(n==null?void 0:n.parent())===this&&t.push(["target",[n]]),t.push(["children",this.children]),t}static create(e,t,n){let i=super.create(e,t,n);return n&&(i._visibility=n.visibility,i._isImplied=Boolean(n.isImplied),n.source&&(i._source=n.source),i.setElement(n.target)),i}};x_([CC.enumerable],zh.prototype,"isImplied",null);x_([CC.enumerable],zh.prototype,"children",null);x_([CC.enumerable],zh.prototype,"visibility",null);x_([CC.enumerable],zh.prototype,"hasExplicitVisibility",null);qf.RelationshipMeta=zh=x_([(0,SBe.metamodelOf)(Wh.Relationship,"abstract")],zh)});var hI=p(xf=>{"use strict";var PBe=xf&&xf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(xf,"__esModule",{value:!0});xf.MembershipMeta=void 0;var EBe=D(),OBe=O(),QX=re(),ZX=xf.MembershipMeta=class extends QX.RelationshipMeta{constructor(){super(...arguments),this.isAlias=!1}ast(){return this._ast}get name(){var e;return this.isAlias?super.name:(e=this.element())===null||e===void 0?void 0:e.name}get shortName(){var e;return this.isAlias?super.shortName:(e=this.element())===null||e===void 0?void 0:e.shortName}addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.isAlias=Boolean(n.isAlias),QX.ElementMeta.applyElementOptions(i,n)),i}};xf.MembershipMeta=ZX=PBe([(0,OBe.metamodelOf)(EBe.Membership)],ZX)});var gI=p(Lf=>{"use strict";var kBe=Lf&&Lf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Lf,"__esModule",{value:!0});Lf.AnnotationMeta=void 0;var rJ=D(),IBe=O(),eJ=re(),tJ=Lf.AnnotationMeta=class extends eJ.RelationshipMeta{ast(){return this._ast}onParentSet(e,t){e&&(e===this._source?this._source=void 0:this._element=void 0),t!=null&&t.is(rJ.AnnotatingElement)?this._source=t:this._element=t}static create(e,t,n){let i=eJ.ElementMeta.create.call(this,e,t,n);return n&&(i._visibility=n.visibility,i._isImplied=Boolean(n.isImplied),n.source&&(i._source=n.source),n.target&&i.setElement(n.target)),i}};Lf.AnnotationMeta=tJ=kBe([(0,IBe.metamodelOf)(rJ.Annotation)],tJ)});var vI=p(jf=>{"use strict";var FBe=jf&&jf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(jf,"__esModule",{value:!0});jf.TextualAnnotatingMeta=void 0;var NBe=D(),qBe=O(),xBe=re(),nJ=jf.TextualAnnotatingMeta=class extends xBe.AnnotatingElementMeta{constructor(){super(...arguments),this.body=""}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.body=n.body),i}};jf.TextualAnnotatingMeta=nJ=FBe([(0,qBe.metamodelOf)(NBe.TextualAnnotatingElement,"abstract")],nJ)});var _I=p(Uf=>{"use strict";var LBe=Uf&&Uf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Uf,"__esModule",{value:!0});Uf.CommentMeta=void 0;var jBe=D(),UBe=O(),BBe=re(),iJ=Uf.CommentMeta=class extends BBe.TextualAnnotatingMeta{ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.locale=n.locale),i}};Uf.CommentMeta=iJ=LBe([(0,UBe.metamodelOf)(jBe.Comment)],iJ)});var $I=p(Bf=>{"use strict";var GBe=Bf&&Bf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Bf,"__esModule",{value:!0});Bf.DocumentationMeta=void 0;var KBe=D(),HBe=O(),VBe=re(),aJ=Bf.DocumentationMeta=class extends VBe.CommentMeta{ast(){return this._ast}};Bf.DocumentationMeta=aJ=GBe([(0,HBe.metamodelOf)(KBe.Documentation)],aJ)});var TI=p(Gf=>{"use strict";var WBe=Gf&&Gf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Gf,"__esModule",{value:!0});Gf.TextualRepresentationMeta=void 0;var zBe=D(),YBe=O(),XBe=re(),sJ=Gf.TextualRepresentationMeta=class extends XBe.TextualAnnotatingMeta{constructor(){super(...arguments),this.language="plaintext"}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.language&&(i.language=n.language),i}};Gf.TextualRepresentationMeta=sJ=WBe([(0,YBe.metamodelOf)(zBe.TextualRepresentation)],sJ)});var AI=p(Ds=>{"use strict";var CI=Ds&&Ds.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},RI;Object.defineProperty(Ds,"__esModule",{value:!0});Ds.NamespaceMeta=Ds.namespaceChildren=Ds.EdgeContainer=void 0;var AC=be(),ws=D(),Yh=Ae(),bI=O(),JBe=re(),QBe=Hh(),ZBe=r=>{var e;return Boolean(r.nodeType()!==ws.ElementFilterMembership&&r.is(ws.Membership)&&((e=r.element())===null||e===void 0?void 0:e.is(ws.Feature)))},eGe=ws.ElementFilterMembership,tGe=ws.Import,DC=r=>e=>{var t;return Boolean(e.is(ws.Membership)&&((t=e.element())===null||t===void 0?void 0:t.is(r)))},rGe=DC(ws.Documentation),nGe=DC(ws.Comment),iGe=DC(ws.MetadataFeature),aGe=DC(ws.TextualRepresentation),Xh=class{constructor(e){this.values=e}static make(...e){return new Xh(e)}};Ds.EdgeContainer=Xh;function sGe(...r){return Xh.make(...r)}Ds.namespaceChildren=sGe;var wC=Ds.NamespaceMeta=RI=class extends JBe.ElementMeta{constructor(){super(...arguments),this._prefixes=[],this._children=new QBe.ElementContainer,this._importResolutionState="none"}get comments(){return this._children.get(nGe).map(e=>e.element()).filter(Yh.NonNullable).concat(this._comments)}get documentation(){return this._children.get(rGe).map(e=>e.element()).filter(Yh.NonNullable).concat(this._docs)}get metadata(){return(0,AC.stream)(this._prefixes,this._children.get(iGe)).map(e=>e.element()).filter(Yh.NonNullable).concat(this._metadata)}get textualRepresentation(){return this._children.get(aGe).map(e=>e.element()).filter(Yh.NonNullable).concat(this._reps)}get children(){return this._children.all}addChild(...e){return this.addOwnedEdges(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}get prefixes(){return this._prefixes}addPrefix(...e){return this.addOwnedEdges(this._prefixes,e)}removePrefix(...e){return this.removeOwnedElements(this._prefixes,e)}removePrefixIf(e){return this.removeOwnedElementsIf(this._prefixes,e)}get imports(){return this._children.get(tGe)}get filters(){return this._children.get(eGe)}featureMembers(){return this._children.get(ZBe)}get importResolutionState(){return this._importResolutionState}set importResolutionState(e){this._importResolutionState=e}ast(){return this._ast}allFeatures(){return(0,AC.stream)(this.featureMembers())}featuresByMembership(e){return(0,AC.stream)(this.featureMembers()).filter(bI.BasicMetamodel.is(e)).map(t=>t.element()).nonNullable()}featuresMatching(e){return(0,AC.stream)(this.featureMembers()).map(t=>t.element()).nonNullable().filter(bI.BasicMetamodel.is(e))}collectParts(){return[["prefixes",this.prefixes],["children",this.children]]}invalidateMemberCaches(){this._children.invalidateCaches()}static applyNamespaceOptions(e,t){t.prefixes&&e.addPrefix(...t.prefixes),t.children&&e.addChild(...t.children.values)}static create(e,t,n){let i=super.create(e,t,n);return n&&RI.applyNamespaceOptions(i,n),i}};CI([Yh.enumerable],wC.prototype,"children",null);CI([Yh.enumerable],wC.prototype,"prefixes",null);Ds.NamespaceMeta=wC=RI=CI([(0,bI.metamodelOf)(ws.Namespace)],wC)});var wI=p(Kf=>{"use strict";var oGe=Kf&&Kf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Kf,"__esModule",{value:!0});Kf.NamespaceReferenceMeta=void 0;var lGe=D(),uGe=Mo(),cGe=O(),fGe=re(),oJ=Kf.NamespaceReferenceMeta=class extends fGe.ElementReferenceMeta{constructor(){super(...arguments),this.to=new uGe.Target}ast(){return this._ast}};Kf.NamespaceReferenceMeta=oJ=oGe([(0,cGe.metamodelOf)(lGe.NamespaceReference)],oJ)});var DI=p(Hf=>{"use strict";var dGe=Hf&&Hf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Hf,"__esModule",{value:!0});Hf.PackageMeta=void 0;var pGe=D(),mGe=O(),yGe=re(),lJ=Hf.PackageMeta=class extends yGe.NamespaceMeta{ast(){return this._ast}owner(){return this._owner}};Hf.PackageMeta=lJ=dGe([(0,mGe.metamodelOf)(pGe.Package)],lJ)});var SI=p(Vf=>{"use strict";var hGe=Vf&&Vf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Vf,"__esModule",{value:!0});Vf.LibraryPackageMeta=void 0;var gGe=D(),vGe=O(),_Ge=re(),uJ=Vf.LibraryPackageMeta=class extends _Ge.PackageMeta{constructor(){super(...arguments),this.isStandard=!1}ast(){return this._ast}};Vf.LibraryPackageMeta=uJ=hGe([(0,vGe.metamodelOf)(gGe.LibraryPackage)],uJ)});var Wf=p($r=>{"use strict";Object.defineProperty($r,"__esModule",{value:!0});$r.streamParents=$r.collectRedefinitions=$r.resolveContentInputs=$r.fillContentOptions=$r.decrementVisibility=$r.resolveVisibility=$r.CHILD_CONTENTS_OPTIONS=$r.PARENT_CONTENTS_OPTIONS=$r.DEFAULT_ALIAS_RESOLVER=$r.isVisibleWith=void 0;var cJ=be(),MI=D();function $Ge(r,e){return r<=e}$r.isVisibleWith=$Ge;var TGe=r=>r.element();$r.DEFAULT_ALIAS_RESOLVER=TGe;$r.PARENT_CONTENTS_OPTIONS={imported:{visibility:2,depth:1},inherited:{visibility:2,depth:1},aliasResolver:$r.DEFAULT_ALIAS_RESOLVER};$r.CHILD_CONTENTS_OPTIONS={imported:{visibility:0,depth:0},inherited:{visibility:0,depth:0},aliasResolver:void 0};function SC(r){var e,t;return{visibility:(e=r.visibility)!==null&&e!==void 0?e:0,depth:(t=r.depth)!==null&&t!==void 0?t:1e7,next:r.next}}$r.resolveVisibility=SC;var PI={visibility:0,depth:0,next:void 0};function RGe(r){let e=r.depth-1;return e<0?r.next?SC(r.next):PI:{visibility:r.visibility,depth:e,next:r.next}}$r.decrementVisibility=RGe;function fJ({imported:r=PI,inherited:e=PI,aliasResolver:t=$r.DEFAULT_ALIAS_RESOLVER,visited:n=void 0,specializations:i=void 0}={}){let a=n!=null?n:new Set,s=i!=null?i:new Set;return{imported:SC(r),inherited:SC(e),aliasResolver:t,visited:a,specializations:s}}$r.fillContentOptions=fJ;function bGe(r,e){let t=fJ(e),n;return r&&t.aliasResolver&&r.is(MI.Membership)?n=t.aliasResolver(r):r.is(MI.Element)&&(n=r),{element:n,options:t}}$r.resolveContentInputs=bGe;function CGe(r,e){let t=n=>{n.types(MI.Redefinition).forEach(i=>{let a=i;e.has(a)||(e.add(a),t(a))})};t(r)}$r.collectRedefinitions=CGe;function AGe(r){return new cJ.TreeStreamImpl(r,e=>{let t=e.owner();return t?[t]:cJ.EMPTY_STREAM},{includeRoot:!0})}$r.streamParents=AGe});var EI=p(zn=>{"use strict";Object.defineProperty(zn,"__esModule",{value:!0});zn.getTransitionFeatureKindText=zn.getTransitionFeatureKind=zn.getRequirementConstraintKind=zn.getTypeClassifierString=zn.conjugateDirectionKind=zn.getFeatureDirectionKind=zn.getVisibility=void 0;var dJ=be(),wGe=an();function DGe(r){switch(r){case"protected":return 1;case"private":return 2;case"public":return 0;case void 0:return}}zn.getVisibility=DGe;function SGe(r){return r!=null?r:"none"}zn.getFeatureDirectionKind=SGe;function MGe(r){switch(r){case"in":return"out";case"out":return"in";case"inout":return"inout";case"none":return"none"}}zn.conjugateDirectionKind=MGe;var PGe=new Map([[0,"None"],[1,"DataType"],[2,"Class"],[4,"Structure"],[8,"Association"],[12,"AssociationStruct"]]);function EGe(r){return(0,wGe.stringifyFlags)(r,PGe)}zn.getTypeClassifierString=EGe;function OGe(r){switch(r.kind){case"assume":return"assumption";case"require":case void 0:return"requirement"}}zn.getRequirementConstraintKind=OGe;function kGe(r){switch(r.kind){case"accept":return"trigger";case"do":return"effect";case"if":return"guard";default:(0,dJ.assertUnreachable)(r.kind)}}zn.getTransitionFeatureKind=kGe;function IGe(r){switch(r){case"trigger":return"accept";case"effect":return"do";case"guard":return"if";default:(0,dJ.assertUnreachable)(r)}}zn.getTransitionFeatureKindText=IGe});var PC=p(MC=>{"use strict";Object.defineProperty(MC,"__esModule",{value:!0});MC.PositionalFeaturesBase=void 0;var FGe=be(),OI=class{constructor(){this._owned=void 0,this._all=void 0}owned(e,t){return this._owned===void 0&&(this._owned=(0,FGe.stream)(e.featureMembers()).filter(t).map(n=>n.element()).nonNullable().toArray()),this._owned}all(e,t,n){return this._all===void 0&&(this._all=e.basePositionalFeatures(t,n,!0).map(i=>i.element()).nonNullable().toArray()),this._all}clearCaches(){this._owned=void 0,this._all=void 0}};MC.PositionalFeaturesBase=OI});var OC=p(EC=>{"use strict";Object.defineProperty(EC,"__esModule",{value:!0});EC.ConnectorMixin=void 0;var mJ=D(),NGe=PC(),pJ=r=>{var e;return Boolean(((e=r.element())===null||e===void 0?void 0:e.isEnd)||r.is(mJ.EndFeatureMembership))},qGe=r=>r.is(mJ.Association),kI=class{constructor(){this.endsCache=new NGe.PositionalFeaturesBase}ownedEnds(){return this.endsCache.owned(this,pJ)}allEnds(){return this.endsCache.all(this,pJ,qGe)}resetEnds(){this.endsCache.clearCaches()}totalEnds(){return this.allEnds().length}isBinary(){return this.totalEnds()===2}};EC.ConnectorMixin=kI});var IC=p(kC=>{"use strict";Object.defineProperty(kC,"__esModule",{value:!0});kC.FunctionMixin=void 0;var II=D(),xGe=O(),FI=class{resultParameter(){return this._result?this._result:this.allTypes().filter(xGe.BasicMetamodel.isAny(II.SysMLFunction,II.Expression)).map(e=>e._result).nonNullable().head()}returnParameter(){return this._children.get(II.ReturnParameterMembership).at(0)}getReturnType(e){var t,n;if(!e)return;let i=e.resultParameter();return i?(t=i.element())===null||t===void 0?void 0:t.returnType():(n=e.returnParameter())===null||n===void 0?void 0:n.element()}};kC.FunctionMixin=FI});var hJ=p(FC=>{"use strict";Object.defineProperty(FC,"__esModule",{value:!0});FC.InputParametersMixin=void 0;var LGe=D(),jGe=PC(),yJ=r=>{var e;if(!r.is(LGe.OwningMembership))return!1;let t=(e=r.element())===null||e===void 0?void 0:e.direction;return t==="in"||t==="inout"},NI=class{constructor(){this.params=new jGe.PositionalFeaturesBase}ownedInputParameters(){return this.params.owned(this,yJ)}inputParameters(){return this.params.all(this,yJ)}resetInputParameters(){this.params.clearCaches()}};FC.InputParametersMixin=NI});var qI=p(Po=>{"use strict";var UGe=Po&&Po.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),NC=Po&&Po.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&UGe(e,r,t)};Object.defineProperty(Po,"__esModule",{value:!0});NC(OC(),Po);NC(IC(),Po);NC(hJ(),Po);NC(PC(),Po)});var LI=p(ki=>{"use strict";var j_=ki&&ki.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},xI;Object.defineProperty(ki,"__esModule",{value:!0});ki.TypeMeta=ki.typeRelationships=ki.typeHeritage=ki.ImplicitTypes=void 0;var Yn=be(),BGe=nt(),zf=D(),xC=an(),GGe=Wf(),gJ=Hh(),KGe=EI(),qC=O(),HGe=qI(),L_=re();ki.ImplicitTypes={base:"Base::Anything"};function VGe(...r){return L_.EdgeContainer.make(...r)}ki.typeHeritage=VGe;function WGe(...r){return L_.EdgeContainer.make(...r)}ki.typeRelationships=WGe;var Jh=ki.TypeMeta=xI=class extends(0,BGe.Mixin)(HGe.InputParametersMixin,L_.NamespaceMeta){constructor(){super(...arguments),this._heritage=new gJ.ElementContainer,this._typeRelationships=new gJ.ElementContainer,this._isAbstract=!1,this._classifier=0,this._isSufficient=!1}get isSufficient(){return this._isSufficient}set isSufficient(e){this._isSufficient=e}get isAbstract(){return this._isAbstract}set isAbstract(e){this._isAbstract=e}get multiplicity(){return this._multiplicity}set multiplicity(e){this._multiplicity=this.swapEdgeOwnership(this._multiplicity,e)}get heritage(){return this._heritage.all}addHeritage(...e){return this.addDeclaredRelationship(this._heritage,e.filter(([t,n])=>!n.is(zf.Feature)||n.basicFeature()!==this),this.onHeritageAdded,this)}removeHeritage(...e){let t=[],n=this.removeDeclaredRelationship(this._heritage,e,i=>t.push(i));return t.length>0&&this.onHeritageRemoved(t),n}removeHeritageIf(e){let t=[],n=this.removeDeclaredRelationshipIf(this._heritage,e,i=>t.push(i));return t.length>0&&this.onHeritageRemoved(t),n}get typeRelationships(){return this._typeRelationships.all}typeRelationshipsOf(e){return this._typeRelationships.get(e)}addTypeRelationship(...e){return this.addDeclaredRelationship(this._typeRelationships,e)}removeTypeRelationship(...e){return this.removeDeclaredRelationship(this._typeRelationships,e)}removeTypeRelationshipIf(e){return this.removeDeclaredRelationshipIf(this._typeRelationships,e)}get classifier(){return this._classifier}get classifierString(){return(0,KGe.getTypeClassifierString)(this.classifier)}ast(){return this._ast}specializations(e){return this._heritage.get(e)}types(e){return(0,Yn.stream)(this.specializations(e)).map(t=>t.finalElement()).nonNullable()}supertypes(e){return(0,Yn.stream)(this.specializations(e)).map(t=>t.element()).nonNullable()}allSpecializations(e){let t=new Set,n=L_.SpecializationMeta.create(()=>-1,this.document);n.setElement(this);let i=new Yn.TreeStreamImpl(n,a=>{var s,o;return(o=(s=a.finalElement())===null||s===void 0?void 0:s.specializations().filter(u=>{let c=u.finalElement();return t.has(c)?!1:(t.add(c),!0)}))!==null&&o!==void 0?o:[]},{includeRoot:!1});return e?i.filter(qC.BasicMetamodel.is(e)):i}allSupertypeSpecializations(e){let t=new Set,n=L_.SpecializationMeta.create(()=>-1,this.document);n.setElement(this);let i=new Yn.TreeStreamImpl(n,a=>{var s,o;return(o=(s=a.element())===null||s===void 0?void 0:s.specializations().filter(u=>{let c=u.element();return t.has(c)?!1:(t.add(c),!0)}))!==null&&o!==void 0?o:[]},{includeRoot:!1});return e?i.filter(qC.BasicMetamodel.is(e)):i}allTypes(e,t=!1){let n=this.allSpecializations(e).map(i=>i.finalElement()).nonNullable();return t?(0,Yn.stream)([this]).concat(n):n}allSupertypes(e,t=!1){let n=this.allSupertypeSpecializations(e).map(i=>i.element()).nonNullable();return t?(0,Yn.stream)([this]).concat(n):n}conforms(e){return typeof e=="string"?this.allTypes(void 0,!0).some(t=>(t==null?void 0:t.qualifiedName)===e):this.allTypes(void 0,!0).some(t=>t===e)}specializes(e){var t;let n=this._heritage.get(zf.Conjugation).at(0);return n?Boolean((t=n.element())===null||t===void 0?void 0:t.specializes(e)):typeof e=="string"?this.allSupertypes(void 0,!0).some(i=>(i==null?void 0:i.qualifiedName)===e):this.allSupertypes(void 0,!0).some(i=>i===e)}firstConforming(e){for(let t of this.allTypes(void 0,!0)){let n=e.find(i=>typeof i=="string"?t.qualifiedName===i:t===i);if(n)return[n,t]}}specializationsMatching(e,t){return Array.isArray(e)?(0,Yn.stream)(this.specializations(t)).filter(n=>{var i;return(i=n.finalElement())===null||i===void 0?void 0:i.isAny(...e)}):(0,Yn.stream)(this.specializations(t)).filter(n=>{var i;return(i=n.finalElement())===null||i===void 0?void 0:i.is(e)})}typesMatching(e,t){return(0,Yn.stream)(this.specializationsMatching(e,t)).map(n=>n.finalElement()).nonNullable()}allSpecializationsMatching(e,t){return Array.isArray(e)?(0,Yn.stream)(this.allSpecializations(t)).filter(n=>{var i;return(i=n.finalElement())===null||i===void 0?void 0:i.isAny(...e)}):(0,Yn.stream)(this.allSpecializations(t)).filter(n=>{var i;return(i=n.finalElement())===null||i===void 0?void 0:i.is(e)})}allTypesMatching(e,t,n=!1){return Array.isArray(e)?(0,Yn.stream)(this.allTypes(t,n)).filter(i=>i.isAny(...e)):(0,Yn.stream)(this.allTypes(t,n)).filter(i=>i.is(e))}basePositionalFeatures(e,t,n=!1){let i=0,a=o=>(++i,o),s=t?this.allTypes().filter(o=>t(o)):this.allTypes();return n&&(s=(0,Yn.stream)([this]).concat(s)),s.flatMap(o=>(0,Yn.stream)(o.featureMembers()).filter(e).tail(i).map(a))}onHeritageAdded(e,t){}onHeritageRemoved(e){}isDeclaredRelationship(e){let t=e.source();if(t&&t.parent()===e)return!1;let n=e.parent();return Boolean(!n||n.is(zf.Type))}maybeTakeOwnership(e){this.isDeclaredRelationship(e)&&this.takeOwnership(e)}maybeUnsetOwnership(e){this.isDeclaredRelationship(e)&&this.unsetOwnership(e)}allMetadata(){return this.allTypes(void 0,!0).flatMap(e=>e.metadata)}allFeatures(){let e=new Set;return this.allTypes(void 0,!0).flatMap(t=>t.featureMembers()).filter(t=>{let n=t.element();return!n||e.has(n)?!1:(e.add(n),(0,GGe.collectRedefinitions)(n,e),!0)})}directionOf(e,t=new Set){if(e.owningType==this)return e.direction;t.add(this);let n=this._heritage.get(zf.Conjugation).at(0);if(n){let i=n.element();if(!i||t.has(i))return"none";let a=i.directionOf(e,t);return a=="in"?"out":a=="out"?"in":a}for(let i of this.specializations()){let a=i.element();if(a&&!t.has(a)){let s=a.directionOf(e,t);if(s!="none")return s}}return"none"}ownedFeatureMemberships(){return(0,Yn.stream)(this.featureMembers()).filter(qC.BasicMetamodel.is(zf.FeatureMembership))}ownedFeatures(){return this.featuresByMembership(zf.FeatureMembership)}ownedParameters(){return this.ownedFeatures().filter(e=>e.isParameter)}addDeclaredRelationship(e,t,n,i){return t.forEach(([a,s])=>{this.maybeTakeOwnership(a),a.setElement(s),e.push(a),n==null||n.call(i,a,s)}),e.length}removeDeclaredRelationship(e,t,n){return t.forEach(i=>{e.remove(i)&&(this.maybeUnsetOwnership(i),n==null||n(i))}),e.length}removeDeclaredRelationshipIf(e,t,n){return e.removeIf(i=>t(i)?(this.maybeUnsetOwnership(i),n==null||n(i),!0):!1)}collectDeclaration(e){this._multiplicity&&e.push(["multiplicity",[this._multiplicity]]),e.push(["heritage",this.heritage]),e.push(["typeRelationships",this.typeRelationships])}collectParts(){let e=[["prefixes",this.prefixes]];return this.collectDeclaration(e),e.push(["children",this.children]),e}static applyTypeOptions(e,t){e._isAbstract=Boolean(t.isAbstract),t.multiplicity&&(e.multiplicity=t.multiplicity),t.heritage&&e.addHeritage(...t.heritage.values),t.typeRelationships&&e.addTypeRelationship(...t.typeRelationships.values),e.isSufficient=Boolean(t.isSufficient)}static create(e,t,n){let i=super.create(e,t,n);return n&&xI.applyTypeOptions(i,n),i}};j_([xC.enumerable],Jh.prototype,"isAbstract",null);j_([xC.enumerable],Jh.prototype,"multiplicity",null);j_([xC.enumerable],Jh.prototype,"heritage",null);j_([xC.enumerable],Jh.prototype,"typeRelationships",null);ki.TypeMeta=Jh=xI=j_([(0,qC.metamodelOf)(zf.Type,ki.ImplicitTypes)],Jh)});var jI=p(Yf=>{"use strict";var zGe=Yf&&Yf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Yf,"__esModule",{value:!0});Yf.TypeReferenceMeta=void 0;var YGe=D(),XGe=Mo(),JGe=O(),QGe=re(),vJ=Yf.TypeReferenceMeta=class extends QGe.NamespaceReferenceMeta{constructor(){super(...arguments),this.to=new XGe.Target}ast(){return this._ast}};Yf.TypeReferenceMeta=vJ=zGe([(0,JGe.metamodelOf)(YGe.TypeReference)],vJ)});var LC=p(Eo=>{"use strict";var ZGe=Eo&&Eo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Eo,"__esModule",{value:!0});Eo.ClassifierMeta=Eo.ImplicitClassifiers=void 0;var $J=D(),eKe=O(),tKe=re();Eo.ImplicitClassifiers={base:"Base::Anything"};var _J=Eo.ClassifierMeta=class extends tKe.TypeMeta{ast(){return this._ast}specializationKind(){return $J.Subclassification}static create(e,t,n){return super.create(e,t,n)}};Eo.ClassifierMeta=_J=ZGe([(0,eKe.metamodelOf)($J.Classifier,Eo.ImplicitClassifiers)],_J)});var jC=p(Xf=>{"use strict";var rKe=Xf&&Xf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Xf,"__esModule",{value:!0});Xf.ClassifierReferenceMeta=void 0;var nKe=D(),iKe=Mo(),aKe=O(),sKe=re(),TJ=Xf.ClassifierReferenceMeta=class extends sKe.TypeReferenceMeta{constructor(){super(...arguments),this.to=new iKe.Target}ast(){return this._ast}};Xf.ClassifierReferenceMeta=TJ=rKe([(0,aKe.metamodelOf)(nKe.ClassifierReference)],TJ)});var UC=p(Oo=>{"use strict";var oKe=Oo&&Oo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Oo,"__esModule",{value:!0});Oo.ClassMeta=Oo.ImplicitClasses=void 0;var lKe=D(),uKe=O(),cKe=re();Oo.ImplicitClasses={base:"Occurrences::Occurrence"};var RJ=Oo.ClassMeta=class extends cKe.ClassifierMeta{constructor(){super(...arguments),this._classifier=2}ast(){return this._ast}};Oo.ClassMeta=RJ=oKe([(0,uKe.metamodelOf)(lKe.Class,Oo.ImplicitClasses)],RJ)});var BC=p(ko=>{"use strict";var fKe=ko&&ko.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ko,"__esModule",{value:!0});ko.DataTypeMeta=ko.ImplicitDataTypes=void 0;var dKe=D(),pKe=O(),mKe=re();ko.ImplicitDataTypes={base:"Base::DataValue"};var bJ=ko.DataTypeMeta=class extends mKe.ClassifierMeta{constructor(){super(...arguments),this._classifier=1}ast(){return this._ast}};ko.DataTypeMeta=bJ=fKe([(0,pKe.metamodelOf)(dKe.DataType,ko.ImplicitDataTypes)],bJ)});var UI=p(Io=>{"use strict";var yKe=Io&&Io.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Io,"__esModule",{value:!0});Io.AssociationMeta=Io.ImplicitAssociations=void 0;var hKe=nt(),gKe=D(),vKe=O(),_Ke=OC(),GC=re();Io.ImplicitAssociations={base:"Links::Link",binary:"Links::BinaryLink"};var CJ=Io.AssociationMeta=class extends(0,hKe.Mixin)(_Ke.ConnectorMixin,GC.RelationshipMeta,GC.ClassifierMeta){constructor(){super(...arguments),this._classifier=8}defaultSupertype(){return this.isBinary()?"binary":"base"}ast(){return this._ast}onHeritageAdded(e,t){this.resetEnds(),GC.ClassifierMeta.prototype.onHeritageAdded.call(this,e,t)}onHeritageRemoved(e){this.resetEnds(),GC.ClassifierMeta.prototype.onHeritageRemoved.call(this,e)}};Io.AssociationMeta=CJ=yKe([(0,vKe.metamodelOf)(gKe.Association,Io.ImplicitAssociations)],CJ)});var KC=p(Fo=>{"use strict";var $Ke=Fo&&Fo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Fo,"__esModule",{value:!0});Fo.BehaviorMeta=Fo.ImplicitBehaviors=void 0;var TKe=D(),RKe=O(),bKe=re();Fo.ImplicitBehaviors={base:"Performances::Performance"};var AJ=Fo.BehaviorMeta=class extends bKe.ClassMeta{ast(){return this._ast}};Fo.BehaviorMeta=AJ=$Ke([(0,RKe.metamodelOf)(TKe.Behavior,Fo.ImplicitBehaviors)],AJ)});var HC=p(Jf=>{"use strict";var CKe=Jf&&Jf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Jf,"__esModule",{value:!0});Jf.InteractionMeta=void 0;var AKe=nt(),wKe=D(),DKe=O(),wJ=re(),DJ=Jf.InteractionMeta=class extends(0,AKe.Mixin)(wJ.AssociationMeta,wJ.BehaviorMeta){ast(){return this._ast}};Jf.InteractionMeta=DJ=CKe([(0,DKe.metamodelOf)(wKe.Interaction)],DJ)});var U_=p(No=>{"use strict";var SKe=No&&No.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(No,"__esModule",{value:!0});No.StructureMeta=No.ImplicitStructures=void 0;var MKe=D(),PKe=O(),EKe=re();No.ImplicitStructures={base:"Objects::Object"};var SJ=No.StructureMeta=class extends EKe.ClassMeta{constructor(){super(...arguments),this._classifier=4}ast(){return this._ast}};No.StructureMeta=SJ=SKe([(0,PKe.metamodelOf)(MKe.Structure,No.ImplicitStructures)],SJ)});var VC=p(qo=>{"use strict";var OKe=qo&&qo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(qo,"__esModule",{value:!0});qo.MetaclassMeta=qo.ImplicitMetaclasses=void 0;var kKe=D(),IKe=O(),FKe=re();qo.ImplicitMetaclasses={base:"Metaobjects::Metaobject"};var MJ=qo.MetaclassMeta=class extends FKe.StructureMeta{ast(){return this._ast}};qo.MetaclassMeta=MJ=OKe([(0,IKe.metamodelOf)(kKe.Metaclass,qo.ImplicitMetaclasses)],MJ)});var BI=p(Qf=>{"use strict";var NKe=Qf&&Qf.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Qf,"__esModule",{value:!0});Qf.MetaclassReferenceMeta=void 0;var qKe=D(),xKe=Mo(),LKe=O(),jKe=re(),PJ=Qf.MetaclassReferenceMeta=class extends jKe.TypeReferenceMeta{constructor(){super(...arguments),this.to=new xKe.Target}ast(){return this._ast}};Qf.MetaclassReferenceMeta=PJ=NKe([(0,LKe.metamodelOf)(qKe.MetaclassReference)],PJ)});var zC=p(ka=>{"use strict";var Qh=ka&&ka.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},KI;Object.defineProperty(ka,"__esModule",{value:!0});ka.FeatureMeta=ka.featureRelationships=ka.ImplicitFeatures=void 0;var ct=D(),HI=O(),WC=re(),GI=be(),lu=Ae();ka.ImplicitFeatures={base:"Base::things",dataValue:"Base::dataValues",occurrence:"Occurrences::occurrences",suboccurrence:"Occurrences::Occurrence::suboccurrences",portion:"Occurrences::Occurrence::portions",object:"Objects::objects",subobject:"Objects::Object::subobjects",participant:"Links::Link::participant",startingAt:"FeatureReferencingPerformances::FeatureAccessPerformance::onOccurrence::startingAt",accessedFeature:"FeatureReferencingPerformances::FeatureAccessPerformance::onOccurrence::startingAt::accessedFeature"};function UKe(...r){return WC.EdgeContainer.make(...r)}ka.featureRelationships=UKe;var Zf=ka.FeatureMeta=KI=class extends WC.TypeMeta{constructor(){super(...arguments),this._direction="none",this._isComposite=!1,this.isPortion=!1,this.isReadonly=!1,this.isDerived=!1,this._isEnd=!1,this._isImpliedEnd=!1,this._isOrdered=!1,this._impliedIsOrdered=!1,this._isNonUnique=!1,this.typings=void 0}get direction(){var e;return(e=this._impliedDirection)!==null&&e!==void 0?e:this._direction}set direction(e){this._direction=e,this.computedImpliedDirection()}get explicitDirection(){return this._direction}computedImpliedDirection(){let e=this.parent();this._direction==="none"&&(e!=null&&e.is(ct.ParameterMembership))?this._impliedDirection=e.is(ct.ReturnParameterMembership)?"out":"in":this._impliedDirection=void 0}get isComposite(){return this._isComposite}set isComposite(e){this._isComposite=e}get isEnd(){return this._isImpliedEnd||this._isEnd}set isEnd(e){this._isEnd=e}get isEndExplicitly(){return this._isEnd}get isOrdered(){return this._isOrdered||this._impliedIsOrdered}set isOrdered(e){this._isOrdered=e}get isOrderedExplicitly(){return this._isOrdered}get isNonUnique(){return this._isNonUnique}set isNonUnique(e){this._isNonUnique=e}addFeatureRelationship(...e){return this.addDeclaredRelationship(this._typeRelationships,e)}removeFeatureRelationship(...e){return this.removeDeclaredRelationship(this._typeRelationships,e)}removeFeatureRelationshipIf(e){return this.removeDeclaredRelationshipIf(this._typeRelationships,e)}get typeFeaturings(){return this._typeRelationships.get(ct.TypeFeaturing)}get featuredBy(){var e;let t=this.typeFeaturings.map(i=>i.element()).filter(lu.NonNullable),n=(e=this.chainings.at(0))===null||e===void 0?void 0:e.element();return n&&t.push(...n.featuredBy),t.length===0&&this._owningType?[this._owningType]:t}get chainings(){return this._typeRelationships.get(ct.FeatureChaining)}get chainingFeatures(){return this.chainings.map(e=>e.element()).filter(lu.NonNullable)}get value(){return this._value}set value(e){this._value=this.swapEdgeOwnership(this._value,e)}get featureWrite(){return this._value&&!this._value.isDefault&&this._value.isInitial?this._write:void 0}onParentSet(e,t){super.onParentSet(e,t),this._isImpliedEnd=Boolean(t==null?void 0:t.is(ct.EndFeatureMembership)),this.computedImpliedDirection()}onOwnerSet(e,t){t!=null&&t[0].is(ct.FeatureMembership)&&(t!=null&&t[1].is(ct.Type))?this._owningType=t[1]:this._owningType=void 0,super.onOwnerSet(e,t)}get owningType(){return this._owningType}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isAssociationEnd()&&e.push("participant"),e}defaultSupertype(){return this.hasStructureType()?this.isSubobject()?"subobject":"object":this.hasClassType()?this.isSuboccurrence()?"suboccurrence":this.isPortion?"portion":"occurrence":this.hasDataType()?"dataValue":"base"}isPortionImpl(){let e=this.owningType;return e?this.isPortion&&(e.is(ct.Class)||e.is(ct.Feature)&&e.hasClassType()):!1}ast(){return this._ast}hasStructureType(){return(this.classifier&4)===4}hasClassType(){return(this.classifier&2)===2}hasDataType(){return(this.classifier&1)===1}hasAssociation(){return(this.classifier&8)===8}isBehaviorOwned(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(ct.Behavior,ct.Step))}isBehaviorOwnedComposite(){return this.isComposite&&this.isBehaviorOwned()}isSubobject(){if(!this.isComposite)return!1;let e=this.owner();return Boolean((e==null?void 0:e.is(ct.Structure))||(e==null?void 0:e.is(ct.Feature))&&e.hasStructureType())}isStructureOwnedComposite(){return this.isSubobject()}isSuboccurrence(){if(!this.isComposite)return!1;let e=this.owner();return Boolean((e==null?void 0:e.is(ct.Class))||(e==null?void 0:e.is(ct.Feature))&&e.hasClassType())}isAssociationEnd(){if(!this.isEnd)return!1;let e=this.owner();return Boolean(e==null?void 0:e.isAny(ct.Association,ct.Connector))}namingFeature(){return this.types(ct.Redefinition).head()}isFeaturedWithin(e){return e===void 0?this.featuredBy.length==0||this.featuredBy.length==1&&this.featuredBy[0].qualifiedName=="Base::Anything":this.featuredBy.length==0?!0:this.featuredBy.every(t=>e.specializes(t))}allRedefinitions(){let e=new Set,t=WC.RedefinitionMeta.create(()=>-1,this.document);return t.setElement(this),new GI.TreeStreamImpl(t,n=>{var i,a;return(a=(i=n.element())===null||i===void 0?void 0:i._heritage.get(ct.Redefinition).filter(s=>{let o=s.element();return e.has(o)?!1:(e.add(o),!0)}))!==null&&a!==void 0?a:[]},{includeRoot:!1})}allRedefinedFeatures(){return this.allRedefinitions().map(e=>e.element()).filter(lu.NonNullable)}referencedFeature(e){let t=this.types(ct.ReferenceSubsetting).head();return e?t!=null&&t.is(e)?t:this:t}basicFeature(){var e,t;return(t=(e=this.chainings.at(-1))===null||e===void 0?void 0:e.element())!==null&&t!==void 0?t:this}isIgnoredParameter(){return this.isResultParameter}get isParameter(){var e;return Boolean(this.direction!=="none"&&((e=this.owner())===null||e===void 0?void 0:e.isAny(ct.Behavior,ct.Step)))}get isResultParameter(){var e;return Boolean((e=this.parent())===null||e===void 0?void 0:e.is(ct.ReturnParameterMembership))}recomputeEffectiveNames(){this.declaredName||this.declaredShortName||this.updateEffectiveNames()}updateEffectiveNames(){let e=this.namingFeature();e?(e.name&&this.setName(e.name),e.shortName&&this.setShortName(e.shortName)):(this.name&&this.setName(void 0),this.shortName&&this.setShortName(void 0))}onHeritageAdded(e,t){var n;if(super.onHeritageAdded(e,t),this.typings=void 0,!this._impliedIsOrdered&&e.is(ct.Subsetting)&&!((n=e.finalElement())===null||n===void 0)&&n.isOrdered&&(this._impliedIsOrdered=!0),!this.name&&!this.shortName&&this.updateEffectiveNames(),e.is(ct.Redefinition)){let i=e.finalElement(),a=this.owningType;if(a&&i){let s=o=>{a.findMember(o)||a._memberLookup.set(o,"shadow")};i.name&&s(i.name),i.shortName&&s(i.shortName)}}}onHeritageRemoved(e){var t;super.onHeritageRemoved(e),this.typings=void 0,this._impliedIsOrdered&&e.some(i=>{var a;return i.is(ct.Subsetting)&&((a=i.finalElement())===null||a===void 0?void 0:a.isOrdered)})&&(this._impliedIsOrdered=this.heritage.some(i=>{var a;return i.is(ct.Subsetting)&&((a=i.finalElement())===null||a===void 0?void 0:a.isOrdered)})),this.recomputeEffectiveNames();let n=(t=this.owningType)===null||t===void 0?void 0:t._memberLookup;n&&e.filter(HI.BasicMetamodel.is(ct.Redefinition)).map(i=>i.finalElement()).filter(lu.NonNullable).forEach(i=>{let a=s=>{n.get(s)==="shadow"&&n.delete(s)};i.name&&a(i.name),i.shortName&&a(i.shortName)})}specializationKind(){return ct.Subsetting}allTypings(e=!1){return!this.typings||e?this.collectTypings():this.typings}collectTypings(){let e=this.collectInheritedTypes(new Set).distinct().toArray();return this.typings=e.filter(t=>e.every(n=>n===t||!n.conforms(t))),this.typings}collectDirectTypes(e){let t=this.types(ct.FeatureTyping),n=this.chainingFeatures.at(-1);return n?t.concat(n.collectInheritedTypes(e)):t}collectInheritedTypes(e){return e.has(this)?GI.EMPTY_STREAM:(e.add(this),(0,GI.stream)(this.collectDirectTypes(e),...[ct.Conjugation,ct.Subsetting].map(t=>this.types(t).filter(HI.BasicMetamodel.is(ct.Feature)).flatMap(n=>n.collectInheritedTypes(e)))))}allFeaturingTypes(){let e=[this],t=new Set;for(;e.length>0;){let n=[];for(let i of e)for(let a of i.featuredBy)t.has(a)||(t.add(a),a.is(ct.Feature)&&n.push(a));e=n}return Array.from(t)}ownedParameters(){return WC.TypeMeta.prototype.ownedParameters.call(this.basicFeature())}collectDeclaration(e){var t;!((t=this.parent())===null||t===void 0)&&t.is(ct.EndFeatureMembership)?(e.push(["heritage",this.heritage]),this._multiplicity&&e.push(["multiplicity",[this._multiplicity]])):(this._multiplicity&&e.push(["multiplicity",[this._multiplicity]]),e.push(["heritage",this.heritage])),e.push(["typeRelationships",this.typeRelationships]),this.value&&(e.push(["value",[this.value]]),this.featureWrite&&e.push(["featureWrite",[this.featureWrite]]))}static applyFeatureOptions(e,t){var n;e._direction=(n=t.direction)!==null&&n!==void 0?n:"none",e._isComposite=Boolean(t.isComposite),e.isPortion=Boolean(t.isPortion),e.isReadonly=Boolean(t.isReadonly),e.isDerived=Boolean(t.isDerived),e._isEnd=Boolean(t.isEnd),e.isOrdered=Boolean(t.isOrdered),e.isNonUnique=Boolean(t.isNonUnique),t.value&&(e.value=t.value)}static create(e,t,n){let i=super.create(e,t,n);return n&&KI.applyFeatureOptions(i,n),i}};Qh([lu.enumerable],Zf.prototype,"direction",null);Qh([lu.enumerable],Zf.prototype,"isComposite",null);Qh([lu.enumerable],Zf.prototype,"isEnd",null);Qh([lu.enumerable],Zf.prototype,"isOrdered",null);Qh([lu.enumerable],Zf.prototype,"isNonUnique",null);ka.FeatureMeta=Zf=KI=Qh([(0,HI.metamodelOf)(ct.Feature,ka.ImplicitFeatures)],Zf)});var VI=p(ed=>{"use strict";var BKe=ed&&ed.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ed,"__esModule",{value:!0});ed.FeatureReferenceMeta=void 0;var GKe=D(),KKe=Mo(),HKe=O(),VKe=re(),EJ=ed.FeatureReferenceMeta=class extends VKe.TypeReferenceMeta{constructor(){super(...arguments),this.to=new KKe.Target}ast(){return this._ast}};ed.FeatureReferenceMeta=EJ=BKe([(0,HKe.metamodelOf)(GKe.FeatureReference)],EJ)});var WI=p(xo=>{"use strict";var WKe=xo&&xo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(xo,"__esModule",{value:!0});xo.MultiplicityMeta=xo.ImplicitMultiplicities=void 0;var YC=D(),zKe=O(),YKe=re();xo.ImplicitMultiplicities={base:"Base::naturals",feature:"Base::exactlyOne",classifier:"Base::zeroOrOne"};var OJ=xo.MultiplicityMeta=class extends YKe.FeatureMeta{get typeFeaturings(){var e;let t=super.typeFeaturings;return t.length>0?t:!((e=this.owningType)===null||e===void 0)&&e.is(YC.Feature)?this.owningType.typeFeaturings:t}ast(){return this._ast}defaultSupertype(){let e=this.owner();return e!=null&&e.is(YC.Classifier)?"classifier":e!=null&&e.is(YC.Feature)?"feature":"base"}};xo.MultiplicityMeta=OJ=WKe([(0,zKe.metamodelOf)(YC.Multiplicity,xo.ImplicitMultiplicities)],OJ)});var YI=p(Lo=>{"use strict";var kJ=Lo&&Lo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Lo,"__esModule",{value:!0});Lo.MultiplicityRangeMeta=Lo.ImplicitMultiplicityRanges=void 0;var XKe=D(),JKe=Ae(),QKe=O(),ZKe=re();Lo.ImplicitMultiplicityRanges={feature:"Base::naturals",classifier:"Base::naturals"};var zI=Lo.MultiplicityRangeMeta=class extends ZKe.MultiplicityMeta{constructor(){super(...arguments),this._bounds="unset"}get range(){return this._range}set range(e){this._range=this.swapEdgeOwnership(this._range,e)}get bounds(){return typeof this._bounds=="function"?this._bounds=this._bounds():this._bounds==="unset"?void 0:this._bounds}setBounds(e){return this._bounds=e,this}ast(){return this._ast}collectDeclaration(e){super.collectDeclaration(e),this.range&&e.push(["range",[this.range]])}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.range=n.range),i}};kJ([JKe.enumerable],zI.prototype,"bounds",null);Lo.MultiplicityRangeMeta=zI=kJ([(0,QKe.metamodelOf)(XKe.MultiplicityRange,Lo.ImplicitMultiplicityRanges)],zI)});var XC=p(jo=>{"use strict";var eHe=jo&&jo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(jo,"__esModule",{value:!0});jo.StepMeta=jo.ImplicitSteps=void 0;var FJ=D(),tHe=O(),rHe=re();jo.ImplicitSteps={base:"Performances::performances",enclosedPerformance:"Performances::Performance::enclosedPerformances",subperformance:"Performances::Performance::subperformances",ownedPerformance:"Objects::Object::ownedPerformances",incomingTransfer:"Occurrences::Occurrence::incomingTransfers",featureWrite:"FeatureReferencingPerformances::FeatureWritePerformance"};var IJ=jo.StepMeta=class extends rHe.FeatureMeta{ast(){return this._ast}defaultSupertype(){return this.isStructureOwnedComposite()?"ownedPerformance":this.isBehaviorOwnedComposite()?"subperformance":this.isBehaviorOwned()?"enclosedPerformance":this.isIncomingTransfer()?"incomingTransfer":"base"}isIncomingTransfer(){let e=this.owner();return e!=null&&e.is(FJ.ItemFlow)?Boolean(e.item):!1}};jo.StepMeta=IJ=eHe([(0,tHe.metamodelOf)(FJ.Step,jo.ImplicitSteps)],IJ)});var JC=p(Uo=>{"use strict";var NJ=Uo&&Uo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},XI;Object.defineProperty(Uo,"__esModule",{value:!0});Uo.ConnectorMeta=Uo.ImplicitConnectors=void 0;var nHe=be(),iHe=nt(),qJ=D(),aHe=O(),sHe=OC(),B_=re(),xJ=Ae();Uo.ImplicitConnectors={base:"Links::links",binary:"Links::binaryLinks",object:"Objects::linkObjects",binaryObject:"Objects::binaryLinkObjects"};var JI=Uo.ConnectorMeta=XI=class extends(0,iHe.Mixin)(sHe.ConnectorMixin,B_.RelationshipMeta,B_.FeatureMeta){constructor(){super(...arguments),this._ends=[]}get ends(){return this._ends}addEnd(...e){return this.resetEnds(),this.addOwnedEdges(this._ends,e)}removeEnd(...e){return this.resetEnds(),this.removeOwnedElements(this._ends,e)}removeEndIf(e){return this.resetEnds(),this.removeOwnedElementsIf(this._ends,e)}defaultSupertype(){return this.hasStructureType()?this._ends.length>2?"object":this.isBinary()?"binaryObject":"object":this._ends.length>2?"base":this.isBinary()?"binary":"base"}ast(){return this._ast}onHeritageAdded(e,t){this.resetEnds(),B_.FeatureMeta.prototype.onHeritageAdded.call(this,e,t)}onHeritageRemoved(e){this.resetEnds(),B_.FeatureMeta.prototype.onHeritageRemoved.call(this,e)}featureMembers(){return this._ends.concat(B_.FeatureMeta.prototype.featureMembers.call(this))}contextType(){let e;for(let t of this.relatedFeatures()){let n=t==null?void 0:t.allFeaturingTypes();if(n){if(!e){e=n;continue}e=e.map(i=>{let a=n.find(s=>s.conforms(i));if(a)return a;if(!n.every(s=>!i.conforms(s)))return i}).filter(xJ.NonNullable)}}return e==null?void 0:e.at(0)}connectorEnds(){return this.ownedEnds()}relatedFeatures(){return(0,nHe.stream)(this.allEnds()).map(e=>e.specializations(qJ.ReferenceSubsetting).at(0)).nonNullable().map(e=>e.element()).toArray()}collectDeclaration(e){super.collectDeclaration(e),e.push(["ends",this.ends])}static applyConnectorOptions(e,t){t.ends&&e.addEnd(...t.ends)}static create(e,t,n){let i=super.create(e,t,n);return n&&XI.applyConnectorOptions(i,n),i}};NJ([xJ.enumerable],JI.prototype,"ends",null);Uo.ConnectorMeta=JI=XI=NJ([(0,aHe.metamodelOf)(qJ.Connector,Uo.ImplicitConnectors)],JI)});var QC=p(Bo=>{"use strict";var oHe=Bo&&Bo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Bo,"__esModule",{value:!0});Bo.BindingConnectorMeta=Bo.ImplicitBindingConnectors=void 0;var lHe=D(),uHe=O(),cHe=re();Bo.ImplicitBindingConnectors={binary:"Links::selfLinks"};var LJ=Bo.BindingConnectorMeta=class extends cHe.ConnectorMeta{ast(){return this._ast}};Bo.BindingConnectorMeta=LJ=oHe([(0,uHe.metamodelOf)(lHe.BindingConnector,Bo.ImplicitBindingConnectors)],LJ)});var Zh=p(ZC=>{"use strict";Object.defineProperty(ZC,"__esModule",{value:!0});ZC.RangeGenerator=void 0;var QI=class{constructor(e){var t;this.start=e.start,this.stop=e.stop+1,this.step=(t=e.step)!==null&&t!==void 0?t:1}[Symbol.iterator](){let e=this.start,t=this.stop,n=this.step;return{next(){if(e>=t)return{done:!0,value:void 0};let i=e;return e+=n,{done:!1,value:i}}}}toArray(){return Array.from(this)}get length(){return Math.max(0,Math.floor((this.stop-this.start+this.step-1)/this.step))}at(e){if(e<0&&(e+=this.length,e<0))return;let t=this.start+e*this.step;return t>=this.stop?void 0:t}some(e){for(let t of this)if(e(t))return!0;return!1}every(e){for(let t of this)if(!e(t))return!1;return!0}};ZC.RangeGenerator=QI});var ta=p(ft=>{"use strict";Object.defineProperty(ft,"__esModule",{value:!0});ft.normalize=ft.typeOf=ft.typeFor=ft.resultType=ft.isMetaclassFeature=ft.metaclassReferenceOf=ft.hasType=ft.isType=ft.typeArgument=ft.isModelLevelEvaluable=ft.builtinFunction=ft.functionFor=ft.OPERATOR_FUNCTIONS=ft.BUILTIN_FUNCTIONS=ft.BuiltinFunction=void 0;var Ss=D(),jJ=O(),fHe=kf(),dHe=Zh(),ZI=class{get isModelLevelEvaluable(){return!0}};ft.BuiltinFunction=ZI;ft.BUILTIN_FUNCTIONS={};ft.OPERATOR_FUNCTIONS={};function pHe(r,e){let t=[],n=i=>{let a=(0,fHe.concatNames)(r,i);i.startsWith("'")&&(ft.OPERATOR_FUNCTIONS[i]=a),t.push(a)};return typeof e=="string"?n(e):e.forEach(i=>n(i)),function(i){for(let a of t)ft.BUILTIN_FUNCTIONS[a]=new i}}ft.functionFor=pHe;function UJ(r){return typeof r=="string"?ft.BUILTIN_FUNCTIONS[r]:ft.BUILTIN_FUNCTIONS[r.qualifiedName]}ft.builtinFunction=UJ;function mHe(r){var e;return((e=UJ(r))===null||e===void 0?void 0:e.isModelLevelEvaluable)===!0}ft.isModelLevelEvaluable=mHe;function yHe(r){let e=r.ownedFeatures().tail(Math.max(0,1-r.operands.length)).head();if(e!=null&&e.is(Ss.Type))return e.types().head()}ft.typeArgument=yHe;function hHe(r,e){return(0,jJ.isMetamodel)(r)?r.is(Ss.Type)?r===e||r.allTypes().includes(e):r.is(Ss.LiteralExpression)?r.returnType()===e.qualifiedName:!1:!1}ft.isType=hHe;function gHe(r,e){return(0,jJ.isMetamodel)(r)?r.is(Ss.Type)?r===e||r.types().includes(e):r.is(Ss.LiteralExpression)?r.returnType()===e.qualifiedName:!1:!1}ft.hasType=gHe;function BJ(r){if(r.is(Ss.MetadataFeature))return r.annotatedElements().find(e=>e.metaclass===r)}ft.metaclassReferenceOf=BJ;function vHe(r){return BJ(r)!==void 0}ft.isMetaclassFeature=vHe;function GJ(r){if(typeof r=="boolean")return"ScalarValues::Boolean";if(typeof r=="string")return"ScalarValues::String";if(typeof r=="number")return Number.isInteger(r)?"ScalarValues::Integer":"ScalarValues::Rational";if(r!=null&&r.isAny(Ss.InlineExpression,Ss.Expression))return r.returnType();if(r!=null&&r.is(Ss.Type))return r}ft.resultType=GJ;function _He(r){if(!r||r.length===0)return;let e=[];for(let t of r){let n=GJ(t);n&&e.push(n)}return e}ft.typeFor=_He;function $He(r){var e;if(r)return r.value?(e=r.value.element())===null||e===void 0?void 0:e.returnType():r.isAny(Ss.Expression,Ss.SysMLFunction)?r.returnType():r}ft.typeOf=$He;function THe(r){if(r instanceof dHe.RangeGenerator){if(r.length>1e9)throw new Error(`Range too large: ${r.length}`);return r.toArray()}return r}ft.normalize=THe});var eA=p(Go=>{"use strict";var HJ=Go&&Go.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},eF;Object.defineProperty(Go,"__esModule",{value:!0});Go.FunctionMeta=Go.ImplicitFunctions=void 0;var RHe=nt(),bHe=D(),CHe=ta(),AHe=O(),wHe=IC(),KJ=re(),DHe=Ae();Go.ImplicitFunctions={base:"Performances::Evaluation"};var tF=Go.FunctionMeta=eF=class extends(0,RHe.Mixin)(KJ.BehaviorMeta,wHe.FunctionMixin){get result(){return this._result}set result(e){this._result=this.swapEdgeOwnership(this._result,e)}ast(){return this._ast}returnType(){return this.getReturnType(this)}isModelLevelEvaluable(){return(0,CHe.isModelLevelEvaluable)(this.qualifiedName)}collectParts(){let e=KJ.BehaviorMeta.prototype.collectParts.call(this);return this._result&&e.push(["result",[this._result]]),e}static applyFunctionOptions(e,t){e.result=t.result}static create(e,t,n){let i=super.create(e,t,n);return n&&eF.applyFunctionOptions(i,n),i}};HJ([DHe.enumerable],tF.prototype,"result",null);Go.FunctionMeta=tF=eF=HJ([(0,AHe.metamodelOf)(bHe.SysMLFunction,Go.ImplicitFunctions)],tF)});var rF=p(Ko=>{"use strict";var SHe=Ko&&Ko.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ko,"__esModule",{value:!0});Ko.ItemFeatureMeta=Ko.ItemFeatureImplicits=void 0;var WJ=D(),MHe=O(),PHe=re();Ko.ItemFeatureImplicits={payload:"Transfers::Transfer::item"};var VJ=Ko.ItemFeatureMeta=class extends PHe.FeatureMeta{ast(){return this._ast}defaultSupertype(){return"payload"}specializationKind(){return WJ.Redefinition}};Ko.ItemFeatureMeta=VJ=SHe([(0,MHe.metamodelOf)(WJ.ItemFeature,Ko.ItemFeatureImplicits)],VJ)});var tA=p(Ho=>{"use strict";var zJ=Ho&&Ho.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},nF;Object.defineProperty(Ho,"__esModule",{value:!0});Ho.ItemFlowMeta=Ho.ImplicitItemFlows=void 0;var EHe=nt(),YJ=D(),XJ=O(),G_=re(),OHe=Ae();Ho.ImplicitItemFlows={base:"Transfers::flowTransfers",enclosedPerformance:"Performances::Performance::enclosedPerformances",subperformance:"Performances::Performance::subperformances",ownedPerformance:"Objects::Object::ownedPerformances"};var iF=Ho.ItemFlowMeta=nF=class extends(0,EHe.Mixin)(G_.StepMeta,G_.ConnectorMeta){get item(){return this._item}set item(e){this._item=this.swapEdgeOwnership(this._item,e)}ast(){return this._ast}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isStructureOwnedComposite()&&e.push("ownedPerformance"),this.isBehaviorOwnedComposite()&&e.push("subperformance"),this.isBehaviorOwned()&&e.push("enclosedPerformance"),e}defaultSupertype(){return"base"}itemFlowEnds(){return this.ownedEnds().filter(XJ.BasicMetamodel.is(YJ.ItemFlowEnd))}featureMembers(){let e=G_.ConnectorMeta.prototype.featureMembers.call(this);return this._item?[this._item].concat(e):e}collectDeclaration(e){G_.StepMeta.prototype.collectDeclaration.call(this,e),this._item&&e.push(["item",[this._item]]),e.push(["ends",this.ends])}static applyItemFlowOptions(e,t){e.item=t.item}static create(e,t,n){let i=G_.ConnectorMeta.create.call(this,e,t,n);return n&&nF.applyItemFlowOptions(i,n),i}};zJ([OHe.enumerable],iF.prototype,"item",null);Ho.ItemFlowMeta=iF=nF=zJ([(0,XJ.metamodelOf)(YJ.ItemFlow,Ho.ImplicitItemFlows)],iF)});var aF=p(Vo=>{"use strict";var kHe=Vo&&Vo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Vo,"__esModule",{value:!0});Vo.ItemFlowEndMeta=Vo.ImplicitItemFlowEnds=void 0;var IHe=D(),FHe=O(),NHe=re();Vo.ImplicitItemFlowEnds={sourceOutput:"Transfers::Transfer::source::sourceOutput",targetInput:"Transfers::Transfer::target::targetInput"};var JJ=Vo.ItemFlowEndMeta=class extends NHe.FeatureMeta{get isEnd(){return!0}set isEnd(e){}get isEndExplicitly(){return!1}ast(){return this._ast}};Vo.ItemFlowEndMeta=JJ=kHe([(0,FHe.metamodelOf)(IHe.ItemFlowEnd,Vo.ImplicitItemFlowEnds)],JJ)});var nA=p(Wo=>{"use strict";var qHe=Wo&&Wo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Wo,"__esModule",{value:!0});Wo.MetadataFeatureMeta=Wo.ImplicitMetadataFeatures=void 0;var xHe=nt(),LHe=D(),jHe=O(),rA=re();Wo.ImplicitMetadataFeatures={base:"Metaobjects::metaobjects",annotatedElement:"Metaobjects::Metaobject::annotatedElement",baseType:"Metaobjects::SemanticMetadata::baseType"};var QJ=Wo.MetadataFeatureMeta=class extends(0,xHe.Mixin)(rA.AnnotatingElementMeta,rA.FeatureMeta){ast(){return this._ast}defaultSupertype(){return"base"}collectDeclaration(e){super.collectDeclaration(e),e.push(["about",this._annotations])}static create(e,t,n){let i=rA.FeatureMeta.create.call(this,e,t,n);return n&&rA.AnnotatingElementMeta.applyAnnotatingElementOptions(i,n),i}};Wo.MetadataFeatureMeta=QJ=qHe([(0,jHe.metamodelOf)(LHe.MetadataFeature,Wo.ImplicitMetadataFeatures)],QJ)});var iA=p(zo=>{"use strict";var UHe=zo&&zo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(zo,"__esModule",{value:!0});zo.SuccessionMeta=zo.ImplicitSuccessions=void 0;var BHe=D(),GHe=O(),KHe=re();zo.ImplicitSuccessions={binary:"Occurrences::happensBeforeLinks"};var ZJ=zo.SuccessionMeta=class extends KHe.ConnectorMeta{ast(){return this._ast}};zo.SuccessionMeta=ZJ=UHe([(0,GHe.metamodelOf)(BHe.Succession,zo.ImplicitSuccessions)],ZJ)});var sA=p(Yo=>{"use strict";var HHe=Yo&&Yo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Yo,"__esModule",{value:!0});Yo.SuccessionItemFlowMeta=Yo.ImplicitSuccessionItemFlows=void 0;var VHe=nt(),WHe=D(),zHe=O(),aA=re();Yo.ImplicitSuccessionItemFlows={base:"Transfers::flowTransfersBefore",enclosedperformance:"Performances::Performance::enclosedPerformances",subperformance:"Performances::Performance::subperformances",ownedPerformance:"Objects::Object::ownedPerformances"};var eQ=Yo.SuccessionItemFlowMeta=class extends(0,VHe.Mixin)(aA.ItemFlowMeta,aA.SuccessionMeta){ast(){return this._ast}static create(e,t,n){let i=aA.SuccessionMeta.create.call(this,e,t,n);return n&&aA.ItemFlowMeta.applyItemFlowOptions(i,n),i}};Yo.SuccessionItemFlowMeta=eQ=HHe([(0,zHe.metamodelOf)(WHe.SuccessionItemFlow,Yo.ImplicitSuccessionItemFlows)],eQ)});var oA=p(Xo=>{"use strict";var rQ=Xo&&Xo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},sF;Object.defineProperty(Xo,"__esModule",{value:!0});Xo.ExpressionMeta=Xo.ImplicitExpressions=void 0;var YHe=nt(),oF=D(),XHe=ta(),JHe=O(),QHe=IC(),tQ=re(),nQ=an();Xo.ImplicitExpressions={base:"Performances::evaluations",enclosedPerformance:"Performances::Performance::enclosedPerformances"};var lF=Xo.ExpressionMeta=sF=class extends(0,YHe.Mixin)(tQ.StepMeta,QHe.FunctionMixin){get result(){return this._result}set result(e){this._result=this.swapEdgeOwnership(this._result,e)}get featuredBy(){var e;let t=super.typeFeaturings;if(t.length>0)return t.map(i=>i.element()).filter(nQ.NonNullable);let n=this.owner();return n!=null&&n.is(oF.Multiplicity)||!((e=this.parent())===null||e===void 0)&&e.is(oF.FeatureValue)?n.featuredBy:this._owningType?[this._owningType]:[]}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isStructureOwnedComposite()&&e.push("ownedPerformance"),this.isBehaviorOwnedComposite()&&e.push("subperformance"),this.isBehaviorOwned()&&e.push("enclosedPerformance"),e}defaultSupertype(){return"base"}ast(){return this._ast}returnType(){return this.getReturnType(this)}getFunction(){return this.qualifiedName}isModelLevelEvaluable(){let e=this.getFunction();return e?(0,XHe.isModelLevelEvaluable)(e):!1}collectParts(){let e=tQ.StepMeta.prototype.collectParts.call(this);return this._result&&e.push(["result",[this._result]]),e}static applyExpressionOptions(e,t){e.result=t.result}static create(e,t,n){let i=super.create(e,t,n);return n&&sF.applyExpressionOptions(i,n),i}};rQ([nQ.enumerable],lF.prototype,"result",null);Xo.ExpressionMeta=lF=sF=rQ([(0,JHe.metamodelOf)(oF.Expression,Xo.ImplicitExpressions)],lF)});var lA=p(Jo=>{"use strict";var ZHe=Jo&&Jo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Jo,"__esModule",{value:!0});Jo.PredicateMeta=Jo.ImplicitPredicates=void 0;var e8e=D(),t8e=O(),r8e=re();Jo.ImplicitPredicates={base:"Performances::BooleanEvaluation"};var iQ=Jo.PredicateMeta=class extends r8e.FunctionMeta{ast(){return this._ast}};Jo.PredicateMeta=iQ=ZHe([(0,t8e.metamodelOf)(e8e.Predicate,Jo.ImplicitPredicates)],iQ)});var uA=p(Qo=>{"use strict";var n8e=Qo&&Qo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Qo,"__esModule",{value:!0});Qo.BooleanExpressionMeta=Qo.ImplicitBooleanExpressions=void 0;var i8e=D(),a8e=O(),s8e=re();Qo.ImplicitBooleanExpressions={base:"Performances::booleanEvaluations"};var aQ=Qo.BooleanExpressionMeta=class extends s8e.ExpressionMeta{ast(){return this._ast}};Qo.BooleanExpressionMeta=aQ=n8e([(0,a8e.metamodelOf)(i8e.BooleanExpression,Qo.ImplicitBooleanExpressions)],aQ)});var cA=p(Zo=>{"use strict";var o8e=Zo&&Zo.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},uF;Object.defineProperty(Zo,"__esModule",{value:!0});Zo.InvariantMeta=Zo.ImplicitInvariants=void 0;var l8e=D(),u8e=O(),c8e=re();Zo.ImplicitInvariants={base:"Performances::trueEvaluations",negated:"Performances::falseEvaluations"};var sQ=Zo.InvariantMeta=uF=class extends c8e.BooleanExpressionMeta{constructor(){super(...arguments),this.isNegated=!1}ast(){return this._ast}defaultSupertype(){return this.isNegated?"negated":"base"}static applyInvariantOptions(e,t){e.isNegated=Boolean(t.isNegated)}static create(e,t,n){let i=super.create(e,t,n);return n&&uF.applyInvariantOptions(i,n),i}};Zo.InvariantMeta=sQ=uF=o8e([(0,u8e.metamodelOf)(l8e.Invariant,Zo.ImplicitInvariants)],sQ)});var K_=p(td=>{"use strict";var f8e=td&&td.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(td,"__esModule",{value:!0});td.InheritanceMeta=void 0;var d8e=D(),p8e=O(),m8e=re(),oQ=td.InheritanceMeta=class extends m8e.RelationshipMeta{addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};td.InheritanceMeta=oQ=f8e([(0,p8e.metamodelOf)(d8e.Inheritance,"abstract")],oQ)});var cF=p(rd=>{"use strict";var y8e=rd&&rd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(rd,"__esModule",{value:!0});rd.SpecializationMeta=void 0;var h8e=D(),g8e=O(),v8e=K_(),lQ=rd.SpecializationMeta=class extends v8e.InheritanceMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};rd.SpecializationMeta=lQ=y8e([(0,g8e.metamodelOf)(h8e.Specialization)],lQ)});var fF=p(nd=>{"use strict";var _8e=nd&&nd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(nd,"__esModule",{value:!0});nd.SubsettingMeta=void 0;var $8e=D(),T8e=O(),R8e=re(),uQ=nd.SubsettingMeta=class extends R8e.SpecializationMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};nd.SubsettingMeta=uQ=_8e([(0,T8e.metamodelOf)($8e.Subsetting)],uQ)});var dF=p(id=>{"use strict";var b8e=id&&id.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(id,"__esModule",{value:!0});id.RedefinitionMeta=void 0;var C8e=D(),A8e=O(),w8e=re(),cQ=id.RedefinitionMeta=class extends w8e.SubsettingMeta{ast(){return this._ast}};id.RedefinitionMeta=cQ=b8e([(0,A8e.metamodelOf)(C8e.Redefinition)],cQ)});var pF=p(ad=>{"use strict";var D8e=ad&&ad.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ad,"__esModule",{value:!0});ad.ReferenceSubsettingMeta=void 0;var S8e=D(),M8e=O(),P8e=re(),fQ=ad.ReferenceSubsettingMeta=class extends P8e.SubsettingMeta{ast(){return this._ast}};ad.ReferenceSubsettingMeta=fQ=D8e([(0,M8e.metamodelOf)(S8e.ReferenceSubsetting)],fQ)});var mF=p(sd=>{"use strict";var E8e=sd&&sd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(sd,"__esModule",{value:!0});sd.SubclassificationMeta=void 0;var O8e=D(),k8e=O(),I8e=re(),dQ=sd.SubclassificationMeta=class extends I8e.SpecializationMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};sd.SubclassificationMeta=dQ=E8e([(0,k8e.metamodelOf)(O8e.Subclassification)],dQ)});var yF=p(od=>{"use strict";var F8e=od&&od.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(od,"__esModule",{value:!0});od.FeatureTypingMeta=void 0;var N8e=D(),q8e=O(),x8e=re(),pQ=od.FeatureTypingMeta=class extends x8e.SpecializationMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};od.FeatureTypingMeta=pQ=F8e([(0,q8e.metamodelOf)(N8e.FeatureTyping)],pQ)});var hF=p(ld=>{"use strict";var L8e=ld&&ld.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ld,"__esModule",{value:!0});ld.ConjugationMeta=void 0;var j8e=D(),U8e=O(),B8e=K_(),mQ=ld.ConjugationMeta=class extends B8e.InheritanceMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};ld.ConjugationMeta=mQ=L8e([(0,U8e.metamodelOf)(j8e.Conjugation)],mQ)});var dA=p(ud=>{"use strict";var yQ=ud&&ud.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ud,"__esModule",{value:!0});ud.InvocationExpressionMeta=void 0;var fA=D(),hQ=an(),G8e=O(),K8e=re(),gF=ud.InvocationExpressionMeta=class extends K8e.ExpressionMeta{constructor(){super(...arguments),this._args=[],this._operands=[]}get args(){return this._args}get operands(){return this._operands}argumentMembers(){return this._children.get(fA.ParameterMembership).map(e=>e.element())}arguments(){return[...this.operands,...this.argumentMembers().map(e=>{var t;return(t=e.value)===null||t===void 0?void 0:t.element()}).filter(hQ.NonNullable)]}ast(){return this._ast}invokes(){return this.types().head()}getFunction(){var e;return(e=this.invokes())===null||e===void 0?void 0:e.qualifiedName}returnType(){let e=this.invokes();return e!=null&&e.isAny(fA.Expression,fA.SysMLFunction)?e.returnType():e}collectDeclaration(e){super.collectDeclaration(e),e.push(["operands",this.operands])}};yQ([hQ.enumerable],gF.prototype,"operands",null);ud.InvocationExpressionMeta=gF=yQ([(0,G8e.metamodelOf)(fA.InvocationExpression)],gF)});var _F=p(Xn=>{"use strict";var H8e=Xn&&Xn.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Xn,"__esModule",{value:!0});Xn.OperatorExpressionMeta=Xn.IMPLICIT_OPERATORS=Xn.OPERATORS=void 0;var V8e=D(),vF=ta(),W8e=O(),z8e=re();Xn.OPERATORS={IF:"'if'",NULL_COALESCING:"'??'",IMPLIES:"'implies'",OR:"'or'",BITWISE_OR:"'|'",XOR:"'xor'",AND:"'and'",BITWISE_AND:"'&'",EQUALS:"'=='",SAME:"'==='",NOT_EQUALS:"'!='",NOT_SAME:"'!=='",IS_TYPE:"'istype'",HAS_TYPE:"'hastype'",AT:"'@'",AT_AT:"'@@'",AS:"'as'",META:"'meta'",LESS:"'<'",LESS_EQUAL:"'<='",GREATER:"'>'",GREATER_EQUAL:"'>='",RANGE:"'..'",PLUS:"'+'",MINUS:"'-'",MULTIPLY:"'*'",DIVIDE:"'/'",MODULO:"'%'",EXPONENT_1:"'**'",EXPONENT_2:"'^'",BITWISE_NOT:"'~'",NOT:"'not'",ALL:"'all'",INDEX:"'#'",QUANTITY:"'['",COMMA:"','",NONE:""};Xn.IMPLICIT_OPERATORS={DOT:"'.'",COLLECT:"collect",SELECT:"'.?'",METADATA:"'.metadata'"};var gQ=Xn.OperatorExpressionMeta=class extends z8e.InvocationExpressionMeta{constructor(){super(...arguments),this._operator=Xn.OPERATORS.NONE}get operator(){return this._operator}set operator(e){this._operator=e}ast(){return this._ast}getFunction(){return vF.OPERATOR_FUNCTIONS[this.operator]}returnType(){var e;if(this.operator===Xn.OPERATORS.AS||this.operator===Xn.OPERATORS.META)return(0,vF.typeArgument)(this);if(this.operator===Xn.OPERATORS.INDEX)return(0,vF.typeOf)(this.args[0]);if(this.operator===Xn.OPERATORS.QUANTITY)return"Quantities::ScalarQuantityValue";let t=this.resultParameter();if(t)return(e=t.element())===null||e===void 0?void 0:e.returnType();let n=this.returnParameter();return n?n.element():super.returnType()}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.operator&&(i.operator=n.operator),i}};Xn.OperatorExpressionMeta=gQ=H8e([(0,W8e.metamodelOf)(V8e.OperatorExpression)],gQ)});var $F=p(cd=>{"use strict";var Y8e=cd&&cd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(cd,"__esModule",{value:!0});cd.CollectExpressionMeta=void 0;var X8e=D(),J8e=O(),vQ=re(),_Q=cd.CollectExpressionMeta=class extends vQ.OperatorExpressionMeta{get operator(){return vQ.IMPLICIT_OPERATORS.COLLECT}ast(){return this._ast}getFunction(){return"ControlFunctions::collect"}};cd.CollectExpressionMeta=_Q=Y8e([(0,J8e.metamodelOf)(X8e.CollectExpression)],_Q)});var TF=p(fd=>{"use strict";var Q8e=fd&&fd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(fd,"__esModule",{value:!0});fd.SelectExpressionMeta=void 0;var Z8e=D(),e6e=O(),t6e=re(),$Q=fd.SelectExpressionMeta=class extends t6e.OperatorExpressionMeta{ast(){return this._ast}getFunction(){return"ControlFunctions::select"}};fd.SelectExpressionMeta=$Q=Q8e([(0,e6e.metamodelOf)(Z8e.SelectExpression)],$Q)});var bF=p(el=>{"use strict";var r6e=el&&el.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(el,"__esModule",{value:!0});el.FeatureChainExpressionMeta=el.ImplicitFeatureChainExpressions=void 0;var RF=D(),n6e=O(),i6e=re();el.ImplicitFeatureChainExpressions={target:"ControlFunctions::'.'::source::target"};var TQ=el.FeatureChainExpressionMeta=class extends i6e.OperatorExpressionMeta{targetFeature(){var e;let t=(e=this._children.get(RF.Membership).at(Math.max(0,1-this.operands.length)))===null||e===void 0?void 0:e.element();return t!=null&&t.is(RF.Feature)?t:void 0}ast(){return this._ast}getFunction(){return"ControlFunctions::'.'"}returnType(){var e;return(e=this.targetFeature())===null||e===void 0?void 0:e.basicFeature()}};el.FeatureChainExpressionMeta=TQ=r6e([(0,n6e.metamodelOf)(RF.FeatureChainExpression,el.ImplicitFeatureChainExpressions)],TQ)});var CF=p(dd=>{"use strict";var a6e=dd&&dd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(dd,"__esModule",{value:!0});dd.FeatureReferenceExpressionMeta=void 0;var pA=D(),s6e=O(),o6e=re(),RQ=dd.FeatureReferenceExpressionMeta=class extends o6e.ExpressionMeta{get expression(){return this._expression}set expression(e){this._expression=this.swapEdgeOwnership(this._expression,e)}ast(){return this._ast}returnType(){var e,t;let n=(e=this.expression)===null||e===void 0?void 0:e.element();return!n||!(!((t=this.expression)===null||t===void 0)&&t.is(pA.FeatureMembership))?n:n.isAny(pA.Expression,pA.SysMLFunction)?n.returnType():n}isModelLevelEvaluable(){return!0}collectDeclaration(e){super.collectDeclaration(e),this.expression&&e.push(["expression",[this.expression]])}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.expression=n.expression),i}};dd.FeatureReferenceExpressionMeta=RQ=a6e([(0,s6e.metamodelOf)(pA.FeatureReferenceExpression)],RQ)});var AF=p(tl=>{"use strict";var l6e=tl&&tl.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(tl,"__esModule",{value:!0});tl.LiteralExpressionMeta=tl.ImplicitLiteralExpressions=void 0;var u6e=D(),c6e=O(),f6e=re();tl.ImplicitLiteralExpressions={base:"Performances::literalIntegerEvaluations"};var bQ=tl.LiteralExpressionMeta=class extends f6e.ExpressionMeta{ast(){return this._ast}isModelLevelEvaluable(){return!0}static create(e,t,n){return super.create(e,t,Object.assign(Object.assign({},n),{value:void 0}))}};tl.LiteralExpressionMeta=bQ=l6e([(0,c6e.metamodelOf)(u6e.LiteralExpression,tl.ImplicitLiteralExpressions)],bQ)});var wF=p(rl=>{"use strict";var d6e=rl&&rl.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(rl,"__esModule",{value:!0});rl.LiteralBooleanMeta=rl.ImplicitLiteralBooleans=void 0;var p6e=D(),m6e=O(),y6e=re();rl.ImplicitLiteralBooleans={base:"Performances::literalBooleanEvaluations"};var CQ=rl.LiteralBooleanMeta=class extends y6e.LiteralExpressionMeta{constructor(){super(...arguments),this.literal=!1}ast(){return this._ast}returnType(){return"ScalarValues::Boolean"}static create(e,t,n){let i=super.create(e,t,n);return i.literal=Boolean(n==null?void 0:n.value),i}};rl.LiteralBooleanMeta=CQ=d6e([(0,m6e.metamodelOf)(p6e.LiteralBoolean,rl.ImplicitLiteralBooleans)],CQ)});var DF=p(nl=>{"use strict";var h6e=nl&&nl.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(nl,"__esModule",{value:!0});nl.LiteralInfinityMeta=nl.ImplicitLiteralInfinities=void 0;var g6e=D(),v6e=O(),_6e=re();nl.ImplicitLiteralInfinities={base:"Performances::literalIntegerEvaluations"};var AQ=nl.LiteralInfinityMeta=class extends _6e.LiteralExpressionMeta{ast(){return this._ast}returnType(){return"ScalarValues::Positive"}};nl.LiteralInfinityMeta=AQ=h6e([(0,v6e.metamodelOf)(g6e.LiteralInfinity,nl.ImplicitLiteralInfinities)],AQ)});var MF=p(il=>{"use strict";var wQ=il&&il.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(il,"__esModule",{value:!0});il.LiteralNumberMeta=il.ImplicitLiteralNumbers=void 0;var $6e=D(),T6e=Ae(),R6e=O(),b6e=re();il.ImplicitLiteralNumbers={integer:"Performances::literalIntegerEvaluations",real:"Performances::literalRationalEvaluations"};var SF=il.LiteralNumberMeta=class extends b6e.LiteralExpressionMeta{constructor(){super(...arguments),this._isInteger=!0,this._literal=0}get literal(){return this._literal}set literal(e){this._literal=e,this._isInteger=Number.isInteger(e)}get isInteger(){return this._isInteger}defaultSupertype(){return this.isInteger?"integer":"real"}ast(){return this._ast}returnType(){return this.isInteger?"ScalarValues::Rational":"ScalarValues::Integer"}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.value&&(i.literal=n.value),i}};wQ([T6e.enumerable],SF.prototype,"literal",null);il.LiteralNumberMeta=SF=wQ([(0,R6e.metamodelOf)($6e.LiteralNumber,il.ImplicitLiteralNumbers)],SF)});var PF=p(al=>{"use strict";var C6e=al&&al.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(al,"__esModule",{value:!0});al.LiteralStringMeta=al.ImplicitLiteralStrings=void 0;var A6e=D(),w6e=O(),D6e=re();al.ImplicitLiteralStrings={base:"Performances::literalStringEvaluations"};var DQ=al.LiteralStringMeta=class extends D6e.LiteralExpressionMeta{constructor(){super(...arguments),this.literal=""}ast(){return this._ast}returnType(){return"ScalarValues::String"}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.value&&(i.literal=n.value),i}};al.LiteralStringMeta=DQ=C6e([(0,w6e.metamodelOf)(A6e.LiteralString,al.ImplicitLiteralStrings)],DQ)});var OF=p(pd=>{"use strict";var SQ=pd&&pd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(pd,"__esModule",{value:!0});pd.MetadataAccessExpressionMeta=void 0;var S6e=D(),M6e=O(),P6e=re(),E6e=Ae(),EF=pd.MetadataAccessExpressionMeta=class extends P6e.ExpressionMeta{get reference(){return this._reference}set reference(e){this._reference=e}ast(){return this._ast}returnType(){return"Metaobjects::Metaobject"}static create(e,t,n){let i=super.create(e,t,n);return i._reference=n==null?void 0:n.reference,i}};SQ([E6e.enumerable],EF.prototype,"reference",null);pd.MetadataAccessExpressionMeta=EF=SQ([(0,M6e.metamodelOf)(S6e.MetadataAccessExpression)],EF)});var kF=p(sl=>{"use strict";var O6e=sl&&sl.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(sl,"__esModule",{value:!0});sl.NullExpressionMeta=sl.ImplicitNullExpressions=void 0;var k6e=D(),I6e=O(),F6e=re();sl.ImplicitNullExpressions={base:"Performances::nullEvaluations"};var MQ=sl.NullExpressionMeta=class extends F6e.ExpressionMeta{ast(){return this._ast}returnType(){}isModelLevelEvaluable(){return!0}static create(e,t,n){return super.create(e,t,n)}};sl.NullExpressionMeta=MQ=O6e([(0,I6e.metamodelOf)(k6e.NullExpression,sl.ImplicitNullExpressions)],MQ)});var IF=p(md=>{"use strict";var mA=md&&md.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(md,"__esModule",{value:!0});md.DependencyMeta=void 0;var N6e=be(),q6e=D(),yA=Ae(),x6e=O(),PQ=re(),H_=md.DependencyMeta=class extends PQ.RelationshipMeta{constructor(){super(...arguments),this._prefixes=[],this._client=[],this._supplier=[]}get metadata(){return(0,N6e.stream)(this._prefixes).map(e=>e.element()).filter(yA.NonNullable).concat(super.metadata)}get prefixes(){return this._prefixes}addPrefix(...e){return this.addOwnedElements(this._prefixes,e.map(([t,n])=>(t.setSource(n),t.takeOwnership(n),t)))}removePrefix(...e){return this.removeOwnedElements(this._prefixes,e,t=>{let n=t.source();n&&t.unsetOwnership(n)})}removePrefixIf(e){return this.removeOwnedElementsIf(this._prefixes,e)}addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}get client(){return this._client}source(){return this._client.at(0)}get supplier(){return this._supplier}element(){return this._supplier.at(0)}ast(){return this._ast}collectParts(){return[["prefixes",this.prefixes],["children",this.children]]}static create(e,t,n){let i=PQ.ElementMeta.create.call(this,e,t,n);return n&&(i._client.push(...n.client),i._supplier.push(...n.supplier),n.prefixes&&i.addPrefix(...n.prefixes)),i}};mA([yA.enumerable],H_.prototype,"prefixes",null);mA([yA.enumerable],H_.prototype,"client",null);mA([yA.enumerable],H_.prototype,"supplier",null);md.DependencyMeta=H_=mA([(0,x6e.metamodelOf)(q6e.Dependency)],H_)});var hA=p(yd=>{"use strict";var L6e=yd&&yd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(yd,"__esModule",{value:!0});yd.FeaturingMeta=void 0;var j6e=D(),U6e=O(),B6e=re(),EQ=yd.FeaturingMeta=class extends B6e.RelationshipMeta{addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}ast(){return this._ast}};yd.FeaturingMeta=EQ=L6e([(0,U6e.metamodelOf)(j6e.Featuring,"abstract")],EQ)});var FF=p(hd=>{"use strict";var G6e=hd&&hd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(hd,"__esModule",{value:!0});hd.TypeFeaturingMeta=void 0;var K6e=D(),H6e=O(),V6e=re(),OQ=hd.TypeFeaturingMeta=class extends V6e.FeaturingMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};hd.TypeFeaturingMeta=OQ=G6e([(0,H6e.metamodelOf)(K6e.TypeFeaturing)],OQ)});var NF=p(gd=>{"use strict";var W6e=gd&&gd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(gd,"__esModule",{value:!0});gd.MembershipReferenceMeta=void 0;var z6e=D(),Y6e=Mo(),X6e=O(),J6e=re(),kQ=gd.MembershipReferenceMeta=class extends J6e.ElementReferenceMeta{constructor(){super(...arguments),this.to=new Y6e.Target}ast(){return this._ast}};gd.MembershipReferenceMeta=kQ=W6e([(0,X6e.metamodelOf)(z6e.MembershipReference)],kQ)});var V_=p(vd=>{"use strict";var Q6e=vd&&vd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(vd,"__esModule",{value:!0});vd.OwningMembershipMeta=void 0;var Z6e=D(),e4e=O(),t4e=re(),IQ=vd.OwningMembershipMeta=class extends t4e.MembershipMeta{onTargetSet(e,t){e&&this.unsetOwnership(e),t&&this.takeOwnership(t)}onOwnerSet(e,t){this._element&&(t?this._element.setOwner(t[1]):this.unsetOwnership(this._element))}element(){return this._element}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};vd.OwningMembershipMeta=IQ=Q6e([(0,e4e.metamodelOf)(Z6e.OwningMembership)],IQ)});var qF=p(_d=>{"use strict";var r4e=_d&&_d.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(_d,"__esModule",{value:!0});_d.FeatureValueMeta=void 0;var n4e=D(),i4e=O(),a4e=re(),FQ=_d.FeatureValueMeta=class extends a4e.OwningMembershipMeta{constructor(){super(...arguments),this.isDefault=!1,this.isInitial=!1}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};_d.FeatureValueMeta=FQ=r4e([(0,i4e.metamodelOf)(n4e.FeatureValue)],FQ)});var jF=p($d=>{"use strict";var NQ=$d&&$d.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty($d,"__esModule",{value:!0});$d.ElementFilterMembershipMeta=void 0;var xF=D(),s4e=Ae(),o4e=O(),l4e=re(),LF=$d.ElementFilterMembershipMeta=class extends l4e.OwningMembershipMeta{get visibility(){var e;let t=this.parent();return(t==null?void 0:t.nodeType())===xF.Package&&(!((e=t.parent())===null||e===void 0)&&e.is(xF.NamespaceImport))?2:super.visibility}set visibility(e){super.visibility=e}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};NQ([s4e.enumerable],LF.prototype,"visibility",null);$d.ElementFilterMembershipMeta=LF=NQ([(0,o4e.metamodelOf)(xF.ElementFilterMembership)],LF)});var lc=p(Td=>{"use strict";var u4e=Td&&Td.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Td,"__esModule",{value:!0});Td.FeatureMembershipMeta=void 0;var c4e=D(),qQ=O(),f4e=hA(),gA=V_(),xQ=Td.FeatureMembershipMeta=class{constructor(e){}onTargetSet(e,t){gA.OwningMembershipMeta.prototype.onTargetSet.call(this,e,t)}onOwnerSet(e,t){gA.OwningMembershipMeta.prototype.onOwnerSet.call(this,e,t)}ast(){return this._ast}static create(e,t,n){return gA.OwningMembershipMeta.create.call(this,e,t,n)}};Td.FeatureMembershipMeta=xQ=u4e([(0,qQ.metamodelOf)(c4e.FeatureMembership),(0,qQ.mix)(f4e.FeaturingMeta,gA.OwningMembershipMeta)],xQ)});var eg=p(Rd=>{"use strict";var d4e=Rd&&Rd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Rd,"__esModule",{value:!0});Rd.ParameterMembershipMeta=void 0;var p4e=D(),m4e=O(),y4e=re(),LQ=Rd.ParameterMembershipMeta=class extends y4e.FeatureMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Rd.ParameterMembershipMeta=LQ=d4e([(0,m4e.metamodelOf)(p4e.ParameterMembership)],LQ)});var UF=p(bd=>{"use strict";var h4e=bd&&bd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(bd,"__esModule",{value:!0});bd.ResultExpressionMembershipMeta=void 0;var g4e=D(),v4e=O(),_4e=re(),jQ=bd.ResultExpressionMembershipMeta=class extends _4e.FeatureMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};bd.ResultExpressionMembershipMeta=jQ=h4e([(0,v4e.metamodelOf)(g4e.ResultExpressionMembership)],jQ)});var BF=p(Cd=>{"use strict";var $4e=Cd&&Cd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Cd,"__esModule",{value:!0});Cd.EndFeatureMembershipMeta=void 0;var T4e=D(),R4e=O(),b4e=re(),UQ=Cd.EndFeatureMembershipMeta=class extends b4e.FeatureMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Cd.EndFeatureMembershipMeta=UQ=$4e([(0,R4e.metamodelOf)(T4e.EndFeatureMembership)],UQ)});var GF=p(Ad=>{"use strict";var C4e=Ad&&Ad.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ad,"__esModule",{value:!0});Ad.ReturnParameterMembershipMeta=void 0;var A4e=D(),w4e=O(),D4e=re(),BQ=Ad.ReturnParameterMembershipMeta=class extends D4e.ParameterMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Ad.ReturnParameterMembershipMeta=BQ=C4e([(0,w4e.metamodelOf)(A4e.ReturnParameterMembership)],BQ)});var vA=p(wd=>{"use strict";var GQ=wd&&wd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(wd,"__esModule",{value:!0});wd.ImportMeta=void 0;var S4e=D(),M4e=Ae(),P4e=O(),E4e=re(),KF=wd.ImportMeta=class extends E4e.RelationshipMeta{constructor(){super(...arguments),this.isRecursive=!1,this._importsAll=!1}get importsAll(){return this._importsAll}set importsAll(e){this._importsAll=e}addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}ast(){return this._ast}importsNameOnly(){return!1}static create(e,t,n){let i=super.create(e,t,n);return i.isRecursive=Boolean(n==null?void 0:n.isRecursive),i._importsAll=Boolean(n==null?void 0:n.importsAll),i}};GQ([M4e.enumerable],KF.prototype,"importsAll",null);wd.ImportMeta=KF=GQ([(0,P4e.metamodelOf)(S4e.Import,"abstract")],KF)});var _A=p(Dd=>{"use strict";var O4e=Dd&&Dd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Dd,"__esModule",{value:!0});Dd.MembershipImportMeta=void 0;var k4e=D(),I4e=O(),F4e=re(),KQ=Dd.MembershipImportMeta=class extends F4e.ImportMeta{ast(){return this._ast}importsNameOnly(){return!this.isRecursive}static create(e,t,n){return super.create(e,t,n)}};Dd.MembershipImportMeta=KQ=O4e([(0,I4e.metamodelOf)(k4e.MembershipImport)],KQ)});var $A=p(Sd=>{"use strict";var N4e=Sd&&Sd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Sd,"__esModule",{value:!0});Sd.NamespaceImportMeta=void 0;var q4e=D(),x4e=O(),L4e=re(),HQ=Sd.NamespaceImportMeta=class extends L4e.ImportMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Sd.NamespaceImportMeta=HQ=N4e([(0,x4e.metamodelOf)(q4e.NamespaceImport)],HQ)});var HF=p(Md=>{"use strict";var j4e=Md&&Md.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Md,"__esModule",{value:!0});Md.DifferencingMeta=void 0;var U4e=D(),B4e=O(),G4e=re(),VQ=Md.DifferencingMeta=class extends G4e.RelationshipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Md.DifferencingMeta=VQ=j4e([(0,B4e.metamodelOf)(U4e.Differencing)],VQ)});var VF=p(Pd=>{"use strict";var K4e=Pd&&Pd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Pd,"__esModule",{value:!0});Pd.DisjoiningMeta=void 0;var H4e=D(),V4e=O(),W4e=re(),WQ=Pd.DisjoiningMeta=class extends W4e.RelationshipMeta{addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Pd.DisjoiningMeta=WQ=K4e([(0,V4e.metamodelOf)(H4e.Disjoining)],WQ)});var WF=p(Ed=>{"use strict";var z4e=Ed&&Ed.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ed,"__esModule",{value:!0});Ed.FeatureChainingMeta=void 0;var Y4e=D(),X4e=O(),J4e=re(),zQ=Ed.FeatureChainingMeta=class extends J4e.RelationshipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Ed.FeatureChainingMeta=zQ=z4e([(0,X4e.metamodelOf)(Y4e.FeatureChaining)],zQ)});var zF=p(Od=>{"use strict";var Q4e=Od&&Od.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Od,"__esModule",{value:!0});Od.FeatureInvertingMeta=void 0;var Z4e=D(),eVe=O(),tVe=re(),YQ=Od.FeatureInvertingMeta=class extends tVe.RelationshipMeta{addChild(...e){return this.addOwnedElements(this._children,e)}removeChild(...e){return this.removeOwnedElements(this._children,e)}removeChildIf(e){return this.removeOwnedElementsIf(this._children,e)}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Od.FeatureInvertingMeta=YQ=Q4e([(0,eVe.metamodelOf)(Z4e.FeatureInverting)],YQ)});var YF=p(kd=>{"use strict";var rVe=kd&&kd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(kd,"__esModule",{value:!0});kd.IntersectingMeta=void 0;var nVe=D(),iVe=O(),aVe=re(),XQ=kd.IntersectingMeta=class extends aVe.RelationshipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};kd.IntersectingMeta=XQ=rVe([(0,iVe.metamodelOf)(nVe.Intersecting)],XQ)});var XF=p(Id=>{"use strict";var sVe=Id&&Id.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Id,"__esModule",{value:!0});Id.UnioningMeta=void 0;var oVe=D(),lVe=O(),uVe=re(),JQ=Id.UnioningMeta=class extends uVe.RelationshipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Id.UnioningMeta=JQ=sVe([(0,lVe.metamodelOf)(oVe.Unioning)],JQ)});var re=p(Y=>{"use strict";var cVe=Y&&Y.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),J=Y&&Y.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&cVe(e,r,t)};Object.defineProperty(Y,"__esModule",{value:!0});J(RC(),Y);J(mI(),Y);J(yI(),Y);J(hI(),Y);J(gI(),Y);J(dI(),Y);J(vI(),Y);J(_I(),Y);J($I(),Y);J(TI(),Y);J(AI(),Y);J(wI(),Y);J(DI(),Y);J(SI(),Y);J(LI(),Y);J(jI(),Y);J(LC(),Y);J(jC(),Y);J(UC(),Y);J(BC(),Y);J(UI(),Y);J(KC(),Y);J(HC(),Y);J(U_(),Y);J(TA(),Y);J(VC(),Y);J(BI(),Y);J(zC(),Y);J(VI(),Y);J(WI(),Y);J(YI(),Y);J(XC(),Y);J(JC(),Y);J(QC(),Y);J(eA(),Y);J(rF(),Y);J(tA(),Y);J(aF(),Y);J(nA(),Y);J(iA(),Y);J(sA(),Y);J(oA(),Y);J(lA(),Y);J(uA(),Y);J(cA(),Y);J(K_(),Y);J(cF(),Y);J(fF(),Y);J(dF(),Y);J(pF(),Y);J(mF(),Y);J(yF(),Y);J(hF(),Y);J(dA(),Y);J(_F(),Y);J($F(),Y);J(TF(),Y);J(bF(),Y);J(CF(),Y);J(AF(),Y);J(wF(),Y);J(DF(),Y);J(MF(),Y);J(PF(),Y);J(OF(),Y);J(kF(),Y);J(IF(),Y);J(hA(),Y);J(FF(),Y);J(NF(),Y);J(V_(),Y);J(qF(),Y);J(jF(),Y);J(lc(),Y);J(eg(),Y);J(UF(),Y);J(BF(),Y);J(GF(),Y);J(vA(),Y);J(_A(),Y);J($A(),Y);J(HF(),Y);J(VF(),Y);J(WF(),Y);J(zF(),Y);J(YF(),Y);J(XF(),Y)});var TA=p(ol=>{"use strict";var fVe=ol&&ol.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ol,"__esModule",{value:!0});ol.AssociationStructMeta=ol.ImplicitAssociationStructures=void 0;var dVe=nt(),pVe=D(),mVe=O(),QQ=re();ol.ImplicitAssociationStructures={base:"Objects::LinkObject",binary:"Objects::BinaryLinkObject"};var ZQ=ol.AssociationStructMeta=class extends(0,dVe.Mixin)(QQ.StructureMeta,QQ.AssociationMeta){constructor(){super(...arguments),this._classifier=12}ast(){return this._ast}};ol.AssociationStructMeta=ZQ=fVe([(0,mVe.metamodelOf)(pVe.AssociationStructure,ol.ImplicitAssociationStructures)],ZQ)});var eZ=p(mn=>{"use strict";var yVe=mn&&mn.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),ra=mn&&mn.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&yVe(e,r,t)};Object.defineProperty(mn,"__esModule",{value:!0});ra($F(),mn);ra(bF(),mn);ra(CF(),mn);ra(dA(),mn);ra(wF(),mn);ra(AF(),mn);ra(DF(),mn);ra(MF(),mn);ra(PF(),mn);ra(OF(),mn);ra(kF(),mn);ra(_F(),mn);ra(TF(),mn)});var tZ=p(na=>{"use strict";var hVe=na&&na.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Fd=na&&na.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&hVe(e,r,t)};Object.defineProperty(na,"__esModule",{value:!0});Fd(jC(),na);Fd(mI(),na);Fd(VI(),na);Fd(NF(),na);Fd(BI(),na);Fd(wI(),na);Fd(jI(),na)});var rZ=p(dt=>{"use strict";var gVe=dt&&dt.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Nt=dt&&dt.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&gVe(e,r,t)};Object.defineProperty(dt,"__esModule",{value:!0});Nt(gI(),dt);Nt(hF(),dt);Nt(IF(),dt);Nt(HF(),dt);Nt(VF(),dt);Nt(jF(),dt);Nt(BF(),dt);Nt(WF(),dt);Nt(zF(),dt);Nt(lc(),dt);Nt(yF(),dt);Nt(qF(),dt);Nt(hA(),dt);Nt(vA(),dt);Nt(K_(),dt);Nt(YF(),dt);Nt(_A(),dt);Nt(hI(),dt);Nt($A(),dt);Nt(V_(),dt);Nt(eg(),dt);Nt(dF(),dt);Nt(pF(),dt);Nt(UF(),dt);Nt(GF(),dt);Nt(cF(),dt);Nt(mF(),dt);Nt(fF(),dt);Nt(FF(),dt);Nt(XF(),dt)});var An=p(Fe=>{"use strict";var vVe=Fe&&Fe.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Ve=Fe&&Fe.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&vVe(e,r,t)};Object.defineProperty(Fe,"__esModule",{value:!0});Ve(dI(),Fe);Ve(TA(),Fe);Ve(UI(),Fe);Ve(KC(),Fe);Ve(QC(),Fe);Ve(uA(),Fe);Ve(UC(),Fe);Ve(LC(),Fe);Ve(_I(),Fe);Ve(JC(),Fe);Ve(BC(),Fe);Ve($I(),Fe);Ve(RC(),Fe);Ve(oA(),Fe);Ve(eZ(),Fe);Ve(zC(),Fe);Ve(eA(),Fe);Ve(HC(),Fe);Ve(cA(),Fe);Ve(rF(),Fe);Ve(aF(),Fe);Ve(tA(),Fe);Ve(SI(),Fe);Ve(VC(),Fe);Ve(nA(),Fe);Ve(YI(),Fe);Ve(WI(),Fe);Ve(AI(),Fe);Ve(DI(),Fe);Ve(lA(),Fe);Ve(tZ(),Fe);Ve(yI(),Fe);Ve(rZ(),Fe);Ve(XC(),Fe);Ve(U_(),Fe);Ve(sA(),Fe);Ve(iA(),Fe);Ve(vI(),Fe);Ve(TI(),Fe);Ve(LI(),Fe)});var tg=p(Nd=>{"use strict";var RA=Nd&&Nd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},JF;Object.defineProperty(Nd,"__esModule",{value:!0});Nd.UsageMeta=void 0;var uu=D(),QF=Ae(),_Ve=zC(),$Ve=O(),W_=Nd.UsageMeta=JF=class extends _Ve.FeatureMeta{constructor(){super(...arguments),this.isVariant=!1,this.isVariation=!1,this.isIndividual=!1}onParentSet(e,t){super.onParentSet(e,t),this.isVariant=!!(t!=null&&t.is(uu.VariantMembership))}get isReference(){return!this.isComposite}set isReference(e){this.isComposite=!e}get isReferenceExplicitly(){return!super.isComposite}get isComposite(){return super.isComposite&&Boolean(this.direction==="none"&&!this.isEnd&&this.owningType)}set isComposite(e){this._isComposite=e}get isCompositeExplicitly(){return super.isComposite}get isAbstract(){return this._isAbstract||this.isVariation}set isAbstract(e){this._isAbstract=e}ast(){return this._ast}isVariantNode(){var e;return!!(!((e=this.parent())===null||e===void 0)&&e.is(uu.VariantMembership))}namingFeature(){let e=this.parent();if(e!=null&&e.is(uu.VariantMembership)){let t=this.referencedFeature();if(t)return t}return super.namingFeature()}isNonEntryExitComposite(){return this.isComposite&&!this.isEntryExitAction()}isActionOwnedComposite(){var e;return Boolean(this.isComposite&&!this.isEntryExitAction()&&((e=this.owner())===null||e===void 0?void 0:e.isAny(uu.ActionDefinition,uu.ActionUsage)))}isPartOwnedComposite(){var e;return Boolean(this.isComposite&&((e=this.owner())===null||e===void 0?void 0:e.isAny(uu.PartDefinition,uu.PartUsage)))}isEntryExitAction(){let e=this.parent();return!!(e!=null&&e.is(uu.StateSubactionMembership))&&e.kind!=="do"}static applyUsageOptions(e,t){e.isVariation=Boolean(t.isVariation),e.isIndividual=Boolean(t.isIndividual),e.isReference=Boolean(t.isReference),e.portionKind=t.portionKind}static create(e,t,n){let i=super.create(e,t,n);return n&&JF.applyUsageOptions(i,n),i}};RA([QF.enumerable],W_.prototype,"isReference",null);RA([QF.enumerable],W_.prototype,"isComposite",null);RA([QF.enumerable],W_.prototype,"isAbstract",null);Nd.UsageMeta=W_=JF=RA([(0,$Ve.metamodelOf)(uu.Usage)],W_)});var uc=p(qd=>{"use strict";var TVe=qd&&qd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(qd,"__esModule",{value:!0});qd.OccurrenceUsageMeta=void 0;var RVe=D(),bVe=O(),CVe=tg(),nZ=qd.OccurrenceUsageMeta=class extends CVe.UsageMeta{defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isSuboccurrence()&&e.push("suboccurrence"),this.portionKind&&e.push(this.portionKind),e}defaultSupertype(){return"base"}ast(){return this._ast}};qd.OccurrenceUsageMeta=nZ=TVe([(0,bVe.metamodelOf)(RVe.OccurrenceUsage,{base:"Occurrences::occurrences",timeslice:"Occurrences::Occurrence::timeSlices",snapshot:"Occurrences::Occurrence::snapshots"})],nZ)});var ia=p(xd=>{"use strict";var AVe=xd&&xd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(xd,"__esModule",{value:!0});xd.ActionUsageMeta=void 0;var wVe=nt(),ZF=D(),DVe=XC(),SVe=O(),MVe=uc(),iZ=xd.ActionUsageMeta=class extends(0,wVe.Mixin)(DVe.StepMeta,MVe.OccurrenceUsageMeta){ast(){return this._ast}defaultSupertype(){return"base"}defaultGeneralTypes(){let e=super.defaultGeneralTypes(),t=this.getSubactionType();return t&&e.push(t),this.isStructureOwnedComposite()?e.push("ownedPerformance"):this.isBehaviorOwned()&&e.push("enclosedPerformance"),e}getSubactionType(){return this.isActionOwnedComposite()?"subaction":this.isPartOwnedComposite()?"ownedAction":void 0}isSuboccurrence(){return super.isSuboccurrence()&&!this.isActionOwnedComposite()}isPerformedAction(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(ZF.PartUsage,ZF.PartDefinition))}};xd.ActionUsageMeta=iZ=AVe([(0,SVe.metamodelOf)(ZF.ActionUsage,{base:"Actions::actions",subaction:"Actions::Action::subactions",ownedAction:"Parts::Part::ownedActions",enclosedPerformance:"Performances::Performance::enclosedPerformances",entry:"States::StateAction::entryAction",do:"States::StateAction::doAction",exit:"States::StateAction::exitAction",trigger:"Actions::TransitionAction::accepter",guard:"Actions::TransitionAction::guard",effect:"Actions::TransitionAction::effect"})],iZ)});var z_=p(cu=>{"use strict";var aZ=cu&&cu.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(cu,"__esModule",{value:!0});cu.createEmptyParameterMember=cu.ReferenceUsageMeta=void 0;var sZ=D(),PVe=an(),EVe=An(),OVe=O(),kVe=tg(),bA=cu.ReferenceUsageMeta=class extends kVe.UsageMeta{get isComposite(){return!1}set isComposite(e){}defaultGeneralTypes(){let e=this.owner();return e!=null&&e.is(sZ.TransitionUsage)&&this===e.payloadParameter()?[]:super.defaultGeneralTypes()}ast(){return this._ast}};aZ([PVe.enumerable],bA.prototype,"isComposite",null);cu.ReferenceUsageMeta=bA=aZ([(0,OVe.metamodelOf)(sZ.ReferenceUsage)],bA);function IVe(r,e){return[EVe.ParameterMembershipMeta.create(r,e,{isImplied:!0}),bA.create(r,e)]}cu.createEmptyParameterMember=IVe});var uZ=p(Ld=>{"use strict";var tN=Ld&&Ld.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},eN;Object.defineProperty(Ld,"__esModule",{value:!0});Ld.AcceptActionUsageMeta=void 0;var lZ=D(),rN=Ae(),FVe=O(),NVe=ia(),oZ=z_(),CA=Ld.AcceptActionUsageMeta=eN=class extends NVe.ActionUsageMeta{get payload(){var e;return(e=this._payload)!==null&&e!==void 0?e:this._defaultPayload}set payload(e){this._payload=this.swapEdgeOwnership(this._payload,e)}get receiver(){var e;return(e=this._receiver)!==null&&e!==void 0?e:this._defaultReceiver}set receiver(e){this._receiver=this.swapEdgeOwnership(this._receiver,e)}ast(){return this._ast}defaultGeneralTypes(){return this.isTriggerAction()?[]:super.defaultGeneralTypes()}isTriggerAction(){let e=this.parent();return Boolean((e==null?void 0:e.is(lZ.TransitionFeatureMembership))&&e.kind==="trigger")}featureMembers(){let e=super.featureMembers();return[this.payload,this.receiver].filter(rN.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.payload&&e.push(["payload",[this.payload]]),this.receiver&&e.push(["receiver",[this.receiver]])}static applyAcceptOptions(e,t,n){e.payload=n==null?void 0:n.payload,e.receiver=n==null?void 0:n.receiver,e._defaultPayload=e.swapEdgeOwnership(e._defaultPayload,(0,oZ.createEmptyParameterMember)(t,e.document)),e._defaultReceiver=e.swapEdgeOwnership(e._defaultReceiver,(0,oZ.createEmptyParameterMember)(t,e.document))}static create(e,t,n){let i=super.create(e,t,n);return eN.applyAcceptOptions(i,e,n),i}};tN([rN.enumerable],CA.prototype,"payload",null);tN([rN.enumerable],CA.prototype,"receiver",null);Ld.AcceptActionUsageMeta=CA=eN=tN([(0,FVe.metamodelOf)(lZ.AcceptActionUsage,{base:"Actions::acceptActions",subactions:"Actions::Action::acceptSubactions"})],CA)});var wA=p(jd=>{"use strict";var iN=jd&&jd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},nN;Object.defineProperty(jd,"__esModule",{value:!0});jd.DefinitionMeta=void 0;var qVe=D(),cZ=Ae(),xVe=LC(),LVe=O(),AA=jd.DefinitionMeta=nN=class extends xVe.ClassifierMeta{constructor(){super(...arguments),this._isVariation=!1,this.isIndividual=!1}get isAbstract(){return this._isAbstract||this.isVariation}set isAbstract(e){this._isAbstract=e}get isVariation(){return this._isVariation}set isVariation(e){this._isVariation=e}ast(){return this._ast}getSubjectParameter(){}static applyDefinitionOptions(e,t){e._isVariation=Boolean(t.isVariation),e.isIndividual=Boolean(t.isIndividual)}static create(e,t,n){let i=super.create(e,t,n);return n&&nN.applyDefinitionOptions(i,n),i}};iN([cZ.enumerable],AA.prototype,"isAbstract",null);iN([cZ.enumerable],AA.prototype,"isVariation",null);jd.DefinitionMeta=AA=nN=iN([(0,LVe.metamodelOf)(qVe.Definition)],AA)});var aN=p(Ud=>{"use strict";var jVe=Ud&&Ud.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ud,"__esModule",{value:!0});Ud.LifeClassMeta=void 0;var UVe=D(),BVe=An(),GVe=O(),fZ=Ud.LifeClassMeta=class extends BVe.ClassMeta{ast(){return this._ast}get isSufficient(){return!0}set isSufficient(e){}};Ud.LifeClassMeta=fZ=jVe([(0,GVe.metamodelOf)(UVe.LifeClass)],fZ)});var rg=p(Bd=>{"use strict";var KVe=Bd&&Bd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Bd,"__esModule",{value:!0});Bd.OccurrenceDefinitionMeta=void 0;var HVe=nt(),VVe=D(),WVe=UC(),zVe=O(),dZ=wA(),sN=An(),YVe=aN(),pZ=Bd.OccurrenceDefinitionMeta=class extends(0,HVe.Mixin)(WVe.ClassMeta,dZ.DefinitionMeta){get lifeClass(){return this.isIndividual?this._lifeClass:void 0}ast(){return this._ast}createLifeClass(e){this._lifeClass=this.swapEdgeOwnership(this._lifeClass,[sN.OwningMembershipMeta.create(e,this.document,{isImplied:!0}),YVe.LifeClassMeta.create(e,this.document,{heritage:sN.EdgeContainer.make([sN.SubclassificationMeta.create(e,this.document),this])})])}static create(e,t,n){let i=dZ.DefinitionMeta.create.call(this,e,t,n);return i.createLifeClass(e),i}};Bd.OccurrenceDefinitionMeta=pZ=KVe([(0,zVe.metamodelOf)(VVe.OccurrenceDefinition,{base:"Occurrences::Occurrence"})],pZ)});var Y_=p(Gd=>{"use strict";var XVe=Gd&&Gd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Gd,"__esModule",{value:!0});Gd.ActionDefinitionMeta=void 0;var JVe=nt(),QVe=D(),ZVe=KC(),e7e=O(),t7e=rg(),mZ=Gd.ActionDefinitionMeta=class extends(0,JVe.Mixin)(ZVe.BehaviorMeta,t7e.OccurrenceDefinitionMeta){ast(){return this._ast}};Gd.ActionDefinitionMeta=mZ=XVe([(0,e7e.metamodelOf)(QVe.ActionDefinition,{base:"Actions::Action"})],mZ)});var DA=p(Kd=>{"use strict";var r7e=Kd&&Kd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Kd,"__esModule",{value:!0});Kd.ItemDefinitionMeta=void 0;var n7e=nt(),i7e=D(),a7e=U_(),s7e=O(),o7e=rg(),yZ=Kd.ItemDefinitionMeta=class extends(0,n7e.Mixin)(a7e.StructureMeta,o7e.OccurrenceDefinitionMeta){ast(){return this._ast}};Kd.ItemDefinitionMeta=yZ=r7e([(0,s7e.metamodelOf)(i7e.ItemDefinition,{base:"Items::Item"})],yZ)});var X_=p(Hd=>{"use strict";var l7e=Hd&&Hd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Hd,"__esModule",{value:!0});Hd.PartDefinitionMeta=void 0;var u7e=D(),c7e=O(),f7e=DA(),hZ=Hd.PartDefinitionMeta=class extends f7e.ItemDefinitionMeta{ast(){return this._ast}};Hd.PartDefinitionMeta=hZ=l7e([(0,c7e.metamodelOf)(u7e.PartDefinition,{base:"Parts::Part"})],hZ)});var J_=p(Vd=>{"use strict";var d7e=Vd&&Vd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Vd,"__esModule",{value:!0});Vd.ConnectionDefinitionMeta=void 0;var p7e=nt(),m7e=D(),gZ=TA(),y7e=O(),oN=X_(),vZ=Vd.ConnectionDefinitionMeta=class extends(0,p7e.Mixin)(gZ.AssociationStructMeta,oN.PartDefinitionMeta){defaultSupertype(){return gZ.AssociationStructMeta.prototype.defaultSupertype.call(this)}ast(){return this._ast}onHeritageAdded(e,t){this.resetEnds(),oN.PartDefinitionMeta.prototype.onHeritageAdded.call(this,e,t)}onHeritageRemoved(e){this.resetEnds(),oN.PartDefinitionMeta.prototype.onHeritageRemoved.call(this,e)}};Vd.ConnectionDefinitionMeta=vZ=d7e([(0,y7e.metamodelOf)(m7e.ConnectionDefinition,{base:"Connections::Connection",binary:"Connections::BinaryConnection"})],vZ)});var $Z=p(Wd=>{"use strict";var h7e=Wd&&Wd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Wd,"__esModule",{value:!0});Wd.AllocationDefinitionMeta=void 0;var g7e=D(),v7e=O(),_7e=J_(),_Z=Wd.AllocationDefinitionMeta=class extends _7e.ConnectionDefinitionMeta{ast(){return this._ast}};Wd.AllocationDefinitionMeta=_Z=h7e([(0,v7e.metamodelOf)(g7e.AllocationDefinition,{base:"Allocations::Allocation",binary:"Allocations::Allocation"})],_Z)});var Q_=p(zd=>{"use strict";var TZ=zd&&zd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(zd,"__esModule",{value:!0});zd.ConnectorAsUsageMeta=void 0;var $7e=nt(),T7e=D(),SA=JC(),R7e=O(),MA=tg(),b7e=Ae(),lN=zd.ConnectorAsUsageMeta=class extends(0,$7e.Mixin)(SA.ConnectorMeta,MA.UsageMeta){get isComposite(){return!1}set isComposite(e){}ast(){return this._ast}defaultSupertype(){return SA.ConnectorMeta.prototype.defaultSupertype.call(this)}onHeritageAdded(e,t){this.resetEnds(),MA.UsageMeta.prototype.onHeritageAdded.call(this,e,t)}onHeritageRemoved(e){this.resetEnds(),MA.UsageMeta.prototype.onHeritageRemoved.call(this,e)}featureMembers(){return SA.ConnectorMeta.prototype.featureMembers.call(this)}static create(e,t,n){let i=SA.ConnectorMeta.create.call(this,e,t,n);return n&&MA.UsageMeta.applyUsageOptions(i,n),i}};TZ([b7e.enumerable],lN.prototype,"isComposite",null);zd.ConnectorAsUsageMeta=lN=TZ([(0,R7e.metamodelOf)(T7e.ConnectorAsUsage,"abstract")],lN)});var PA=p(Yd=>{"use strict";var C7e=Yd&&Yd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Yd,"__esModule",{value:!0});Yd.ItemUsageMeta=void 0;var uN=D(),A7e=O(),w7e=uc(),RZ=Yd.ItemUsageMeta=class extends w7e.OccurrenceUsageMeta{defaultSupertype(){return this.isSubitem()?"subitem":"base"}isSuboccurrence(){return super.isSuboccurrence()&&!this.isSubitem()}isSubitem(){if(!this.isComposite)return!1;let e=this.owner();return Boolean(e==null?void 0:e.isAny(uN.ItemDefinition,uN.ItemUsage))}ast(){return this._ast}};Yd.ItemUsageMeta=RZ=C7e([(0,A7e.metamodelOf)(uN.ItemUsage,{base:"Items::items",subitem:"Items::Item::subitems"})],RZ)});var Z_=p(Xd=>{"use strict";var D7e=Xd&&Xd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Xd,"__esModule",{value:!0});Xd.PartUsageMeta=void 0;var Ia=D(),S7e=O(),M7e=PA(),bZ=Xd.PartUsageMeta=class extends M7e.ItemUsageMeta{defaultSupertype(){return this.isRequirementActor()?"requirementActor":this.isRequirementStakeholder()?"requirementStakeholder":this.isCaseActor()?"caseActor":super.defaultSupertype()}isRequirementActor(){var e,t;return Boolean(((e=this.parent())===null||e===void 0?void 0:e.is(Ia.ActorMembership))&&((t=this.owner())===null||t===void 0?void 0:t.isAny(Ia.RequirementDefinition,Ia.RequirementUsage)))}isRequirementStakeholder(){var e,t;return Boolean(((e=this.parent())===null||e===void 0?void 0:e.is(Ia.StakeholderMembership))&&((t=this.owner())===null||t===void 0?void 0:t.isAny(Ia.RequirementDefinition,Ia.RequirementUsage)))}isCaseActor(){var e,t;return Boolean(((e=this.parent())===null||e===void 0?void 0:e.is(Ia.ActorMembership))&&((t=this.owner())===null||t===void 0?void 0:t.isAny(Ia.CaseDefinition,Ia.CaseUsage)))}isIgnoredParameter(){var e;return Boolean(super.isIgnoredParameter()||((e=this.parent())===null||e===void 0?void 0:e.isAny(Ia.ActorMembership,Ia.StakeholderMembership)))}ast(){return this._ast}};Xd.PartUsageMeta=bZ=D7e([(0,S7e.metamodelOf)(Ia.PartUsage,{base:"Parts::parts",subitem:"Items::Item::subparts",requirementActor:"Requirements::RequirementCheck::actors",requirementStakeholder:"Requirements::RequirementCheck::stakeholders",caseActor:"Cases::Case::actors"})],bZ)});var e$=p(Jd=>{"use strict";var AZ=Jd&&Jd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Jd,"__esModule",{value:!0});Jd.ConnectionUsageMeta=void 0;var P7e=nt(),E7e=D(),O7e=O(),CZ=Q_(),cN=Z_(),k7e=Ae(),fN=Jd.ConnectionUsageMeta=class extends(0,P7e.Mixin)(CZ.ConnectorAsUsageMeta,cN.PartUsageMeta){get isComposite(){return!1}set isComposite(e){}defaultSupertype(){return this.isBinary()?"binary":"base"}ast(){return this._ast}onHeritageAdded(e,t){this.resetEnds(),cN.PartUsageMeta.prototype.onHeritageAdded.call(this,e,t)}onHeritageRemoved(e){this.resetEnds(),cN.PartUsageMeta.prototype.onHeritageRemoved.call(this,e)}featureMembers(){return CZ.ConnectorAsUsageMeta.prototype.featureMembers.call(this)}};AZ([k7e.enumerable],fN.prototype,"isComposite",null);Jd.ConnectionUsageMeta=fN=AZ([(0,O7e.metamodelOf)(E7e.ConnectionUsage,{base:"Connections::connections",binary:"Connections::binaryConnections"})],fN)});var DZ=p(Qd=>{"use strict";var I7e=Qd&&Qd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Qd,"__esModule",{value:!0});Qd.AllocationUsageMeta=void 0;var F7e=D(),N7e=O(),q7e=e$(),wZ=Qd.AllocationUsageMeta=class extends q7e.ConnectionUsageMeta{ast(){return this._ast}};Qd.AllocationUsageMeta=wZ=I7e([(0,N7e.metamodelOf)(F7e.AllocationUsage,{base:"Allocations::allocations",binary:"Allocations::allocations"})],wZ)});var dN=p(Zd=>{"use strict";var x7e=Zd&&Zd.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Zd,"__esModule",{value:!0});Zd.CalculationDefinitionMeta=void 0;var L7e=nt(),j7e=D(),U7e=eA(),B7e=O(),SZ=Y_(),MZ=Zd.CalculationDefinitionMeta=class extends(0,L7e.Mixin)(U7e.FunctionMeta,SZ.ActionDefinitionMeta){ast(){return this._ast}collectDeclaration(e){SZ.ActionDefinitionMeta.prototype.collectDeclaration.call(this,e),this._result&&e.push(["result",[this._result]])}};Zd.CalculationDefinitionMeta=MZ=x7e([(0,B7e.metamodelOf)(j7e.CalculationDefinition,{base:"Calculations::Calculation"})],MZ)});var t$=p(ep=>{"use strict";var G7e=ep&&ep.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ep,"__esModule",{value:!0});ep.CaseDefinitionMeta=void 0;var K7e=D(),H7e=O(),V7e=dN(),PZ=ep.CaseDefinitionMeta=class extends V7e.CalculationDefinitionMeta{ast(){return this._ast}};ep.CaseDefinitionMeta=PZ=G7e([(0,H7e.metamodelOf)(K7e.CaseDefinition,{base:"Cases::Case"})],PZ)});var OZ=p(tp=>{"use strict";var W7e=tp&&tp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(tp,"__esModule",{value:!0});tp.AnalysisCaseDefinitionMeta=void 0;var z7e=D(),Y7e=O(),X7e=t$(),EZ=tp.AnalysisCaseDefinitionMeta=class extends X7e.CaseDefinitionMeta{ast(){return this._ast}};tp.AnalysisCaseDefinitionMeta=EZ=W7e([(0,Y7e.metamodelOf)(z7e.AnalysisCaseDefinition,{base:"AnalysisCases::AnalysisCase"})],EZ)});var mN=p(rp=>{"use strict";var J7e=rp&&rp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(rp,"__esModule",{value:!0});rp.CalculationUsageMeta=void 0;var Q7e=nt(),pN=D(),kZ=oA(),Z7e=O(),IZ=ia(),FZ=rp.CalculationUsageMeta=class extends(0,Q7e.Mixin)(kZ.ExpressionMeta,IZ.ActionUsageMeta){ast(){return this._ast}getSubactionType(){return this.isSubcalculation()?"subcalculation":super.getSubactionType()}isSubcalculation(){let e=this.owner();return Boolean(this.isNonEntryExitComposite()&&(e==null?void 0:e.isAny(pN.CalculationUsage,pN.CalculationDefinition)))}collectDeclaration(e){IZ.ActionUsageMeta.prototype.collectDeclaration.call(this,e),this._result&&e.push(["result",[this._result]])}static create(e,t,n){let i=super.create(e,t,n);return n&&kZ.ExpressionMeta.applyExpressionOptions(i,n),i}};rp.CalculationUsageMeta=FZ=J7e([(0,Z7e.metamodelOf)(pN.CalculationUsage,{base:"Calculations::calculations",subcalculation:"Calculations::Calculation::subcalculations"})],FZ)});var r$=p(np=>{"use strict";var e5e=np&&np.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(np,"__esModule",{value:!0});np.CaseUsageMeta=void 0;var yN=D(),t5e=O(),r5e=mN(),NZ=np.CaseUsageMeta=class extends r5e.CalculationUsageMeta{ast(){return this._ast}getSubactionType(){return this.isSubcase()?"subcase":super.getSubactionType()}isSubcase(){let e=this.owner();return Boolean(this.isNonEntryExitComposite()&&(e==null?void 0:e.isAny(yN.CaseDefinition,yN.CaseUsage)))}};np.CaseUsageMeta=NZ=e5e([(0,t5e.metamodelOf)(yN.CaseUsage,{base:"Cases::cases",subcase:"Cases:subcases"})],NZ)});var xZ=p(ip=>{"use strict";var n5e=ip&&ip.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ip,"__esModule",{value:!0});ip.AnalysisCaseUsageMeta=void 0;var hN=D(),i5e=O(),a5e=r$(),qZ=ip.AnalysisCaseUsageMeta=class extends a5e.CaseUsageMeta{ast(){return this._ast}getSubactionType(){return this.isSubAnalysisCase()?"subAnalysisCase":super.getSubactionType()}isSubAnalysisCase(){let e=this.owner();return this.isNonEntryExitComposite()&&Boolean(e==null?void 0:e.isAny(hN.AnalysisCaseUsage,hN.AnalysisCaseDefinition))}};ip.AnalysisCaseUsageMeta=qZ=n5e([(0,i5e.metamodelOf)(hN.AnalysisCaseUsage,{base:"AnalysisCases::analysisCases",subAnalysisCase:"AnalysisCases::AnalysisCase::subAnalysisCases"})],qZ)});var EA=p(ap=>{"use strict";var s5e=ap&&ap.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ap,"__esModule",{value:!0});ap.ConstraintUsageMeta=void 0;var o5e=nt(),n$=D(),LZ=uA(),l5e=O(),jZ=uc(),UZ=ap.ConstraintUsageMeta=class extends(0,o5e.Mixin)(LZ.BooleanExpressionMeta,jZ.OccurrenceUsageMeta){defaultGeneralTypes(){let e=this.requirementConstraintSupertype(),t=e?[e]:[];return t.push(...super.defaultGeneralTypes()),this.isCheckedConstraint()&&t.push("checkedConstraint"),this.isStructureOwnedComposite()&&t.push("ownedPerformance"),this.isBehaviorOwnedComposite()&&t.push("subperformance"),this.isBehaviorOwned()&&t.push("enclosedPerformance"),t}defaultSupertype(){return"base"}isCheckedConstraint(){if(!this.isComposite)return!1;let e=this.owner();return Boolean(e==null?void 0:e.isAny(n$.ItemDefinition,n$.ItemUsage))}ast(){return this._ast}requirementConstraintKind(){let e=this.parent();return e!=null&&e.is(n$.RequirementConstraintMembership)?e.kind:void 0}namingFeature(){return this.requirementConstraintKind()?this.referencedFeature(n$.ConstraintUsage):super.namingFeature()}requirementConstraintSupertype(){return this.requirementConstraintKind()}static create(e,t,n){let i=jZ.OccurrenceUsageMeta.create.call(this,e,t,n);return n&&LZ.BooleanExpressionMeta.applyExpressionOptions(i,n),i}};ap.ConstraintUsageMeta=UZ=s5e([(0,l5e.metamodelOf)(n$.ConstraintUsage,{base:"Constraints::constraintChecks",checkedConstraint:"Items::Item::checkedConstraints",enclosedPerformance:"Performances::Performance::enclosedPerformances",subperformance:"Performances::Performance::subperformances",ownedPerformance:"Objects::Object::ownedPerformances",assumption:"Requirements::RequirementCheck::assumptions",requirement:"Requirements::RequirementCheck::constraints"})],UZ)});var vN=p(sp=>{"use strict";var u5e=sp&&sp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(sp,"__esModule",{value:!0});sp.AssertConstraintUsageMeta=void 0;var c5e=nt(),gN=D(),BZ=cA(),f5e=O(),GZ=EA(),KZ=sp.AssertConstraintUsageMeta=class extends(0,c5e.Mixin)(BZ.InvariantMeta,GZ.ConstraintUsageMeta){defaultSupertype(){return this.isNegated?"negated":"base"}isBehaviorOwned(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(gN.ActionDefinition,gN.ActionUsage))}ast(){return this._ast}static create(e,t,n){let i=GZ.ConstraintUsageMeta.create.call(this,e,t,n);return n&&BZ.InvariantMeta.applyInvariantOptions(i,n),i}};sp.AssertConstraintUsageMeta=KZ=u5e([(0,f5e.metamodelOf)(gN.AssertConstraintUsage,{base:"Constraints::assertedConstraintChecks",negated:"Constraints::negatedConstraintChecks"})],KZ)});var HZ=p(op=>{"use strict";var OA=op&&op.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},_N;Object.defineProperty(op,"__esModule",{value:!0});op.AssignmentActionUsageMeta=void 0;var d5e=D(),kA=Ae(),p5e=O(),m5e=ia(),i$=op.AssignmentActionUsageMeta=_N=class extends m5e.ActionUsageMeta{get target(){return this._target}set target(e){this._target=this.swapEdgeOwnership(this._target,e)}get targetMember(){return this._targetMember}set targetMember(e){this._targetMember=this.swapEdgeOwnership(this._targetMember,e)}get assignedValue(){return this._assignedValue}set assignedValue(e){this._assignedValue=this.swapEdgeOwnership(this._assignedValue,e)}ast(){return this._ast}featureMembers(){let e=super.featureMembers();return[this.target,this.targetMember,this.assignedValue].filter(kA.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.target&&e.push(["target",[this.target]]),this.targetMember&&e.push(["targetMember",[this.targetMember]]),this.assignedValue&&e.push(["assignedValue",[this.assignedValue]])}static applyAssignmentActionOptions(e,t){e.target=t.target,e.targetMember=t.targetMember,e.assignedValue=t.assignedValue}static create(e,t,n){let i=super.create(e,t,n);return n&&_N.applyAssignmentActionOptions(i,n),i}};OA([kA.enumerable],i$.prototype,"target",null);OA([kA.enumerable],i$.prototype,"targetMember",null);OA([kA.enumerable],i$.prototype,"assignedValue",null);op.AssignmentActionUsageMeta=i$=_N=OA([(0,p5e.metamodelOf)(d5e.AssignmentActionUsage,{base:"Actions::assignmentActions",subaction:"Actions::Action::assignments",featureWrite:"Actions::AssignmentAction"})],i$)});var $N=p(lp=>{"use strict";var y5e=lp&&lp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(lp,"__esModule",{value:!0});lp.AttributeDefinitionMeta=void 0;var h5e=nt(),g5e=D(),v5e=BC(),_5e=O(),$5e=wA(),VZ=lp.AttributeDefinitionMeta=class extends(0,h5e.Mixin)(v5e.DataTypeMeta,$5e.DefinitionMeta){ast(){return this._ast}};lp.AttributeDefinitionMeta=VZ=y5e([(0,_5e.metamodelOf)(g5e.AttributeDefinition,{base:"Base::DataValue"})],VZ)});var RN=p(up=>{"use strict";var WZ=up&&up.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(up,"__esModule",{value:!0});up.AttributeUsageMeta=void 0;var T5e=D(),R5e=Ae(),b5e=O(),C5e=tg(),TN=up.AttributeUsageMeta=class extends C5e.UsageMeta{get isComposite(){return!1}set isComposite(e){}ast(){return this._ast}};WZ([R5e.enumerable],TN.prototype,"isComposite",null);up.AttributeUsageMeta=TN=WZ([(0,b5e.metamodelOf)(T5e.AttributeUsage,{base:"Base::dataValues"})],TN)});var YZ=p(cp=>{"use strict";var A5e=cp&&cp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(cp,"__esModule",{value:!0});cp.BindingConnectorAsUsageMeta=void 0;var w5e=nt(),D5e=D(),S5e=QC(),M5e=O(),P5e=Q_(),zZ=cp.BindingConnectorAsUsageMeta=class extends(0,w5e.Mixin)(S5e.BindingConnectorMeta,P5e.ConnectorAsUsageMeta){ast(){return this._ast}};cp.BindingConnectorAsUsageMeta=zZ=A5e([(0,M5e.metamodelOf)(D5e.BindingConnectorAsUsage,{base:"Links::links",binary:"Links::selfLinks"})],zZ)});var bN=p(fp=>{"use strict";var E5e=fp&&fp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(fp,"__esModule",{value:!0});fp.ConstraintDefinitionMeta=void 0;var O5e=nt(),k5e=D(),XZ=lA(),I5e=O(),JZ=rg(),QZ=fp.ConstraintDefinitionMeta=class extends(0,O5e.Mixin)(XZ.PredicateMeta,JZ.OccurrenceDefinitionMeta){ast(){return this._ast}static create(e,t,n){let i=JZ.OccurrenceDefinitionMeta.create.call(this,e,t,n);return n&&XZ.PredicateMeta.applyFunctionOptions(i,n),i}};fp.ConstraintDefinitionMeta=QZ=E5e([(0,I5e.metamodelOf)(k5e.ConstraintDefinition,{base:"Constraints::ConstraintCheck"})],QZ)});var IA=p(dp=>{"use strict";var F5e=dp&&dp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(dp,"__esModule",{value:!0});dp.RequirementDefinitionMeta=void 0;var N5e=D(),q5e=O(),x5e=bN(),ZZ=dp.RequirementDefinitionMeta=class extends x5e.ConstraintDefinitionMeta{ast(){return this._ast}};dp.RequirementDefinitionMeta=ZZ=F5e([(0,q5e.metamodelOf)(N5e.RequirementDefinition,{base:"Requirements::RequirementCheck"})],ZZ)});var tee=p(pp=>{"use strict";var L5e=pp&&pp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(pp,"__esModule",{value:!0});pp.ConcernDefinitionMeta=void 0;var j5e=D(),U5e=O(),B5e=IA(),eee=pp.ConcernDefinitionMeta=class extends B5e.RequirementDefinitionMeta{ast(){return this._ast}};pp.ConcernDefinitionMeta=eee=L5e([(0,U5e.metamodelOf)(j5e.ConcernDefinition,{base:"Requirements::ConcernCheck"})],eee)});var a$=p(mp=>{"use strict";var G5e=mp&&mp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(mp,"__esModule",{value:!0});mp.RequirementUsageMeta=void 0;var FA=D(),K5e=O(),H5e=EA(),ree=mp.RequirementUsageMeta=class extends H5e.ConstraintUsageMeta{defaultSupertype(){return this.isSubrequirement()?"subrequirement":"base"}isVerifiedRequirement(){let e=this.parent();return Boolean((e==null?void 0:e.is(FA.RequirementVerificationMembership))&&e.isLegalVerification())}isSubrequirement(){var e;return this.requirementConstraintKind()==="assumption"?!1:Boolean(this.isComposite&&((e=this.owner())===null||e===void 0?void 0:e.isAny(FA.RequirementUsage,FA.RequirementDefinition)))}requirementConstraintSupertype(){return this.isVerifiedRequirement()?"verification":super.requirementConstraintSupertype()}ast(){return this._ast}};mp.RequirementUsageMeta=ree=G5e([(0,K5e.metamodelOf)(FA.RequirementUsage,{base:"Requirements::requirementChecks",subrequirement:"Requirements::RequirementCheck::subrequirements",verification:"VerificationCases::VerificationCase::obj::requirementVerifications"})],ree)});var aee=p(yp=>{"use strict";var V5e=yp&&yp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(yp,"__esModule",{value:!0});yp.ConcernUsageMeta=void 0;var iee=D(),W5e=O(),z5e=a$(),nee=yp.ConcernUsageMeta=class extends z5e.RequirementUsageMeta{ast(){return this._ast}defaultSupertype(){return"base"}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isSubrequirement()&&e.push("subrequirement"),e}requirementConstraintSupertype(){var e;return!((e=this.parent())===null||e===void 0)&&e.is(iee.FramedConcernMembership)?"concern":super.requirementConstraintKind()}};yp.ConcernUsageMeta=nee=V5e([(0,W5e.metamodelOf)(iee.ConcernUsage,{base:"Requirements::concernChecks",concern:"Requirements::RequirementCheck::concerns"})],nee)});var ng=p(hp=>{"use strict";var Y5e=hp&&hp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(hp,"__esModule",{value:!0});hp.ControlNodeMeta=void 0;var X5e=D(),J5e=O(),Q5e=ia(),see=hp.ControlNodeMeta=class extends Q5e.ActionUsageMeta{ast(){return this._ast}};hp.ControlNodeMeta=see=Y5e([(0,J5e.metamodelOf)(X5e.ControlNode)],see)});var lee=p(gp=>{"use strict";var Z5e=gp&&gp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(gp,"__esModule",{value:!0});gp.DecisionNodeMeta=void 0;var eWe=D(),tWe=O(),rWe=ng(),oee=gp.DecisionNodeMeta=class extends rWe.ControlNodeMeta{ast(){return this._ast}};gp.DecisionNodeMeta=oee=Z5e([(0,tWe.metamodelOf)(eWe.DecisionNode,{subaction:"Actions::Action::decisions"})],oee)});var cee=p(vp=>{"use strict";var uee=vp&&vp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(vp,"__esModule",{value:!0});vp.EnumerationDefinitionMeta=void 0;var nWe=D(),iWe=Ae(),aWe=O(),sWe=$N(),CN=vp.EnumerationDefinitionMeta=class extends sWe.AttributeDefinitionMeta{get isVariation(){return!0}set isVariation(e){}ast(){return this._ast}};uee([iWe.enumerable],CN.prototype,"isVariation",null);vp.EnumerationDefinitionMeta=CN=uee([(0,aWe.metamodelOf)(nWe.EnumerationDefinition)],CN)});var pee=p(_p=>{"use strict";var oWe=_p&&_p.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(_p,"__esModule",{value:!0});_p.EnumerationUsageMeta=void 0;var dee=D(),lWe=O(),uWe=RN(),fee=_p.EnumerationUsageMeta=class extends uWe.AttributeUsageMeta{ast(){return this._ast}isVariantNode(){var e;return Boolean((e=this.owner())===null||e===void 0?void 0:e.is(dee.EnumerationDefinition))}};_p.EnumerationUsageMeta=fee=oWe([(0,lWe.metamodelOf)(dee.EnumerationUsage)],fee)});var DN=p($p=>{"use strict";var mee=$p&&$p.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty($p,"__esModule",{value:!0});$p.EventOccurrenceUsageMeta=void 0;var AN=D(),cWe=Ae(),fWe=O(),dWe=uc(),wN=$p.EventOccurrenceUsageMeta=class extends dWe.OccurrenceUsageMeta{get isComposite(){return!1}set isComposite(e){}defaultSupertype(){return this.isSuboccurrence()?"suboccurrence":super.defaultSupertype()}isSuboccurrence(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(AN.OccurrenceUsage,AN.OccurrenceDefinition))}ast(){return this._ast}};mee([cWe.enumerable],wN.prototype,"isComposite",null);$p.EventOccurrenceUsageMeta=wN=mee([(0,fWe.metamodelOf)(AN.EventOccurrenceUsage,{suboccurrence:"Occurrences::Occurrence::timeEnclosedOccurrences"})],wN)});var NA=p(Tp=>{"use strict";var yee=Tp&&Tp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Tp,"__esModule",{value:!0});Tp.PerformActionUsageMeta=void 0;var pWe=nt(),hee=D(),mWe=O(),yWe=ia(),hWe=DN(),gWe=Ae(),SN=Tp.PerformActionUsageMeta=class extends(0,pWe.Mixin)(hWe.EventOccurrenceUsageMeta,yWe.ActionUsageMeta){get isComposite(){return!1}set isComposite(e){}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isPerformedAction()&&e.push("performedAction"),e}ast(){return this._ast}namingFeature(){return this.types(hee.ReferenceSubsetting).head()}};yee([gWe.enumerable],SN.prototype,"isComposite",null);Tp.PerformActionUsageMeta=SN=yee([(0,mWe.metamodelOf)(hee.PerformActionUsage,{performedAction:"Parts::Part::performedActions"})],SN)});var MN=p(Rp=>{"use strict";var vWe=Rp&&Rp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Rp,"__esModule",{value:!0});Rp.StateUsageMeta=void 0;var s$=D(),_We=O(),$We=ia(),gee=Rp.StateUsageMeta=class extends $We.ActionUsageMeta{constructor(){super(...arguments),this.isParallel=!1}getSubactionType(){return this.isExclusiveState()?"exclusiveState":this.isSubstate()?"substate":super.getSubactionType()}isExclusiveState(){let e=this.owner();return Boolean((e==null?void 0:e.isAny(s$.StateDefinition,s$.StateUsage))&&!e.isParallel)}isSubstate(){var e;return Boolean(this.isNonEntryExitComposite()&&((e=this.owner())===null||e===void 0?void 0:e.isAny(s$.StateDefinition,s$.StateUsage)))}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.isParallel=Boolean(n.isParallel)),i}};Rp.StateUsageMeta=gee=vWe([(0,_We.metamodelOf)(s$.StateUsage,{base:"States::stateActions",substate:"States::StateAction::substates",exclusiveState:"States::StateAction::exclusiveStates",ownedAction:"Parts::Part::ownedStates"})],gee)});var $ee=p(bp=>{"use strict";var vee=bp&&bp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(bp,"__esModule",{value:!0});bp.ExhibitStateUsageMeta=void 0;var TWe=nt(),_ee=D(),RWe=O(),bWe=NA(),CWe=MN(),AWe=Ae(),PN=bp.ExhibitStateUsageMeta=class extends(0,TWe.Mixin)(bWe.PerformActionUsageMeta,CWe.StateUsageMeta){get isComposite(){return!1}set isComposite(e){}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isPerformedAction()&&e.push("performedAction"),e}ast(){return this._ast}namingFeature(){return this.types(_ee.ReferenceSubsetting).head()}};vee([AWe.enumerable],PN.prototype,"isComposite",null);bp.ExhibitStateUsageMeta=PN=vee([(0,RWe.metamodelOf)(_ee.ExhibitStateUsage,{performedAction:"Parts::Part::exhibitedStates"})],PN)});var Ree=p(Cp=>{"use strict";var wWe=Cp&&Cp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Cp,"__esModule",{value:!0});Cp.TriggerInvocationExpressionMeta=void 0;var DWe=D(),SWe=dA(),MWe=O(),Tee=Cp.TriggerInvocationExpressionMeta=class extends SWe.InvocationExpressionMeta{constructor(){super(...arguments),this.kind="when"}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.kind=n.kind),i}};Cp.TriggerInvocationExpressionMeta=Tee=wWe([(0,MWe.metamodelOf)(DWe.TriggerInvocationExpression,{when:"Triggers::TriggerWhen",at:"Triggers::TriggerAt",after:"Triggers::TriggerAfter"})],Tee)});var bee=p(Ap=>{"use strict";var PWe=Ap&&Ap.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),EWe=Ap&&Ap.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&PWe(e,r,t)};Object.defineProperty(Ap,"__esModule",{value:!0});EWe(Ree(),Ap)});var wee=p(wp=>{"use strict";var OWe=wp&&wp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(wp,"__esModule",{value:!0});wp.FlowConnectionDefinitionMeta=void 0;var kWe=nt(),IWe=D(),FWe=HC(),NWe=O(),qWe=Y_(),Cee=J_(),Aee=wp.FlowConnectionDefinitionMeta=class extends(0,kWe.Mixin)(FWe.InteractionMeta,qWe.ActionDefinitionMeta,Cee.ConnectionDefinitionMeta){ast(){return this._ast}static create(e,t,n){return Cee.ConnectionDefinitionMeta.create.call(this,e,t,n)}};wp.FlowConnectionDefinitionMeta=Aee=OWe([(0,NWe.metamodelOf)(IWe.FlowConnectionDefinition,{base:"Connections::Connection",binary:"Connections::MessageConnection"})],Aee)});var kN=p(Dp=>{"use strict";var See=Dp&&Dp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Dp,"__esModule",{value:!0});Dp.FlowConnectionUsageMeta=void 0;var xWe=nt(),LWe=D(),Dee=tA(),jWe=O(),UWe=ia(),EN=e$(),BWe=An(),GWe=Ae(),ON=Dp.FlowConnectionUsageMeta=class extends(0,xWe.Mixin)(UWe.ActionUsageMeta,Dee.ItemFlowMeta,EN.ConnectionUsageMeta){constructor(){super(...arguments),this._messages=[]}get messages(){return this._messages}get isMessageConnection(){return this._messages.length>0}addMessage(...e){return this.addOwnedEdges(this._messages,e)}removeMessage(...e){return this.removeOwnedElements(this._messages,e)}removeMessageIf(e){return this.removeOwnedElementsIf(this._messages,e)}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isPartOwnedComposite()?e.push("ownedAction"):this.isStructureOwnedComposite()&&e.push("ownedPerformance"),this.isActionOwnedComposite()?e.push("subaction"):this.isBehaviorOwnedComposite()?e.push("subperformance"):this.isBehaviorOwned()&&e.push("enclosedPerformance"),e}defaultSupertype(){return this.isMessageConnection?"message":"base"}ast(){return this._ast}collectDeclaration(e){BWe.FeatureMeta.prototype.collectDeclaration.call(this,e),this.isMessageConnection?e.push(["messages",this.messages]):this.ends.length>0&&e.push(["ends",this.ends])}static create(e,t,n){let i=EN.ConnectionUsageMeta.create.call(this,e,t,n);return n&&(EN.ConnectionUsageMeta.applyConnectorOptions(i,n),Dee.ItemFlowMeta.applyItemFlowOptions(i,n),n.messages&&i.addMessage(...n.messages)),i}};See([GWe.enumerable],ON.prototype,"messages",null);Dp.FlowConnectionUsageMeta=ON=See([(0,jWe.metamodelOf)(LWe.FlowConnectionUsage,{base:"Connections::flowConnections",message:"Connections::messageConnections",enclosedPerformance:"Performances::Performance::enclosedPerformances",subperformance:"Performances::Performance::subperformances",ownedPerformance:"Objects::Object::ownedPerformances",subaction:"Actions::Action::subactions",ownedAction:"Parts::Part::ownedActions"})],ON)});var qA=p(Sp=>{"use strict";var KWe=Sp&&Sp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Sp,"__esModule",{value:!0});Sp.LoopActionUsageMeta=void 0;var HWe=D(),VWe=O(),WWe=ia(),Mee=Sp.LoopActionUsageMeta=class extends WWe.ActionUsageMeta{ast(){return this._ast}};Sp.LoopActionUsageMeta=Mee=KWe([(0,VWe.metamodelOf)(HWe.LoopActionUsage,"abstract")],Mee)});var Pee=p(Mp=>{"use strict";var xA=Mp&&Mp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},IN;Object.defineProperty(Mp,"__esModule",{value:!0});Mp.ForLoopActionUsageMeta=void 0;var zWe=D(),LA=Ae(),YWe=O(),XWe=qA(),o$=Mp.ForLoopActionUsageMeta=IN=class extends XWe.LoopActionUsageMeta{get variable(){return this._variable}set variable(e){this._variable=this.swapEdgeOwnership(this._variable,e)}get sequence(){return this._sequence}set sequence(e){this._sequence=this.swapEdgeOwnership(this._sequence,e)}get body(){return this._body}set body(e){this._body=this.swapEdgeOwnership(this._body,e)}ast(){return this._ast}featureMembers(){let e=super.featureMembers();return[this.variable,this.sequence,this.body].filter(LA.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.variable&&e.push(["variable",[this.variable]]),this.sequence&&e.push(["sequence",[this.sequence]]),this.body&&e.push(["body",[this.body]])}static applyForLoopOptions(e,t){e.variable=t.variable,e.sequence=t.sequence,e.body=t.body}static create(e,t,n){let i=super.create(e,t,n);return n&&IN.applyForLoopOptions(i,n),i}};xA([LA.enumerable],o$.prototype,"variable",null);xA([LA.enumerable],o$.prototype,"sequence",null);xA([LA.enumerable],o$.prototype,"body",null);Mp.ForLoopActionUsageMeta=o$=IN=xA([(0,YWe.metamodelOf)(zWe.ForLoopActionUsage,{base:"Actions::forLoopActions",subaction:"Actions::Action::forLoops",loopVariable:"Actions::ForLoopAction::var"})],o$)});var Oee=p(Pp=>{"use strict";var JWe=Pp&&Pp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Pp,"__esModule",{value:!0});Pp.ForkNodeMeta=void 0;var QWe=D(),ZWe=O(),e9e=ng(),Eee=Pp.ForkNodeMeta=class extends e9e.ControlNodeMeta{ast(){return this._ast}};Pp.ForkNodeMeta=Eee=JWe([(0,ZWe.metamodelOf)(QWe.ForkNode,{subaction:"Actions::Action::forks"})],Eee)});var kee=p(Ep=>{"use strict";var jA=Ep&&Ep.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},FN;Object.defineProperty(Ep,"__esModule",{value:!0});Ep.IfActionUsageMeta=void 0;var t9e=D(),r9e=O(),n9e=ia(),UA=Ae(),l$=Ep.IfActionUsageMeta=FN=class extends n9e.ActionUsageMeta{get condition(){return this._condition}set condition(e){this._condition=this.swapEdgeOwnership(this._condition,e)}get then(){return this._then}set then(e){this._then=this.swapEdgeOwnership(this._then,e)}get else(){return this._else}set else(e){this._else=this.swapEdgeOwnership(this._else,e)}ast(){return this._ast}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isIfThenElse()&&e.push("ifThenElse"),e}featureMembers(){let e=super.featureMembers();return[this._condition,this._then,this._else].filter(UA.NonNullable).concat(e)}isIfThenElse(){return this.else!==void 0}collectDeclaration(e){super.collectDeclaration(e),this.condition&&e.push(["condition",[this.condition]]),this.then&&e.push(["then",[this.then]]),this.else&&e.push(["else",[this.else]])}static applyIfOptions(e,t){e.condition=t.condition,e.then=t.then,e.else=t.else}static create(e,t,n){let i=super.create(e,t,n);return n&&FN.applyIfOptions(i,n),i}};jA([UA.enumerable],l$.prototype,"condition",null);jA([UA.enumerable],l$.prototype,"then",null);jA([UA.enumerable],l$.prototype,"else",null);Ep.IfActionUsageMeta=l$=FN=jA([(0,r9e.metamodelOf)(t9e.IfActionUsage,{base:"Actions::ifThenActions",ifThenElse:"Actions::ifThenElseActions",subaction:"Actions::Action::ifSubactions"})],l$)});var qN=p(Op=>{"use strict";var i9e=Op&&Op.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Op,"__esModule",{value:!0});Op.UseCaseUsageMeta=void 0;var NN=D(),a9e=O(),s9e=r$(),Iee=Op.UseCaseUsageMeta=class extends s9e.CaseUsageMeta{getSubactionType(){return this.isSubUseCase()?"subUseCase":super.getSubactionType()}isSubUseCase(){let e=this.owner();return Boolean(this.isNonEntryExitComposite()&&(e==null?void 0:e.isAny(NN.UseCaseUsage,NN.UseCaseDefinition)))}ast(){return this._ast}};Op.UseCaseUsageMeta=Iee=i9e([(0,a9e.metamodelOf)(NN.UseCaseUsage,{base:"UseCases::useCases",subUseCase:"UseCases::UseCase::subUseCases"})],Iee)});var Nee=p(kp=>{"use strict";var Fee=kp&&kp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(kp,"__esModule",{value:!0});kp.IncludeUseCaseUsageMeta=void 0;var o9e=nt(),BA=D(),l9e=O(),u9e=NA(),c9e=qN(),f9e=Ae(),xN=kp.IncludeUseCaseUsageMeta=class extends(0,o9e.Mixin)(u9e.PerformActionUsageMeta,c9e.UseCaseUsageMeta){get isComposite(){return!1}set isComposite(e){}ast(){return this._ast}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isPerformedAction()&&e.push("performedAction"),e}hasRelevantSubjectParameter(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(BA.CaseDefinition,BA.CaseUsage))}namingFeature(){return this.types(BA.ReferenceSubsetting).head()}};Fee([f9e.enumerable],xN.prototype,"isComposite",null);kp.IncludeUseCaseUsageMeta=xN=Fee([(0,l9e.metamodelOf)(BA.IncludeUseCaseUsage,{base:"UseCases::useCases",subUseCase:"UseCases::UseCase::includedUseCases",performedAction:"Parts::Part::performedActions"})],xN)});var xee=p(Ip=>{"use strict";var d9e=Ip&&Ip.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ip,"__esModule",{value:!0});Ip.InterfaceDefinitionMeta=void 0;var p9e=D(),m9e=O(),y9e=J_(),qee=Ip.InterfaceDefinitionMeta=class extends y9e.ConnectionDefinitionMeta{ast(){return this._ast}};Ip.InterfaceDefinitionMeta=qee=d9e([(0,m9e.metamodelOf)(p9e.InterfaceDefinition,{base:"Interfaces::Interface",binary:"Interfaces::BinaryInterface"})],qee)});var jee=p(Fp=>{"use strict";var h9e=Fp&&Fp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Fp,"__esModule",{value:!0});Fp.InterfaceUsageMeta=void 0;var g9e=D(),v9e=O(),_9e=e$(),Lee=Fp.InterfaceUsageMeta=class extends _9e.ConnectionUsageMeta{ast(){return this._ast}};Fp.InterfaceUsageMeta=Lee=h9e([(0,v9e.metamodelOf)(g9e.InterfaceUsage,{base:"Interfaces::interfaces",binary:"Interfaces::binaryInterfaces"})],Lee)});var Bee=p(Np=>{"use strict";var $9e=Np&&Np.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Np,"__esModule",{value:!0});Np.JoinNodeMeta=void 0;var T9e=D(),R9e=O(),b9e=ng(),Uee=Np.JoinNodeMeta=class extends b9e.ControlNodeMeta{ast(){return this._ast}};Np.JoinNodeMeta=Uee=$9e([(0,R9e.metamodelOf)(T9e.JoinNode,{subaction:"Actions::Action::joins"})],Uee)});var Kee=p(qp=>{"use strict";var C9e=qp&&qp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(qp,"__esModule",{value:!0});qp.MergeNodeMeta=void 0;var A9e=D(),w9e=O(),D9e=ng(),Gee=qp.MergeNodeMeta=class extends D9e.ControlNodeMeta{ast(){return this._ast}};qp.MergeNodeMeta=Gee=C9e([(0,w9e.metamodelOf)(A9e.MergeNode,{subaction:"Actions::Action::merges"})],Gee)});var Vee=p(xp=>{"use strict";var S9e=xp&&xp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(xp,"__esModule",{value:!0});xp.MetadataDefinitionMeta=void 0;var M9e=nt(),P9e=D(),E9e=VC(),O9e=O(),k9e=DA(),Hee=xp.MetadataDefinitionMeta=class extends(0,M9e.Mixin)(E9e.MetaclassMeta,k9e.ItemDefinitionMeta){ast(){return this._ast}};xp.MetadataDefinitionMeta=Hee=S9e([(0,O9e.metamodelOf)(P9e.MetadataDefinition,{base:"Metadata::MetadataItem"})],Hee)});var zee=p(Lp=>{"use strict";var I9e=Lp&&Lp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Lp,"__esModule",{value:!0});Lp.MetadataUsageMeta=void 0;var F9e=nt(),N9e=D(),q9e=nA(),x9e=O(),L9e=PA(),Wee=Lp.MetadataUsageMeta=class extends(0,F9e.Mixin)(q9e.MetadataFeatureMeta,L9e.ItemUsageMeta){defaultSupertype(){return"base"}ast(){return this._ast}};Lp.MetadataUsageMeta=Wee=I9e([(0,x9e.metamodelOf)(N9e.MetadataUsage,{base:"Metadata::metadataItems",annotatedElement:"Metaobjects::Metaobject::annotatedElement",baseType:"Metaobjects::SemanticMetadata::baseType"})],Wee)});var Xee=p(jp=>{"use strict";var j9e=jp&&jp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(jp,"__esModule",{value:!0});jp.ActorMembershipMeta=void 0;var U9e=D(),B9e=eg(),G9e=O(),Yee=jp.ActorMembershipMeta=class extends B9e.ParameterMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};jp.ActorMembershipMeta=Yee=j9e([(0,G9e.metamodelOf)(U9e.ActorMembership)],Yee)});var Qee=p(Up=>{"use strict";var K9e=Up&&Up.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Up,"__esModule",{value:!0});Up.ConjugatedPortTypingMeta=void 0;var H9e=D(),V9e=An(),W9e=O(),Jee=Up.ConjugatedPortTypingMeta=class extends V9e.FeatureTypingMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Up.ConjugatedPortTypingMeta=Jee=K9e([(0,W9e.metamodelOf)(H9e.ConjugatedPortTyping)],Jee)});var GA=p(Bp=>{"use strict";var Zee=Bp&&Bp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Bp,"__esModule",{value:!0});Bp.ExposeMeta=void 0;var z9e=D(),Y9e=Ae(),X9e=vA(),J9e=O(),LN=Bp.ExposeMeta=class extends X9e.ImportMeta{get importsAll(){return!0}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Zee([Y9e.enumerable],LN.prototype,"importsAll",null);Bp.ExposeMeta=LN=Zee([(0,J9e.metamodelOf)(z9e.Expose,"abstract")],LN)});var KA=p(Gp=>{"use strict";var Q9e=Gp&&Gp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Gp,"__esModule",{value:!0});Gp.RequirementConstraintMembershipMeta=void 0;var Z9e=D(),eze=lc(),tze=O(),ete=Gp.RequirementConstraintMembershipMeta=class extends eze.FeatureMembershipMeta{constructor(){super(...arguments),this._kind="requirement"}get kind(){return this._kind}set kind(e){this._kind=e}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.kind&&(i.kind=n.kind),i}};Gp.RequirementConstraintMembershipMeta=ete=Q9e([(0,tze.metamodelOf)(Z9e.RequirementConstraintMembership)],ete)});var rte=p(Kp=>{"use strict";var rze=Kp&&Kp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Kp,"__esModule",{value:!0});Kp.FramedConcernMembershipMeta=void 0;var nze=D(),ize=O(),aze=KA(),tte=Kp.FramedConcernMembershipMeta=class extends aze.RequirementConstraintMembershipMeta{get kind(){return"requirement"}set kind(e){}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Kp.FramedConcernMembershipMeta=tte=rze([(0,ize.metamodelOf)(nze.FramedConcernMembership)],tte)});var ste=p(Hp=>{"use strict";var sze=Hp&&Hp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Hp,"__esModule",{value:!0});Hp.MembershipExposeMeta=void 0;var oze=D(),lze=_A(),nte=O(),ate=GA(),ite=Hp.MembershipExposeMeta=class{constructor(e){}ast(){return this._ast}static create(e,t,n){return ate.ExposeMeta.create.call(this,e,t,n)}};Hp.MembershipExposeMeta=ite=sze([(0,nte.metamodelOf)(oze.MembershipExpose),(0,nte.mix)(ate.ExposeMeta,lze.MembershipImportMeta)],ite)});var cte=p(Vp=>{"use strict";var uze=Vp&&Vp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Vp,"__esModule",{value:!0});Vp.NamespaceExposeMeta=void 0;var cze=D(),fze=$A(),ote=O(),ute=GA(),lte=Vp.NamespaceExposeMeta=class{constructor(e){}ast(){return this._ast}static create(e,t,n){return ute.ExposeMeta.create.call(this,e,t,n)}};Vp.NamespaceExposeMeta=lte=uze([(0,ote.metamodelOf)(cze.NamespaceExpose),(0,ote.mix)(ute.ExposeMeta,fze.NamespaceImportMeta)],lte)});var dte=p(Wp=>{"use strict";var dze=Wp&&Wp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Wp,"__esModule",{value:!0});Wp.ObjectiveMembershipMeta=void 0;var pze=D(),mze=lc(),yze=O(),fte=Wp.ObjectiveMembershipMeta=class extends mze.FeatureMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Wp.ObjectiveMembershipMeta=fte=dze([(0,yze.metamodelOf)(pze.ObjectiveMembership)],fte)});var mte=p(zp=>{"use strict";var hze=zp&&zp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(zp,"__esModule",{value:!0});zp.PortConjugationMeta=void 0;var gze=D(),vze=An(),_ze=O(),pte=zp.PortConjugationMeta=class extends vze.ConjugationMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};zp.PortConjugationMeta=pte=hze([(0,_ze.metamodelOf)(gze.PortConjugation)],pte)});var hte=p(Yp=>{"use strict";var $ze=Yp&&Yp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Yp,"__esModule",{value:!0});Yp.RequirementVerificationMembershipMeta=void 0;var u$=D(),Tze=O(),Rze=KA(),yte=Yp.RequirementVerificationMembershipMeta=class extends Rze.RequirementConstraintMembershipMeta{get kind(){return"requirement"}set kind(e){}ast(){return this._ast}isLegalVerification(){var e;let t=this.owner();return!(t!=null&&t.is(u$.RequirementUsage))||!(!((e=t.parent())===null||e===void 0)&&e.is(u$.ObjectiveMembership))?!1:(t=t.owner(),Boolean(t==null?void 0:t.isAny(u$.VerificationCaseDefinition,u$.VerificationCaseUsage)))}static create(e,t,n){return super.create(e,t,n)}};Yp.RequirementVerificationMembershipMeta=yte=$ze([(0,Tze.metamodelOf)(u$.RequirementVerificationMembership)],yte)});var vte=p(Xp=>{"use strict";var bze=Xp&&Xp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Xp,"__esModule",{value:!0});Xp.StakeholderMembershipMeta=void 0;var Cze=D(),Aze=eg(),wze=O(),gte=Xp.StakeholderMembershipMeta=class extends Aze.ParameterMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Xp.StakeholderMembershipMeta=gte=bze([(0,wze.metamodelOf)(Cze.StakeholderMembership)],gte)});var $te=p(Jp=>{"use strict";var Dze=Jp&&Jp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Jp,"__esModule",{value:!0});Jp.StateSubactionMembershipMeta=void 0;var Sze=D(),Mze=lc(),Pze=O(),_te=Jp.StateSubactionMembershipMeta=class extends Mze.FeatureMembershipMeta{constructor(){super(...arguments),this.kind="entry"}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n!=null&&n.kind&&(i.kind=n.kind),i}};Jp.StateSubactionMembershipMeta=_te=Dze([(0,Pze.metamodelOf)(Sze.StateSubactionMembership)],_te)});var Rte=p(Qp=>{"use strict";var Eze=Qp&&Qp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Qp,"__esModule",{value:!0});Qp.SubjectMembershipMeta=void 0;var Oze=D(),kze=eg(),Ize=O(),Tte=Qp.SubjectMembershipMeta=class extends kze.ParameterMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};Qp.SubjectMembershipMeta=Tte=Eze([(0,Ize.metamodelOf)(Oze.SubjectMembership)],Tte)});var Cte=p(Zp=>{"use strict";var bte=Zp&&Zp.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Zp,"__esModule",{value:!0});Zp.TransitionFeatureMembershipMeta=void 0;var Fze=D(),Nze=lc(),qze=O(),xze=Ae(),jN=Zp.TransitionFeatureMembershipMeta=class extends Nze.FeatureMembershipMeta{constructor(){super(...arguments),this._kind="trigger"}get kind(){return this._kind}ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};bte([xze.enumerable],jN.prototype,"kind",null);Zp.TransitionFeatureMembershipMeta=jN=bte([(0,qze.metamodelOf)(Fze.TransitionFeatureMembership)],jN)});var wte=p(em=>{"use strict";var Lze=em&&em.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(em,"__esModule",{value:!0});em.VariantMembershipMeta=void 0;var jze=D(),Uze=V_(),Bze=O(),Ate=em.VariantMembershipMeta=class extends Uze.OwningMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};em.VariantMembershipMeta=Ate=Lze([(0,Bze.metamodelOf)(jze.VariantMembership)],Ate)});var Ste=p(tm=>{"use strict";var Gze=tm&&tm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(tm,"__esModule",{value:!0});tm.ViewRenderingMembershipMeta=void 0;var Kze=D(),Hze=lc(),Vze=O(),Dte=tm.ViewRenderingMembershipMeta=class extends Hze.FeatureMembershipMeta{ast(){return this._ast}static create(e,t,n){return super.create(e,t,n)}};tm.ViewRenderingMembershipMeta=Dte=Gze([(0,Vze.metamodelOf)(Kze.ViewRenderingMembership)],Dte)});var UN=p(kr=>{"use strict";var Wze=kr&&kr.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Jn=kr&&kr.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Wze(e,r,t)};Object.defineProperty(kr,"__esModule",{value:!0});Jn(Xee(),kr);Jn(Qee(),kr);Jn(GA(),kr);Jn(rte(),kr);Jn(ste(),kr);Jn(cte(),kr);Jn(dte(),kr);Jn(mte(),kr);Jn(KA(),kr);Jn(hte(),kr);Jn(vte(),kr);Jn($te(),kr);Jn(Rte(),kr);Jn(Cte(),kr);Jn(wte(),kr);Jn(Ste(),kr)});var Ete=p(ll=>{"use strict";var KN=ll&&ll.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ll,"__esModule",{value:!0});ll.ConjugatedPortDefinitionMeta=ll.PortDefinitionMeta=void 0;var zze=nt(),Mte=D(),Yze=U_(),Pte=O(),BN=rg(),Xze=An(),Jze=Ae(),Qze=UN(),HA=ll.PortDefinitionMeta=class extends(0,zze.Mixin)(Yze.StructureMeta,BN.OccurrenceDefinitionMeta){get conjugatedDefinition(){return this._conjugatedDefinition}ast(){return this._ast}setName(e){var t;super.setName(e);let n=(t=this._conjugatedDefinition)===null||t===void 0?void 0:t.element();n&&(n.declaredName=this.name?`~${this.name}`:void 0)}setShortName(e){var t;super.setShortName(e);let n=(t=this._conjugatedDefinition)===null||t===void 0?void 0:t.element();n&&(n.declaredShortName=this.shortName?`~${this.shortName}`:void 0)}static create(e,t,n){let i=super.create(e,t,n),a=GN.create(e,t);return a.addHeritage([Qze.PortConjugationMeta.create(e,t),i]),i._conjugatedDefinition=Xze.OwningMembershipMeta.create(e,t,{parent:i,target:a}),n!=null&&n.declaredName&&i.setName(n.declaredName),n!=null&&n.declaredShortName&&i.setShortName(n.declaredShortName),i}collectParts(){let e=BN.OccurrenceDefinitionMeta.prototype.collectParts.call(this);return this._conjugatedDefinition&&e.push(["conjugatedDefinition",[this._conjugatedDefinition]]),e}};KN([Jze.enumerable],HA.prototype,"conjugatedDefinition",null);ll.PortDefinitionMeta=HA=KN([(0,Pte.metamodelOf)(Mte.PortDefinition,{base:"Ports::Port"})],HA);var GN=ll.ConjugatedPortDefinitionMeta=class extends HA{get originalPortDefinition(){return this._owner}ast(){return this._ast}static create(e,t,n){return BN.OccurrenceDefinitionMeta.create.call(this,e,t,n)}};ll.ConjugatedPortDefinitionMeta=GN=KN([(0,Pte.metamodelOf)(Mte.ConjugatedPortDefinition)],GN)});var kte=p(nm=>{"use strict";var Ote=nm&&nm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(nm,"__esModule",{value:!0});nm.PortUsageMeta=void 0;var rm=D(),Zze=an(),eYe=O(),tYe=uc(),HN=nm.PortUsageMeta=class extends tYe.OccurrenceUsageMeta{get isComposite(){var e;return!((e=this.owningType)===null||e===void 0)&&e.isAny(rm.PortDefinition,rm.PortUsage)?super.isComposite:!1}set isComposite(e){super.isComposite=e}defaultSupertype(){return this.isOwnedPort()?"ownedPort":this.isSubport()?"subport":"base"}isOwnedPort(){var e;return Boolean(this.isComposite&&((e=this.owner())===null||e===void 0?void 0:e.isAny(rm.PartDefinition,rm.PortUsage)))}isSubport(){var e;return Boolean(this.isComposite&&((e=this.owner())===null||e===void 0?void 0:e.isAny(rm.PortDefinition,rm.PortUsage)))}ast(){return this._ast}};Ote([Zze.enumerable],HN.prototype,"isComposite",null);nm.PortUsageMeta=HN=Ote([(0,eYe.metamodelOf)(rm.PortUsage,{base:"Ports::ports",ownedPort:"Parts::Part::ownedPorts",subport:"Ports::Port::subports"})],HN)});var Fte=p(im=>{"use strict";var rYe=im&&im.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(im,"__esModule",{value:!0});im.ConjugatedPortReferenceMeta=void 0;var nYe=D(),iYe=Mo(),aYe=jC(),sYe=O(),Ite=im.ConjugatedPortReferenceMeta=class extends aYe.ClassifierReferenceMeta{constructor(){super(...arguments),this.to=new iYe.Target}ast(){return this._ast}};im.ConjugatedPortReferenceMeta=Ite=rYe([(0,sYe.metamodelOf)(nYe.ConjugatedPortReference)],Ite)});var Nte=p(am=>{"use strict";var oYe=am&&am.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),lYe=am&&am.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&oYe(e,r,t)};Object.defineProperty(am,"__esModule",{value:!0});lYe(Fte(),am)});var xte=p(sm=>{"use strict";var uYe=sm&&sm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(sm,"__esModule",{value:!0});sm.RenderingDefinitionMeta=void 0;var cYe=D(),fYe=O(),dYe=X_(),qte=sm.RenderingDefinitionMeta=class extends dYe.PartDefinitionMeta{ast(){return this._ast}};sm.RenderingDefinitionMeta=qte=uYe([(0,fYe.metamodelOf)(cYe.RenderingDefinition,{base:"Views::Rendering"})],qte)});var jte=p(lm=>{"use strict";var pYe=lm&&lm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(lm,"__esModule",{value:!0});lm.RenderingUsageMeta=void 0;var om=D(),mYe=O(),yYe=Z_(),Lte=lm.RenderingUsageMeta=class extends yYe.PartUsageMeta{defaultSupertype(){return this.isSubrendering()?"subrendering":"base"}defaultGeneralTypes(){let e=super.defaultGeneralTypes();return this.isViewRendering()&&e.push({type:"viewRendering",specialization:om.Redefinition}),e}isSubrendering(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(om.RenderingUsage,om.RenderingDefinition))}isViewRendering(){let e=this.parent();return Boolean(e==null?void 0:e.is(om.ViewRenderingMembership))}ast(){return this._ast}namingFeature(){var e;return!((e=this.parent())===null||e===void 0)&&e.is(om.ViewRenderingMembership)?this.types(om.ReferenceSubsetting).head():super.namingFeature()}};lm.RenderingUsageMeta=Lte=pYe([(0,mYe.metamodelOf)(om.RenderingUsage,{base:"Views::renderings",subrendering:"Views::Rendering::subrenderings",viewRendering:"Views::Rendering::viewRendering"})],Lte)});var Kte=p(um=>{"use strict";var Bte=um&&um.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},VN;Object.defineProperty(um,"__esModule",{value:!0});um.SatisfyRequirementUsageMeta=void 0;var hYe=nt(),gYe=D(),vYe=O(),Ute=vN(),_Ye=a$(),Gte=Ae(),$Ye=uc(),WN=um.SatisfyRequirementUsageMeta=VN=class extends(0,hYe.Mixin)(_Ye.RequirementUsageMeta,Ute.AssertConstraintUsageMeta){get satisfactionSubject(){return this._satisfactionSubject}set satisfactionSubject(e){this._satisfactionSubject=this.swapEdgeOwnership(this._satisfactionSubject,e)}defaultSupertype(){return this.isNegated?"negated":"base"}ast(){return this._ast}featureMembers(){let e=$Ye.OccurrenceUsageMeta.prototype.featureMembers.call(this);return[this.satisfactionSubject].filter(Gte.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.satisfactionSubject&&e.push(["satisfactionSubject",[this.satisfactionSubject]])}static applySatisfyRequirementOptions(e,t){e.satisfactionSubject=t.satisfactionSubject}static create(e,t,n){let i=Ute.AssertConstraintUsageMeta.create.call(this,e,t,n);return n&&VN.applySatisfyRequirementOptions(i,n),i}};Bte([Gte.enumerable],WN.prototype,"satisfactionSubject",null);um.SatisfyRequirementUsageMeta=WN=VN=Bte([(0,vYe.metamodelOf)(gYe.SatisfyRequirementUsage,{base:"Requirements::satisfiedRequirementChecks",negated:"Requirements::notSatisfiedRequirementChecks"})],WN)});var Hte=p(cm=>{"use strict";var VA=cm&&cm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},YN;Object.defineProperty(cm,"__esModule",{value:!0});cm.SendActionUsageMeta=void 0;var TYe=D(),WA=Ae(),RYe=An(),bYe=O(),CYe=ia(),zN=z_(),c$=cm.SendActionUsageMeta=YN=class extends CYe.ActionUsageMeta{get payload(){var e;return(e=this._payload)!==null&&e!==void 0?e:this._defaultPayload}set payload(e){this._payload=this.swapEdgeOwnership(this._payload,e)}get sender(){var e;return(e=this._sender)!==null&&e!==void 0?e:this._defaultSender}set sender(e){this._sender=this.swapEdgeOwnership(this._sender,e)}get receiver(){var e;return(e=this._receiver)!==null&&e!==void 0?e:this._defaultReceiver}set receiver(e){this._receiver=this.swapEdgeOwnership(this._receiver,e)}ast(){return this._ast}featureMembers(){let e=RYe.FeatureMeta.prototype.featureMembers.call(this);return[this.payload,this.sender,this.receiver].filter(WA.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.payload&&e.push(["payload",[this.payload]]),this.sender&&e.push(["sender",[this.sender]]),this.receiver&&e.push(["body",[this.receiver]])}static applySendOptions(e,t,n){e.payload=n==null?void 0:n.payload,e.sender=n==null?void 0:n.sender,e.receiver=n==null?void 0:n.receiver,e._defaultPayload=e.swapEdgeOwnership(e._defaultPayload,(0,zN.createEmptyParameterMember)(t,e.document)),e._defaultSender=e.swapEdgeOwnership(e._defaultSender,(0,zN.createEmptyParameterMember)(t,e.document)),e._defaultReceiver=e.swapEdgeOwnership(e._defaultReceiver,(0,zN.createEmptyParameterMember)(t,e.document))}static create(e,t,n){let i=super.create(e,t,n);return YN.applySendOptions(i,e,n),i}};VA([WA.enumerable],c$.prototype,"payload",null);VA([WA.enumerable],c$.prototype,"sender",null);VA([WA.enumerable],c$.prototype,"receiver",null);cm.SendActionUsageMeta=c$=YN=VA([(0,bYe.metamodelOf)(TYe.SendActionUsage,{base:"Actions::sendActions",subaction:"Actions::Action::sendSubactions"})],c$)});var Wte=p(fm=>{"use strict";var AYe=fm&&fm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(fm,"__esModule",{value:!0});fm.StateDefinitionMeta=void 0;var wYe=D(),DYe=O(),SYe=Y_(),Vte=fm.StateDefinitionMeta=class extends SYe.ActionDefinitionMeta{constructor(){super(...arguments),this.isParallel=!1}ast(){return this._ast}static create(e,t,n){let i=super.create(e,t,n);return n&&(i.isParallel=Boolean(n.isParallel)),i}};fm.StateDefinitionMeta=Vte=AYe([(0,DYe.metamodelOf)(wYe.StateDefinition,{base:"States::StateAction"})],Vte)});var Xte=p(dm=>{"use strict";var MYe=dm&&dm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},zA;Object.defineProperty(dm,"__esModule",{value:!0});dm.SuccessionAsUsageMeta=void 0;var PYe=be(),EYe=nt(),Ms=D(),zte=iA(),OYe=O(),kYe=Q_(),Yte=dm.SuccessionAsUsageMeta=zA=class extends(0,EYe.Mixin)(zte.SuccessionMeta,kYe.ConnectorAsUsageMeta){ast(){return this._ast}defaultSupertype(){return zte.SuccessionMeta.prototype.defaultSupertype.call(this)}targetFeature(){let e=this.owner();if(!(e!=null&&e.is(Ms.Type)))return;let t=this.parent(),n=e.featureMembers(),i=n.findIndex(a=>a===t);if(!(i>=n.length))return(0,PYe.stream)(n.slice(i+1)).filter(a=>a.is(Ms.FeatureMembership)).head()}static findPreviousFeature(e,t){let n=e.owner();if(!(n!=null&&n.is(Ms.Type)))return;let i=e.parent(),a=n.featureMembers(),s=a.findIndex(o=>o===i);for(;--s>=0;){let o=a[s];if(o.is(Ms.TransitionFeatureMembership))continue;t==null||t.call(void 0,o);let u=o.element();if(u&&!u.isParameter&&!u.is(Ms.TransitionUsage)&&(!u.is(Ms.Connector)||!n.isAny(Ms.ActionDefinition,Ms.ActionUsage)&&u.is(Ms.ItemFlow)))return o}return n.is(Ms.Feature)?zA.findPreviousFeature(n,t):void 0}previousFeature(e){return zA.findPreviousFeature(this,e)}};dm.SuccessionAsUsageMeta=Yte=zA=MYe([(0,OYe.metamodelOf)(Ms.SuccessionAsUsage,{base:"Links::links",binary:"Occurrences::happensBeforeLinks"})],Yte)});var Qte=p(pm=>{"use strict";var IYe=pm&&pm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(pm,"__esModule",{value:!0});pm.SuccessionFlowConnectionUsageMeta=void 0;var FYe=nt(),NYe=D(),qYe=sA(),xYe=O(),LYe=kN(),Jte=pm.SuccessionFlowConnectionUsageMeta=class extends(0,FYe.Mixin)(qYe.SuccessionItemFlowMeta,LYe.FlowConnectionUsageMeta){ast(){return this._ast}};pm.SuccessionFlowConnectionUsageMeta=Jte=IYe([(0,xYe.metamodelOf)(NYe.SuccessionFlowConnectionUsage,{base:"Connections::successionFlowConnections",message:"Connections::successionFlowConnections"})],Jte)});var Zte=p(mm=>{"use strict";var ym=mm&&mm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},XN;Object.defineProperty(mm,"__esModule",{value:!0});mm.TransitionUsageMeta=void 0;var f$=D(),hm=Ae(),jYe=re(),UYe=O(),BYe=ia(),GYe=z_(),cc=mm.TransitionUsageMeta=XN=class extends BYe.ActionUsageMeta{get source(){return this._source}set source(e){this._source=this.swapEdgeOwnership(this._source,e)}get transitionLinkSource(){return this._transitionLinkSource}set transitionLinkSource(e){this._transitionLinkSource=this.swapEdgeOwnership(this._transitionLinkSource,e)}get payload(){return this._accepter?this._payload:void 0}set payload(e){this._payload=this.swapEdgeOwnership(this._payload,e)}get accepter(){return this._accepter}set accepter(e){this._accepter=this.swapEdgeOwnership(this._accepter,e),this._accepter&&(this._accepter._kind="trigger")}get guard(){return this._guard}set guard(e){this._guard=this.swapEdgeOwnership(this._guard,e),this._guard&&(this._guard._kind="guard")}get effect(){return this._effect}set effect(e){this._effect=this.swapEdgeOwnership(this._effect,e),this._effect&&(this._effect._kind="effect")}get then(){return this._then}set then(e){this._then=this.swapEdgeOwnership(this._then,e)}get else(){return this._else}set else(e){this._else=this.swapEdgeOwnership(this._else,e)}defaultSupertype(){return this.isStateTransition()?"stateTransition":this.isActionTransition()?"actionTransition":"base"}isActionTransition(){if(!this.isComposite)return!1;let e=this.owner();return Boolean(e==null?void 0:e.isAny(f$.ActionUsage,f$.ActionDefinition))}isStateTransition(){if(!this.isComposite)return!1;let e=this.owner();return Boolean(e==null?void 0:e.isAny(f$.StateDefinition,f$.StateUsage))}ast(){return this._ast}payloadParameter(){var e;return(e=this.payload)===null||e===void 0?void 0:e.element()}triggerActions(){var e;return(e=this.accepter)===null||e===void 0?void 0:e.element()}accepterPayloadParameter(){var e,t,n;return(n=(t=(e=this.accepter)===null||e===void 0?void 0:e.element())===null||t===void 0?void 0:t.payload)===null||n===void 0?void 0:n.element()}transitionLinkFeature(){return this.transitionLinkSource.element()}featureMembers(){let e=super.featureMembers();return[this.source,this.transitionLinkSource,this.payload,this.accepter,this.guard,this.effect,this.then,this.else].filter(hm.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e);for(let t of["source","transitionLinkSource","payload","accepter","guard","effect","then","else"]){let n=this[t];n&&e.push([t,[n]])}}static applyTransitionOptions(e,t){e.source=t.source,t.transitionLinkSource&&(e.transitionLinkSource=t.transitionLinkSource),t.payload&&(e.payload=t.payload),e.accepter=t.accepter,e.guard=t.guard,e.effect=t.effect,e.then=t.then,e.else=t.else}static create(e,t,n){let i=super.create(e,t,n);n&&XN.applyTransitionOptions(i,n);for(let a of["_transitionLinkSource","_payload"]){if(i[a])continue;let s=GYe.ReferenceUsageMeta.create(e,t),o=jYe.ParameterMembershipMeta.create(e,t,{target:s});i[a]=o,i.takeOwnership(o)}return i}};ym([hm.enumerable],cc.prototype,"source",null);ym([hm.enumerable],cc.prototype,"accepter",null);ym([hm.enumerable],cc.prototype,"guard",null);ym([hm.enumerable],cc.prototype,"effect",null);ym([hm.enumerable],cc.prototype,"then",null);ym([hm.enumerable],cc.prototype,"else",null);mm.TransitionUsageMeta=cc=XN=ym([(0,UYe.metamodelOf)(f$.TransitionUsage,{base:"Actions::transitionActions",actionTransition:"Actions::Action::decisionTransitions",stateTransition:"States::StateAction::stateTransitions"})],cc)});var tre=p(gm=>{"use strict";var KYe=gm&&gm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(gm,"__esModule",{value:!0});gm.UseCaseDefinitionMeta=void 0;var HYe=D(),VYe=O(),WYe=t$(),ere=gm.UseCaseDefinitionMeta=class extends WYe.CaseDefinitionMeta{ast(){return this._ast}};gm.UseCaseDefinitionMeta=ere=KYe([(0,VYe.metamodelOf)(HYe.UseCaseDefinition,{base:"UseCases::UseCase"})],ere)});var nre=p(vm=>{"use strict";var zYe=vm&&vm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(vm,"__esModule",{value:!0});vm.VerificationCaseDefinitionMeta=void 0;var YYe=D(),XYe=O(),JYe=t$(),rre=vm.VerificationCaseDefinitionMeta=class extends JYe.CaseDefinitionMeta{ast(){return this._ast}};vm.VerificationCaseDefinitionMeta=rre=zYe([(0,XYe.metamodelOf)(YYe.VerificationCaseDefinition,{base:"VerificationCases::VerificationCase"})],rre)});var are=p(_m=>{"use strict";var QYe=_m&&_m.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(_m,"__esModule",{value:!0});_m.VerificationCaseUsageMeta=void 0;var JN=D(),ZYe=O(),eXe=r$(),ire=_m.VerificationCaseUsageMeta=class extends eXe.CaseUsageMeta{getSubactionType(){return this.isSubVerificationCase()?"subVerificationCase":super.getSubactionType()}isSubVerificationCase(){let e=this.owner();return Boolean(this.isNonEntryExitComposite()&&(e==null?void 0:e.isAny(JN.VerificationCaseUsage,JN.VerificationCaseDefinition)))}ast(){return this._ast}};_m.VerificationCaseUsageMeta=ire=QYe([(0,ZYe.metamodelOf)(JN.VerificationCaseUsage,{base:"VerificationCases::verificationCases",subVerificationCase:"VerificationCases::VerificationCase::subVerificationCases"})],ire)});var ore=p($m=>{"use strict";var tXe=$m&&$m.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty($m,"__esModule",{value:!0});$m.ViewDefinitionMeta=void 0;var rXe=D(),nXe=O(),iXe=X_(),sre=$m.ViewDefinitionMeta=class extends iXe.PartDefinitionMeta{ast(){return this._ast}};$m.ViewDefinitionMeta=sre=tXe([(0,nXe.metamodelOf)(rXe.ViewDefinition,{base:"Views::View"})],sre)});var ure=p(Tm=>{"use strict";var aXe=Tm&&Tm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Tm,"__esModule",{value:!0});Tm.ViewUsageMeta=void 0;var QN=D(),sXe=O(),oXe=Z_(),lre=Tm.ViewUsageMeta=class extends oXe.PartUsageMeta{defaultSupertype(){return this.isSubview()?"subview":"base"}isSubview(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(QN.ViewDefinition,QN.ViewUsage))}ast(){return this._ast}};Tm.ViewUsageMeta=lre=aXe([(0,sXe.metamodelOf)(QN.ViewUsage,{base:"Views::views",subview:"Views::View::subviews"})],lre)});var fre=p(Rm=>{"use strict";var lXe=Rm&&Rm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Rm,"__esModule",{value:!0});Rm.ViewpointDefinitionMeta=void 0;var uXe=D(),cXe=O(),fXe=IA(),cre=Rm.ViewpointDefinitionMeta=class extends fXe.RequirementDefinitionMeta{ast(){return this._ast}};Rm.ViewpointDefinitionMeta=cre=lXe([(0,cXe.metamodelOf)(uXe.ViewpointDefinition,{base:"Views::ViewpointCheck"})],cre)});var pre=p(bm=>{"use strict";var dXe=bm&&bm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(bm,"__esModule",{value:!0});bm.ViewpointUsageMeta=void 0;var ZN=D(),pXe=O(),mXe=a$(),dre=bm.ViewpointUsageMeta=class extends mXe.RequirementUsageMeta{defaultSupertype(){return this.isSatisfiedViewpoint()?"satisfied":"base"}isSatisfiedViewpoint(){let e=this.owner();return Boolean(e==null?void 0:e.isAny(ZN.ViewDefinition,ZN.ViewUsage))}ast(){return this._ast}};bm.ViewpointUsageMeta=dre=dXe([(0,pXe.metamodelOf)(ZN.ViewpointUsage,{base:"Views::viewpointChecks",satisfied:"Views::View::viewpointSatisfactions"})],dre)});var mre=p(Cm=>{"use strict";var YA=Cm&&Cm.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},eq;Object.defineProperty(Cm,"__esModule",{value:!0});Cm.WhileLoopActionUsageMeta=void 0;var yXe=D(),XA=Ae(),hXe=O(),gXe=qA(),d$=Cm.WhileLoopActionUsageMeta=eq=class extends gXe.LoopActionUsageMeta{get condition(){return this._condition}set condition(e){this._condition=this.swapEdgeOwnership(this._condition,e)}get body(){return this._body}set body(e){this._body=this.swapEdgeOwnership(this._body,e)}get until(){return this._until}set until(e){this._until=this.swapEdgeOwnership(this._until,e)}ast(){return this._ast}featureMembers(){let e=super.featureMembers();return[this.condition,this.body,this.until].filter(XA.NonNullable).concat(e)}collectDeclaration(e){super.collectDeclaration(e),this.condition&&e.push(["condition",[this.condition]]),this.body&&e.push(["body",[this.body]]),this.until&&e.push(["until",[this.until]])}static applyWhileLoopOptions(e,t){e.condition=t.condition,e.body=t.body,e.until=t.until}static create(e,t,n){let i=super.create(e,t,n);return n&&eq.applyWhileLoopOptions(i,n),i}};YA([XA.enumerable],d$.prototype,"condition",null);YA([XA.enumerable],d$.prototype,"body",null);YA([XA.enumerable],d$.prototype,"until",null);Cm.WhileLoopActionUsageMeta=d$=eq=YA([(0,hXe.metamodelOf)(yXe.WhileLoopActionUsage,{base:"Actions::whileLoopActions",subaction:"Actions::Action::whileLoops"})],d$)});var tq=p(ee=>{"use strict";var vXe=ee&&ee.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),se=ee&&ee.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&vXe(e,r,t)};Object.defineProperty(ee,"__esModule",{value:!0});se(uZ(),ee);se(Y_(),ee);se(ia(),ee);se($Z(),ee);se(DZ(),ee);se(OZ(),ee);se(xZ(),ee);se(vN(),ee);se(HZ(),ee);se($N(),ee);se(RN(),ee);se(YZ(),ee);se(dN(),ee);se(mN(),ee);se(t$(),ee);se(r$(),ee);se(tee(),ee);se(aee(),ee);se(J_(),ee);se(e$(),ee);se(Q_(),ee);se(bN(),ee);se(EA(),ee);se(ng(),ee);se(lee(),ee);se(wA(),ee);se(cee(),ee);se(pee(),ee);se(DN(),ee);se($ee(),ee);se(bee(),ee);se(wee(),ee);se(kN(),ee);se(Pee(),ee);se(Oee(),ee);se(kee(),ee);se(Nee(),ee);se(xee(),ee);se(jee(),ee);se(DA(),ee);se(PA(),ee);se(Bee(),ee);se(aN(),ee);se(qA(),ee);se(Kee(),ee);se(Vee(),ee);se(zee(),ee);se(rg(),ee);se(uc(),ee);se(X_(),ee);se(Z_(),ee);se(NA(),ee);se(Ete(),ee);se(kte(),ee);se(z_(),ee);se(Nte(),ee);se(UN(),ee);se(xte(),ee);se(jte(),ee);se(IA(),ee);se(a$(),ee);se(Kte(),ee);se(Hte(),ee);se(Wte(),ee);se(MN(),ee);se(Xte(),ee);se(Qte(),ee);se(Zte(),ee);se(tg(),ee);se(tre(),ee);se(qN(),ee);se(nre(),ee);se(are(),ee);se(ore(),ee);se(ure(),ee);se(fre(),ee);se(pre(),ee);se(mre(),ee)});var wre=p(it=>{"use strict";var Ps=it&&it.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(it,"__esModule",{value:!0});it.RangeFunction=it.ExponentiationFunction=it.AdditionFunction=it.SubtractionFunction=it.LessEqualFunction=it.LessThanFunction=it.GreaterEqualFunction=it.GreaterThanFunction=it.ProdFunction=it.RemainderFunction=it.DivideFunction=void 0;var aa=Wn(),sa=ta(),Es="DataFunctions",Fa=class extends sa.BuiltinFunction{unaryNumber(e){throw new Error("Cannot evaluate unary number")}binaryNumber(e,t){throw new Error("Cannot evaluate binary numbers")}binaryString(e,t){throw new Error("Cannot evaluate binary strings")}call(e,t,n){let i=n.asArgument(e,0,t);if(e.args.length===1){if(typeof i=="number")return[this.unaryNumber(i)];throw new Error("Expected a number argument")}let a=n.asArgument(e,1,t);if(typeof i=="number"&&typeof a=="number")return[this.binaryNumber(i,a)];if(typeof i=="string"&&typeof a=="string")return[this.binaryString(i,a)];throw new Error("Mismatched argument types")}},yre=it.DivideFunction=class extends Fa{binaryNumber(e,t){if(t===0)throw new Error("Cannot divide by 0");return e/t}};it.DivideFunction=yre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.DIVIDE)],yre);var hre=it.RemainderFunction=class extends Fa{binaryNumber(e,t){if(t===0)throw new Error("Cannot use modulo operation on 0");return e%t}};it.RemainderFunction=hre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.MODULO)],hre);var gre=it.ProdFunction=class extends Fa{binaryNumber(e,t){return e*t}};it.ProdFunction=gre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.MULTIPLY)],gre);var vre=it.GreaterThanFunction=class extends Fa{binaryNumber(e,t){return e>t}binaryString(e,t){return e.localeCompare(t)>0}};it.GreaterThanFunction=vre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.GREATER)],vre);var _re=it.GreaterEqualFunction=class extends Fa{binaryNumber(e,t){return e>=t}binaryString(e,t){return e.localeCompare(t)>=0}};it.GreaterEqualFunction=_re=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.GREATER_EQUAL)],_re);var $re=it.LessThanFunction=class extends Fa{binaryNumber(e,t){return e<t}binaryString(e,t){return e.localeCompare(t)<0}};it.LessThanFunction=$re=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.LESS)],$re);var Tre=it.LessEqualFunction=class extends Fa{binaryNumber(e,t){return e<=t}binaryString(e,t){return e.localeCompare(t)<=0}};it.LessEqualFunction=Tre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.LESS_EQUAL)],Tre);var Rre=it.SubtractionFunction=class extends Fa{unaryNumber(e){return-e}binaryNumber(e,t){return e-t}};it.SubtractionFunction=Rre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.MINUS)],Rre);var bre=it.AdditionFunction=class extends Fa{unaryNumber(e){return e}binaryNumber(e,t){return e+t}binaryString(e,t){return e.concat(t)}};it.AdditionFunction=bre=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.PLUS)],bre);var Cre=it.ExponentiationFunction=class extends Fa{binaryNumber(e,t){return Math.pow(e,t)}};it.ExponentiationFunction=Cre=Ps([(0,sa.functionFor)(Es,[aa.OPERATORS.EXPONENT_1,aa.OPERATORS.EXPONENT_2])],Cre);var Are=it.RangeFunction=class extends sa.BuiltinFunction{call(e,t,n){let i=n.asNumber(e,0,t),a=n.asNumber(e,1,t);return new aa.RangeGenerator({start:i,stop:a})}};it.RangeFunction=Are=Ps([(0,sa.functionFor)(Es,aa.OPERATORS.RANGE)],Are)});var qre=p(Ht=>{"use strict";var fc=Ht&&Ht.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ht,"__esModule",{value:!0});Ht.NotEqualsFunction=Ht.ListConcatFunction=Ht.IsTypeFunction=Ht.IndexFunction=Ht.HasTypeFunction=Ht.EqualsFunction=Ht.AtFunction=Ht.AsFunction=void 0;var _Xe=yt(),Dre=D(),Na=An(),Nre=Zh(),Tr=ta(),dc="BaseFunctions";function JA(r){let e=(0,Tr.typeArgument)(r);if(!e)throw new Error("Error computing type argument");return e}var Sre=Ht.AsFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=JA(e),a=n.evaluateArgument(e,0,t);return a instanceof Nre.RangeGenerator?i.conforms((0,Tr.resultType)(0))?a:[]:a.filter(s=>(0,Tr.isType)(s,i))}};Ht.AsFunction=Sre=fc([(0,Tr.functionFor)(dc,[Na.OPERATORS.AS,Na.OPERATORS.META])],Sre);var Mre=Ht.AtFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=JA(e);return[n.evaluateArgument(e,0,t).some(s=>(0,Tr.isType)(s,i))]}};Ht.AtFunction=Mre=fc([(0,Tr.functionFor)(dc,[Na.OPERATORS.AT,Na.OPERATORS.AT_AT])],Mre);var Pre=Ht.EqualsFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=n.asArgument(e,0,t),a=n.asArgument(e,1,t);return[n.equal(i,a)]}};Ht.EqualsFunction=Pre=fc([(0,Tr.functionFor)(dc,[Na.OPERATORS.EQUALS,Na.OPERATORS.SAME])],Pre);var Ere=Ht.HasTypeFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=JA(e);return[n.evaluateArgument(e,0,t).some(s=>(0,Tr.hasType)(s,i))]}};Ht.HasTypeFunction=Ere=fc([(0,Tr.functionFor)(dc,Na.OPERATORS.HAS_TYPE)],Ere);var Ore=Ht.IndexFunction=class extends Tr.BuiltinFunction{isCollection(e,t){return!(e instanceof Nre.RangeGenerator)&&e.length===1&&typeof e[0]=="object"&&e[0].is(_Xe.Type)&&e[0].conforms(t)}indexSequence(e,t){let n=e.at(t-1);if(n===void 0)throw new Error(`Index ${t} out of bounds for sequence of size ${e.length}`);return[n]}indexCollection(e,t,n){let i=n.libraryType("Collections::Collection::elements",e);if(!(i!=null&&i.is(Dre.Feature)))throw new Error("Feature 'Collections::Collection::elements' not found");let a=n.evaluateFeatureChain([e,i],e);return this.indexSequence(a,t)}indexArray(e,t,n){let i=n.libraryType("Collections::Array::dimensions",e);if(!(i!=null&&i.is(Dre.Feature)))throw new Error("Feature 'Collections::Array::dimensions' not found");let a=n.evaluateFeatureChain([e,i],e);if(a.length!==t.length)throw new Error(`Array and index dimensions do not match: ${a.length} != ${t.length}`);if(a.length===0)return this.indexCollection(e,1,n);let s=1;for(let o=0;o<a.length;++o){let u=a.at(o),c=t.at(o);if(typeof u!="number")throw new Error(`Dimension at index ${o} is not a number`);if(typeof c!="number")throw new Error(`Index at index ${o} is not a number`);if(c>u)throw new Error(`Index at dimension ${o} is out of bounds (${c} > ${u})`);s=u*(s-1)+c}return this.indexCollection(e,s,n)}call(e,t,n){let i=n.evaluateArgument(e,0,t),a=n.evaluateArgument(e,1,t);if(this.isCollection(i,"Collections::Array"))return this.indexArray(i.at(0),a,n);if(a.length===1){let s=a.at(0);if(typeof s!="number")throw new Error("Index is not a number");return this.isCollection(i,"Collections::OrderedCollection")?this.indexCollection(i.at(0),s,n):this.indexSequence(i,s)}throw new Error("Cannot use multi-dimensional index on a one-dimensional sequence")}};Ht.IndexFunction=Ore=fc([(0,Tr.functionFor)(dc,Na.OPERATORS.INDEX)],Ore);var kre=Ht.IsTypeFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=JA(e);return[n.evaluateArgument(e,0,t).every(s=>(0,Tr.isType)(s,i))]}};Ht.IsTypeFunction=kre=fc([(0,Tr.functionFor)(dc,Na.OPERATORS.IS_TYPE)],kre);var Ire=Ht.ListConcatFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=(0,Tr.normalize)(n.evaluateArgument(e,0,t)),a=(0,Tr.normalize)(n.evaluateArgument(e,1,t));return i.concat(...a)}};Ht.ListConcatFunction=Ire=fc([(0,Tr.functionFor)(dc,Na.OPERATORS.COMMA)],Ire);var Fre=Ht.NotEqualsFunction=class extends Tr.BuiltinFunction{call(e,t,n){let i=n.asArgument(e,0,t),a=n.asArgument(e,1,t);return[!n.equal(i,a)]}};Ht.NotEqualsFunction=Fre=fc([(0,Tr.functionFor)(dc,[Na.OPERATORS.NOT_EQUALS,Na.OPERATORS.NOT_SAME])],Fre)});var Bre=p(Qn=>{"use strict";var QA=Qn&&Qn.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Qn,"__esModule",{value:!0});Qn.XorFunction=Qn.NotFunction=Qn.OrFunction=Qn.AndFunction=void 0;var ZA=An(),p$=ta(),ew="DataFunctions",ig=class extends p$.BuiltinFunction{unary(e){throw new Error("Unary function is not implemented")}binary(e,t){throw new Error("Binary function is not implemented")}call(e,t,n){let i=n.asBoolean(e,0,t);if(e.args.length===1)return[this.unary(i)];let a=n.asBoolean(e,1,t);return[this.binary(i,a)]}},xre=Qn.AndFunction=class extends ig{binary(e,t){return e&&t}};Qn.AndFunction=xre=QA([(0,p$.functionFor)(ew,ZA.OPERATORS.BITWISE_AND)],xre);var Lre=Qn.OrFunction=class extends ig{binary(e,t){return e||t}};Qn.OrFunction=Lre=QA([(0,p$.functionFor)(ew,ZA.OPERATORS.BITWISE_OR)],Lre);var jre=Qn.NotFunction=class extends ig{unary(e){return!e}};Qn.NotFunction=jre=QA([(0,p$.functionFor)(ew,ZA.OPERATORS.NOT)],jre);var Ure=Qn.XorFunction=class extends ig{binary(e,t){return e!==t}};Qn.XorFunction=Ure=QA([(0,p$.functionFor)(ew,ZA.OPERATORS.XOR)],Ure)});var Xre=p(Ir=>{"use strict";var ag=Ir&&Ir.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Ir,"__esModule",{value:!0});Ir.NullCoalescingFunction=Ir.DotFunction=Ir.ConditionalFunction=Ir.ConditionalOrFunction=Ir.ConditionalImpliesFunction=Ir.ConditionalAndFunction=void 0;var Gre=D(),sg=An(),$Xe=Zh(),Os=ta(),og="ControlFunctions",m$=class extends Os.BuiltinFunction{call(e,t,n){let i=n.asBoolean(e,0,t);return this.test(i)?[this.result()]:[n.asBoolean(e,1,t)]}},Kre=Ir.ConditionalAndFunction=class extends m${test(e){return!e}result(){return!1}};Ir.ConditionalAndFunction=Kre=ag([(0,Os.functionFor)(og,sg.OPERATORS.AND)],Kre);var Hre=Ir.ConditionalImpliesFunction=class extends m${test(e){return!e}result(){return!0}};Ir.ConditionalImpliesFunction=Hre=ag([(0,Os.functionFor)(og,sg.OPERATORS.IMPLIES)],Hre);var Vre=Ir.ConditionalOrFunction=class extends m${test(e){return e}result(){return!0}};Ir.ConditionalOrFunction=Vre=ag([(0,Os.functionFor)(og,sg.OPERATORS.OR)],Vre);var Wre=Ir.ConditionalFunction=class extends Os.BuiltinFunction{call(e,t,n){let i=n.asBoolean(e,0,t);return n.evaluateArgument(e,i?1:2,t)}};Ir.ConditionalFunction=Wre=ag([(0,Os.functionFor)(og,sg.OPERATORS.IF)],Wre);var zre=Ir.DotFunction=class extends Os.BuiltinFunction{call(e,t,n){let i=n.evaluateArgument(e,0,t),a=e.targetFeature();if(!a)throw new Error("Missing target feature");if(i instanceof $Xe.RangeGenerator)return[];if(!t.is(Gre.Type))throw new Error("Cannot evaluate feature chain for non-type targets");return i.filter(s=>typeof s=="object"&&s.is(Gre.Feature)).flatMap(s=>{let o=[s];return a.chainingFeatures.length>0?o.push(...a.chainingFeatures):o.push(a),(0,Os.normalize)(n.evaluateFeatureChain(o,t))})}};Ir.DotFunction=zre=ag([(0,Os.functionFor)(og,sg.IMPLICIT_OPERATORS.DOT)],zre);var Yre=Ir.NullCoalescingFunction=class extends Os.BuiltinFunction{call(e,t,n){let i=n.evaluateArgument(e,0,t);return i.length===0?n.evaluateArgument(e,1,t):i}};Ir.NullCoalescingFunction=Yre=ag([(0,Os.functionFor)(og,sg.OPERATORS.NULL_COALESCING)],Yre)});var tne=p(ul=>{"use strict";var Zre=ul&&ul.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(ul,"__esModule",{value:!0});ul.SumFunction=ul.ProductFunction=void 0;var tw=ta(),ene="NumericalFunctions",Jre=ul.ProductFunction=class extends tw.BuiltinFunction{call(e,t,n){let i=n.evaluateArgument(e,0,t),a=1;for(let s of i){if(typeof s!="number")throw new Error("Not a number argument");a*=s}return[a]}};ul.ProductFunction=Jre=Zre([(0,tw.functionFor)(ene,"product")],Jre);var Qre=ul.SumFunction=class extends tw.BuiltinFunction{call(e,t,n){let i=n.evaluateArgument(e,0,t),a=0;for(let s of i){if(typeof s!="number")throw new Error("Not a number argument");a+=s}return[a]}};ul.SumFunction=Qre=Zre([(0,tw.functionFor)(ene,"sum")],Qre)});var sne=p(Zn=>{"use strict";var rw=Zn&&Zn.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(Zn,"__esModule",{value:!0});Zn.SizeFunction=Zn.NotEmptyFunction=Zn.IsEmptyFunction=Zn.IncludesFunction=void 0;var pc=ta(),nw="SequenceFunctions",rne=Zn.IncludesFunction=class extends pc.BuiltinFunction{call(e,t,n){let i=n.evaluateArgument(e,0,t),a=n.asArgument(e,1,t);return[i.some(s=>n.equal(s,a))]}};Zn.IncludesFunction=rne=rw([(0,pc.functionFor)(nw,"includes")],rne);var nne=Zn.IsEmptyFunction=class extends pc.BuiltinFunction{call(e,t,n){return[n.evaluateArgument(e,0,t).length===0]}};Zn.IsEmptyFunction=nne=rw([(0,pc.functionFor)(nw,"isEmpty")],nne);var ine=Zn.NotEmptyFunction=class extends pc.BuiltinFunction{call(e,t,n){return[n.evaluateArgument(e,0,t).length!==0]}};Zn.NotEmptyFunction=ine=rw([(0,pc.functionFor)(nw,"notEmpty")],ine);var ane=Zn.SizeFunction=class extends pc.BuiltinFunction{call(e,t,n){return[n.evaluateArgument(e,0,t).length]}};Zn.SizeFunction=ane=rw([(0,pc.functionFor)(nw,"size")],ane)});var fne=p(cl=>{"use strict";var une=cl&&cl.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(cl,"__esModule",{value:!0});cl.StringLengthFunction=cl.SubstringFunction=void 0;var iw=ta(),cne="StringFunctions",one=cl.SubstringFunction=class extends iw.BuiltinFunction{call(e,t,n){let i=n.asString(e,0,t),a=n.asNumber(e,1,t),s=n.asNumber(e,2,t);if(a<1)throw new Error(`Start ${a} is out bounds`);if(s>i.length)throw new Error(`End ${s} is out bounds for string of size ${i.length}`);if(a>s+1)throw new Error("Start is beyond end");return[i.substring(a-1,s)]}};cl.SubstringFunction=one=une([(0,iw.functionFor)(cne,"Substring")],one);var lne=cl.StringLengthFunction=class extends iw.BuiltinFunction{call(e,t,n){return[n.asString(e,0,t).length]}};cl.StringLengthFunction=lne=une([(0,iw.functionFor)(cne,"Length")],lne)});var rq=p(oa=>{"use strict";var TXe=oa&&oa.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Am=oa&&oa.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&TXe(e,r,t)};Object.defineProperty(oa,"__esModule",{value:!0});Am(wre(),oa);Am(qre(),oa);Am(Bre(),oa);Am(Xre(),oa);Am(tne(),oa);Am(sne(),oa);Am(fne(),oa)});var mne=p(mc=>{"use strict";var wm=mc&&mc.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a};Object.defineProperty(mc,"__esModule",{value:!0});mc.BuiltinFunctionEvaluator=mc.defaultEvaluators=void 0;var Br=D(),dne=An(),nq=ta();rq();var RXe=So(),bXe=Zh(),pne={};function Dm(...r){return function(e,t,n){r.forEach(i=>pne[i]=n.value)}}function CXe(){return RXe.typeIndex.expandToDerivedTypes(pne)}mc.defaultEvaluators=CXe;var fl=class{constructor(e,t){this.stack=[],this.evaluators=t,this.util=e.Util,this.index=e.workspace.IndexManager}get currentEvaluationStack(){return this.stack}libraryType(e,t){var n;let i;if(t){let a=t;for(;;){let s=a.owner();if(!s)break;a=s}i=(n=a.ast())===null||n===void 0?void 0:n.$document}return this.index.findType(e,i)}evaluate(e,t){this.stack.push(e);let n=this.evaluators.get(e.nodeType());if(n){let i=n.call(this,e,t);return this.stack.pop(),i}throw new Error(`No evaluator found for ${e.nodeType()}`)}targetFeatureFor(e){if(e.is(Br.Feature))return e;let t=dne.FeatureMeta.create(this.util.idProvider,e.document);if(e.is(Br.Type)){let n=dne.FeatureTypingMeta.create(this.util.idProvider,e.document,{isImplied:!0});t.addHeritage([n,e])}return t}evaluateFeatureChain(e,t){if(e.length===0)return[];let n=this.evaluateFeature(e[0],t);if(e.length===1||n instanceof bXe.RangeGenerator)return n;let i=e.slice(1);return n.flatMap(a=>{if(typeof a!="object"||!a.is(Br.Type))return[a];let s=a.is(Br.Feature)?t===a?a:this.util.chainFeatures(this.targetFeatureFor(t),a):t;return(0,nq.normalize)(this.evaluateFeatureChain(i,s))})}evaluateNull(){return[]}evaluateInfinity(e){return[e]}evaluateLiteral(e){return[e.literal]}evaluateArgument(e,t,n){let i=e.args.at(t);if(!i)throw new Error(`Missing argument at position ${t}`);return this.evaluate(i,n)}asBoolean(e,t,n){let i=this.asArgument(e,t,n);if(typeof i!="boolean")throw new Error("Not a boolean");return i}asString(e,t,n){let i=this.asArgument(e,t,n);if(typeof i!="string")throw new Error("Not a string");return i}asNumber(e,t,n){let i=this.asArgument(e,t,n);if(typeof i!="number")throw new Error("Not a number");return i}asArgument(e,t,n){let i=this.evaluateArgument(e,t,n);if(i.length>1)throw new Error("Too many values, expected 1");return i.length===0?null:i.at(0)}equal(e,t){return e===t}evaluateInvocation(e,t){let n=e.getFunction();if(!n)throw new Error("No associated function found");let i=(0,nq.builtinFunction)(n);if(!i)throw new Error("No associated builtin function found");return i.call(e,t,this)}evaluateFeatureReference(e,t){var n;let i=(n=e.expression)===null||n===void 0?void 0:n.element();if(!i)throw new Error("No referenced element");let a=t.is(Br.Type)?t:void 0;if(i.is(Br.FeatureReference)){let s=i.to.target;if(!s)throw new Error("No linked reference");if(!a)throw new Error("Cannot evaluate feature reference expression in a non-type context");return this.evaluateFeature(s,a)}if(i.is(Br.TypeReference))return this.evaluateReference(i);if(i.is(Br.InlineExpression))return this.evaluate(i,t);if(!a)throw new Error("Cannot evaluate feature reference expression in a non-type context");return this.evaluateFeature(i,a)}evaluateMetadataAccess(e,t){let n=e.reference;if(!n)throw new Error("No linked reference");let i=[...n.allMetadata()],a=n.metaclass;return a&&i.push(a),i}evaluateFeature(e,t){var n,i,a;if(e.conforms("Base::Anything::self"))return[this.targetFeatureFor(t)];if(e.chainings.length>0)return this.evaluateFeatureChain(e.chainingFeatures,t);let s=t.is(Br.Feature)&&t.chainings.length>0?[...t.chainingFeatures]:[t];for(let u of s.reverse()){if(u.is(Br.MetadataFeature)&&e.conforms("Metaobjects::Metaobject::annotatedElement")){let f=(n=u.annotatedElements().at(0))!==null&&n!==void 0?n:u.owner(),d=f==null?void 0:f.metaclass;return d?[d]:[]}if((0,nq.isMetaclassFeature)(u)){if(e.is(Br.Expression))continue;return[]}let c=u.featureMembers().map(f=>f.element()).find(f=>f==null?void 0:f.allTypes(Br.Redefinition).includes(e));if(c){let f=(i=c.value)===null||i===void 0?void 0:i.element();if(f)return this.evaluate(f,u)}}let o=(a=e.value)===null||a===void 0?void 0:a.element();return o?this.evaluate(o,t):[e]}evaluateReference(e){let t=e.to.target;if(!t)throw new Error("No linked reference");return[t]}};mc.BuiltinFunctionEvaluator=fl;wm([Dm(Br.NullExpression)],fl.prototype,"evaluateNull",null);wm([Dm(Br.LiteralInfinity)],fl.prototype,"evaluateInfinity",null);wm([Dm(Br.LiteralBoolean,Br.LiteralNumber,Br.LiteralString)],fl.prototype,"evaluateLiteral",null);wm([Dm(Br.InvocationExpression)],fl.prototype,"evaluateInvocation",null);wm([Dm(Br.FeatureReferenceExpression)],fl.prototype,"evaluateFeatureReference",null);wm([Dm(Br.MetadataAccessExpression)],fl.prototype,"evaluateMetadataAccess",null);wm([Dm(Br.ElementReference)],fl.prototype,"evaluateReference",null)});var yne=p(dl=>{"use strict";var AXe=dl&&dl.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),aw=dl&&dl.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&AXe(e,r,t)};Object.defineProperty(dl,"__esModule",{value:!0});aw(mne(),dl);aw(rq(),dl);aw(Zh(),dl);aw(ta(),dl)});var aq=p(sw=>{"use strict";Object.defineProperty(sw,"__esModule",{value:!0});sw.implicitIndex=void 0;var wXe=O(),DXe=So();An();tq();var iq=class{constructor(){this.implicitMapping=new Map;let e=DXe.typeIndex.expandAndMerge(wXe.IMPLICIT_MAP);for(let[t,n]of e.entries())for(let[i,a]of n.reverse())this.add(t,i,a)}add(e,t,n){this.implicitMapping.set(this.makeKey(e,t),n)}get(e,t="base"){var n;return(n=this.implicitMapping.get(this.makeKey(e,t)))!==null&&n!==void 0?n:""}makeKey(e,t){return`${e}^${t}`}};sw.implicitIndex=new iq});var y$=p(qa=>{"use strict";Object.defineProperty(qa,"__esModule",{value:!0});qa.distance=qa.newLineCount=qa.findChildren=qa.getNextNode=qa.getPreviousNode=void 0;var SXe=be();function MXe(r,e=!0){for(;r.parent;){let t=r.parent,n=t.children.indexOf(r);for(;n>0;){n--;let i=t.children[n];if(e||!i.hidden)return i}r=t}}qa.getPreviousNode=MXe;function PXe(r,e=!0){for(;r.parent;){let t=r.parent,n=t.children.indexOf(r),i=t.children.length-1;for(;n<i;){n++;let a=t.children[n];if(e||!a.hidden)return a}r=t}}qa.getNextNode=PXe;function EXe(r,e){return!(r.end.line<e.start.line||r.start.line>e.end.line||r.end.line===e.start.line&&r.end.character<e.start.character||r.start.line===e.end.line&&r.start.character>e.end.character)}function OXe(r,e=r.range){let t=[],n=(0,SXe.streamCst)(r).iterator(),i=n.next(),a=r.element;for(;!i.done;)(i.value.element!==a||i.value.hidden)&&(n.prune(),EXe(e,i.value.range)&&t.push(i.value)),i=n.next();return t}qa.findChildren=OXe;function kXe(r,e){return!r||!e?0:e.range.start.line-r.range.end.line}qa.newLineCount=kXe;function IXe(r,e){return!r||!e?0:e.offset-r.end}qa.distance=IXe});function sq({onlyFirst:r=!1}={}){let e=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(e,r?void 0:"g")}var hne=RD(()=>{});function oq(r){if(typeof r!="string")throw new TypeError(`Expected a \`string\`, got \`${typeof r}\``);return r.replace(FXe,"")}var FXe,gne=RD(()=>{hne();FXe=sq()});var _ne=p((X$t,lq)=>{var yc={};typeof lq>"u"?window.eastasianwidth=yc:lq.exports=yc;yc.eastAsianWidth=function(r){var e=r.charCodeAt(0),t=r.length==2?r.charCodeAt(1):0,n=e;return 55296<=e&&e<=56319&&56320<=t&&t<=57343&&(e&=1023,t&=1023,n=e<<10|t,n+=65536),n==12288||65281<=n&&n<=65376||65504<=n&&n<=65510?"F":n==8361||65377<=n&&n<=65470||65474<=n&&n<=65479||65482<=n&&n<=65487||65490<=n&&n<=65495||65498<=n&&n<=65500||65512<=n&&n<=65518?"H":4352<=n&&n<=4447||4515<=n&&n<=4519||4602<=n&&n<=4607||9001<=n&&n<=9002||11904<=n&&n<=11929||11931<=n&&n<=12019||12032<=n&&n<=12245||12272<=n&&n<=12283||12289<=n&&n<=12350||12353<=n&&n<=12438||12441<=n&&n<=12543||12549<=n&&n<=12589||12593<=n&&n<=12686||12688<=n&&n<=12730||12736<=n&&n<=12771||12784<=n&&n<=12830||12832<=n&&n<=12871||12880<=n&&n<=13054||13056<=n&&n<=19903||19968<=n&&n<=42124||42128<=n&&n<=42182||43360<=n&&n<=43388||44032<=n&&n<=55203||55216<=n&&n<=55238||55243<=n&&n<=55291||63744<=n&&n<=64255||65040<=n&&n<=65049||65072<=n&&n<=65106||65108<=n&&n<=65126||65128<=n&&n<=65131||110592<=n&&n<=110593||127488<=n&&n<=127490||127504<=n&&n<=127546||127552<=n&&n<=127560||127568<=n&&n<=127569||131072<=n&&n<=194367||177984<=n&&n<=196605||196608<=n&&n<=262141?"W":32<=n&&n<=126||162<=n&&n<=163||165<=n&&n<=166||n==172||n==175||10214<=n&&n<=10221||10629<=n&&n<=10630?"Na":n==161||n==164||167<=n&&n<=168||n==170||173<=n&&n<=174||176<=n&&n<=180||182<=n&&n<=186||188<=n&&n<=191||n==198||n==208||215<=n&&n<=216||222<=n&&n<=225||n==230||232<=n&&n<=234||236<=n&&n<=237||n==240||242<=n&&n<=243||247<=n&&n<=250||n==252||n==254||n==257||n==273||n==275||n==283||294<=n&&n<=295||n==299||305<=n&&n<=307||n==312||319<=n&&n<=322||n==324||328<=n&&n<=331||n==333||338<=n&&n<=339||358<=n&&n<=359||n==363||n==462||n==464||n==466||n==468||n==470||n==472||n==474||n==476||n==593||n==609||n==708||n==711||713<=n&&n<=715||n==717||n==720||728<=n&&n<=731||n==733||n==735||768<=n&&n<=879||913<=n&&n<=929||931<=n&&n<=937||945<=n&&n<=961||963<=n&&n<=969||n==1025||1040<=n&&n<=1103||n==1105||n==8208||8211<=n&&n<=8214||8216<=n&&n<=8217||8220<=n&&n<=8221||8224<=n&&n<=8226||8228<=n&&n<=8231||n==8240||8242<=n&&n<=8243||n==8245||n==8251||n==8254||n==8308||n==8319||8321<=n&&n<=8324||n==8364||n==8451||n==8453||n==8457||n==8467||n==8470||8481<=n&&n<=8482||n==8486||n==8491||8531<=n&&n<=8532||8539<=n&&n<=8542||8544<=n&&n<=8555||8560<=n&&n<=8569||n==8585||8592<=n&&n<=8601||8632<=n&&n<=8633||n==8658||n==8660||n==8679||n==8704||8706<=n&&n<=8707||8711<=n&&n<=8712||n==8715||n==8719||n==8721||n==8725||n==8730||8733<=n&&n<=8736||n==8739||n==8741||8743<=n&&n<=8748||n==8750||8756<=n&&n<=8759||8764<=n&&n<=8765||n==8776||n==8780||n==8786||8800<=n&&n<=8801||8804<=n&&n<=8807||8810<=n&&n<=8811||8814<=n&&n<=8815||8834<=n&&n<=8835||8838<=n&&n<=8839||n==8853||n==8857||n==8869||n==8895||n==8978||9312<=n&&n<=9449||9451<=n&&n<=9547||9552<=n&&n<=9587||9600<=n&&n<=9615||9618<=n&&n<=9621||9632<=n&&n<=9633||9635<=n&&n<=9641||9650<=n&&n<=9651||9654<=n&&n<=9655||9660<=n&&n<=9661||9664<=n&&n<=9665||9670<=n&&n<=9672||n==9675||9678<=n&&n<=9681||9698<=n&&n<=9701||n==9711||9733<=n&&n<=9734||n==9737||9742<=n&&n<=9743||9748<=n&&n<=9749||n==9756||n==9758||n==9792||n==9794||9824<=n&&n<=9825||9827<=n&&n<=9829||9831<=n&&n<=9834||9836<=n&&n<=9837||n==9839||9886<=n&&n<=9887||9918<=n&&n<=9919||9924<=n&&n<=9933||9935<=n&&n<=9953||n==9955||9960<=n&&n<=9983||n==10045||n==10071||10102<=n&&n<=10111||11093<=n&&n<=11097||12872<=n&&n<=12879||57344<=n&&n<=63743||65024<=n&&n<=65039||n==65533||127232<=n&&n<=127242||127248<=n&&n<=127277||127280<=n&&n<=127337||127344<=n&&n<=127386||917760<=n&&n<=917999||983040<=n&&n<=1048573||1048576<=n&&n<=1114109?"A":"N"};yc.characterLength=function(r){var e=this.eastAsianWidth(r);return e=="F"||e=="W"||e=="A"?2:1};function vne(r){return r.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g)||[]}yc.length=function(r){for(var e=vne(r),t=0,n=0;n<e.length;n++)t=t+this.characterLength(e[n]);return t};yc.slice=function(r,e,t){textLen=yc.length(r),e=e||0,t=t||1,e<0&&(e=textLen+e),t<0&&(t=textLen+t);for(var n="",i=0,a=vne(r),s=0;s<a.length;s++){var o=a[s],u=yc.length(o);if(i>=e-(u==2?1:0))if(i+u<=t)n+=o;else break;i+=u}return n}});var Tne=p((J$t,$ne)=>{$ne.exports=()=>/[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC3\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC08\uDC26](?:\u200D\u2B1B)?|[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC2\uDECE-\uDEDB\uDEE0-\uDEE8]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF-\uDDB3\uDDBC\uDDBD]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g});var Ane={};kse(Ane,{default:()=>Cne});function Cne(r,e){if(typeof r!="string"||r.length===0||(e={ambiguousIsNarrow:!0,countAnsiEscapeCodes:!1,...e},e.countAnsiEscapeCodes||(r=oq(r)),r.length===0))return 0;let t=e.ambiguousIsNarrow?1:2,n=0;for(let{segment:i}of new Intl.Segmenter().segment(r)){let a=i.codePointAt(0);if(a<=31||a>=127&&a<=159||a>=768&&a<=879)continue;if((0,bne.default)().test(i)){n+=2;continue}switch(Rne.default.eastAsianWidth(i)){case"F":case"W":{n+=2;break}case"A":{n+=t;break}default:n+=1}}return n}var Rne,bne,wne=RD(()=>{gne();Rne=bD(_ne(),1),bne=bD(Tne(),1)});var lw=p(oe=>{"use strict";var NXe=oe&&oe.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(oe,"__esModule",{value:!0});oe.unwrapIndent=oe.appendFill=oe.getLabel=oe.inheritLabel=oe.visitDoc=oe.getDocKind=oe.DefaultPrinterConfig=oe.addAlignment=oe.join=oe.literals=oe.brackets=oe.keyword=oe.text=oe.label=oe.cursor=oe.literalline=oe.hardline=oe.softline=oe.line=oe.literallineWithoutBreakParent=oe.hardlineWithoutBreakParent=oe.trim=oe.breakParent=oe.lineSuffixBoundary=oe.lineSuffix=oe.indentIfBreak=oe.ifBreak=oe.fill=oe.dedentToRoot=oe.markAsRoot=oe.conditionalGroup=oe.group=oe.align=oe.dedent=oe.indent=void 0;var qXe=NXe((wne(),Ise(Ane))),ow=Pe(),xXe=new RegExp(["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"].join("|"));function LXe(r){return r.replace(xXe,"")}function jXe(r){return Intl.Segmenter?(0,qXe.default)(r):LXe(r).length}function Sne(r){return{kind:"indent",contents:r}}oe.indent=Sne;function UXe(r){return h$(-1,r)}oe.dedent=UXe;function h$(r,e){return{kind:"align",prefix:r,contents:e}}oe.align=h$;function Mne(r,e={}){return{kind:"group",id:e.id,contents:r,break:Boolean(e.shouldBreak),expandedStates:e.expandedStates}}function BXe(r,e={}){return Mne(r,e)}oe.group=BXe;function GXe(r,e={}){return Mne(r[0],Object.assign(Object.assign({},e),{expandedStates:r}))}oe.conditionalGroup=GXe;function KXe(r){return{kind:"root",contents:r}}oe.markAsRoot=KXe;function HXe(r){return h$(Number.NEGATIVE_INFINITY,r)}oe.dedentToRoot=HXe;function Pne(r){return{kind:"fill",parts:r}}oe.fill=Pne;function VXe(r,e,t){return{kind:"if-break",onBreak:r,onFlat:e,groupId:t}}oe.ifBreak=VXe;function WXe(r,e){return Object.assign({kind:"indent-if-break",contents:r},e)}oe.indentIfBreak=WXe;function zXe(r){return{kind:"line-suffix",contents:r}}oe.lineSuffix=zXe;oe.lineSuffixBoundary={kind:"line-suffix-boundary"};oe.breakParent={kind:"break-parent"};oe.trim={kind:"trim"};oe.hardlineWithoutBreakParent={kind:"line",mode:"hard"};oe.literallineWithoutBreakParent={kind:"line",mode:"hard-literal"};oe.line={kind:"line",mode:"auto"};oe.softline={kind:"line",mode:"soft"};oe.hardline=[oe.hardlineWithoutBreakParent,oe.breakParent];oe.literalline=[oe.literallineWithoutBreakParent,oe.breakParent];oe.cursor={kind:"cursor"};function Ene(r,e){return r?{kind:"label",label:r,contents:e}:e}oe.label=Ene;function Rr(r,e={}){let t;return Object.assign(Object.assign({kind:"text",contents:r},e),{get width(){return t!==void 0?t:t=jXe(r)}})}oe.text=Rr;function YXe(r){return Rr(r,{type:ow.SemanticTokenTypes.keyword})}oe.keyword=YXe;oe.brackets={round:{open:Rr("("),close:Rr(")")},square:{open:Rr("["),close:Rr("]")},curly:{open:Rr("{"),close:Rr("}")},angle:{open:Rr("<"),close:Rr(">")}};oe.literals={true:Rr("true",{type:ow.SemanticTokenTypes.keyword}),false:Rr("false",{type:ow.SemanticTokenTypes.keyword}),null:Rr("null",{type:ow.SemanticTokenTypes.keyword}),dot:Rr("."),comma:Rr(","),colon:Rr(":"),semicolon:Rr(";"),tilde:Rr("~"),doublecolon:Rr("::"),emptytext:Rr(""),space:Rr(" "),tab:Rr("	"),lf:Rr(`
`),crlf:Rr(`\r
`)};function XXe(r,e,t=!1){let n=e.flatMap(i=>[i,r]);return t||n.pop(),n}oe.join=XXe;function JXe(r,e,t){if(e<=0)return r;let n=Math.floor(e/t),i=r,a=e%t;a>0&&(i=h$(a,i));for(let s=0;s<n;s++)i=Sne(i);return h$(Number.NEGATIVE_INFINITY,i)}oe.addAlignment=JXe;oe.DefaultPrinterConfig={lineWidth:100,tabWidth:4,useSpaces:!0,lineEnd:`
`,addFinalNewline:!0,highlighting:!1};function One(r){return"kind"in r?r.kind:"array"}oe.getDocKind=One;var QXe={"break-parent"(){},"if-break"(r,e){e.push(r.onFlat,r.onBreak)},"indent-if-break"(r,e){e.push(r.contents)},"line-suffix"(r,e){e.push(r.contents)},"line-suffix-boundary"(){},align(r,e){e.push(r.contents)},array(r,e){e.push(...r.slice().reverse())},cursor(){},fill(r,e){e.push(...r.parts.slice().reverse())},group(r,e,t){t&&r.expandedStates&&r.expandedStates.length>0?e.push(...r.expandedStates.slice().reverse()):e.push(r.contents)},indent(r,e){e.push(r.contents)},label(r,e){e.push(r.contents)},line(){},root(r,e){e.push(r.contents)},text(){},trim(){}},Dne=Symbol("DocVisitorExitMarker");function ZXe(r,e){var t;let n=[r],i=e.traverseOptionalGroups===!0;for(;n.length>0;){let a=n.pop();if(a===Dne){(t=e.exit)===null||t===void 0||t.call(e,n.pop());continue}if(e.exit&&n.push(a,Dne),e.enter(a)===!1)continue;let s=One(a);QXe[s](a,n,i)}}oe.visitDoc=ZXe;function eJe(r,e){let t=r;return t.kind==="label"?Ene(t.label,e(t.contents)):e(r)}oe.inheritLabel=eJe;function tJe(r){let e=r;return e.kind==="label"?e.label:void 0}oe.getLabel=tJe;function rJe(r,...e){let t=r;return t.kind==="fill"?(t.parts.push(...e),t):Pne([r,...e])}oe.appendFill=rJe;function nJe(r){let e=r;return e.kind==="indent"||e.kind==="align"?e.contents:e}oe.unwrapIndent=nJe});var dq=p(sr=>{"use strict";Object.defineProperty(sr,"__esModule",{value:!0});sr.printInnerComments=sr.surroundWithComments=sr.printOuterComments=sr.printTrailingComment=sr.printLeadingComment=sr.printComment=sr.printKerMLNote=sr.AbstractKerMLCommentVisitor=sr.trimComment=sr.trimBlockComment=sr.trimLineComment=sr.visitComments=void 0;var uq=be(),g$=y$(),wt=lw(),iJe=Pe(),cq=y$();function aJe(r,e){let t=(0,uq.streamCst)(r).iterator(),n,i=[],a=[],s,o,u=f=>{var d,m;let h=f&&(0,uq.isLeafCstNode)(f),y=f==null?void 0:f.element;if(a.at(-1)!==y){let w=!(f!=null&&f.hidden)&&(!y||!a.includes(y));if(y){o=y;let S=a.findLastIndex(C=>C===y.$container||C===y);S===-1?s=void 0:s=a.at(S+1),a.length=S+1,a.push(y)}else a.length=0,s=o,o=void 0;w&&i.forEach(S=>{var C;let{comment:b}=S;S.following||((0,g$.distance)((C=b.$enclosingNode)===null||C===void 0?void 0:C.$cstNode,o==null?void 0:o.$cstNode)<=0&&(b.$followingNode=o),S.following=!0)})}if(h&&f.hidden){let w=e.getKind(f);w&&i.push({comment:{$previous:n,$cstNode:f,$precedingNode:(0,g$.distance)(s==null?void 0:s.$cstNode,f.element.$cstNode)<=0?s:void 0,$enclosingNode:f==null?void 0:f.element,segment:{offset:f.offset,end:f.end,length:f.length,range:f.range},placement:"ownLine",kind:w,text:(m=(d=e.trim)===null||d===void 0?void 0:d.call(e,f.text,w))!==null&&m!==void 0?m:f.text},following:!1,next:!1,ready:!1});return}(!f||h)&&(i.forEach(w=>{let{comment:S}=w;w.ready=!0,!w.next&&(S.$next=f,f&&f.range.start.line===S.segment.range.end.line?S.placement="remaining":S.$previous&&S.$previous.range.end.line===S.segment.range.start.line&&(S.placement="endOfLine"),w.next=!0)}),n=f),i=i.filter(w=>!w.ready||!w.following?!0:(e.visit(w.comment),!1))},c=t.next();for(;!c.done;){let f=c.value;u(f),c=t.next()}u(void 0)}sr.visitComments=aJe;function kne(r){return r.substring(2)}sr.trimLineComment=kne;function Ine(r){return r.substring(3,r.length-2)}sr.trimBlockComment=Ine;function Fne(r,e){switch(e){case"line":return kne(r);case"block":return Ine(r);default:(0,uq.assertUnreachable)(e)}}sr.trimComment=Fne;var fq=class{getKind(e){switch(e.tokenType.name){case"SL_NOTE":return"line";case"ML_NOTE":return"block";default:return}}trim(e,t){return Fne(e,t)}};sr.AbstractKerMLCommentVisitor=fq;var hc={type:iJe.SemanticTokenTypes.comment},sJe={start:(0,wt.text)("//",hc)},uw={start:(0,wt.text)("//*",hc),end:(0,wt.text)("*/",hc)};function Sm(r){var e;if(r.kind==="line")return[sJe.start,(0,wt.text)(r.text,hc)];let t=r.text.split(`
`),n=(e=t.at(-1))===null||e===void 0?void 0:e.trim();return t.length>1&&t.slice(1,t.length-1).every(a=>a.trimStart()[0]==="*")&&((n==null?void 0:n[0])==="*"||n==="")?[uw.start,(0,wt.join)([wt.hardline,(0,wt.text)("  ")],t.map((a,s)=>s===0?(0,wt.text)(a.trimEnd(),hc):s<t.length-1?(0,wt.text)(a.trim(),hc):(0,wt.text)(a.trimStart(),hc)),n!==""),uw.end]:[uw.start,(0,wt.join)(wt.literalline,t.map(a=>(0,wt.text)(a,hc))),uw.end]}sr.printKerMLNote=Sm;function cw(r,e={printComment:Sm}){var t;return(t=e.printed)===null||t===void 0||t.add(r),e.printComment(r)}sr.printComment=cw;function Nne(r,e={printComment:Sm}){let t=[cw(r,e)],n=0;if(r.$cstNode&&(n=(0,g$.newLineCount)(r.segment,(0,cq.getNextNode)(r.$cstNode,!0))),r.kind==="block")if(n<=0)t.push(wt.literals.space);else{let i=0;r.$cstNode&&(i=(0,g$.newLineCount)((0,cq.getPreviousNode)(r.$cstNode,!0),r.segment)),t.push(i>0?wt.hardline:wt.line)}else t.push(wt.hardline);return n>1&&t.push(wt.hardline),t}sr.printLeadingComment=Nne;function qne(r,e={printComment:Sm},t){let n=cw(r,e),i=0;return r.$cstNode&&(i=(0,g$.newLineCount)((0,cq.getPreviousNode)(r.$cstNode,!0),r.segment)),t!=null&&t.hasLineSuffix&&t.comment.kind==="line"||i>0?{doc:(0,wt.lineSuffix)([wt.hardline,i>1?wt.hardline:wt.literals.emptytext,n]),comment:r,hasLineSuffix:!0}:r.kind==="line"||t!=null&&t.hasLineSuffix?{doc:[(0,wt.lineSuffix)([wt.literals.space,n]),wt.breakParent],comment:r,hasLineSuffix:!0}:{doc:[wt.literals.space,n],comment:r,hasLineSuffix:!1}}sr.printTrailingComment=qne;function xne(r,e={printComment:Sm}){if(r.length===0)return;let t=[],n=[],i;if(r.filter(a=>{var s;return!(!((s=e.printed)===null||s===void 0)&&s.has(a))}).forEach(a=>{if(a.localPlacement==="leading")t.push(Nne(a,e));else if(a.localPlacement==="trailing")i=qne(a,e,i),n.push(i.doc);else throw new Error(`Unprinted inner ${a.kind} comment '${a.text}' at ${a.segment}`)}),!(t.length===0&&n.length===0))return{leading:t,trailing:n}}sr.printOuterComments=xne;function oJe(r,e,t={printComment:Sm}){let n=xne(e,t);return n?(0,wt.inheritLabel)(r,i=>[n.leading,i,n.trailing]):r}sr.surroundWithComments=oJe;var lJe=()=>!0;function uJe(r,e={printComment:Sm},t){if(r.length===0)return wt.literals.emptytext;let{label:n,filter:i=lJe}=e,a=r.filter(u=>u.localPlacement==="inner"&&u.label===n&&i(u)),s=a.map(u=>cw(u,e));if(s.length===0)return wt.literals.emptytext;let o=(0,wt.join)(wt.hardline,s);if(e.indent&&(o=(0,wt.indent)(o)),t){let u=t(a[a.length-1]);if(u)return[o,u]}return o}sr.printInnerComments=uJe});var Lne=p(gc=>{"use strict";Object.defineProperty(gc,"__esModule",{value:!0});gc.needsHardlineAfterInnerNote=gc.attachNotes=gc.KerMLCommentAttachVisitor=void 0;var cJe=Ae(),fJe=D(),dJe=dq(),fw=class extends dJe.AbstractKerMLCommentVisitor{visit(e){var t,n,i,a;let s=e.$cstNode.element.$meta;if(!s)return;let o=e,u=(t=e.$precedingNode)===null||t===void 0?void 0:t.$meta,c=(n=e.$followingNode)===null||n===void 0?void 0:n.$meta,f=s,d=y=>{var _;((_=o.$previous)===null||_===void 0?void 0:_.text)==="{"&&!c?o.localPlacement="inner":(o.localPlacement="trailing",f=y)},m=()=>{u?d(u):c?(o.localPlacement="leading",f=c):s&&(o.localPlacement="inner")},h=y=>{let _=y.call(this,o);return _?(f=_,!0):!1};switch(o.placement){case"endOfLine":{if(h(this.onEndOfLine))break;m();break}case"ownLine":{if(h(this.onOwnLine))break;c?(o.localPlacement="leading",f=c):u?d(u):s&&(o.localPlacement="inner");break}case"remaining":{if(h(this.onRemaining))break;u&&c?((i=e.$next)===null||i===void 0?void 0:i.offset)===((a=e.$followingNode.$cstNode)===null||a===void 0?void 0:a.offset)?(o.localPlacement="leading",f=c):(o.localPlacement="trailing",f=u):m();break}}f.notes.push(o),this.onAttached(f,o)}onOwnLine(e){}onEndOfLine(e){}onRemaining(e){}onAttached(e,t){var n,i;if(t.localPlacement!=="inner"||!e.is(fJe.ElementReference))return;let a=((n=t.$next)===null||n===void 0?void 0:n.text)==="::"?t.$previous:t.$next;if(!a)return;let s=(i=e.ast())===null||i===void 0?void 0:i.parts.findIndex(o=>o.$refText===(a==null?void 0:a.text));s===void 0||s===-1||(s!==0&&t.placement==="endOfLine"&&a!==t.$previous&&(s--,a=t.$previous),t.label=`${s}-${a===t.$next?"leading":"trailing"}`)}};gc.KerMLCommentAttachVisitor=fw;function pJe(r){if(r.commentsAttached)return;let e=r.parseResult.value.$cstNode;e&&((0,cJe.visitComments)(e,new fw),r.commentsAttached=!0)}gc.attachNotes=pJe;function mJe(r){var e;return((e=r.notes.findLast(t=>t.localPlacement==="inner"))===null||e===void 0?void 0:e.kind)==="line"}gc.needsHardlineAfterInnerNote=mJe});var jne=p(Mm=>{"use strict";var yJe=Mm&&Mm.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),hJe=Mm&&Mm.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&yJe(e,r,t)};Object.defineProperty(Mm,"__esModule",{value:!0});hJe(Lne(),Mm)});var pq=p(dw=>{"use strict";Object.defineProperty(dw,"__esModule",{value:!0});dw.DefaultFormatOptions=void 0;dw.DefaultFormatOptions={null_expression:{default:"preserve",fallback:"null"},literal_real:"none",strip_unnecessary_quotes:!0,sequence_expression_trailing_comma:!0,operator_break:"after",bracket_spacing:!0,comment_keyword:{default:"preserve",fallback:"as_needed"},comment_about_break:"as_needed",markdown_comments:!0,textual_representation_keyword:{default:"preserve",fallback:"as_needed"},textual_representation_language_break:"always",empty_namespace_brackets:{default:"preserve",fallback:"always"},merge_declaration_disjoining:!1,merge_differencing:!1,merge_intersecting:!1,merge_unioning:!1,merge_feature_chaining:!1,merge_declaration_type_featuring:!1,declaration_specialization:{default:"preserve",fallback:"token"},declaration_conjugation:{default:"preserve",fallback:"token"},declaration_subsetting:{default:"preserve",fallback:"token"},declaration_subclassification:{default:"preserve",fallback:"token"},declaration_redefinition:{default:"preserve",fallback:"token"},declaration_reference_subsetting:{default:"preserve",fallback:"token"},declaration_feature_typing:{default:"preserve",fallback:"token"},declaration_conjugated_port_typing:{default:"preserve",fallback:"token"},feature_value_equals:{default:"preserve",fallback:"as_needed"},feature_keyword:{default:"preserve",fallback:"as_needed"},public_keyword:{default:"preserve",fallback:"never"},conjugation_keyword:{default:"preserve",fallback:"as_needed"},specialization_keyword_specialization:{default:"preserve",fallback:"as_needed"},specialization_keyword_subclassification:{default:"preserve",fallback:"as_needed"},specialization_keyword_feature_typing:{default:"preserve",fallback:"as_needed"},specialization_keyword_subsetting:{default:"preserve",fallback:"as_needed"},specialization_keyword_redefinition:{default:"preserve",fallback:"as_needed"},disjoining_keyword:{default:"preserve",fallback:"as_needed"},inverting_keyword:{default:"preserve",fallback:"as_needed"},featuring_of_keyword:{default:"preserve",fallback:"as_needed"},dependency_from_keyword:{default:"always",fallback:"always"},invariant_true_keyword:{default:"preserve",fallback:"always"},multiplicity_placement:"first-specialization",metadata_feature_keyword:{default:"preserve",fallback:"@"},metadata_body_feature_keyword:{default:"preserve",fallback:"never"},metadata_body_feature_redefines:{default:"preserve",fallback:"none"},binary_allocation_usages:{default:"preserve",fallback:"always"},binary_connectors:{default:"preserve",fallback:"always"},binary_connectors_from_keyword:{default:"preserve",fallback:"always"},binary_binding_connectors:{default:"preserve",fallback:"always"},binary_binding_connector_of_keyword:{default:"preserve",fallback:"always"},binary_successions:{default:"preserve",fallback:"always"},binary_succession_first_keyword:{default:"preserve",fallback:"always"},item_flow_from_keyword:{default:"preserve",fallback:"always"},succession_item_flow_from_keyword:{default:"preserve",fallback:"always"},flow_connection_usage_from_keyword:{default:"preserve",fallback:"always"},succession_flow_connection_usage_from_keyword:{default:"preserve",fallback:"always"},ordered_nonunique_priority:{default:"preserve",fallback:"ordered"},enum_member_keyword:{default:"preserve",fallback:"never"},occurrence_keyword:{default:"preserve",fallback:"always"},event_occurrence_keyword:{default:"preserve",fallback:"always"},binding_connector_as_usage_keyword:{default:"preserve",fallback:"always"},assert_constraint_usage_keyword:{default:"preserve",fallback:"always"},succession_as_usage_keyword:{default:"preserve",fallback:"always"},exhibit_state_usage_keyword:{default:"preserve",fallback:"always"},include_use_case_usage_keyword:{default:"preserve",fallback:"always"},perform_action_usage_keyword:{default:"preserve",fallback:"always"},satisfy_requirement_keyword:{default:"preserve",fallback:"always"},satisfy_requirement_assert_keyword:{default:"preserve",fallback:"always"},allocation_usage_keyword:{default:"preserve",fallback:"always"},connection_usage_keyword:{default:"preserve",fallback:"always"},binary_connection_usages:{default:"preserve",fallback:"always"},binary_interface_usages:{default:"preserve",fallback:"always"},interface_usage_connect_keyword:{default:"preserve",fallback:"always"},action_node_keyword:{default:"preserve",fallback:"as_needed"},while_loop_parenthesize_condition:"on_break",while_loop_parenthesize_until:"on_break",if_parenthesize_condition:"on_break",transition_usage_parenthesize_guard:"on_break",element_filter_parenthesize:"on_break",transition_usage_keyword:{default:"preserve",fallback:"always"},transition_usage_first_keyword:{default:"preserve",fallback:"always"},framed_concern_keyword:{default:"preserve",fallback:"always"},reference_usage_keyword:{default:"preserve",fallback:"always"},attribute_usage_reference_keyword:{default:"preserve",fallback:"never"},event_occurrence_reference_keyword:{default:"preserve",fallback:"never"},port_usage_reference_keyword:{default:"preserve",fallback:"never"},connection_usage_reference_keyword:{default:"preserve",fallback:"never"},connector_as_usage_reference_keyword:{default:"preserve",fallback:"never"},exhibit_state_reference_keyword:{default:"preserve",fallback:"never"},include_use_case_reference_keyword:{default:"preserve",fallback:"never"},perform_action_reference_keyword:{default:"preserve",fallback:"never"}}});var lg=p(We=>{"use strict";Object.defineProperty(We,"__esModule",{value:!0});We.tokenModifiers=We.tokenType=We.DefaultSysMLSemanticTokenOptions=We.SysMLSemanticTokenModifiers=We.SysMLHighlightType=We.SysMLSemanticTokenTypes=void 0;var yq=be(),Tt=Pe(),gJe=So(),mq=D();We.SysMLSemanticTokenTypes={class:Tt.SemanticTokenTypes.class,comment:Tt.SemanticTokenTypes.comment,enum:Tt.SemanticTokenTypes.enum,enumMember:Tt.SemanticTokenTypes.enumMember,event:Tt.SemanticTokenTypes.event,function:Tt.SemanticTokenTypes.function,interface:Tt.SemanticTokenTypes.interface,keyword:Tt.SemanticTokenTypes.keyword,macro:Tt.SemanticTokenTypes.macro,method:Tt.SemanticTokenTypes.method,modifier:Tt.SemanticTokenTypes.modifier,namespace:Tt.SemanticTokenTypes.namespace,number:Tt.SemanticTokenTypes.number,operator:Tt.SemanticTokenTypes.operator,parameter:Tt.SemanticTokenTypes.parameter,property:Tt.SemanticTokenTypes.property,regexp:Tt.SemanticTokenTypes.regexp,string:Tt.SemanticTokenTypes.string,struct:Tt.SemanticTokenTypes.struct,type:Tt.SemanticTokenTypes.type,typeParameter:Tt.SemanticTokenTypes.typeParameter,variable:Tt.SemanticTokenTypes.variable,decorator:Tt.SemanticTokenTypes.decorator,annotation:"annotation",annotationBody:"annotationBody",relationship:"relationship",metaclass:"metaclass"};We.SysMLHighlightType=Object.fromEntries(Object.entries(We.SysMLSemanticTokenTypes).map(([r,e])=>[r,{type:e}]));We.SysMLSemanticTokenModifiers={abstract:Tt.SemanticTokenModifiers.abstract,async:Tt.SemanticTokenModifiers.async,declaration:Tt.SemanticTokenModifiers.declaration,defaultLibrary:Tt.SemanticTokenModifiers.defaultLibrary,definition:Tt.SemanticTokenModifiers.definition,deprecated:Tt.SemanticTokenModifiers.deprecated,documentation:Tt.SemanticTokenModifiers.documentation,modification:Tt.SemanticTokenModifiers.modification,readonly:Tt.SemanticTokenModifiers.readonly,static:Tt.SemanticTokenModifiers.static};Object.values(We.SysMLSemanticTokenTypes).forEach((r,e)=>yq.AllSemanticTokenTypes[r]=e);Object.values(We.SysMLSemanticTokenModifiers).forEach((r,e)=>yq.AllSemanticTokenModifiers[r]=1<<e);We.DefaultSysMLSemanticTokenOptions=Object.assign(Object.assign({},yq.DefaultSemanticTokenOptions),{legend:{tokenTypes:Object.keys(We.SysMLSemanticTokenTypes),tokenModifiers:Object.keys(We.SysMLSemanticTokenModifiers)}});var vJe={Namespace:We.SysMLSemanticTokenTypes.namespace,Type:We.SysMLSemanticTokenTypes.type,Feature:We.SysMLSemanticTokenTypes.variable,Class:We.SysMLSemanticTokenTypes.class,Structure:We.SysMLSemanticTokenTypes.struct,Comment:We.SysMLSemanticTokenTypes.annotation,TextualRepresentation:We.SysMLSemanticTokenTypes.annotation,EnumerationDefinition:We.SysMLSemanticTokenTypes.enum,EnumerationUsage:We.SysMLSemanticTokenTypes.enumMember,SysMLFunction:We.SysMLSemanticTokenTypes.function,Expression:We.SysMLSemanticTokenTypes.method,LiteralNumber:We.SysMLSemanticTokenTypes.number,LiteralString:We.SysMLSemanticTokenTypes.string,Relationship:We.SysMLSemanticTokenTypes.relationship,Metaclass:We.SysMLSemanticTokenTypes.metaclass,Association:We.SysMLSemanticTokenTypes.type,AssociationStructure:We.SysMLSemanticTokenTypes.struct},pw;function _Je(){return pw!=null?pw:pw=gJe.typeIndex.expandToDerivedTypes(vJe)}function $Je(r){return _Je().get(r.nodeType())}We.tokenType=$Je;function TJe(r){let e=[];return r.is(mq.Type)&&r.isAbstract&&e.push(We.SysMLSemanticTokenModifiers.abstract),r.is(mq.Classifier)&&e.push(We.SysMLSemanticTokenModifiers.definition),r.isStandardElement&&e.push(We.SysMLSemanticTokenModifiers.defaultLibrary),r.is(mq.Feature)&&r.isReadonly&&e.push(We.SysMLSemanticTokenModifiers.readonly),e}We.tokenModifiers=TJe});var hq=p(ug=>{"use strict";Object.defineProperty(ug,"__esModule",{value:!0});ug.SysMLGrammar=ug.KerMLGrammar=void 0;var Une=be(),mw,RJe=()=>mw!=null?mw:mw=(0,Une.loadGrammarFromJson)(`{
  "$type": "Grammar",
  "isDeclared": true,
  "name": "KerML",
  "imports": [],
  "rules": [
    {
      "$type": "ParserRule",
      "name": "RootNamespace",
      "entry": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@11"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypedByToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "typed"
              },
              {
                "$type": "Keyword",
                "value": "by"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "conjugates"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@4"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipOwnedElements",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@5"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipOwnedElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@7"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@24"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "elements",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@23"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Dependency",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "prefixes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@144"
              },
              "arguments": []
            },
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "dependency"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "from"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "client",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "client",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@242"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "supplier",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "supplier",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@242"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedAnnotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "source",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@8"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@238"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@239"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@240"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@148"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Namespace",
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "namespace"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@10"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@11"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceBodyElements",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@12"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceBodyElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@20"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@16"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@14"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@15"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NonFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@24"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@23"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@8"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AliasMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isAlias",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "alias"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportedReference",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "isNamespace",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "::*"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isRecursive",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "::**"
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Import",
      "returnType": {
        "$ref": "#/interfaces@54"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@18"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@21"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FilterPackage",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "children",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@22"
          },
          "arguments": []
        },
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FilterPackageMember",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@157"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipElement",
      "returnType": {
        "$ref": "#/interfaces@37"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@6"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@48"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@50"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@86"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@83"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NonFeatureElement",
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@9"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@27"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@95"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@33"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@57"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@103"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@143"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@102"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@106"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@130"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@120"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@127"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureElement",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@118"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@125"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@128"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@129"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@107"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@113"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@115"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@131"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@132"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Package",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@28"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LibraryPackage",
      "returnType": {
        "$ref": "#/interfaces@36"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@233"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "library"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@28"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@29"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBodyElements",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@30"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBodyElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@14"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@16"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@15"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@20"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementFilterMember",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "filter"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@157"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Type",
      "returnType": {
        "$ref": "#/interfaces@8"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "type"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@232"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "multiplicity",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@98"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@35"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@36"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@220"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@49"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@49"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@51"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeRelationshipPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@38"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@39"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@40"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@41"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DisjoiningPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "disjoint"
          },
          {
            "$type": "Keyword",
            "value": "from"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@53"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@53"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnioningPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "unions"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@54"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@54"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IntersectingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "intersects"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@55"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DifferencingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "differences"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@56"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@56"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@43"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeBodyElements",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@44"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeBodyElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@45"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@16"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@15"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@20"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@46"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "member"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Specialization",
      "returnType": {
        "$ref": "#/interfaces@43"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subtype"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@220"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSpecialization",
      "returnType": {
        "$ref": "#/interfaces@43"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Conjugation",
      "returnType": {
        "$ref": "#/interfaces@50"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "conjugation"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "conjugate"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedConjugation",
      "returnType": {
        "$ref": "#/interfaces@50"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Disjoining",
      "returnType": {
        "$ref": "#/interfaces@44"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "disjoining"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "disjoint"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "from"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@244"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedDisjoining",
      "returnType": {
        "$ref": "#/interfaces@44"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Unioning",
      "returnType": {
        "$ref": "#/interfaces@39"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Intersecting",
      "returnType": {
        "$ref": "#/interfaces@41"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Differencing",
      "returnType": {
        "$ref": "#/interfaces@40"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Classifier",
      "returnType": {
        "$ref": "#/interfaces@9"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "classifier"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@232"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "multiplicity",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@98"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@59"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@60"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuperclassingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@220"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@62"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@62"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierConjugationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@63"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subclassification",
      "returnType": {
        "$ref": "#/interfaces@48"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subclassifier"
          },
          {
            "$type": "Assignment",
            "feature": "sourceRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@245"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@220"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@245"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubclassification",
      "returnType": {
        "$ref": "#/interfaces@48"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@245"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierConjugation",
      "returnType": {
        "$ref": "#/interfaces@50"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@245"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeaturePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@224"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isComposite",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "composite"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isPortion",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "portion"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@229"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@230"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@231"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Feature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "feature",
                    "cardinality": "?"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@66"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "Assignment",
                "feature": "prefixes",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@145"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "feature"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@232"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@219"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@71"
                        },
                        "arguments": []
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@91"
                        },
                        "arguments": []
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@71"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@91"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@67"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureRelationshipPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@37"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@69"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@70"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ChainingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "chains"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@268"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@266"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvertingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "inverse"
          },
          {
            "$type": "Keyword",
            "value": "of"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@82"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeFeaturingPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "featured"
          },
          {
            "$type": "Keyword",
            "value": "by"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@84"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@84"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@73"
            },
            "arguments": [],
            "cardinality": "+"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@72"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@72"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@98"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@235"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@235"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecialization",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@74"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Typings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@75"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@254"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypedBy",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@1"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@254"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsettings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@77"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@87"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsets",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@221"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@87"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "References",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@222"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@88"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefinitions",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@90"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefines",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@90"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureInverting",
      "returnType": {
        "$ref": "#/interfaces@45"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "inverting"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "inverse"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": "of"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureInverting",
      "returnType": {
        "$ref": "#/interfaces@45"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeFeaturing",
      "returnType": {
        "$ref": "#/interfaces@46"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "featuring"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "of"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "sourceRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "by"
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedTypeFeaturing",
      "returnType": {
        "$ref": "#/interfaces@46"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@244"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "typing"
          },
          {
            "$type": "Assignment",
            "feature": "sourceRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@1"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@255"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsetting",
      "returnType": {
        "$ref": "#/interfaces@49"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subset"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@221"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubsetting",
      "returnType": {
        "$ref": "#/interfaces@49"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedReferenceSubsetting",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "specialization"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "redefinition"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "sourceRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "sourceChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "targetChain",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureConjugationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@2"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@92"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureConjugation",
      "returnType": {
        "$ref": "#/interfaces@50"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@246"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ValuePart",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@94"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "="
              },
              {
                "$type": "Assignment",
                "feature": "isInitial",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ":="
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "isDefault",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "default"
                    }
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "isInitial",
                        "operator": "?=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": ":="
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@157"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Multiplicity",
      "returnType": {
        "$ref": "#/interfaces@22"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@96"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@97"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicitySubset",
      "returnType": {
        "$ref": "#/interfaces@22"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "multiplicity"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@77"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityRange",
      "returnType": {
        "$ref": "#/interfaces@23"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "multiplicity"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@100"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedMultiplicity",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@99"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedMultiplicityRange",
      "returnType": {
        "$ref": "#/interfaces@23"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@100"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityBounds",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "range",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@101"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@157"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DataType",
      "returnType": {
        "$ref": "#/interfaces@10"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "datatype"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Class",
      "returnType": {
        "$ref": "#/interfaces@11"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "class"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Structure",
      "returnType": {
        "$ref": "#/interfaces@12"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "struct"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Association",
      "returnType": {
        "$ref": "#/interfaces@14"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assoc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssociationStructure",
      "returnType": {
        "$ref": "#/interfaces@15"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assoc"
          },
          {
            "$type": "Keyword",
            "value": "struct"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Connector",
      "returnType": {
        "$ref": "#/interfaces@26"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "connector"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@66"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@93"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@108"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@109"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@110"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@66"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Keyword",
                    "value": "from"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@232"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "Keyword",
                    "value": "from",
                    "cardinality": "?"
                  }
                ]
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@111"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@111"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@111"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@111"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@112"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEnd",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@218"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@222"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@88"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "multiplicity",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@98"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnector",
      "returnType": {
        "$ref": "#/interfaces@29"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "binding"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@114"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnectorDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@66"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@232"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of",
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Succession",
      "returnType": {
        "$ref": "#/interfaces@28"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@116"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@66"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "first"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@232"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "first",
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@111"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Behavior",
      "returnType": {
        "$ref": "#/interfaces@13"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "behavior"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Step",
      "returnType": {
        "$ref": "#/interfaces@25"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "step"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@119"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StepDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SysMLFunction",
      "returnType": {
        "$ref": "#/interfaces@17"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "function"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@122"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionBodyPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@13"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@16"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@15"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@45"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@17"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@20"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@123"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@124"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReturnFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "return"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@25"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ResultExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@65"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@228"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@157"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Expression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "expr"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@126"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Predicate",
      "returnType": {
        "$ref": "#/interfaces@18"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "predicate"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BooleanExpression",
      "returnType": {
        "$ref": "#/interfaces@33"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "bool"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@126"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Invariant",
      "returnType": {
        "$ref": "#/interfaces@34"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "inv"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "true"
              },
              {
                "$type": "Assignment",
                "feature": "isNegated",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "false"
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@126"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Interaction",
      "returnType": {
        "$ref": "#/interfaces@19"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "interaction"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlow",
      "returnType": {
        "$ref": "#/interfaces@31"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@133"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionItemFlow",
      "returnType": {
        "$ref": "#/interfaces@32"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@133"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@66"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@93"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "item",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@134"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@137"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@137"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@232"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@137"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@137"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@135"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeature",
      "returnType": {
        "$ref": "#/interfaces@24"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@136"
                        },
                        "arguments": []
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@93"
                        },
                        "arguments": [],
                        "cardinality": "?"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@93"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@254"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@98"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@98"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@254"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@72"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@73"
                    },
                    "arguments": [],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@72"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@73"
                },
                "arguments": [],
                "cardinality": "+"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@138"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowEnd",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@139"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@140"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowEndSubsetting",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@246"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "."
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@267"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@141"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowFeature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@142"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFlowRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@246"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Metaclass",
      "returnType": {
        "$ref": "#/interfaces@16"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@32"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "metaclass"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@58"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@42"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataAnnotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "source",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@147"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@147"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadata",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@145"
          },
          "arguments": []
        },
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataFeature",
      "returnType": {
        "$ref": "#/interfaces@21"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "#"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@253"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataFeature",
      "returnType": {
        "$ref": "#/interfaces@21"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@146"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "@"
              },
              {
                "$type": "Keyword",
                "value": "metadata"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@149"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "about"
              },
              {
                "$type": "Assignment",
                "feature": "about",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@236"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@236"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@150"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataFeatureDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@1"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@253"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@151"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyElements",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@152"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@13"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@16"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@15"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@153"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@17"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@20"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@154"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyFeature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "feature",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@223"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@90"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@71"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@150"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBody",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@122"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@157"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@160"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@156"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcreteConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@81"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "operator",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@161"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "?"
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@158"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@158"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@161"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@159"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullCoalescingExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@164"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "??"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@162"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@163"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@164"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@167"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "implies"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@165"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@166"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@167"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@170"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "|"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@170"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "or"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@168"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@169"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@170"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "xor"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@171"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AndExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@174"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "&"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@174"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "and"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@172"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@173"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@174"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@175"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@252"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@175"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@176"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@81"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "operator",
                            "operator": "=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@250"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@257"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "operator",
                            "operator": "=",
                            "terminal": {
                              "$type": "Keyword",
                              "value": "as"
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@258"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@250"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@257"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@256"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "@@"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@257"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "as"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@258"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@256"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "meta"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@258"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@177"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@251"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@177"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RangeExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@178"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ".."
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@178"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AdditiveExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@179"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "+"
                    },
                    {
                      "$type": "Keyword",
                      "value": "-"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@179"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicativeExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@180"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "*"
                    },
                    {
                      "$type": "Keyword",
                      "value": "/"
                    },
                    {
                      "$type": "Keyword",
                      "value": "%"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@180"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExponentiationExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@181"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "**"
                    },
                    {
                      "$type": "Keyword",
                      "value": "^"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@180"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@249"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@182"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtentExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "all"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@258"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@183"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrimaryExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@82"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@264"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@81"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "#"
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "("
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@187"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": ")"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@81"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "["
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@187"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "]"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@80"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "->"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "heritage",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@260"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Alternatives",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@186"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@262"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@189"
                            },
                            "arguments": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@83"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "."
                      },
                      {
                        "$type": "Assignment",
                        "feature": "children",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@186"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@84"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": ".?"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "children",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@186"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@82"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "."
                  },
                  {
                    "$type": "Assignment",
                    "feature": "children",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@264"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BaseExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@216"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@215"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@269"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@271"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@188"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@185"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@187"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BodyExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@186"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBodyMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@155"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SequenceExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@157"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@81"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": ","
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operands",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@187"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvocationExpression",
      "returnType": {
        "$ref": "#/interfaces@80"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@254"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@189"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@190"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@193"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PositionalArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@191"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@191"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@192"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Argument",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@197"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@194"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@194"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgumentMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@195"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgument",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@196"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@197"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParameterRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@246"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@157"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "DECIMAL",
      "definition": {
        "$type": "RegexToken",
        "regex": "[0-9]+"
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FRACTION",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "CharacterRange",
            "left": {
              "$type": "Keyword",
              "value": "."
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@198"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FLOAT",
      "definition": {
        "$type": "TerminalAlternatives",
        "elements": [
          {
            "$type": "TerminalGroup",
            "elements": [
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@198"
                }
              },
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@199"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@199"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "EXPONENT",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "RegexToken",
            "regex": "[eE][\\\\-\\\\+]*"
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@198"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "NUMBER",
      "type": {
        "$type": "ReturnType",
        "name": "number"
      },
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@200"
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@201"
            },
            "cardinality": "?"
          }
        ]
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_\\\\d]*"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "UNRESTRICTED_NAME",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "'(\\\\\\\\['\\"bftnr\\\\\\\\]|[^'\\\\\\\\])*'"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "STRING_VALUE",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "\\"[^\\"]*\\""
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "REGULAR_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "WS",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\s+"
      },
      "fragment": false
    },
    {
      "$type": "ParserRule",
      "name": "Name",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@204"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralBoolean",
      "returnType": {
        "$ref": "#/interfaces@75"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "false"
          },
          {
            "$type": "Assignment",
            "feature": "literal",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "true"
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralString",
      "returnType": {
        "$ref": "#/interfaces@76"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "literal",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@205"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralNumber",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "literal",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@202"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralInfinity",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@78"
            }
          },
          {
            "$type": "Keyword",
            "value": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralExpression",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@211"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@212"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@213"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@214"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullExpression",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@79"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "null"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "("
                  },
                  {
                    "$type": "Keyword",
                    "value": ")"
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ShortName",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Assignment",
            "feature": "declaredShortName",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@210"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ">"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RegularName",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "declaredName",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@210"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Identification",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@217"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@218"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@218"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "specializes"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubsetsToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "subsets"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferencesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::>"
          },
          {
            "$type": "Keyword",
            "value": "references"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RedefinesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>>"
          },
          {
            "$type": "Keyword",
            "value": "redefines"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDirectionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Keyword",
            "value": "inout"
          },
          {
            "$type": "Keyword",
            "value": "out"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibilityKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "private"
          },
          {
            "$type": "Keyword",
            "value": "protected"
          },
          {
            "$type": "Keyword",
            "value": "public"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::*"
          },
          {
            "$type": "Keyword",
            "value": "::**"
          },
          {
            "$type": "Keyword",
            "value": "::*::**"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Abstract",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isAbstract",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "abstract"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Visibility",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "visibility",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@225"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Readonly",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReadOnly",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "readonly"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Derived",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isDerived",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "derived"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "End",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isEnd",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "end"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Sufficient",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isSufficient",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Standard",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isStandard",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "standard"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportAll",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "importsAll",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityProperties",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                },
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Annotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@242"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElementBody",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "body",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@206"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Comment",
      "returnType": {
        "$ref": "#/interfaces@3"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "comment"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "about"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@236"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "about",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@236"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "locale"
              },
              {
                "$type": "Assignment",
                "feature": "locale",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@205"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Documentation",
      "returnType": {
        "$ref": "#/interfaces@4"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "doc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "locale"
              },
              {
                "$type": "Assignment",
                "feature": "locale",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@205"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "rep"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@219"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "language"
          },
          {
            "$type": "Assignment",
            "feature": "language",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@205"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "parts",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@6"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@210"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "::"
              },
              {
                "$type": "Assignment",
                "feature": "parts",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@6"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@210"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReference",
      "returnType": {
        "$ref": "#/interfaces@67"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceReference",
      "returnType": {
        "$ref": "#/interfaces@68"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReference",
      "returnType": {
        "$ref": "#/interfaces@69"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReference",
      "returnType": {
        "$ref": "#/interfaces@71"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@72"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MembershipReference",
      "returnType": {
        "$ref": "#/interfaces@73"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@241"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "+"
          },
          {
            "$type": "Keyword",
            "value": "-"
          },
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "not"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationTestOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "istype"
          },
          {
            "$type": "Keyword",
            "value": "hastype"
          },
          {
            "$type": "Keyword",
            "value": "@"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Keyword",
            "value": ">"
          },
          {
            "$type": "Keyword",
            "value": "<="
          },
          {
            "$type": "Keyword",
            "value": ">="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "=="
          },
          {
            "$type": "Keyword",
            "value": "!="
          },
          {
            "$type": "Keyword",
            "value": "==="
          },
          {
            "$type": "Keyword",
            "value": "!=="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@247"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@255"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureType",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataReference",
      "returnType": {
        "$ref": "#/interfaces@86"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "reference",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@242"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@259"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeResultMember",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@259"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceFeature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@260"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@244"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@262"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@263"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReference",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@260"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChainMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@58"
                }
              },
              {
                "$type": "Assignment",
                "feature": "target",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@265"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@266"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@268"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@268"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChainPrefix",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@268"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "."
              }
            ],
            "cardinality": "+"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@268"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureChaining",
      "returnType": {
        "$ref": "#/interfaces@42"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@246"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@270"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@246"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataAccessExpression",
      "returnType": {
        "$ref": "#/interfaces@86"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "reference",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@242"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    }
  ],
  "definesHiddenTokens": false,
  "hiddenTokens": [],
  "interfaces": [
    {
      "$type": "Interface",
      "name": "Annotation",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "about",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@0"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "AnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "body",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "TextualAnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "locale",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "Comment",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Documentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@3"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "language",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "TextualRepresentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "declaredName",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "declaredShortName",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "Element",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "prefixes",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@58"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "children",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@54"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@57"
                  }
                }
              ]
            }
          },
          "isOptional": false
        }
      ],
      "name": "Namespace",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isSufficient",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isAbstract",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "abstract"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "heritage",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@38"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "typeRelationships",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/types@9"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/types@10"
                  }
                }
              ]
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "multiplicity",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        }
      ],
      "name": "Type",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Classifier",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DataType",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Class",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Structure",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Behavior",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Association",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        },
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssociationStructure",
      "superTypes": [
        {
          "$ref": "#/interfaces@14"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Metaclass",
      "superTypes": [
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "result",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@65"
            }
          }
        }
      ],
      "name": "SysMLFunction",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Predicate",
      "superTypes": [
        {
          "$ref": "#/interfaces@17"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Interaction",
      "superTypes": [
        {
          "$ref": "#/interfaces@14"
        },
        {
          "$ref": "#/interfaces@13"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isNonunique",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isOrdered",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "direction",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@1"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isComposite",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "composite"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isDerived",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "derived"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isEnd",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "end"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isPortion",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "portion"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isReadOnly",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "readonly"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "value",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@59"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "write",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          }
        }
      ],
      "name": "Feature",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MetadataFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        },
        {
          "$ref": "#/interfaces@1"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Multiplicity",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "range",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        }
      ],
      "name": "MultiplicityRange",
      "superTypes": [
        {
          "$ref": "#/interfaces@22"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ItemFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Step",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "ends",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@63"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "Connector",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        },
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ItemFlowEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Succession",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnector",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "result",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@65"
            }
          }
        }
      ],
      "name": "Expression",
      "superTypes": [
        {
          "$ref": "#/interfaces@25"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "item",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@62"
            }
          }
        }
      ],
      "name": "ItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        },
        {
          "$ref": "#/interfaces@25"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SuccessionItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@31"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BooleanExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isNegated",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Invariant",
      "superTypes": [
        {
          "$ref": "#/interfaces@33"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Package",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isStandard",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "LibraryPackage",
      "superTypes": [
        {
          "$ref": "#/interfaces@35"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "visibility",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@0"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "elements",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@7"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@37"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@20"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@0"
                  }
                }
              ]
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "source",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@6"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "sourceRef",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "sourceChain",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@20"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "target",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@6"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "targetRef",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "targetChain",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@20"
            }
          }
        }
      ],
      "name": "Relationship",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Inheritance",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Unioning",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Differencing",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Intersecting",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureChaining",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Specialization",
      "superTypes": [
        {
          "$ref": "#/interfaces@38"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Disjoining",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureInverting",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "TypeFeaturing",
      "superTypes": [
        {
          "$ref": "#/interfaces@61"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureTyping",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Subclassification",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Subsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Conjugation",
      "superTypes": [
        {
          "$ref": "#/interfaces@38"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Redefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@49"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReferenceSubsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@49"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "prefixes",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@0"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "client",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@67"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "supplier",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@67"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "Dependency",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "importsAll",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isRecursive",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isNamespace",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "::*"
          }
        }
      ],
      "name": "Import",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MembershipImport",
      "superTypes": [
        {
          "$ref": "#/interfaces@54"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "NamespaceImport",
      "superTypes": [
        {
          "$ref": "#/interfaces@54"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isAlias",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Membership",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "OwningMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@57"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isDefault",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isInitial",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "FeatureValue",
      "superTypes": [
        {
          "$ref": "#/interfaces@58"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ElementFilterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@58"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Featuring",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@61"
        },
        {
          "$ref": "#/interfaces@58"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EndFeatureMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ParameterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ResultExpressionMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReturnParameterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "parts",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "ReferenceType",
              "referenceType": {
                "$type": "SimpleType",
                "typeRef": {
                  "$ref": "#/interfaces@6"
                }
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "ElementReference",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "NamespaceReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@67"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "TypeReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@68"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ClassifierReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@69"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@69"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MetaclassReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@70"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MembershipReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@67"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "LiteralExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralBoolean",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralString",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "number"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralNumber",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "LiteralInfinity",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "NullExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "operands",
          "isOptional": true,
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@30"
              }
            }
          }
        }
      ],
      "name": "InvocationExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "operator",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "OperatorExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@80"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "FeatureChainExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CollectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SelectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "expression",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          },
          "isOptional": false
        }
      ],
      "name": "FeatureReferenceExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "reference",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          },
          "isOptional": false
        }
      ],
      "name": "MetadataAccessExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    }
  ],
  "types": [
    {
      "$type": "Type",
      "name": "VisibilityKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "private"
          },
          {
            "$type": "SimpleType",
            "stringType": "protected"
          },
          {
            "$type": "SimpleType",
            "stringType": "public"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "FeatureDirectionKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "in"
          },
          {
            "$type": "SimpleType",
            "stringType": "inout"
          },
          {
            "$type": "SimpleType",
            "stringType": "out"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "UnaryOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "+"
          },
          {
            "$type": "SimpleType",
            "stringType": "-"
          },
          {
            "$type": "SimpleType",
            "stringType": "not"
          },
          {
            "$type": "SimpleType",
            "stringType": "~"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "ClassificationTestOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "@"
          },
          {
            "$type": "SimpleType",
            "stringType": "hastype"
          },
          {
            "$type": "SimpleType",
            "stringType": "istype"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "EqualityOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "!="
          },
          {
            "$type": "SimpleType",
            "stringType": "!=="
          },
          {
            "$type": "SimpleType",
            "stringType": "=="
          },
          {
            "$type": "SimpleType",
            "stringType": "==="
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "ImportKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "::*"
          },
          {
            "$type": "SimpleType",
            "stringType": "::**"
          },
          {
            "$type": "SimpleType",
            "stringType": "::*::**"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "RelationalOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "<"
          },
          {
            "$type": "SimpleType",
            "stringType": "<="
          },
          {
            "$type": "SimpleType",
            "stringType": ">"
          },
          {
            "$type": "SimpleType",
            "stringType": ">="
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "InlineExpression",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@82"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@80"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@74"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@86"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@79"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@81"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@83"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@84"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@85"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "NonOwnerType",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@0"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "TypeRelationship",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@39"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@40"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@44"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@41"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "FeatureRelationship",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@9"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@42"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@45"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@46"
            }
          }
        ]
      }
    }
  ],
  "usedGrammars": []
}`);ug.KerMLGrammar=RJe;var yw,bJe=()=>yw!=null?yw:yw=(0,Une.loadGrammarFromJson)(`{
  "$type": "Grammar",
  "isDeclared": true,
  "name": "SysML",
  "imports": [],
  "rules": [
    {
      "$type": "ParserRule",
      "name": "DefinedByToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "defined"
              },
              {
                "$type": "Keyword",
                "value": "by"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "timeslice"
          },
          {
            "$type": "Keyword",
            "value": "snapshot"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementConstraintKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "assume"
          },
          {
            "$type": "Keyword",
            "value": "require"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Variation",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isVariation",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "variation"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Individual",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isIndividual",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "individual"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Portion",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "portionKind",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@1"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Model",
      "entry": true,
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@28"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Dependency",
      "returnType": {
        "$ref": "#/interfaces@53"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "prefixes",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@14"
              },
              "arguments": []
            },
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "dependency"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "from"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "client",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@412"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "client",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@412"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "supplier",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@412"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "supplier",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@412"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@11"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedAnnotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "source",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@10"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@10"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnnotatingElement",
      "returnType": {
        "$ref": "#/interfaces@1"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@408"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@409"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@410"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@18"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@12"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipBodyElements",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "elements",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@8"
          },
          "arguments": []
        },
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataDefinition",
      "returnType": {
        "$ref": "#/interfaces@89"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@397"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataAnnotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "source",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@17"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@17"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadata",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@15"
          },
          "arguments": []
        },
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrefixMetadataUsage",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "#"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@423"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsage",
      "returnType": {
        "$ref": "#/interfaces@90"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "metadata"
              },
              {
                "$type": "Keyword",
                "value": "@"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@19"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "about"
              },
              {
                "$type": "Assignment",
                "feature": "about",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@406"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": ","
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@406"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "*"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@20"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@0"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@423"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@21"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@22"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@23"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataBodyUsage",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "ref",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@393"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@57"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@20"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Package",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@27"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LibraryPackage",
      "returnType": {
        "$ref": "#/interfaces@36"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@403"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "library"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@26"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@27"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "package"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@389"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@28"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@29"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PackageBodyElement",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@32"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@30"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@40"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationshipMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@7"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementFilterMember",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "filter"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@327"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AliasMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isAlias",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "alias"
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@389"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@412"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@11"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "import"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@404"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportedReference",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@412"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "isNamespace",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "::*"
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isRecursive",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "::**"
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Import",
      "returnType": {
        "$ref": "#/interfaces@54"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@34"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@37"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@11"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FilterPackage",
      "returnType": {
        "$ref": "#/interfaces@35"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "children",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@38"
          },
          "arguments": []
        },
        "cardinality": "+"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FilterPackageMember",
      "returnType": {
        "$ref": "#/interfaces@60"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@327"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionElement",
      "returnType": {
        "$ref": "#/interfaces@7"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@24"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@25"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@97"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@99"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@106"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@107"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@117"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@13"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@119"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@129"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@134"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@152"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@168"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@121"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@171"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@260"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@226"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@267"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@271"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@291"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@293"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@300"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@302"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@306"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@309"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@321"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@323"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@95"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@90"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@91"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubclassificationPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@390"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@42"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@42"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubclassification",
      "returnType": {
        "$ref": "#/interfaces@48"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@415"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@44"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@44"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@46"
            },
            "arguments": [],
            "cardinality": "+"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@45"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@45"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@58"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@405"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@405"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureSpecialization",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@47"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@49"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@51"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@52"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Typings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@48"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@54"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypedBy",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@0"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@54"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsettings",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@50"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@55"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Subsets",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@391"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@55"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "References",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@392"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@56"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefinitions",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@53"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@57"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Redefines",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@393"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@57"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@424"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@122"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedSubsetting",
      "returnType": {
        "$ref": "#/interfaces@49"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@435"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedReferenceSubsetting",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@435"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@435"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedMultiplicity",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@59"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityRange",
      "returnType": {
        "$ref": "#/interfaces@23"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "["
          },
          {
            "$type": "Assignment",
            "feature": "range",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@60"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "]"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@327"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BasicDefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@397"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@3"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionExtensionKeyword",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@15"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionSuffix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@389"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@41"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@67"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@68"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@71"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@72"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@113"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@73"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefinitionMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@39"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibleAnnotatingMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@10"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantUsageMember",
      "returnType": {
        "$ref": "#/interfaces@164"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "variant"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@94"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NonOccurrenceUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@90"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@91"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StructureUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@92"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BehaviorUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@93"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RefPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@394"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@399"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@400"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@401"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Reference",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReference",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "ref"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BasicUsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@77"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageExtensionKeyword",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "prefixes",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@15"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageSuffix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@83"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@43"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageCompletion",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UsageBody",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@66"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ValuePart",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@86"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "="
              },
              {
                "$type": "Assignment",
                "feature": "isInitial",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ":="
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "isDefault",
                    "operator": "?=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": "default"
                    }
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "isInitial",
                        "operator": "?=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": ":="
                        }
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@327"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultReferenceUsage",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceUsage",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "ref"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantReference",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@56"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@46"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NonOccurrenceUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@87"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@88"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@98"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@127"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@128"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@96"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@92"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StructureUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@109"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@110"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@111"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@112"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@118"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@120"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@315"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@324"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@124"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@130"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@161"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@169"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@135"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@139"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@140"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BehaviorUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@179"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@266"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@242"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@268"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@285"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@292"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@299"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@301"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@303"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@307"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@322"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@180"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@243"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@308"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@269"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@286"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VariantUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@89"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@88"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@98"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@127"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@128"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@109"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@110"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@111"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@112"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@118"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@120"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@315"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@324"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@124"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@130"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@161"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@169"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@135"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@139"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@140"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtendedDefinition",
      "returnType": {
        "$ref": "#/interfaces@87"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": [],
            "cardinality": "+"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtendedUsage",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "+"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeDefinition",
      "returnType": {
        "$ref": "#/interfaces@94"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "attribute"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AttributeUsage",
      "returnType": {
        "$ref": "#/interfaces@95"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "attribute"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationDefinition",
      "returnType": {
        "$ref": "#/interfaces@138"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "enum"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@100"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@101"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationItems",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@9"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@102"
              },
              "arguments": []
            }
          }
        ],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationUsageMember",
      "returnType": {
        "$ref": "#/interfaces@164"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@103"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumeratedValue",
      "returnType": {
        "$ref": "#/interfaces@139"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "enum",
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EnumerationUsage",
      "returnType": {
        "$ref": "#/interfaces@139"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "enum"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinitionPrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceDefinition",
      "returnType": {
        "$ref": "#/interfaces@92"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "occurrence"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IndividualDefinition",
      "returnType": {
        "$ref": "#/interfaces@92"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@62"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsagePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@5"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OccurrenceUsage",
      "returnType": {
        "$ref": "#/interfaces@93"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "occurrence"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IndividualUsage",
      "returnType": {
        "$ref": "#/interfaces@93"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortionUsage",
      "returnType": {
        "$ref": "#/interfaces@93"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@78"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@5"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EventOccurrenceUsage",
      "returnType": {
        "$ref": "#/interfaces@151"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "event"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "occurrence"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@83"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EmptySuccessionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@114"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EmptySuccession",
      "returnType": {
        "$ref": "#/interfaces@161"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@115"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicitySourceEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@116"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicitySourceEnd",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "multiplicity",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@58"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemDefinition",
      "returnType": {
        "$ref": "#/interfaces@96"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "item"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemUsage",
      "returnType": {
        "$ref": "#/interfaces@97"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "item"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartDefinition",
      "returnType": {
        "$ref": "#/interfaces@98"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "part"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PartUsage",
      "returnType": {
        "$ref": "#/interfaces@99"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "part"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortDefinition",
      "returnType": {
        "$ref": "#/interfaces@100"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@63"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "port"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortTyping",
      "returnType": {
        "$ref": "#/interfaces@167"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@123"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConjugatedPortReference",
      "returnType": {
        "$ref": "#/interfaces@163"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PortUsage",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "port"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@126"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorEnd",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@388"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@392"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@56"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "multiplicity",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@58"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BindingConnectorAsUsage",
      "returnType": {
        "$ref": "#/interfaces@125"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "binding"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "bind"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionAsUsage",
      "returnType": {
        "$ref": "#/interfaces@161"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@80"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "succession"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionDefinition",
      "returnType": {
        "$ref": "#/interfaces@126"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "connection"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectionUsage",
      "returnType": {
        "$ref": "#/interfaces@127"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connection"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@85"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": "connect"
                      },
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@131"
                        },
                        "arguments": []
                      }
                    ],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connect"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@131"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConnectorPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@132"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@133"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryConnectorPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryConnectorPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@125"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDefinition",
      "returnType": {
        "$ref": "#/interfaces@145"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Message",
      "returnType": {
        "$ref": "#/interfaces@146"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "message"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@136"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MessageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@85"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "item",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@142"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "messages",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@137"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "messages",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@137"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "messages",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@137"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "messages",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@137"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MessageEventMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@138"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MessageEvent",
      "returnType": {
        "$ref": "#/interfaces@151"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@56"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionUsage",
      "returnType": {
        "$ref": "#/interfaces@146"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@141"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SuccessionFlowConnectionUsage",
      "returnType": {
        "$ref": "#/interfaces@147"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "succession"
          },
          {
            "$type": "Keyword",
            "value": "flow"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@141"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@66"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowConnectionDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@85"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "of"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "item",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@142"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "from"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@146"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Keyword",
                    "value": "to"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "ends",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@146"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@146"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@146"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@143"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ItemFeature",
      "returnType": {
        "$ref": "#/interfaces@24"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@144"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadFeature",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@145"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@85"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@85"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@424"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@58"
                  },
                  "arguments": []
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "multiplicity",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@58"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@424"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadFeatureSpecializationPart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "+"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@45"
                    },
                    "arguments": []
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@46"
                    },
                    "arguments": [],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@45"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "+"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@147"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowEnd",
      "returnType": {
        "$ref": "#/interfaces@27"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@148"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@149"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowEndSubsetting",
      "returnType": {
        "$ref": "#/interfaces@52"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "targetRef",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@416"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "."
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@437"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowFeatureMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@150"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowFeature",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@151"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FlowRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@416"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceDefinition",
      "returnType": {
        "$ref": "#/interfaces@128"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@153"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@154"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@155"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@71"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@156"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@113"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@158"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceNonOccurrenceUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@157"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceNonOccurrenceUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@88"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@98"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@104"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@127"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@128"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceOccurrenceUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@159"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceOccurrenceUsageElement",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@160"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@92"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@93"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultInterfaceEnd",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "direction",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@394"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@61"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@401"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceUsage",
      "returnType": {
        "$ref": "#/interfaces@129"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "interface"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@162"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@153"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "connect"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@163"
                    },
                    "arguments": []
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@163"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfacePart",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@164"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@165"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BinaryInterfacePart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@166"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "to"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@166"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NaryInterfacePart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@166"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "ends",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@166"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceEndMember",
      "returnType": {
        "$ref": "#/interfaces@63"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@167"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InterfaceEnd",
      "returnType": {
        "$ref": "#/interfaces@101"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@388"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@392"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@56"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "multiplicity",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@58"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationDefinition",
      "returnType": {
        "$ref": "#/interfaces@140"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "allocation"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationUsage",
      "returnType": {
        "$ref": "#/interfaces@141"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@170"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AllocationUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "allocation"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "allocate"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@131"
                    },
                    "arguments": []
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "allocate"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@131"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionDefinition",
      "returnType": {
        "$ref": "#/interfaces@102"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@173"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@174"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@71"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@72"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@175"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@178"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@113"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@74"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@75"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@176"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@177"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InitialNodeMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@11"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@183"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetSuccessionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@221"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedSuccessionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@225"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsage",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsage",
      "returnType": {
        "$ref": "#/interfaces@150"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "perform"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@181"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PerformActionUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "action"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNode",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@197"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@186"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@202"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@205"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@209"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@210"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@213"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "action"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptNode",
      "returnType": {
        "$ref": "#/interfaces@112"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@187"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptNodeDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "accept"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@188"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AcceptParameterPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "payload",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@189"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "via"
              },
              {
                "$type": "Assignment",
                "feature": "receiver",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@199"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadParameterMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@190"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PayloadParameter",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@144"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@145"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@191"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerValuePart",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@192"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerFeatureValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@193"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerExpression",
      "returnType": {
        "$ref": "#/interfaces@149"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "kind",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "at"
                    },
                    {
                      "$type": "Keyword",
                      "value": "after"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@361"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "kind",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "when"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@194"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@195"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentExpression",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@196"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentExpressionValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@328"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SendNode",
      "returnType": {
        "$ref": "#/interfaces@155"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@198"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SendNodeDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "send"
          },
          {
            "$type": "Assignment",
            "feature": "payload",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "via"
              },
              {
                "$type": "Assignment",
                "feature": "sender",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@199"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "to"
              },
              {
                "$type": "Assignment",
                "feature": "receiver",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@199"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NodeParameterMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@200"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NodeParameter",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@201"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureBinding",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@327"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignmentNode",
      "returnType": {
        "$ref": "#/interfaces@148"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssignmentNodeDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@184"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "assign"
          },
          {
            "$type": "Assignment",
            "feature": "targetMember",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@434"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ":="
          },
          {
            "$type": "Assignment",
            "feature": "assignedValue",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionParameterMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@327"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IfNode",
      "returnType": {
        "$ref": "#/interfaces@104"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@185"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "if"
          },
          {
            "$type": "Assignment",
            "feature": "condition",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@204"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@206"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "else"
              },
              {
                "$type": "Assignment",
                "feature": "else",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@206"
                      },
                      "arguments": []
                    },
                    {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@208"
                      },
                      "arguments": []
                    }
                  ]
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyParameterMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@207"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionBodyParameter",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "action"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@173"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IfNodeParameterMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@205"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "WhileLoopNode",
      "returnType": {
        "$ref": "#/interfaces@153"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@185"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "while"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "condition",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@204"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              {
                "$type": "Keyword",
                "value": "loop"
              }
            ]
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@206"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "until"
              },
              {
                "$type": "Assignment",
                "feature": "until",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@204"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": ";"
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForLoopNode",
      "returnType": {
        "$ref": "#/interfaces@154"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@185"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "for"
          },
          {
            "$type": "Assignment",
            "feature": "variable",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@211"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Assignment",
            "feature": "sequence",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@199"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "body",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@206"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForVariableDeclarationMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@212"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForVariableDeclaration",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@82"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ControlNode",
      "returnType": {
        "$ref": "#/interfaces@156"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@215"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@216"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@217"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@218"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ControlNodePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@76"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@4"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@5"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@16"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MergeNode",
      "returnType": {
        "$ref": "#/interfaces@158"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@214"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "merge"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DecisionNode",
      "returnType": {
        "$ref": "#/interfaces@160"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@214"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "decide"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "JoinNode",
      "returnType": {
        "$ref": "#/interfaces@159"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@214"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "join"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ForkNode",
      "returnType": {
        "$ref": "#/interfaces@157"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@214"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "fork"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@219"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@220"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionNodeItems",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "children",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@9"
          },
          "arguments": []
        },
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActionTargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@88"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@222"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@223"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@224"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@161"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@115"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "ends",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@125"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedTargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "guard",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@249"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@258"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DefaultTargetSuccession",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "else",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@258"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardedSuccession",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "succession"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "first"
          },
          {
            "$type": "Assignment",
            "feature": "source",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "guard",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@249"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@258"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@84"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateDefinition",
      "returnType": {
        "$ref": "#/interfaces@105"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "state"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isParallel",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "parallel"
                },
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@228"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateBodyPart",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@229"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@36"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@33"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@69"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@31"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@70"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@71"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@72"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@113"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@74"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@75"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@241"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@240"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@230"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@233"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@231"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@232"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EntryActionMember",
      "returnType": {
        "$ref": "#/interfaces@169"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "entry"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@239"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "DoActionMember",
      "returnType": {
        "$ref": "#/interfaces@169"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "do"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@239"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExitActionMember",
      "returnType": {
        "$ref": "#/interfaces@169"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "exit"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@239"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EntryTransitionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "target",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@223"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "then"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "target",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@259"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ]
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage_1",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@103"
            }
          },
          {
            "$type": "Keyword",
            "value": ";"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage_2",
      "returnType": {
        "$ref": "#/interfaces@150"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@181"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage_3",
      "returnType": {
        "$ref": "#/interfaces@112"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@187"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage_4",
      "returnType": {
        "$ref": "#/interfaces@155"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@198"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage_5",
      "returnType": {
        "$ref": "#/interfaces@148"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateActionUsage",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@234"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@235"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@236"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@237"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@238"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@244"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetTransitionUsageMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@245"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StateUsage",
      "returnType": {
        "$ref": "#/interfaces@106"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "state"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExhibitStateUsage",
      "returnType": {
        "$ref": "#/interfaces@107"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "exhibit"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "state"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@227"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionUsage",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "transition"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@82"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Keyword",
                "value": "first"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "source",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@246"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "accepter",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@247"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "guard",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@249"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "effect",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@250"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@258"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TargetTransitionUsage",
      "returnType": {
        "$ref": "#/interfaces@111"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "transition"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "accepter",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@247"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "guard",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@249"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "effect",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@250"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "accepter",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@247"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "guard",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@249"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "effect",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@250"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "guard",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@249"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "effect",
                    "operator": "=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@250"
                      },
                      "arguments": []
                    },
                    "cardinality": "?"
                  }
                ]
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "then"
          },
          {
            "$type": "Assignment",
            "feature": "then",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@258"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@172"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionSourceMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@58"
                }
              },
              {
                "$type": "Assignment",
                "feature": "target",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@435"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerActionMember",
      "returnType": {
        "$ref": "#/interfaces@170"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "accept"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@248"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TriggerAction",
      "returnType": {
        "$ref": "#/interfaces@112"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@188"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "GuardExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@170"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@327"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorMember",
      "returnType": {
        "$ref": "#/interfaces@170"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "do"
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@257"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsageBody",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "{"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@173"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "}"
          }
        ],
        "cardinality": "?"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage_1",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Action",
        "type": {
          "$ref": "#/interfaces@103"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage_2",
      "returnType": {
        "$ref": "#/interfaces@150"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@181"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage_3",
      "returnType": {
        "$ref": "#/interfaces@112"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@187"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage_4",
      "returnType": {
        "$ref": "#/interfaces@155"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@198"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage_5",
      "returnType": {
        "$ref": "#/interfaces@148"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@203"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@251"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EffectBehaviorUsage",
      "returnType": {
        "$ref": "#/interfaces@103"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@252"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@253"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@254"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@255"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@256"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionSuccessionMember",
      "returnType": {
        "$ref": "#/interfaces@58"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@259"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TransitionSuccession",
      "returnType": {
        "$ref": "#/interfaces@161"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "ends",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@125"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationDefinition",
      "returnType": {
        "$ref": "#/interfaces@118"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "calc"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@261"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@262"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationBodyPart",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@263"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@174"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@264"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReturnParameterMember",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "return"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@40"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ResultExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@65"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@327"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CalculationUsage",
      "returnType": {
        "$ref": "#/interfaces@119"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "calc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@261"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintDefinition",
      "returnType": {
        "$ref": "#/interfaces@108"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "constraint"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@261"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintUsage",
      "returnType": {
        "$ref": "#/interfaces@109"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "constraint"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@261"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AssertConstraintUsage",
      "returnType": {
        "$ref": "#/interfaces@110"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assert"
          },
          {
            "$type": "Assignment",
            "feature": "isNegated",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "not"
            },
            "cardinality": "?"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "constraint"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@270"
                    },
                    "arguments": []
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@261"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConstraintUsageDeclaration",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementDefinition",
      "returnType": {
        "$ref": "#/interfaces@113"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "requirement"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@273"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@274"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@277"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@279"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@304"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@281"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@283"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubjectMember",
      "returnType": {
        "$ref": "#/interfaces@171"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "subject"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@276"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubjectUsage",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementConstraintMember",
      "returnType": {
        "$ref": "#/interfaces@174"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "kind",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@2"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@278"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementConstraintUsage",
      "returnType": {
        "$ref": "#/interfaces@109"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@56"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@261"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@79"
                        },
                        "arguments": [],
                        "cardinality": "*"
                      },
                      {
                        "$type": "Keyword",
                        "value": "constraint"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@79"
                    },
                    "arguments": [],
                    "cardinality": "+"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@270"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@261"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FramedConcernMember",
      "returnType": {
        "$ref": "#/interfaces@175"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "frame"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@280"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FramedConcernUsage",
      "returnType": {
        "$ref": "#/interfaces@117"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@56"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@272"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@79"
                        },
                        "arguments": [],
                        "cardinality": "*"
                      },
                      {
                        "$type": "Keyword",
                        "value": "concern"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@79"
                    },
                    "arguments": [],
                    "cardinality": "+"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@270"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@261"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActorMember",
      "returnType": {
        "$ref": "#/interfaces@172"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "actor"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@282"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ActorUsage",
      "returnType": {
        "$ref": "#/interfaces@99"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StakeholderMember",
      "returnType": {
        "$ref": "#/interfaces@173"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "stakeholder"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@284"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "StakeholderUsage",
      "returnType": {
        "$ref": "#/interfaces@99"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementUsage",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "requirement"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfyRequirementUsage",
      "returnType": {
        "$ref": "#/interfaces@115"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "assert",
            "cardinality": "?"
          },
          {
            "$type": "Assignment",
            "feature": "isNegated",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "not"
            },
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "satisfy"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "requirement"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "by"
              },
              {
                "$type": "Assignment",
                "feature": "satisfactionSubject",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@287"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfactionSubjectMember",
      "returnType": {
        "$ref": "#/interfaces@171"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@288"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfactionParameter",
      "returnType": {
        "$ref": "#/interfaces@91"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@289"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfactionFeatureValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@290"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SatisfactionReferenceExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@434"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernDefinition",
      "returnType": {
        "$ref": "#/interfaces@116"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "concern"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcernUsage",
      "returnType": {
        "$ref": "#/interfaces@117"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "concern"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseDefinition",
      "returnType": {
        "$ref": "#/interfaces@120"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@295"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseBodyItems",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@296"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "Assignment",
            "feature": "result",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@265"
              },
              "arguments": []
            },
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@263"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@275"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@281"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@297"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ObjectiveMember",
      "returnType": {
        "$ref": "#/interfaces@177"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "objective"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@298"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ObjectiveRequirementUsage",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@79"
            },
            "arguments": [],
            "cardinality": "*"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "CaseUsage",
      "returnType": {
        "$ref": "#/interfaces@121"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseDefinition",
      "returnType": {
        "$ref": "#/interfaces@122"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "analysis"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AnalysisCaseUsage",
      "returnType": {
        "$ref": "#/interfaces@123"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "analysis"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseDefinition",
      "returnType": {
        "$ref": "#/interfaces@136"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "verification"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VerificationCaseUsage",
      "returnType": {
        "$ref": "#/interfaces@137"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "verification"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementVerificationMember",
      "returnType": {
        "$ref": "#/interfaces@176"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "verify"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@305"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RequirementVerificationUsage",
      "returnType": {
        "$ref": "#/interfaces@114"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@56"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@272"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@79"
                        },
                        "arguments": [],
                        "cardinality": "*"
                      },
                      {
                        "$type": "Keyword",
                        "value": "requirement"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@79"
                    },
                    "arguments": [],
                    "cardinality": "+"
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@270"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@272"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseDefinition",
      "returnType": {
        "$ref": "#/interfaces@142"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "use"
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UseCaseUsage",
      "returnType": {
        "$ref": "#/interfaces@143"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "use"
          },
          {
            "$type": "Keyword",
            "value": "case"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@182"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "IncludeUseCaseUsage",
      "returnType": {
        "$ref": "#/interfaces@144"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "include"
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Assignment",
                    "feature": "heritage",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@56"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@44"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "use"
                  },
                  {
                    "$type": "Keyword",
                    "value": "case"
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@82"
                    },
                    "arguments": [],
                    "cardinality": "?"
                  }
                ]
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@294"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinition",
      "returnType": {
        "$ref": "#/interfaces@130"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "view"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@310"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@311"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@312"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewDefinitionBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@32"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@313"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewRenderingMember",
      "returnType": {
        "$ref": "#/interfaces@178"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "render"
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@314"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewRenderingUsage",
      "returnType": {
        "$ref": "#/interfaces@135"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "heritage",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@56"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@46"
                },
                "arguments": [],
                "cardinality": "*"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@84"
                },
                "arguments": []
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "RuleCall",
                        "rule": {
                          "$ref": "#/rules@16"
                        },
                        "arguments": [],
                        "cardinality": "?"
                      },
                      {
                        "$type": "Keyword",
                        "value": "rendering"
                      }
                    ]
                  },
                  {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@16"
                    },
                    "arguments": []
                  }
                ]
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@81"
                },
                "arguments": []
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewUsage",
      "returnType": {
        "$ref": "#/interfaces@131"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "view"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@82"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@85"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@316"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewBody",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ";"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "{"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@317"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": "}"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewBodyItems",
      "fragment": true,
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@318"
        },
        "arguments": [],
        "cardinality": "*"
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewBodyItem",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@68"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@32"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@320"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@313"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExposePrefix",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@398"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "expose"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Expose",
      "returnType": {
        "$ref": "#/interfaces@162"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@319"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@35"
            },
            "arguments": []
          },
          {
            "$type": "Assignment",
            "feature": "target",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@37"
              },
              "arguments": []
            },
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@11"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointDefinition",
      "returnType": {
        "$ref": "#/interfaces@132"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "viewpoint"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@65"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ViewpointUsage",
      "returnType": {
        "$ref": "#/interfaces@133"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "viewpoint"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@270"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@272"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingDefinition",
      "returnType": {
        "$ref": "#/interfaces@134"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@105"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "rendering"
          },
          {
            "$type": "Keyword",
            "value": "def"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@64"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RenderingUsage",
      "returnType": {
        "$ref": "#/interfaces@135"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@108"
            },
            "arguments": []
          },
          {
            "$type": "Keyword",
            "value": "rendering"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@81"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBody",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@261"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@327"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@330"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@326"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConcreteConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@81"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "operator",
            "operator": "=",
            "terminal": {
              "$type": "Keyword",
              "value": "if"
            }
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@331"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "?"
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@328"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "else"
          },
          {
            "$type": "Assignment",
            "feature": "operands",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@328"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ConditionalExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@331"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@329"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullCoalescingExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@334"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "??"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@332"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@333"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@334"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImpliesExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@337"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "implies"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@335"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@336"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@337"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OrExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@340"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "|"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@340"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "or"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@338"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@339"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@340"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "XorExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@341"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "xor"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@341"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AndExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@344"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "&"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@344"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "and"
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@342"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionReference",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@343"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpressionMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@344"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@345"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@422"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@345"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@346"
                },
                "arguments": []
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@81"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Alternatives",
                    "elements": [
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "operator",
                            "operator": "=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@420"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@427"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      {
                        "$type": "Group",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "operator",
                            "operator": "=",
                            "terminal": {
                              "$type": "Keyword",
                              "value": "as"
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@428"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@420"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@427"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@426"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "@@"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@427"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "as"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@428"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@426"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "meta"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@428"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@347"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@421"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@347"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RangeExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@348"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": ".."
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@348"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "AdditiveExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@349"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "+"
                    },
                    {
                      "$type": "Keyword",
                      "value": "-"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@349"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicativeExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@350"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "*"
                    },
                    {
                      "$type": "Keyword",
                      "value": "/"
                    },
                    {
                      "$type": "Keyword",
                      "value": "%"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@350"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExponentiationExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@351"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Alternatives",
                  "elements": [
                    {
                      "$type": "Keyword",
                      "value": "**"
                    },
                    {
                      "$type": "Keyword",
                      "value": "^"
                    }
                  ]
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@351"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@419"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Assignment",
                "feature": "operands",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@352"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@352"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExtentExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@81"
                }
              },
              {
                "$type": "Assignment",
                "feature": "operator",
                "operator": "=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "all"
                }
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@428"
                  },
                  "arguments": []
                }
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@353"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PrimaryExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@354"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@82"
                },
                "feature": "operands",
                "operator": "+="
              },
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@434"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Alternatives",
                "elements": [
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@81"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "#"
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "("
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@357"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": ")"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@81"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operator",
                        "operator": "=",
                        "terminal": {
                          "$type": "Keyword",
                          "value": "["
                        }
                      },
                      {
                        "$type": "Assignment",
                        "feature": "operands",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@357"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Keyword",
                        "value": "]"
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@80"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "->"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "heritage",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@430"
                          },
                          "arguments": []
                        }
                      },
                      {
                        "$type": "Alternatives",
                        "elements": [
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@356"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "Assignment",
                            "feature": "children",
                            "operator": "+=",
                            "terminal": {
                              "$type": "RuleCall",
                              "rule": {
                                "$ref": "#/rules@432"
                              },
                              "arguments": []
                            }
                          },
                          {
                            "$type": "RuleCall",
                            "rule": {
                              "$ref": "#/rules@359"
                            },
                            "arguments": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@83"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": "."
                      },
                      {
                        "$type": "Assignment",
                        "feature": "children",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@356"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Action",
                        "type": {
                          "$ref": "#/interfaces@84"
                        },
                        "feature": "operands",
                        "operator": "+="
                      },
                      {
                        "$type": "Keyword",
                        "value": ".?"
                      },
                      {
                        "$type": "Assignment",
                        "feature": "children",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@356"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@82"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Keyword",
                    "value": "."
                  },
                  {
                    "$type": "Assignment",
                    "feature": "children",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@434"
                      },
                      "arguments": []
                    }
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BaseExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@386"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@385"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@439"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@441"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@358"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@355"
            },
            "arguments": []
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "("
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@357"
                },
                "arguments": []
              },
              {
                "$type": "Keyword",
                "value": ")"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "BodyExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@356"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ExpressionBodyMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@325"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SequenceExpression",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@327"
            },
            "arguments": []
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Action",
                    "type": {
                      "$ref": "#/interfaces@81"
                    },
                    "feature": "operands",
                    "operator": "+="
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operator",
                    "operator": "=",
                    "terminal": {
                      "$type": "Keyword",
                      "value": ","
                    }
                  },
                  {
                    "$type": "Assignment",
                    "feature": "operands",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@357"
                      },
                      "arguments": []
                    }
                  }
                ]
              }
            ],
            "cardinality": "?"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "InvocationExpression",
      "returnType": {
        "$ref": "#/interfaces@80"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@424"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@359"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "("
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@360"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@363"
                },
                "arguments": []
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": ")"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "PositionalArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@361"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@361"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@362"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Argument",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "value",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@367"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgumentList",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "children",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@364"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": ","
              },
              {
                "$type": "Assignment",
                "feature": "children",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@364"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgumentMember",
      "returnType": {
        "$ref": "#/interfaces@64"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@365"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamedArgument",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "heritage",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@366"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "="
          },
          {
            "$type": "Assignment",
            "feature": "value",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@367"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ParameterRedefinition",
      "returnType": {
        "$ref": "#/interfaces@51"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@416"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ArgumentValue",
      "returnType": {
        "$ref": "#/interfaces@59"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@327"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "DECIMAL",
      "definition": {
        "$type": "RegexToken",
        "regex": "[0-9]+"
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FRACTION",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "CharacterRange",
            "left": {
              "$type": "Keyword",
              "value": "."
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@368"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "FLOAT",
      "definition": {
        "$type": "TerminalAlternatives",
        "elements": [
          {
            "$type": "TerminalGroup",
            "elements": [
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@368"
                }
              },
              {
                "$type": "TerminalRuleCall",
                "rule": {
                  "$ref": "#/rules@369"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@369"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "fragment": true,
      "name": "EXPONENT",
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "RegexToken",
            "regex": "[eE][\\\\-\\\\+]*"
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@368"
            }
          }
        ]
      },
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "NUMBER",
      "type": {
        "$type": "ReturnType",
        "name": "number"
      },
      "definition": {
        "$type": "TerminalGroup",
        "elements": [
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@370"
            }
          },
          {
            "$type": "TerminalRuleCall",
            "rule": {
              "$ref": "#/rules@371"
            },
            "cardinality": "?"
          }
        ]
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "ID",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "[_a-zA-Z][\\\\w_\\\\d]*"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "UNRESTRICTED_NAME",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "'(\\\\\\\\['\\"bftnr\\\\\\\\]|[^'\\\\\\\\])*'"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "STRING_VALUE",
      "type": {
        "$type": "ReturnType",
        "name": "string"
      },
      "definition": {
        "$type": "RegexToken",
        "regex": "\\"[^\\"]*\\""
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "name": "REGULAR_COMMENT",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false,
      "hidden": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "ML_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "SL_NOTE",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\/\\\\/[^\\\\n\\\\r]*"
      },
      "fragment": false
    },
    {
      "$type": "TerminalRule",
      "hidden": true,
      "name": "WS",
      "definition": {
        "$type": "RegexToken",
        "regex": "\\\\s+"
      },
      "fragment": false
    },
    {
      "$type": "ParserRule",
      "name": "Name",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@373"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@374"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralBoolean",
      "returnType": {
        "$ref": "#/interfaces@75"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "false"
          },
          {
            "$type": "Assignment",
            "feature": "literal",
            "operator": "?=",
            "terminal": {
              "$type": "Keyword",
              "value": "true"
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralString",
      "returnType": {
        "$ref": "#/interfaces@76"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "literal",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@375"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralNumber",
      "returnType": {
        "$ref": "#/interfaces@77"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "literal",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@372"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralInfinity",
      "returnType": {
        "$ref": "#/interfaces@78"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@78"
            }
          },
          {
            "$type": "Keyword",
            "value": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "LiteralExpression",
      "returnType": {
        "$ref": "#/interfaces@74"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@381"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@382"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@383"
            },
            "arguments": []
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@384"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NullExpression",
      "returnType": {
        "$ref": "#/interfaces@79"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Action",
            "type": {
              "$ref": "#/interfaces@79"
            }
          },
          {
            "$type": "Alternatives",
            "elements": [
              {
                "$type": "Keyword",
                "value": "null"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "("
                  },
                  {
                    "$type": "Keyword",
                    "value": ")"
                  }
                ]
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ShortName",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Assignment",
            "feature": "declaredShortName",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@380"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": ">"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RegularName",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "declaredName",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@380"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Identification",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@387"
                },
                "arguments": []
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@388"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@388"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SpecializesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "specializes"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "SubsetsToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>"
          },
          {
            "$type": "Keyword",
            "value": "subsets"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferencesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::>"
          },
          {
            "$type": "Keyword",
            "value": "references"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RedefinesToken",
      "fragment": true,
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": ":>>"
          },
          {
            "$type": "Keyword",
            "value": "redefines"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureDirectionKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "in"
          },
          {
            "$type": "Keyword",
            "value": "inout"
          },
          {
            "$type": "Keyword",
            "value": "out"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "VisibilityKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "private"
          },
          {
            "$type": "Keyword",
            "value": "protected"
          },
          {
            "$type": "Keyword",
            "value": "public"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportKind",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "::*"
          },
          {
            "$type": "Keyword",
            "value": "::**"
          },
          {
            "$type": "Keyword",
            "value": "::*::**"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Abstract",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isAbstract",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "abstract"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Visibility",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "visibility",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@395"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Readonly",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isReadOnly",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "readonly"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Derived",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isDerived",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "derived"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "End",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isEnd",
        "operator": "=",
        "terminal": {
          "$type": "Keyword",
          "value": "end"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Sufficient",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isSufficient",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Standard",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "isStandard",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "standard"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ImportAll",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "importsAll",
        "operator": "?=",
        "terminal": {
          "$type": "Keyword",
          "value": "all"
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MultiplicityProperties",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                },
                "cardinality": "?"
              }
            ]
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "isNonunique",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "nonunique"
                }
              },
              {
                "$type": "Assignment",
                "feature": "isOrdered",
                "operator": "?=",
                "terminal": {
                  "$type": "Keyword",
                  "value": "ordered"
                },
                "cardinality": "?"
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Annotation",
      "returnType": {
        "$ref": "#/interfaces@0"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@412"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualAnnotatingElementBody",
      "fragment": true,
      "definition": {
        "$type": "Assignment",
        "feature": "body",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@376"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Comment",
      "returnType": {
        "$ref": "#/interfaces@3"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "comment"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              },
              {
                "$type": "Group",
                "elements": [
                  {
                    "$type": "Keyword",
                    "value": "about"
                  },
                  {
                    "$type": "Assignment",
                    "feature": "about",
                    "operator": "+=",
                    "terminal": {
                      "$type": "RuleCall",
                      "rule": {
                        "$ref": "#/rules@406"
                      },
                      "arguments": []
                    }
                  },
                  {
                    "$type": "Group",
                    "elements": [
                      {
                        "$type": "Keyword",
                        "value": ","
                      },
                      {
                        "$type": "Assignment",
                        "feature": "about",
                        "operator": "+=",
                        "terminal": {
                          "$type": "RuleCall",
                          "rule": {
                            "$ref": "#/rules@406"
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "cardinality": "*"
                  }
                ],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "locale"
              },
              {
                "$type": "Assignment",
                "feature": "locale",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@375"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@407"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "Documentation",
      "returnType": {
        "$ref": "#/interfaces@4"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Keyword",
            "value": "doc"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@389"
            },
            "arguments": [],
            "cardinality": "?"
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "locale"
              },
              {
                "$type": "Assignment",
                "feature": "locale",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@375"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@407"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TextualRepresentation",
      "returnType": {
        "$ref": "#/interfaces@5"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "rep"
              },
              {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@389"
                },
                "arguments": [],
                "cardinality": "?"
              }
            ],
            "cardinality": "?"
          },
          {
            "$type": "Keyword",
            "value": "language"
          },
          {
            "$type": "Assignment",
            "feature": "language",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@375"
              },
              "arguments": []
            }
          },
          {
            "$type": "RuleCall",
            "rule": {
              "$ref": "#/rules@407"
            },
            "arguments": []
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "QualifiedReferenceChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "parts",
            "operator": "+=",
            "terminal": {
              "$type": "CrossReference",
              "type": {
                "$ref": "#/interfaces@6"
              },
              "terminal": {
                "$type": "RuleCall",
                "rule": {
                  "$ref": "#/rules@380"
                },
                "arguments": []
              },
              "deprecatedSyntax": false
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "::"
              },
              {
                "$type": "Assignment",
                "feature": "parts",
                "operator": "+=",
                "terminal": {
                  "$type": "CrossReference",
                  "type": {
                    "$ref": "#/interfaces@6"
                  },
                  "terminal": {
                    "$type": "RuleCall",
                    "rule": {
                      "$ref": "#/rules@380"
                    },
                    "arguments": []
                  },
                  "deprecatedSyntax": false
                }
              }
            ],
            "cardinality": "*"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ElementReference",
      "returnType": {
        "$ref": "#/interfaces@67"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "NamespaceReference",
      "returnType": {
        "$ref": "#/interfaces@68"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReference",
      "returnType": {
        "$ref": "#/interfaces@69"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassifierReference",
      "returnType": {
        "$ref": "#/interfaces@70"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReference",
      "returnType": {
        "$ref": "#/interfaces@71"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetaclassReference",
      "returnType": {
        "$ref": "#/interfaces@72"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MembershipReference",
      "returnType": {
        "$ref": "#/interfaces@73"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@411"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "UnaryOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "+"
          },
          {
            "$type": "Keyword",
            "value": "-"
          },
          {
            "$type": "Keyword",
            "value": "~"
          },
          {
            "$type": "Keyword",
            "value": "not"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ClassificationTestOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "istype"
          },
          {
            "$type": "Keyword",
            "value": "hastype"
          },
          {
            "$type": "Keyword",
            "value": "@"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "RelationalOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "<"
          },
          {
            "$type": "Keyword",
            "value": ">"
          },
          {
            "$type": "Keyword",
            "value": "<="
          },
          {
            "$type": "Keyword",
            "value": ">="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "EqualityOperator",
      "dataType": "string",
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Keyword",
            "value": "=="
          },
          {
            "$type": "Keyword",
            "value": "!="
          },
          {
            "$type": "Keyword",
            "value": "==="
          },
          {
            "$type": "Keyword",
            "value": "!=="
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@417"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@425"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureType",
      "fragment": true,
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@414"
              },
              "arguments": []
            }
          },
          {
            "$type": "Assignment",
            "feature": "targetChain",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@435"
              },
              "arguments": []
            }
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataReference",
      "returnType": {
        "$ref": "#/interfaces@86"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "reference",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@412"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@429"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeResultMember",
      "returnType": {
        "$ref": "#/interfaces@66"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@429"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "TypeReferenceFeature",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@430"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "ReferenceTyping",
      "returnType": {
        "$ref": "#/interfaces@47"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@414"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@432"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@62"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "target",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@433"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FunctionReference",
      "returnType": {
        "$ref": "#/interfaces@30"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "heritage",
        "operator": "+=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@430"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChainMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Alternatives",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "targetRef",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@416"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Action",
                "type": {
                  "$ref": "#/interfaces@58"
                }
              },
              {
                "$type": "Assignment",
                "feature": "target",
                "operator": "=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@435"
                  },
                  "arguments": []
                }
              }
            ]
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureChain",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "RuleCall",
        "rule": {
          "$ref": "#/rules@436"
        },
        "arguments": []
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChain",
      "fragment": true,
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@438"
              },
              "arguments": []
            }
          },
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Keyword",
                "value": "."
              },
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@438"
                  },
                  "arguments": []
                }
              }
            ],
            "cardinality": "+"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureChainPrefix",
      "returnType": {
        "$ref": "#/interfaces@20"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Group",
            "elements": [
              {
                "$type": "Assignment",
                "feature": "typeRelationships",
                "operator": "+=",
                "terminal": {
                  "$type": "RuleCall",
                  "rule": {
                    "$ref": "#/rules@438"
                  },
                  "arguments": []
                }
              },
              {
                "$type": "Keyword",
                "value": "."
              }
            ],
            "cardinality": "+"
          },
          {
            "$type": "Assignment",
            "feature": "typeRelationships",
            "operator": "+=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@438"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "OwnedFeatureChaining",
      "returnType": {
        "$ref": "#/interfaces@42"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@416"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceExpression",
      "returnType": {
        "$ref": "#/interfaces@85"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "expression",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@440"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "FeatureReferenceMember",
      "returnType": {
        "$ref": "#/interfaces@57"
      },
      "definition": {
        "$type": "Assignment",
        "feature": "targetRef",
        "operator": "=",
        "terminal": {
          "$type": "RuleCall",
          "rule": {
            "$ref": "#/rules@416"
          },
          "arguments": []
        }
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    },
    {
      "$type": "ParserRule",
      "name": "MetadataAccessExpression",
      "returnType": {
        "$ref": "#/interfaces@86"
      },
      "definition": {
        "$type": "Group",
        "elements": [
          {
            "$type": "Assignment",
            "feature": "reference",
            "operator": "=",
            "terminal": {
              "$type": "RuleCall",
              "rule": {
                "$ref": "#/rules@412"
              },
              "arguments": []
            }
          },
          {
            "$type": "Keyword",
            "value": "."
          },
          {
            "$type": "Keyword",
            "value": "metadata"
          }
        ]
      },
      "definesHiddenTokens": false,
      "entry": false,
      "fragment": false,
      "hiddenTokens": [],
      "parameters": [],
      "wildcard": false
    }
  ],
  "definesHiddenTokens": false,
  "hiddenTokens": [],
  "interfaces": [
    {
      "$type": "Interface",
      "name": "Annotation",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "about",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@0"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "AnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "body",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "TextualAnnotatingElement",
      "superTypes": [
        {
          "$ref": "#/interfaces@1"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "locale",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "Comment",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Documentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@3"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "language",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "TextualRepresentation",
      "superTypes": [
        {
          "$ref": "#/interfaces@2"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "declaredName",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "declaredShortName",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "Element",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "prefixes",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@58"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "children",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@54"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@57"
                  }
                }
              ]
            }
          },
          "isOptional": false
        }
      ],
      "name": "Namespace",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isSufficient",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isAbstract",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "abstract"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "heritage",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@38"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "typeRelationships",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/types@9"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/types@10"
                  }
                }
              ]
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "multiplicity",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        }
      ],
      "name": "Type",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Classifier",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DataType",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Class",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Structure",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Behavior",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Association",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        },
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssociationStructure",
      "superTypes": [
        {
          "$ref": "#/interfaces@14"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Metaclass",
      "superTypes": [
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "result",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@65"
            }
          }
        }
      ],
      "name": "SysMLFunction",
      "superTypes": [
        {
          "$ref": "#/interfaces@13"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Predicate",
      "superTypes": [
        {
          "$ref": "#/interfaces@17"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Interaction",
      "superTypes": [
        {
          "$ref": "#/interfaces@14"
        },
        {
          "$ref": "#/interfaces@13"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isNonunique",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isOrdered",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "direction",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@1"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isComposite",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "composite"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isDerived",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "derived"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isEnd",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "end"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isPortion",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "portion"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isReadOnly",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "readonly"
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "value",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@59"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "write",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          }
        }
      ],
      "name": "Feature",
      "superTypes": [
        {
          "$ref": "#/interfaces@8"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MetadataFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        },
        {
          "$ref": "#/interfaces@1"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Multiplicity",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "range",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        }
      ],
      "name": "MultiplicityRange",
      "superTypes": [
        {
          "$ref": "#/interfaces@22"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ItemFeature",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Step",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "ends",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@63"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "Connector",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        },
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ItemFlowEnd",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Succession",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnector",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "result",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@65"
            }
          }
        }
      ],
      "name": "Expression",
      "superTypes": [
        {
          "$ref": "#/interfaces@25"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "item",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@62"
            }
          }
        }
      ],
      "name": "ItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@26"
        },
        {
          "$ref": "#/interfaces@25"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SuccessionItemFlow",
      "superTypes": [
        {
          "$ref": "#/interfaces@31"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BooleanExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isNegated",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Invariant",
      "superTypes": [
        {
          "$ref": "#/interfaces@33"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Package",
      "superTypes": [
        {
          "$ref": "#/interfaces@7"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isStandard",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "LibraryPackage",
      "superTypes": [
        {
          "$ref": "#/interfaces@35"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "visibility",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@0"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "elements",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "UnionType",
              "types": [
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@7"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@37"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@20"
                  }
                },
                {
                  "$type": "SimpleType",
                  "typeRef": {
                    "$ref": "#/interfaces@0"
                  }
                }
              ]
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "source",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@6"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "sourceRef",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "sourceChain",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@20"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "target",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@6"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "targetRef",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "targetChain",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@20"
            }
          }
        }
      ],
      "name": "Relationship",
      "superTypes": [
        {
          "$ref": "#/interfaces@6"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "Inheritance",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Unioning",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Differencing",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Intersecting",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureChaining",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Specialization",
      "superTypes": [
        {
          "$ref": "#/interfaces@38"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Disjoining",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureInverting",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "TypeFeaturing",
      "superTypes": [
        {
          "$ref": "#/interfaces@61"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureTyping",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Subclassification",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Subsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@43"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Conjugation",
      "superTypes": [
        {
          "$ref": "#/interfaces@38"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Redefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@49"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReferenceSubsetting",
      "superTypes": [
        {
          "$ref": "#/interfaces@49"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "prefixes",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@0"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "client",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@67"
              }
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "supplier",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@67"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "Dependency",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "importsAll",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isRecursive",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isNamespace",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "stringType": "::*"
          }
        }
      ],
      "name": "Import",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MembershipImport",
      "superTypes": [
        {
          "$ref": "#/interfaces@54"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "NamespaceImport",
      "superTypes": [
        {
          "$ref": "#/interfaces@54"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isAlias",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Membership",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "OwningMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@57"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isDefault",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isInitial",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "FeatureValue",
      "superTypes": [
        {
          "$ref": "#/interfaces@58"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ElementFilterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@58"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Featuring",
      "superTypes": [
        {
          "$ref": "#/interfaces@37"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@61"
        },
        {
          "$ref": "#/interfaces@58"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EndFeatureMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ParameterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ResultExpressionMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReturnParameterMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "parts",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "ReferenceType",
              "referenceType": {
                "$type": "SimpleType",
                "typeRef": {
                  "$ref": "#/interfaces@6"
                }
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "ElementReference",
      "superTypes": []
    },
    {
      "$type": "Interface",
      "name": "NamespaceReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@67"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "TypeReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@68"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ClassifierReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@69"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FeatureReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@69"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MetaclassReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@70"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MembershipReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@67"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "LiteralExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralBoolean",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralString",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "literal",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "number"
          },
          "isOptional": false
        }
      ],
      "name": "LiteralNumber",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "LiteralInfinity",
      "superTypes": [
        {
          "$ref": "#/interfaces@74"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "NullExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "operands",
          "isOptional": true,
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@30"
              }
            }
          }
        }
      ],
      "name": "InvocationExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "operator",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "primitiveType": "string"
          }
        }
      ],
      "name": "OperatorExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@80"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "FeatureChainExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CollectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SelectExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@81"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "expression",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          },
          "isOptional": false
        }
      ],
      "name": "FeatureReferenceExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "reference",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@67"
            }
          },
          "isOptional": false
        }
      ],
      "name": "MetadataAccessExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@30"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isVariation",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isIndividual",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Definition",
      "superTypes": [
        {
          "$ref": "#/interfaces@9"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isVariation",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "isReference",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "portionKind",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@15"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "isIndividual",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "Usage",
      "superTypes": [
        {
          "$ref": "#/interfaces@20"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "MetadataDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@16"
        },
        {
          "$ref": "#/interfaces@96"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MetadataUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@21"
        },
        {
          "$ref": "#/interfaces@97"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ReferenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@88"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "OccurrenceDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@87"
        },
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "OccurrenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@88"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AttributeDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@87"
        },
        {
          "$ref": "#/interfaces@10"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AttributeUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@88"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@92"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ItemUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PartDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@96"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PartUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@97"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PortDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@92"
        },
        {
          "$ref": "#/interfaces@12"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PortUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ActionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@92"
        },
        {
          "$ref": "#/interfaces@13"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        },
        {
          "$ref": "#/interfaces@25"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "condition",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "then",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "else",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        }
      ],
      "name": "IfActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isParallel",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "StateDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@102"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "isParallel",
          "type": {
            "$type": "SimpleType",
            "primitiveType": "boolean"
          },
          "isOptional": false
        }
      ],
      "name": "StateUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ExhibitStateUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@106"
        },
        {
          "$ref": "#/interfaces@150"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConstraintDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@92"
        },
        {
          "$ref": "#/interfaces@18"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConstraintUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        },
        {
          "$ref": "#/interfaces@33"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AssertConstraintUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@109"
        },
        {
          "$ref": "#/interfaces@34"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "source",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "transitionLinkSource",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "payload",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "accepter",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@170"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "guard",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@170"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "effect",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@170"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "then",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "else",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@58"
            }
          }
        }
      ],
      "name": "TransitionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "payload",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "receiver",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        }
      ],
      "name": "AcceptActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "RequirementDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@108"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RequirementUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@109"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "satisfactionSubject",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@171"
            }
          }
        }
      ],
      "name": "SatisfyRequirementUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        },
        {
          "$ref": "#/interfaces@110"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ConcernDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@113"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConcernUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CalculationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@102"
        },
        {
          "$ref": "#/interfaces@17"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CalculationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        },
        {
          "$ref": "#/interfaces@30"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@118"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "CaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@119"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AnalysisCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@120"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AnalysisCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@121"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectorAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@88"
        },
        {
          "$ref": "#/interfaces@26"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "BindingConnectorAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@124"
        },
        {
          "$ref": "#/interfaces@29"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@98"
        },
        {
          "$ref": "#/interfaces@15"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@99"
        },
        {
          "$ref": "#/interfaces@124"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "InterfaceDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@126"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "InterfaceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@127"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@98"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@99"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewpointDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@113"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewpointUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@114"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RenderingDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@98"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RenderingUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@99"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "VerificationCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@120"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "VerificationCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@121"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EnumerationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@94"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EnumerationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@95"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AllocationDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@126"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "AllocationUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@127"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "UseCaseDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@120"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "UseCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@121"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "IncludeUseCaseUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@143"
        },
        {
          "$ref": "#/interfaces@150"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "FlowConnectionDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@126"
        },
        {
          "$ref": "#/interfaces@102"
        },
        {
          "$ref": "#/interfaces@19"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "messages",
          "type": {
            "$type": "ArrayType",
            "elementType": {
              "$type": "SimpleType",
              "typeRef": {
                "$ref": "#/interfaces@64"
              }
            }
          },
          "isOptional": false
        }
      ],
      "name": "FlowConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@127"
        },
        {
          "$ref": "#/interfaces@103"
        },
        {
          "$ref": "#/interfaces@31"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SuccessionFlowConnectionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@146"
        },
        {
          "$ref": "#/interfaces@32"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "targetMember",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "assignedValue",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        }
      ],
      "name": "AssignmentActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "kind",
          "type": {
            "$type": "UnionType",
            "types": [
              {
                "$type": "SimpleType",
                "stringType": "at"
              },
              {
                "$type": "SimpleType",
                "stringType": "after"
              },
              {
                "$type": "SimpleType",
                "stringType": "when"
              }
            ]
          },
          "isOptional": false
        }
      ],
      "name": "TriggerInvocationExpression",
      "superTypes": [
        {
          "$ref": "#/interfaces@80"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "PerformActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        },
        {
          "$ref": "#/interfaces@151"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "EventOccurrenceUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@93"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "LoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "condition",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "body",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "until",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        }
      ],
      "name": "WhileLoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@152"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "variable",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@62"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "sequence",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "body",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        }
      ],
      "name": "ForLoopActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@152"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "payload",
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          },
          "isOptional": false
        },
        {
          "$type": "TypeAttribute",
          "name": "sender",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        },
        {
          "$type": "TypeAttribute",
          "name": "receiver",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@64"
            }
          }
        }
      ],
      "name": "SendActionUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "ControlNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@103"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ForkNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@156"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MergeNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@156"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "JoinNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@156"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "DecisionNode",
      "superTypes": [
        {
          "$ref": "#/interfaces@156"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "SuccessionAsUsage",
      "superTypes": [
        {
          "$ref": "#/interfaces@124"
        },
        {
          "$ref": "#/interfaces@28"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "Expose",
      "superTypes": [
        {
          "$ref": "#/interfaces@54"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConjugatedPortReference",
      "superTypes": [
        {
          "$ref": "#/interfaces@70"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "VariantMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@58"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "LifeClass",
      "superTypes": [
        {
          "$ref": "#/interfaces@11"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConjugatedPortDefinition",
      "superTypes": [
        {
          "$ref": "#/interfaces@100"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ConjugatedPortTyping",
      "superTypes": [
        {
          "$ref": "#/interfaces@47"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "PortConjugation",
      "superTypes": [
        {
          "$ref": "#/interfaces@50"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "kind",
          "type": {
            "$type": "UnionType",
            "types": [
              {
                "$type": "SimpleType",
                "stringType": "entry"
              },
              {
                "$type": "SimpleType",
                "stringType": "exit"
              },
              {
                "$type": "SimpleType",
                "stringType": "do"
              }
            ]
          },
          "isOptional": false
        }
      ],
      "name": "StateSubactionMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ]
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "kind",
          "type": {
            "$type": "UnionType",
            "types": [
              {
                "$type": "SimpleType",
                "stringType": "accept"
              },
              {
                "$type": "SimpleType",
                "stringType": "if"
              },
              {
                "$type": "SimpleType",
                "stringType": "do"
              }
            ]
          },
          "isOptional": false
        }
      ],
      "name": "TransitionFeatureMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "SubjectMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ActorMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "StakeholderMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@64"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "attributes": [
        {
          "$type": "TypeAttribute",
          "name": "kind",
          "isOptional": true,
          "type": {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@14"
            }
          }
        }
      ],
      "name": "RequirementConstraintMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ]
    },
    {
      "$type": "Interface",
      "name": "FramedConcernMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@174"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "RequirementVerificationMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@174"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ObjectiveMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "ViewRenderingMembership",
      "superTypes": [
        {
          "$ref": "#/interfaces@62"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "MembershipExpose",
      "superTypes": [
        {
          "$ref": "#/interfaces@162"
        },
        {
          "$ref": "#/interfaces@55"
        }
      ],
      "attributes": []
    },
    {
      "$type": "Interface",
      "name": "NamespaceExpose",
      "superTypes": [
        {
          "$ref": "#/interfaces@162"
        },
        {
          "$ref": "#/interfaces@56"
        }
      ],
      "attributes": []
    }
  ],
  "types": [
    {
      "$type": "Type",
      "name": "VisibilityKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "private"
          },
          {
            "$type": "SimpleType",
            "stringType": "protected"
          },
          {
            "$type": "SimpleType",
            "stringType": "public"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "FeatureDirectionKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "in"
          },
          {
            "$type": "SimpleType",
            "stringType": "inout"
          },
          {
            "$type": "SimpleType",
            "stringType": "out"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "UnaryOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "+"
          },
          {
            "$type": "SimpleType",
            "stringType": "-"
          },
          {
            "$type": "SimpleType",
            "stringType": "not"
          },
          {
            "$type": "SimpleType",
            "stringType": "~"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "ClassificationTestOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "@"
          },
          {
            "$type": "SimpleType",
            "stringType": "hastype"
          },
          {
            "$type": "SimpleType",
            "stringType": "istype"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "EqualityOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "!="
          },
          {
            "$type": "SimpleType",
            "stringType": "!=="
          },
          {
            "$type": "SimpleType",
            "stringType": "=="
          },
          {
            "$type": "SimpleType",
            "stringType": "==="
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "ImportKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "::*"
          },
          {
            "$type": "SimpleType",
            "stringType": "::**"
          },
          {
            "$type": "SimpleType",
            "stringType": "::*::**"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "RelationalOperator",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "<"
          },
          {
            "$type": "SimpleType",
            "stringType": "<="
          },
          {
            "$type": "SimpleType",
            "stringType": ">"
          },
          {
            "$type": "SimpleType",
            "stringType": ">="
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "InlineExpression",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@82"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@80"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@74"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@86"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@79"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@81"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@83"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@84"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@85"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "NonOwnerType",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@57"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@0"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "TypeRelationship",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@39"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@40"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@44"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@41"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "FeatureRelationship",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@9"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@42"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@45"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@46"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "TransparentElement",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/interfaces@152"
            }
          },
          {
            "$type": "SimpleType",
            "typeRef": {
              "$ref": "#/types@8"
            }
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "RequirementKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "objective"
          },
          {
            "$type": "SimpleType",
            "stringType": "verify"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "ParameterKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "actor"
          },
          {
            "$type": "SimpleType",
            "stringType": "stakeholder"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "RequirementConstraintKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "assume"
          },
          {
            "$type": "SimpleType",
            "stringType": "require"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "PortionKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "timeslice"
          },
          {
            "$type": "SimpleType",
            "stringType": "snapshot"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "TriggerKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "when"
          },
          {
            "$type": "SimpleType",
            "stringType": "at"
          },
          {
            "$type": "SimpleType",
            "stringType": "after"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "StateSubactionKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "entry"
          },
          {
            "$type": "SimpleType",
            "stringType": "do"
          },
          {
            "$type": "SimpleType",
            "stringType": "exit"
          }
        ]
      }
    },
    {
      "$type": "Type",
      "name": "TransitionFeatureKind",
      "type": {
        "$type": "UnionType",
        "types": [
          {
            "$type": "SimpleType",
            "stringType": "trigger"
          },
          {
            "$type": "SimpleType",
            "stringType": "guard"
          },
          {
            "$type": "SimpleType",
            "stringType": "effect"
          }
        ]
      }
    }
  ],
  "usedGrammars": []
}`);ug.SysMLGrammar=bJe});var ks=p(je=>{"use strict";var CJe=je&&je.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(je,"__esModule",{value:!0});je.getChildrenRange=je.collectPrintRange=je.printDescendant=je.getElementEnd=je.getElementStart=je.hasFormatIgnore=je.shouldIgnoreRef=je.selectDeclarationKeyword=je.hasFeatureDeclaration=je.formatPreserved=je.SysMLKeywords=je.KerMLKeywords=je.getKeywordsFor=je.printReference=je.assertMember=je.throwError=je.printAstReference=je.printIdentifiers=je.printIdentifier=je.computeHighlighting=void 0;var AJe=Pe(),vt=Ae(),Bne=lg(),Wne=kf(),pl=D(),Pm=Is(),_$=be(),wJe=yt(),zne=hq(),DJe=CJe(require("assert"));function _q(r){return{type:(0,Bne.tokenType)(r),modifiers:(0,Bne.tokenModifiers)(r)}}je.computeHighlighting=_q;function hw(r,e={}){var t;return e.forceQuotes||!((t=e.restricted)===null||t===void 0)&&t.has(r)?(0,vt.text)(`'${r}'`,e.semantic):(0,vt.text)((0,Wne.unsanitizeName)(r),e.semantic)}je.printIdentifier=hw;function SJe(r,e,t={}){var n,i,a,s,o;let u=[];if(!r.declaredShortName&&!r.declaredName)return u;let c=e!=null&&e.highlighting?_q(r):{};return(n=c.modifiers)===null||n===void 0||n.push(AJe.SemanticTokenModifiers.declaration),t.leading&&u.push(t.leading),r.declaredShortName&&(u.push((0,vt.group)([vt.brackets.angle.open,(0,vt.indent)([vt.softline,hw(r.declaredShortName,{semantic:c,restricted:e==null?void 0:e.keywords,forceQuotes:(e==null?void 0:e.format.strip_unnecessary_quotes)===!1&&((a=(i=r.ast())===null||i===void 0?void 0:i.declaredShortName)===null||a===void 0?void 0:a.startsWith("'"))})]),(0,vt.ifBreak)(vt.hardlineWithoutBreakParent,vt.literals.emptytext),vt.brackets.angle.close])),r.declaredName&&u.push(vt.literals.space)),r.declaredName&&u.push(hw(r.declaredName,{semantic:c,restricted:e==null?void 0:e.keywords,forceQuotes:(e==null?void 0:e.format.strip_unnecessary_quotes)===!1&&((o=(s=r.ast())===null||s===void 0?void 0:s.declaredName)===null||o===void 0?void 0:o.startsWith("'"))})),t.trailing&&u.length>0&&u.push(t.trailing),u}je.printIdentifiers=SJe;function gq(r,e){let t=r.$meta.notes.filter(s=>s.localPlacement==="inner"&&s.label!==void 0),n=vt.softline,i=(0,vt.fill)(r.parts.map((s,o)=>{let u=hw((0,Wne.sanitizeName)(s.$refText),{semantic:e.highlighting&&s.ref?_q(s.ref.$meta):{},restricted:e.keywords,forceQuotes:!e.format.strip_unnecessary_quotes&&s.$refText.startsWith("'")});if(t.length===0)return o===0?u:[(0,vt.indent)(n),(0,vt.indent)([vt.literals.doublecolon,u])];let c=`${o}-leading`,f=`${o}-trailing`,d=[],m=[];t=t.filter(y=>{switch(y.label){case c:return d.push(y),!1;case f:return m.push(y),!1;default:return!0}}),d.length>0&&(u=[o!==0?vt.line:vt.literals.emptytext,(0,vt.printInnerComments)(d,Object.assign(Object.assign({},e),{label:c}),y=>y.kind==="line"?vt.hardline:void 0),vt.line,u]),m.length>0&&(u=[u,vt.line,(0,vt.printInnerComments)(m,Object.assign(Object.assign({},e),{label:f}))]),u=(0,vt.group)(u),o!==0&&(u=[(0,vt.indent)(n),(0,vt.indent)([vt.literals.doublecolon,u])]);let h=m.at(-1);return h&&(h.kind==="line"?n=vt.hardline:n=vt.softline),u}).flat(1)),a=(0,Pm.defaultPrintNotes)(i,r.$meta,e);return r.$meta.notes.some(s=>s.localPlacement==="leading")?(0,vt.label)("with-leading-notes",a):a}je.printAstReference=gq;function gw(r,e){var t;let n=(t=r.cst())===null||t===void 0?void 0:t.range;throw n&&(e+=` on line ${n.start.line+1}, character: ${n.start.character+1}`),new Error(e)}je.throwError=gw;function MJe(r,e,t,n){e||gw(r,`Invalid ${t} - missing ${n} member`)}je.assertMember=MJe;function PJe(r,e){var t,n;if(!r)return e.astNode||gw(e.scope,(t=e.errorMessage)!==null&&t!==void 0?t:`Missing reference in ${e.scope.nodeType()}`),gq(e.astNode,e.context);if(e.astNode){let i=(n=e.astNode)===null||n===void 0?void 0:n.$meta.to,a=e.astNode.$type!==pl.MembershipReference&&r.is(pl.Membership)?r.element():r;if(!(i!=null&&i.cached)||i.target===a)return gq(e.astNode,e.context)}return e.context.referencePrinter(r,e.scope,e.context)}je.printReference=PJe;function EJe(r){return(0,_$.stream)(r.rules).flatMap(_$.streamAst).filter(wJe.isKeyword).map(e=>e.value).toSet()}var Gne={};function $q(r,e){var t;return(t=Gne[r])!==null&&t!==void 0?t:Gne[r]=EJe(e)}je.getKeywordsFor=$q;function OJe(){return $q(Symbol.for("KerML"),(0,zne.KerMLGrammar)())}je.KerMLKeywords=OJe;function kJe(){return $q(Symbol.for("SysML"),(0,zne.SysMLGrammar)())}je.SysMLKeywords=kJe;function Tq(r,e,t,n){let{choose:i}=n;if(e.default!=="preserve")return i[e.default]();let a=r.cst();if(!a)return i[e.fallback||t]();let s=i.preserve(n.find(a));return i[s]()}je.formatPreserved=Tq;function Yne(r){return Boolean(r.specializations().some(e=>!e.isImplied)||r.typeRelationships.some(e=>!e.isImplied)||r.declaredName||r.declaredShortName||r.multiplicity||r.isOrdered||r.isNonUnique)}je.hasFeatureDeclaration=Yne;function IJe(r,e,t){return Tq(r,t,"always",{find:i=>(0,_$.findNodeForKeyword)(i,e),choose:{always:()=>e,as_needed:()=>Yne(r)?e:void 0,preserve:i=>i?"always":"as_needed"}})}je.selectDeclarationKeyword=IJe;function FJe(r,e){return Tq(r,e,"always",{find:t=>(0,_$.findNodeForKeyword)(t,"ref"),choose:{always:()=>!1,never:()=>!0,preserve:t=>t?"always":"never"}})}je.shouldIgnoreRef=FJe;function NJe(r){return Boolean(r.cst()&&r.notes.some(e=>e.localPlacement==="leading"&&/syside-format ignore/.test(e.text)))}je.hasFormatIgnore=NJe;function Xne(r){var e,t;return(t=(e=r.notes.filter(n=>n.localPlacement==="leading").find(n=>n.segment))===null||e===void 0?void 0:e.segment)!==null&&t!==void 0?t:r.cst()}je.getElementStart=Xne;function Jne(r){var e,t;return(t=(e=r.notes.filter(n=>n.localPlacement==="trailing").findLast(n=>n.segment))===null||e===void 0?void 0:e.segment)!==null&&t!==void 0?t:r.cst()}je.getElementEnd=Jne;var vq=class{constructor(e,t,n){this.root=e,this.context=t,this.kind=n,this.stack=[]}descend(e){let t=this.descendant,n=e(t);return n||gw(t,`Interrupted ${this.kind} chain at ${this.stack.length} link`),this.stack.push(n),this}print(e){(0,DJe.default)(this.stack.length>0,"Cannot print empty descendant chain");let t=(0,Pm.printModelElement)(this.stack[this.stack.length-1],this.context,e);for(let n=this.stack.length-2;n>=0;--n)t=(0,Pm.printModelElement)(this.stack[n],this.context,{printer:()=>t});return t}get descendant(){var e;return(e=this.stack.at(-1))!==null&&e!==void 0?e:this.root}};function qJe(r,e,t){return new vq(r,e,t)}je.printDescendant=qJe;function Kne(r,e){return r.offset>e.offset&&r.offset<e.end||r.end<e.end&&r.end>e.offset}function xJe(r,e){return Kne(r,e)||Kne(e,r)}function Hne(r){return e=>{let t=e.cst();return t?xJe(t,r):!1}}var Vne=(r,e,t)=>{var n;return(n=(0,Pm.printElementIgnored)(r,e))!==null&&n!==void 0?n:(0,Pm.DefaultElementPrinter)(r,e,t)};function LJe(r,e){var t,n,i,a,s;let o=r.parseResult.value.$meta,u=o.cst();if(!u)return;let{offset:c,end:f}=e;if(f<=u.offset||c>=u.end)return;let d=0,m=o,h=u,y=o.children,_;for(;;){let w=(i=(n=(0,_$.findNodeForKeyword)((t=m.cst())!==null&&t!==void 0?t:h,"{"))===null||n===void 0?void 0:n.offset)!==null&&i!==void 0?i:-1;if(m.parent()!==void 0&&w===-1||w>=c){let L=m.parent();return L!=null&&L.is(pl.OwningMembership)&&(m=L),{elements:[m],range:v$([m]),level:d-1,leading:_,options:{printer:Pm.DefaultElementPrinter,previousSibling:_==null?void 0:_.at(-1)}}}let S=v$(y),C=y.findIndex(Hne(e)),b=y.findLastIndex(Hne(e));if(_=C>0?y.slice(0,C):void 0,C===-1||b===-1)switch(y.length){case 0:return;case 1:return S?{elements:y,range:S,level:d,options:{printer:Vne}}:void 0;default:{let L=y.findIndex(Je=>{let Ye=Je.cst();return Ye&&Ye.offset>=f});if(L===-1)return;let W=L-1;for(;!y[W].cst()&&W>=0;)--W;let _e=W>=0?y.slice(W,L+1):[y[L]];return _=W>0?y.slice(0,W):void 0,{elements:_e,range:v$(_e),level:d,leading:_,options:{printer:Vne,previousSibling:_==null?void 0:_.at(-1)}}}}if(C===b){let L=y[C];if(L.is(pl.Relationship)&&!(!((a=L.element())===null||a===void 0)&&a.is(pl.InlineExpression))||L.is(pl.Namespace)){let W=L.is(pl.OwningMembership)&&L.element().is(pl.Namespace)?L.element():L;d++,m=W,h=(s=W.cst())!==null&&s!==void 0?s:L.cst(),y=W.children;continue}}let I=y.slice(C,b+1);return{elements:I,range:v$(I),level:d,leading:_,options:{printer:Pm.DefaultElementPrinter,previousSibling:_==null?void 0:_.at(-1)}}}}je.collectPrintRange=LJe;function v$(r){let e=r.find(o=>o.cst()),t=r.findLast(o=>o.cst());if(e===void 0||t===void 0)return;let n=[e];e.is(pl.Relationship)&&n.push(...[e.source(),e.element()].filter(vt.NonNullable).filter(o=>o.parent()===e));let i=[t];e===t?i=n:t.is(pl.Relationship)&&i.push(...[t.source(),t.element()].filter(vt.NonNullable).filter(o=>o.parent()===e));let a=Math.min(...n.map(Xne).filter(vt.NonNullable).map(o=>o.offset)),s=Math.max(...i.map(Jne).filter(vt.NonNullable).map(o=>o.end));if(!(!Number.isFinite(a)||!Number.isFinite(s)))return{offset:a,end:s}}je.getChildrenRange=v$});var cg=p(ue=>{"use strict";var jJe=ue&&ue.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),UJe=ue&&ue.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),BJe=ue&&ue.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&jJe(e,r,t);return UJe(e,r),e};Object.defineProperty(ue,"__esModule",{value:!0});ue.printFeatureReferenceExpression=ue.printTriggerInvocationExpression=ue.printMetadataAccessExpression=ue.printExpression=ue.printExpressionBody=ue.printNullExpression=ue.printLiteralNumber=ue.printInvocationExpr=ue.printArgumentValue=ue.printArgument=ue.printOperatorExpression=ue.shouldFlatten=ue.getOperator=ue.getArguments=ue.precedence=ue.PREC_LEVELS=void 0;var Qt=BJe(D()),Ot=An(),bq=Pe(),$i=Is(),U=Ae(),Ii=ks(),fu=ml(),GJe=O(),KJe=be(),eie=yl();ue.PREC_LEVELS={NONE:0,IF:1,NULL_COALESCING:2,IMPLIES:3,OR:4,XOR:5,AND:6,EQUALITY:7,CLASSIFICATION:8,COMPARISON:9,RANGE:10,ADDITION:11,MULTIPLICITY:12,EXPONENTATION:13,UNARY:14,ALL:15,ACCESS:16,LITERAL:1e4};function Em(r){var e;switch(wn(r)){case"":return ue.PREC_LEVELS.LITERAL;case"'if'":return ue.PREC_LEVELS.IF;case"'??'":return ue.PREC_LEVELS.NULL_COALESCING;case"'implies'":return ue.PREC_LEVELS.IMPLIES;case"'or'":case"'|'":return ue.PREC_LEVELS.OR;case"'xor'":return ue.PREC_LEVELS.XOR;case"'and'":case"'&'":return ue.PREC_LEVELS.AND;case"'=='":case"'==='":case"'!='":case"'!=='":return ue.PREC_LEVELS.EQUALITY;case"'istype'":case"'hastype'":case"'@'":case"'@@'":case"'as'":case"'meta'":return ue.PREC_LEVELS.CLASSIFICATION;case"'<'":case"'<='":case"'>'":case"'>='":return ue.PREC_LEVELS.COMPARISON;case"'..'":return ue.PREC_LEVELS.RANGE;case"'+'":case"'-'":return((e=tie(r))===null||e===void 0?void 0:e.length)===1?ue.PREC_LEVELS.UNARY:ue.PREC_LEVELS.ADDITION;case"'*'":case"'/'":case"'%'":return ue.PREC_LEVELS.MULTIPLICITY;case"'**'":case"'^'":return ue.PREC_LEVELS.EXPONENTATION;case"'~'":case"'not'":return ue.PREC_LEVELS.UNARY;case"'all'":return ue.PREC_LEVELS.ALL;case"'#'":case"'['":case"'.?'":case"'.'":case"collect":case"'.metadata'":return ue.PREC_LEVELS.ACCESS;case"','":return ue.PREC_LEVELS.NONE}}ue.precedence=Em;function tie(r){if(r!=null&&r.is(Qt.OperatorExpression))return r.arguments()}ue.getArguments=tie;var vc={type:bq.SemanticTokenTypes.operator};function wn(r){var e;switch(r==null?void 0:r.nodeType()){case Qt.SelectExpression:return Ot.IMPLICIT_OPERATORS.SELECT;case Qt.FeatureChainExpression:return Ot.IMPLICIT_OPERATORS.DOT;case Qt.CollectExpression:return Ot.IMPLICIT_OPERATORS.COLLECT;case Qt.OperatorExpression:return r.operator;case Qt.FeatureReferenceExpression:return wn((e=r.expression)===null||e===void 0?void 0:e.element());case Qt.MetadataAccessExpression:{let t=r.owner();return t!=null&&t.is(Qt.OperatorExpression)&&(t.operator===Ot.OPERATORS.AT_AT||t.operator===Ot.OPERATORS.META)?Ot.OPERATORS.NONE:Ot.IMPLICIT_OPERATORS.METADATA}default:return Ot.OPERATORS.NONE}}ue.getOperator=wn;function rie(r,e){let t=Em(r),n=Em(e);if(t!==n||t===ue.PREC_LEVELS.EXPONENTATION||t===ue.PREC_LEVELS.EQUALITY)return!1;let i=wn(r),a=wn(e);return!((i===Ot.OPERATORS.MODULO||i!==a)&&t===ue.PREC_LEVELS.MULTIPLICITY)}ue.shouldFlatten=rie;function HJe(r,e,t,n,i){let a,s=!1;switch(e){case"":return[$$(t,i.parens)];case"'??'":case"'implies'":case"'or'":case"'|'":case"'xor'":case"'and'":case"'&'":case"'=='":case"'==='":case"'!='":case"'!=='":case"'<'":case"'<='":case"'>'":case"'>='":case"'+'":case"'-'":case"'*'":case"'/'":case"'%'":{a=[U.literals.space,U.line];break}case"'istype'":case"'hastype'":case"'@'":case"'@@'":case"'as'":case"'meta'":{a=[i.hasLhs?U.literals.space:U.literals.emptytext,U.line];break}case"'..'":case"'**'":case"'^'":{a=[U.literals.emptytext,U.softline],s=n.format.operator_break==="before";break}case"'#'":return[U.literals.emptytext,(0,U.group)([(0,U.text)("#",vc),(0,U.text)("("),(0,U.indent)([U.softline,t]),U.softline,(0,U.text)(")")])];case"'['":return[U.literals.space,(0,U.group)([U.brackets.square.open,(0,U.indent)([U.softline,t]),U.softline,U.brackets.square.close])];case"','":{let c=[U.literals.emptytext,U.literals.comma,U.line];return Array.isArray(t)?[...c,...t]:[...c,t]}case"'.'":return[(0,U.indent)([U.softline,(0,U.text)(".",vc),t])];case"collect":return[(0,U.text)(".",vc),t];case"'.?'":return[(0,U.text)(".?",vc),t];case"'if'":case"'~'":case"'not'":case"'all'":case"'.metadata'":throw new Error(`${e} is not a binary operator!`)}let o=(0,U.text)(e.slice(1,-1),vc);n.format.operator_break==="before"&&(a=[a[1],a[0]]);let u=[a[0],o,a[1],$$(t,i.parens)];return s?[U.literals.emptytext,(0,U.indent)(u)]:u}function $$(r,e){return e?[U.brackets.round.open,(0,U.indent)(r),U.brackets.round.close]:r}var nie=(r,e)=>r.nodeType()===Qt.Feature?r.chainings.length===0?U.literals.emptytext:(0,fu.printChaining)(r,e):(0,$i.DefaultElementPrinter)(r,e);function Qne(r,e){let t=Em(r),n=Em(e);return n<=t?!0:n==ue.PREC_LEVELS.AND?t==ue.PREC_LEVELS.OR||t==ue.PREC_LEVELS.XOR:n==ue.PREC_LEVELS.UNARY||n==ue.PREC_LEVELS.ALL?t==ue.PREC_LEVELS.RANGE||t==ue.PREC_LEVELS.ADDITION||t==ue.PREC_LEVELS.EXPONENTATION||t==ue.PREC_LEVELS.MULTIPLICITY:t==ue.PREC_LEVELS.RANGE?n==ue.PREC_LEVELS.ADDITION||n==ue.PREC_LEVELS.EXPONENTATION||n==ue.PREC_LEVELS.MULTIPLICITY:!1}function vw(r,e,t=$i.DefaultElementPrinter){var n;let[i,a]=r.arguments();a!=null||(a=(n=r.children.filter(GJe.BasicMetamodel.is(Qt.Membership)).find(d=>!d.is(Qt.ParameterMembership)||!d.element().value))===null||n===void 0?void 0:n.element());let s;if((a==null?void 0:a.owner())===r)s=(0,$i.printModelElement)(a,e,{printer:t});else{let d=r.children.find(m=>m.element()===a);d||(0,Ii.throwError)(r,"Invalid operator expression - missing membership to referenced RHS element"),s=(0,fu.printTarget)(d,e)}let o=rie(r,i),u=!0,c;if(o)c=(0,$i.printModelElement)(i,e,{printer:(d,m)=>vw(d,m,t)});else{let d=(0,$i.printModelElement)(i,e);u=d!==U.literals.emptytext;let m=wn(i);c=[$$(d,m!==Ot.OPERATORS.COMMA&&Qne(r,i))]}let f=wn(r);return c.push(...HJe(r,f,s,e,{parens:Qne(r,a),flatten:o,hasLhs:u})),e.format.sequence_expression_trailing_comma&&f===Ot.OPERATORS.COMMA&&wn(a)!==Ot.OPERATORS.COMMA&&c.push(U.literals.emptytext,(0,U.ifBreak)(U.literals.comma,U.literals.emptytext,"sequence-expr")),c}function Rq(r,e,t=!1){var n,i;if(r.is(Qt.FeatureReferenceExpression)){let h=(n=r.expression)===null||n===void 0?void 0:n.element();(!h||!h.is(Qt.OperatorExpression)||h.operator!=Ot.OPERATORS.IF)&&(0,Ii.throwError)(r,"FeatureReferenceExpression does not refer to a conditional expression!"),r=h}let[a,s,o]=r.arguments(),u=!1,c;wn(o)===Ot.OPERATORS.IF?(u=!0,c=Rq(o,e,!0)):o.is(Qt.FeatureReferenceExpression)&&wn((i=o.expression)===null||i===void 0?void 0:i.element())===Ot.OPERATORS.IF?(u=!0,c=(0,Ii.printDescendant)(o,e,"else branch").descend(h=>h.expression).descend(h=>h.element()).print({printer(h,y){return Rq(h,y,!0)}})):c=(0,$i.printModelElement)(o,e);let f=[U.line,(0,U.ifBreak)((0,U.text)("?    "),(0,U.text)("? ")),(0,U.indent)((0,$i.printModelElement)(s,e)),U.line,(0,U.text)("else "),u?c:(0,U.indent)(c)],d=(0,$i.printModelElement)(a,e),m=(0,U.group)([(0,U.text)("if",vc),U.literals.space,wn(a)===Ot.OPERATORS.IF?(0,U.group)([U.brackets.round.open,(0,U.indent)([U.softline,d]),U.softline,U.brackets.round.close]):(0,U.indent)(d)]);return t?[m,...f]:(0,U.group)([m,(0,U.indent)(f)])}function VJe(r,e){var t;let n=r.arguments(),i=(t=r.children.find(c=>c.nodeType()==Qt.FeatureMembership))===null||t===void 0?void 0:t.element(),a=n.length===1&&i&&i.nodeType()===Qt.Expression&&i.specializations().every(c=>c.isImplied),s=Boolean(!i||n.length>=2),o=$$((0,$i.printModelElement)(n[0],e),Em(n[0])<ue.PREC_LEVELS.ACCESS&&wn(n[0])!==Ot.OPERATORS.COMMA),u=(0,U.indent)([(0,U.text)("->",vc),(0,fu.printTarget)(r.specializations(Qt.FeatureTyping)[0],e)]);if(s){let c=(0,U.join)([U.literals.comma,U.line],n.slice(1).map(f=>Cq(f.owner(),e)));return(0,U.group)([o,u,U.brackets.round.open,(0,U.indent)([U.softline,c]),U.softline,U.brackets.round.close],{id:"arg-list"})}if(a){let c=(0,$i.printModelElement)(i,e);return(0,U.group)([o,u,U.literals.space,c])}return i||(0,Ii.throwError)(r,"InvocationExpression is missing a FunctionReferenceMember!"),(0,U.fill)([o,U.softline,u,(0,U.indent)(U.line),(0,U.indent)((0,fu.printTarget)(i.specializations(Qt.FeatureTyping)[0],e))])}function Zne(r,e){var t;let n=r.operator,i=(t=r.arguments().at(0))!==null&&t!==void 0?t:r.children[0].element();return i||(0,Ii.throwError)(r,`Unary expression ${r} is missing an argument or a result member!`),[(0,U.text)(n.slice(1,-1),vc),n===Ot.OPERATORS.NOT||n===Ot.OPERATORS.ALL?U.literals.space:U.literals.emptytext,$$((0,$i.printModelElement)(i,e),Em(i)<ue.PREC_LEVELS.UNARY&&wn(i)!==Ot.OPERATORS.COMMA)]}function WJe(r,e){switch(wn(r)){case Ot.OPERATORS.IF:return Rq(r,e);case Ot.OPERATORS.BITWISE_NOT:case Ot.OPERATORS.NOT:case Ot.OPERATORS.ALL:return Zne(r,e);case Ot.IMPLICIT_OPERATORS.DOT:{let n=vw(r,e,nie),i=r.owner();return!i||wn(i)!==Ot.IMPLICIT_OPERATORS.DOT?(0,U.fill)(n):(0,U.group)(n)}case Ot.OPERATORS.COMMA:{let n=vw(r,e),i=r.owner(),a=i?wn(i):Ot.OPERATORS.NONE;return!i||a!==Ot.OPERATORS.COMMA?(0,U.group)([U.brackets.round.open,(0,U.indent)([U.softline,(0,U.fill)(n)]),U.softline,U.brackets.round.close],{id:"sequence-expr"}):n}case"'+'":case"'-'":if(r.arguments().length===1)return Zne(r,e);default:return(0,U.group)(vw(r,e))}}ue.printOperatorExpression=WJe;function Cq(r,e){var t;let n=(t=r.value)===null||t===void 0?void 0:t.element();n||(0,Ii.throwError)(r,"Invalid argument - missing value");let i=Aq(n,e),a=r.specializations().find(o=>!o.isImplied&&o.is(Qt.Redefinition));if(!a)return i;let s=(0,U.ifBreak)(U.literals.space,U.literals.emptytext,"arg-list");return wn(n)!==Ot.OPERATORS.COMMA?i=(0,U.indentIfBreak)([(0,U.ifBreak)(U.line,U.literals.emptytext,"arg-list"),i],{groupId:"assignment"}):i=[s,i],(0,U.group)([(0,fu.printTarget)(a,e),s,(0,U.text)("="),i],{id:"assignment"})}ue.printArgument=Cq;function Aq(r,e){return(0,$i.printModelElement)(r,e)}ue.printArgumentValue=Aq;function zJe(r,e){if(r.operands.length>0)return VJe(r,e);let t=r.specializations(Qt.FeatureTyping).at(0);return t||(0,Ii.throwError)(r,"Invalid InvocationExpression - missing feature typing"),[(0,fu.printTarget)(t,e),(0,U.group)([U.brackets.round.open,(0,U.indent)([U.softline,(0,U.join)([U.literals.comma,U.line],[...r.operands.map(n=>Aq(n,e)),...r.argumentMembers().map(n=>Cq(n,e))])]),U.softline,U.brackets.round.close],{id:"arg-list"})]}ue.printInvocationExpr=zJe;function YJe(r,e){var t,n;let i,a=(t=r.cst())===null||t===void 0?void 0:t.text,s=e.format.literal_real;if(a&&((n=r.ast())===null||n===void 0?void 0:n.literal)===r.literal)i=a,i.endsWith(",")&&(i=i.slice(0,-1).trimEnd());else if(r.isInteger)i=r.literal.toFixed(0);else switch(s){case"exp":{i=r.literal.toExponential();break}case"none":{i=r.literal.toString();break}case"prec":{i=r.literal.toPrecision();break}}return(0,U.text)(i,{type:bq.SemanticTokenTypes.number})}ue.printLiteralNumber=YJe;function XJe(r,e){let t=(0,U.printInnerComments)(r.notes,e,n=>n.kind==="line"?U.hardline:void 0);return t!==U.literals.emptytext&&(t=[U.literals.space,t]),(0,Ii.formatPreserved)(r,e.format.null_expression,"null",{find:n=>(0,KJe.findNodeForKeyword)(n,"null"),choose:{null:()=>(0,U.group)([(0,U.keyword)("null"),t]),brackets:()=>(0,U.group)([U.brackets.round.open,U.brackets.round.close,t]),preserve:n=>n?"null":"brackets"}})}ue.printNullExpression=XJe;function iie(r,e){return r.specializations().some(t=>!t.isImplied)?(0,fu.printTarget)(r.specializations(Qt.FeatureTyping)[0],e):(0,U.group)((0,eie.printChildrenBlock)(r,r.children,e,{result:r.result,insertSpaceBeforeBrackets:!1,forceEmptyBrackets:!0}))}ue.printExpressionBody=iie;function JJe(r,e){var t,n,i;return!((t=r.parent())===null||t===void 0)&&t.is(Qt.FeatureMembership)&&(!((n=r.owner())===null||n===void 0)&&n.isAny(Qt.InvocationExpression,Qt.FeatureReferenceExpression))?iie(r,e):!((i=r.owner())===null||i===void 0)&&i.is(Qt.TriggerInvocationExpression)?(r.result||(0,Ii.throwError)(r,"Invalid change expression - missing result member"),(0,$i.printModelElement)(r.result,e)):(0,eie.printKerMLFeature)("expr",r,e)}ue.printExpression=JJe;function QJe(r,e){var t;let n=wn(r),i=(0,Ii.printReference)(r.reference,{scope:r,context:e,astNode:(t=r.ast())===null||t===void 0?void 0:t.reference});return n===Ot.OPERATORS.NONE?i:(0,U.group)([i,(0,U.indent)([U.softline,(0,U.text)(n.slice(1,-1),{type:bq.SemanticTokenTypes.operator})])])}ue.printMetadataAccessExpression=QJe;function ZJe(r,e){(0,$i.assertSysML)(e,r.nodeType());let t=(()=>{let n=(0,Ii.printDescendant)(r.children[0],e,`trigger invocation expression ${r.kind==="when"?"change":"owned"} expression`).descend(i=>(i.is(Qt.FeatureMembership)||(0,Ii.throwError)(i,"Expected a feature membership as first trigger invocation expression member"),i.element()));switch(r.kind){case"at":case"after":return n;case"when":return n.descend(i=>(i.is(Qt.Feature)||(0,Ii.throwError)(i,"Expected an owned feature value"),i.value)).descend(i=>i.element())}})();return(0,fu.printAssignmentExpression)([(0,U.keyword)(r.kind)],t.descendant,e,(0,$i.printModelElement)(r.children[0],e,{printer:()=>t.print()}))}ue.printTriggerInvocationExpression=ZJe;function eQe(r,e){return r.expression||(0,Ii.throwError)(r,"Invalid FeatureReferenceExpression - missing expression"),(0,fu.printTarget)(r.expression,e,{printer:nie})}ue.printFeatureReferenceExpression=eQe});var Pq=p(hl=>{"use strict";Object.defineProperty(hl,"__esModule",{value:!0});hl.printMetadataFeature=hl.printTextualRepresentation=hl.printDocumentation=hl.printCommentElement=void 0;var wq=be(),Dq=D(),X=Ae(),Om=lg(),Sq=ml(),_w=yl(),aie=Is(),Fs=ks();function Mq(r,e){let t=e?X.literalline:X.hardline;return(0,X.markAsRoot)([(0,X.text)("/*",{type:Om.SysMLSemanticTokenTypes.annotationBody}),t,r.split(`
`).map(n=>n.length===0?[(0,X.text)(" *",{type:Om.SysMLSemanticTokenTypes.annotationBody}),t]:[(0,X.text)(" * ",{type:Om.SysMLSemanticTokenTypes.annotationBody}),(0,X.text)(n,{type:Om.SysMLSemanticTokenTypes.annotationBody}),t]),(0,X.text)(" */",{type:Om.SysMLSemanticTokenTypes.annotationBody})])}function sie(r,e,t=!1){return r.length===0?[]:[(0,X.indent)(t||e.format.comment_about_break==="always"?X.hardline:X.line),(0,X.group)((0,X.indent)([(0,X.keyword)("about"),(0,X.indent)([X.line,...(0,X.join)([X.literals.comma,X.line],r.map(n=>(0,Sq.printTarget)(n,e)))])]))]}function oie(r){if(r)return(0,X.group)((0,X.indent)([(0,X.keyword)("locale"),X.literals.space,(0,X.text)(JSON.stringify(r),{type:Om.SysMLSemanticTokenTypes.string})]))}function tQe(r,e){var t;let n=[],{comment_keyword:i,markdown_comments:a}=e.format,s=r.annotations().filter(m=>!m.isImplied),o=(0,Fs.printIdentifiers)(r,e,{leading:X.literals.space}),u=(t=r.cst())===null||t===void 0?void 0:t.text;(i.default==="always"||i.default==="preserve"&&(!u&&i.fallback==="always"||u!=null&&u.startsWith("comment"))||o.length>0||s.length>0)&&n.push((0,X.keyword)("comment"),(0,X.indent)(o));let c=!1,f=(0,X.printInnerComments)(r.notes,Object.assign(Object.assign({},e),{indent:!0}),m=>{c=m.kind==="line"});f!==X.literals.emptytext&&n.push(X.literals.space,f),n.push(...sie(s,e,c));let d=oie(r.locale);return d&&(n.length>0&&n.push((0,X.indent)(c?X.hardline:X.line)),n.push(d)),[(0,X.group)(n),n.length>0?X.hardline:X.literals.emptytext,Mq(r.body,a)]}hl.printCommentElement=tQe;function rQe(r,e){let t=[(0,X.keyword)("doc"),(0,X.indent)((0,Fs.printIdentifiers)(r,e,{leading:X.literals.space}))],n=(0,X.printInnerComments)(r.notes,Object.assign(Object.assign({},e),{indent:!0}));n!==X.literals.emptytext&&t.push(X.line,n);let i=oie(r.locale);return i&&t.push((0,X.indent)(X.line),i),[(0,X.group)(t),X.hardline,Mq(r.body,e.format.markdown_comments)]}hl.printDocumentation=rQe;function nQe(r,e){var t;let n=[],{textual_representation_keyword:i,textual_representation_language_break:a}=e.format,s=(0,Fs.printIdentifiers)(r,e,{leading:X.literals.space}),o=(t=r.cst())===null||t===void 0?void 0:t.text;(s.length>0||i.default==="always"||i.default==="preserve"&&(!o&&i.fallback==="always"||o!=null&&o.startsWith("rep")))&&(n.push((0,X.keyword)("rep")),n.push((0,X.indent)(s)));let u=[(0,X.group)(n),(0,X.indent)([n.length>0?a==="always"?X.hardline:X.line:X.literals.emptytext,(0,X.keyword)("language "),(0,X.text)(JSON.stringify(r.language),{type:Om.SysMLSemanticTokenTypes.string})])],c=(0,X.printInnerComments)(r.notes,Object.assign(Object.assign({},e),{indent:!0}));return c!==X.literals.emptytext&&u.push(X.line,c),[(0,X.group)(u),X.hardline,Mq(r.body,!0)]}hl.printTextualRepresentation=nQe;function iQe(r,e){let t=(0,X.join)(X.line,(0,_w.printPrefixes)(r.prefixes,e)),n=[(0,Fs.formatPreserved)(r,e.format.metadata_feature_keyword,"@",{find:u=>(0,wq.findNodeForKeyword)(u,"metadata"),choose:{"@":()=>(0,X.text)("@"),metadata:()=>(0,X.keyword)("metadata "),preserve:u=>u?"metadata":"@"}})],i=[],a=(0,Fs.printIdentifiers)(r,e,{trailing:(0,X.indent)(X.line)});a.length>0&&(n.push(...a),i.push((0,Fs.formatPreserved)(r,e.format.declaration_feature_typing,"token",{find:u=>(0,wq.findNodeForKeyword)(u,":"),choose:{keyword:()=>(0,X.keyword)(e.mode==="kerml"?"typed by ":"defined by "),token:()=>(0,X.text)(": "),preserve:u=>u?"token":"keyword"}})));let s=r.specializations(Dq.FeatureTyping).at(0);s||(0,Fs.throwError)(r,"Invalid MetadataFeature - missing FeatureTyping"),i.push((0,Sq.printTarget)(s,e));let o=[];return t.length>0&&o.push((0,X.indent)((0,X.fill)(t)),X.line),o.push((0,X.group)(n),(0,X.indent)((0,X.group)(i))),[(0,X.group)([(0,X.group)(o),...sie(r.annotations().filter(u=>!u.isImplied),e)]),(0,_w.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0,printer:lie})]}hl.printMetadataFeature=iQe;var lie=(r,e)=>{if(r.nodeType()!==Dq.FeatureMembership)return(0,aie.DefaultElementPrinter)(r,e);let t=e.mode==="kerml"?"feature":"ref",n=r.element();n||(0,Fs.throwError)(r,"Invalid FeatureMembership - missing owned feature");let i=n.specializations().filter(o=>!o.isImplied),a=i.at(0);(a==null?void 0:a.nodeType())!==Dq.Redefinition&&(0,Fs.throwError)(n,"Invalid MetadataFeature body feature - should start with redefinition");let s=[[(0,Fs.formatPreserved)(a,e.format.metadata_body_feature_redefines,"token",{find:o=>(0,X.getPreviousNode)(o,!1),choose:{keyword:()=>(0,X.keyword)("redefines "),token:()=>(0,X.text)(":>> "),none:()=>X.literals.emptytext,preserve:o=>o?o.text===":>>"?"token":o.text==="redefines"?"keyword":"none":"none"}}),(0,Sq.printTarget)(a,e)]];return s.push(...(0,_w.printDeclaredRelationships)(n,i.slice(1),e)),[(0,X.group)([(0,Fs.formatPreserved)(n,e.format.metadata_body_feature_keyword,"always",{find:o=>(0,wq.findNodeForKeyword)(o,t),choose:{always:()=>[(0,X.keyword)(t),X.literals.space],never:()=>X.literals.emptytext,preserve:o=>o?"always":"never"}}),(0,X.group)((0,X.indent)((0,X.join)(X.line,s))),n.value?[X.literals.space,(0,aie.printModelElement)(n.value,e)]:X.literals.emptytext]),(0,_w.printChildrenBlock)(n,n.children,e,{insertSpaceBeforeBrackets:!0,printer:lie})]}});var Cw=p(Ce=>{"use strict";var aQe=Ce&&Ce.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),sQe=Ce&&Ce.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),oQe=Ce&&Ce.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&aQe(e,r,t);return sQe(e,r),e};Object.defineProperty(Ce,"__esModule",{value:!0});Ce.printSuccession=Ce.printInterfaceUsage=Ce.printConnector=Ce.printConnectionUsage=Ce.printBindingConnectorAsUsage=Ce.printBindingConnector=Ce.printAllocationUsage=Ce.printConnectorAsUsage=Ce.printFlowConnectionUsage=Ce.printGenericFlowConnectionUsage=Ce.printItemFlow=Ce.printGenericItemFlow=Ce.printItemFeature=Ce.printKerMLConnector=Ce.printGenericConnector=Ce.printNaryEnds=Ce.printBinaryEnds=Ce.SourceFormatAlways=Ce.printItemFlowEndMember=Ce.printItemFlowEnd=Ce.printConnectorEndMember=Ce.printEndReferenceSubsetting=void 0;var ve=Ae(),T$=Is(),sn=ks(),fg=oQe(D()),Tw=be(),$w=ml(),gl=yl(),lQe=O(),uie=dg(),cie=km();function Oq(r,e,t="connector end"){let n=r.element();n||(0,sn.throwError)(r,`Invalid ${t} member - missing target element`);let i=n.specializations(fg.ReferenceSubsetting).at(0);return i||(0,sn.throwError)(n,`Invalid ${t} feature - missing reference subsetting`),{target:n,doc:(0,$w.printTarget)(i,e)}}Ce.printEndReferenceSubsetting=Oq;function vl(r,e){let{target:t,doc:n}=Oq(r,e),i=[],a=[];t.declaredName&&(i.push((0,sn.printIdentifier)(t.declaredName,{semantic:e.highlighting?(0,sn.computeHighlighting)(t):{},restricted:e.keywords})),a.push(ve.line,(0,sn.formatPreserved)(t,e.format.declaration_reference_subsetting,"token",{find:o=>(0,Tw.findNodeForKeyword)(o,"::>"),choose:{keyword:()=>(0,ve.keyword)("references "),token:()=>(0,ve.text)("::> "),preserve:o=>o?"token":"keyword"}}))),a.push(n);let s=(0,gl.printMultiplicityPart)(t,e);return[...i,(0,ve.indent)((0,ve.group)(a)),s?(0,ve.indent)([ve.literals.space,s]):[]]}Ce.printConnectorEndMember=vl;function fie(r,e){var t;let n=r.specializations(fg.ReferenceSubsetting).at(0),i=(t=r.children.find(lQe.BasicMetamodel.is(fg.FeatureMembership)))===null||t===void 0?void 0:t.element();i||(0,sn.throwError)(r,"Invalid item flow end - missing item flow feature member");let a=i.specializations(fg.Redefinition).find(s=>!s.isImplied);return a||(0,sn.throwError)(i,"Invalid item flow feature member - missing redefinition"),n?(0,ve.appendFill)((0,ve.unwrapIndent)((0,$w.printTarget)(n,e)),ve.softline,[ve.literals.dot,(0,$w.printTarget)(a,e)]):(0,$w.printTarget)(a,e)}Ce.printItemFlowEnd=fie;function die(r,e){let t=r.element();return t||(0,sn.throwError)(r,"Invalid connector end member - missing target element"),t.is(fg.ItemFlowEnd)||(0,sn.throwError)(r,`Invalid connector end member - bad target element type (${t.nodeType()}`),fie(t,e)}Ce.printItemFlowEndMember=die;Ce.SourceFormatAlways={default:"always",fallback:"always"};function pie(r,e,t,n){var i;let a=(i=n.printer)!==null&&i!==void 0?i:vl,[s,o]=e.map(d=>(0,T$.printModelElement)(d,t,{printer:a})),u=n.source.format,c=n.source.keyword,f=u?(0,sn.formatPreserved)(r,u,"always",{find:d=>(0,Tw.findNodeForKeyword)(d,c),choose:{always:()=>[(0,ve.keyword)(c),ve.literals.space],as_needed:()=>(0,sn.hasFeatureDeclaration)(r)?[(0,ve.keyword)(c),ve.literals.space]:[],preserve:d=>d?"always":"as_needed"}}):[(0,ve.keyword)(c),ve.literals.space];return(0,ve.group)([(0,ve.group)([...f,(0,ve.indent)(s)]),(0,ve.group)([ve.line,n.binding,ve.literals.space,(0,ve.indent)(o)])])}Ce.printBinaryEnds=pie;function mie(r,e,t=vl){return(0,ve.group)([ve.brackets.round.open,(0,ve.indent)([ve.softline,(0,ve.join)([ve.literals.comma,ve.line],(0,T$.printModelElements)(r,e,{printer:t}))]),ve.softline,ve.brackets.round.close])}Ce.printNaryEnds=mie;function Rw(r,e,t,n,i){var a;let s=(a=i.ends)!==null&&a!==void 0?a:t.ends,o=i.suffix,u=d=>{o&&(typeof o=="function"?o(d):d.push(o))};if(s.length===0)return(0,gl.printGenericFeature)(r,e,t,n,{appendToDeclaration:u});s.length===1&&(0,sn.throwError)(t,`Invalid ${t.nodeType()} - must have at least 2 ends`);let c=()=>(0,gl.printGenericFeature)(r,e,t,n,{appendToDeclaration(d){u(d);let m=(0,ve.indent)((0,ve.group)(ve.line,{id:"nary-ends"}));d.length>0&&d.push(i.naryPrefix?ve.literals.space:m),i.naryPrefix&&d.push(i.naryPrefix,m),d.push((0,ve.indentIfBreak)(mie(s,n,i.printer),{groupId:"nary-ends"}))},join:i.join}),f=()=>(0,gl.printGenericFeature)(r,e,t,n,{appendToDeclaration(d){u(d),d.length>0&&d.push((0,ve.indent)(ve.line)),d.push((0,ve.indent)(pie(t,s,n,i)))},join:i.join});return i.format==="binary"?f():i.format==="nary"||s.length>2?c():(0,sn.formatPreserved)(t,i.format,"always",{find:d=>(0,Tw.findNodeForKeyword)(d,"("),choose:{always:f,never:c,preserve:d=>d?"never":"always"}})}Ce.printGenericConnector=Rw;function bw(r,e,t,n){return Rw((0,gl.kermlFeatureModifiers)(e),e.isSufficient?`${r} all`:r,e,t,n)}Ce.printKerMLConnector=bw;function uQe(r,e){let t=(0,sn.printIdentifiers)(r,e),n=(0,gl.printSpecializationPart)(r,e,{skipFirstKeyword:t.length===0&&!r.value&&r.specializations().reduce((i,a)=>a.isImplied?i:i+1,0)===1&&r.specializations(fg.FeatureTyping).filter(i=>!i.isImplied).length===1,specializations:(0,gl.defaultSpecializationGrouper)(e)});return n.length>0&&(t.length>0&&t.push((0,ve.indent)(ve.line)),t.push(...n)),r.value&&t.push(ve.literals.space,(0,T$.printModelElement)(r.value,e)),(0,ve.group)(t)}Ce.printItemFeature=uQe;function kq(r,e,t,n,i){let{printer:a=die}=i,s=[];return t.value&&s.push((0,ve.indent)([ve.literals.space,(0,T$.printModelElement)(t.value,n)])),t.item&&s.push((0,ve.indent)([ve.line,(0,ve.keyword)("of "),(0,T$.printModelElement)(t.item,n)])),Rw(r,e,t,n,{format:"binary",binding:(0,ve.keyword)("to"),printer:a,ends:i.ends,source:{keyword:"from",format:i.sourceFormat},suffix:s.length>0?s.map(o=>(0,ve.group)(o)):void 0,join:i.join})}Ce.printGenericItemFlow=kq;function cQe(r,e,t,n){return kq((0,gl.kermlFeatureModifiers)(e),r,e,t,n)}Ce.printItemFlow=cQe;function Eq(r,e,t,n){return kq((0,uie.occurrenceUsageModifiers)(e,(0,sn.shouldIgnoreRef)(e,t.format.connection_usage_reference_keyword)),r,e,t,Object.assign(Object.assign({},n),{join:(0,cie.actionBodyJoiner)()}))}Ce.printGenericFlowConnectionUsage=Eq;function fQe(r,e){let t=r.cst();return r.isMessageConnection||r.ends.length===0&&t&&(0,Tw.findNodeForKeyword)(t,"message")?Eq("message",r,e,{printer(i,a){return Oq(i,a).doc},ends:r.messages,sourceFormat:e.format.flow_connection_usage_from_keyword}):Eq("flow",r,e,{sourceFormat:e.format.flow_connection_usage_from_keyword})}Ce.printFlowConnectionUsage=fQe;function R$(r,e,t,n){return Rw((0,uie.sysmlUsageModifiers)(e,(0,sn.shouldIgnoreRef)(e,t.format.connector_as_usage_reference_keyword)),r,e,t,Object.assign(Object.assign({},n),{join:(0,cie.actionBodyJoiner)()}))}Ce.printConnectorAsUsage=R$;function dQe(r,e){return R$((0,sn.selectDeclarationKeyword)(r,"allocation",e.format.allocation_usage_keyword),r,e,{binding:(0,ve.keyword)("to"),format:e.format.binary_allocation_usages,naryPrefix:(0,ve.keyword)("allocate"),source:{keyword:"allocate",format:Ce.SourceFormatAlways},printer:vl})}Ce.printAllocationUsage=dQe;function pQe(r,e){return bw("binding",r,e,{format:e.format.binary_binding_connectors,binding:(0,ve.text)("="),printer:vl,source:{keyword:"of",format:e.format.binary_binding_connector_of_keyword},suffix:void 0})}Ce.printBindingConnector=pQe;function mQe(r,e){return R$((0,sn.selectDeclarationKeyword)(r,"binding",e.format.binding_connector_as_usage_keyword),r,e,{format:"binary",binding:(0,ve.text)("="),printer:vl,source:{keyword:"bind",format:Ce.SourceFormatAlways},suffix:void 0})}Ce.printBindingConnectorAsUsage=mQe;function yQe(r,e){return R$((0,sn.selectDeclarationKeyword)(r,"connection",e.format.connection_usage_keyword),r,e,{binding:(0,ve.keyword)("to"),format:e.format.binary_connection_usages,naryPrefix:(0,ve.keyword)("connect"),source:{keyword:"connect",format:Ce.SourceFormatAlways},printer:vl,suffix:r.value?(0,gl.featureValueAppender)(r,e):void 0})}Ce.printConnectionUsage=yQe;function hQe(r,e){return bw("connector",r,e,{format:e.format.binary_connectors,binding:(0,ve.text)("to"),printer:vl,source:{keyword:"from",format:e.format.binary_connectors_from_keyword},suffix:r.value?(0,gl.featureValueAppender)(r,e):void 0})}Ce.printConnector=hQe;function gQe(r,e){let t=(0,sn.selectDeclarationKeyword)(r,"connect",e.format.interface_usage_connect_keyword);return R$("interface",r,e,{binding:(0,ve.keyword)("to"),format:e.format.binary_interface_usages,naryPrefix:t?(0,ve.keyword)(t):void 0,source:{keyword:"connect",format:e.format.interface_usage_connect_keyword},printer:vl})}Ce.printInterfaceUsage=gQe;function vQe(r,e){return bw("succession",r,e,{format:e.format.binary_successions,binding:(0,ve.text)("then"),printer:vl,source:{keyword:"first",format:e.format.binary_succession_first_keyword},suffix:void 0})}Ce.printSuccession=vQe});var Dw=p(_c=>{"use strict";Object.defineProperty(_c,"__esModule",{value:!0});_c.printTransitionUsage=_c.printSuccessionAsUsage=_c.successionAsUsageKind=void 0;var _Qe=be(),Im=D(),ye=Ae(),du=km(),pg=Cw(),yie=ml(),Fm=yl(),mg=Is(),xa=ks(),b$=r=>{var e;return Boolean((e=r.element())===null||e===void 0?void 0:e.specializations().some(t=>!t.isImplied))};function hie(r,e){if(e!=null&&e.is(Im.StateSubactionMembership)&&e.kind==="entry")return r.ends.some(b$)?"transition":"empty";let t=r.ends;switch(t.length){case 1:return b$(t[0])?"target":"empty";case 0:return"empty";default:return t.every(b$)?"regular":b$(t[1])?"target":"empty"}}_c.successionAsUsageKind=hie;function Aw(r,e){var t,n,i,a;return((a=(i=(n=(t=r.ends[0].element())===null||t===void 0?void 0:t.multiplicity)===null||n===void 0?void 0:n.element())===null||i===void 0?void 0:i.range)===null||a===void 0?void 0:a.element())?[(0,ye.keyword)("then "),(0,ye.group)((0,xa.printDescendant)(r,e,"empty succession").descend(o=>o.ends[0]).descend(o=>o.element()).descend(o=>o.multiplicity).descend(o=>o.element()).descend(o=>o.range).descend(o=>o.element()).print({printer(o,u){return(0,Fm.printDeclaredMultiplicityRange)(o,u)}}))]:(0,ye.keyword)("then")}function $Qe(r,e){return[Aw(r,e),ye.literals.space,(0,pg.printConnectorEndMember)(r.ends[r.ends.length-1],e),(0,Fm.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0,join:(0,du.actionBodyJoiner)()})]}function TQe(r,e){return(0,pg.printConnectorAsUsage)((0,xa.selectDeclarationKeyword)(r,"succession",e.format.succession_as_usage_keyword),r,e,{binding:(0,ye.keyword)("then"),format:"binary",source:{keyword:"first",format:pg.SourceFormatAlways},printer:pg.printConnectorEndMember})}function RQe(r,e){return b$(r.ends[r.ends.length-1])?[Aw(r,e),ye.literals.space,(0,pg.printConnectorEndMember)(r.ends[r.ends.length-1],e),ye.literals.semicolon]:Aw(r,e)}function bQe(r,e,t){switch(hie(r,t)){case"target":return $Qe(r,e);case"empty":return Aw(r,e);case"regular":return TQe(r,e);case"transition":return RQe(r,e)}}_c.printSuccessionAsUsage=bQe;function CQe(r,e){return(0,mg.printModelElement)(r,e,{printer:(t,n)=>(0,ye.group)([(0,ye.keyword)("accept "),(0,ye.indent)((0,du.printAccepterParameterPart)(t.element(),n))])})}function Iq(r,e){return(0,mg.printModelElement)(r,e,{printer:(t,n)=>(0,ye.group)((0,du.printCondition)((0,ye.keyword)("if"),t,n,n.format.transition_usage_parenthesize_guard))})}function AQe(r,e){return(0,mg.printModelElement)(r,e,{printer:(t,n)=>{let i=(0,du.printSubaction)(t.element(),n,ye.literals.emptytext);return i===ye.literals.emptytext?(0,ye.keyword)("do"):(0,ye.group)([(0,ye.keyword)("do "),i])}})}function ww(r,e,t){return(0,mg.printModelElement)(e,t,{printer:(n,i)=>(0,ye.group)([(0,ye.keyword)(r),ye.literals.space,wQe(n.element(),i)])})}function gie(r,e){return r.nodeType()===Im.Membership?(0,yie.printAsTarget)(r,e):(0,mg.printModelElement)(r,e,{printer:(t,n)=>(0,yie.printChaining)(t.element(),n)})}function wQe(r,e){return(0,mg.printModelElement)(r,e,{printer:(t,n)=>(0,pg.printConnectorEndMember)(t.ends[1],n)})}function DQe(r,e){var t;return r.else?"default-target":!((t=r.owner())===null||t===void 0)&&t.isAny(Im.StateUsage,Im.StateDefinition)?r.source?"transition":r.accepter||r.effect?"target-transition":e!=null&&e.is(Im.StateSubactionMembership)&&e.kind==="entry"&&r.guard?"guarded-target":"target-transition":r.source?"guarded-succession":"guarded-target"}function SQe(r,e){return(0,xa.assertMember)(r,r.else,"default target succession","else"),[ww("else",r.else,e),(0,Fm.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0,join:(0,du.actionBodyJoiner)()})]}function MQe(r,e){var t;(0,xa.assertMember)(r,r.guard,"guarded target succession","guard"),(0,xa.assertMember)(r,r.then,"guarded target succession","then");let n=[(0,ye.group)([Iq(r.guard,e),(0,ye.indent)([ye.line,ww("then",r.then,e)])])];return!((t=r.owner())===null||t===void 0)&&t.isAny(Im.StateDefinition,Im.StateUsage)?n.push(ye.literals.semicolon):n.push((0,Fm.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0,join:(0,du.actionBodyJoiner)()})),n}function PQe(r,e){(0,xa.assertMember)(r,r.source,"guarded succession","source"),(0,xa.assertMember)(r,r.guard,"guarded succession","guard"),(0,xa.assertMember)(r,r.then,"guarded succession","then");let t=[(0,ye.group)([(0,ye.keyword)("first "),(0,ye.indent)(gie(r.source,e))]),ye.line,(0,ye.group)([Iq(r.guard,e),(0,ye.indent)([ye.line,ww("then",r.then,e)])])];return(0,Fm.printGenericFeature)([],(0,xa.hasFeatureDeclaration)(r)?"succession":void 0,r,e,{appendToDeclaration(n){n.length>0&&n.push((0,ye.indent)(ye.line)),n.push((0,ye.indent)((0,ye.group)(t)))},join:(0,du.actionBodyJoiner)()})}function EQe(r,e){(0,xa.assertMember)(r,r.then,"transition usage","then");let t=[],n=r.accepter?(0,ye.group)(CQe(r.accepter,e)):void 0,i=r.guard?(0,ye.group)(Iq(r.guard,e)):void 0,a=r.effect?(0,ye.group)(AQe(r.effect,e)):void 0,s=(0,ye.group)(ww("then",r.then,e));n&&t.push(n),i&&(a?(i=(0,ye.group)([i,(0,ye.indent)([ye.line,a])]),a=void 0):(i=(0,ye.group)([i,(0,ye.indent)([ye.line,s])]),s=void 0),t.push(i)),a&&t.push(a),s&&t.push(s);let o=t.map((f,d)=>(0,ye.indent)(d===0?f:[ye.line,f]));if(r.source){let f=(0,xa.selectDeclarationKeyword)(r,"first",e.format.transition_usage_first_keyword),d=gie(r.source,e);return f?d=(0,ye.group)((0,ye.indent)([(0,ye.keyword)(f),ye.literals.space,(0,ye.indent)(d)])):d=(0,ye.indent)(d),(0,Fm.printGenericFeature)([],"transition",r,e,{appendToDeclaration(m){m.push((0,ye.indent)(ye.line),(0,ye.group)([d,(0,ye.indent)(ye.line),o]))},join:(0,du.actionBodyJoiner)()})}let u=r.effect&&!r.guard&&!r.accepter?"transition":(0,xa.formatPreserved)(r,e.format.transition_usage_keyword,"always",{find:f=>(0,_Qe.findNodeForKeyword)(f,"transition"),choose:{always:()=>"transition",as_needed:()=>{},preserve:f=>f?"always":"as_needed"}}),c=[];return u&&c.push((0,ye.keyword)(u),(0,ye.indent)(ye.line)),c.push((0,ye.group)(o)),[(0,ye.group)(c),(0,Fm.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0,join:(0,du.actionBodyJoiner)()})]}function OQe(r,e,t){switch(DQe(r,t)){case"default-target":return SQe(r,e);case"guarded-target":return MQe(r,e);case"guarded-succession":return PQe(r,e);case"transition":case"target-transition":return EQe(r,e)}}_c.printTransitionUsage=OQe});var Is=p(ht=>{"use strict";var kQe=ht&&ht.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),IQe=ht&&ht.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),$c=ht&&ht.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&kQe(e,r,t);return IQe(e,r),e},FQe=ht&&ht.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(ht,"__esModule",{value:!0});ht.printModelRange=ht.printElementIgnored=ht.collectUnprintedNotes=ht.printModelElements=ht.printModelElement=ht.printModelReference=ht.DefaultElementPrinter=ht.defaultPrintNotes=ht.defaultSysMLPrinterContext=ht.defaultKerMLPrinterContext=ht.assertKerML=ht.assertSysML=void 0;var Kr=Ae(),k=$c(D()),NQe=Pe(),qQe=pq(),Ns=$c(cg()),kt=$c(ml()),pu=ks(),Tie=FQe(require("assert")),C$=Pq(),Gr=$c(yl()),la=$c(Cw()),Ee=$c(dg()),ei=$c(km()),vie=$c(Dw());function Fq(r,e){(0,Tie.default)(r.mode==="sysml",`${e} can only be printed in SysML mode`)}ht.assertSysML=Fq;function Ti(r,e){(0,Tie.default)(r.mode==="kerml",`${e} can only be printed in KerML mode`)}ht.assertKerML=Ti;function Rie(r={}){var e;return{mode:"kerml",keywords:(0,pu.KerMLKeywords)(),format:(e=r.format)!==null&&e!==void 0?e:qQe.DefaultFormatOptions,referencePrinter:function(){throw new Error("Programmatic reference printing is not implemented.")},printComment:Kr.printKerMLNote,printed:new Set,highlighting:Boolean(r.highlighting),forceFormatting:Boolean(r.forceFormatting)}}ht.defaultKerMLPrinterContext=Rie;function xQe(r={}){return Object.assign(Object.assign({},Rie(r)),{keywords:(0,pu.SysMLKeywords)(),mode:"sysml"})}ht.defaultSysMLPrinterContext=xQe;var La=r=>(0,pu.throwError)(r,`Cannot print abstract element with type ${r.nodeType()}`),A$=r=>(0,pu.throwError)(r,`Cannot print type union ${r.nodeType()}`),qs=r=>(0,pu.throwError)(r,`Cannot print element with  type ${r.nodeType()} directly`),_ie={[k.CollectExpression](r,e){return Ns.printOperatorExpression(r,e)},[k.FeatureChainExpression](r,e){return Ns.printOperatorExpression(r,e)},[k.FeatureReferenceExpression](r,e){return Ns.printFeatureReferenceExpression(r,e)},[k.InvocationExpression](r,e){return Ns.printInvocationExpr(r,e)},[k.MetadataAccessExpression](r,e){return Ns.printMetadataAccessExpression(r,e)},[k.OperatorExpression](r,e){return Ns.printOperatorExpression(r,e)},[k.SelectExpression](r,e){return Ns.printOperatorExpression(r,e)},[k.TriggerInvocationExpression](r,e){return Ns.printTriggerInvocationExpression(r,e)},[k.LiteralBoolean](r){return r.literal?Kr.literals.true:Kr.literals.false},[k.LiteralInfinity](){return(0,Kr.text)("*")},[k.LiteralNumber](r,e){return Ns.printLiteralNumber(r,e)},[k.LiteralString](r){return(0,Kr.text)(JSON.stringify(r.literal),{type:NQe.SemanticTokenTypes.string})},[k.NullExpression](r,e){return Ns.printNullExpression(r,e)},[k.ActorMembership](r,e,t){return kt.printActorMembership(r,e,t)},[k.ElementFilterMembership](r,e){return kt.printElementFilterMembership(r,e)},[k.FeatureMembership](r,e,t){return kt.printGenericMembership(void 0,r,e,{previousSibling:t})},[k.FramedConcernMembership](r,e,t){return kt.printFramedConcernMembership(r,e,t)},[k.Membership](r,e,t){return kt.printMembership(r,e,{previousSibling:t})},[k.ObjectiveMembership](r,e,t){return kt.printObjectiveMembership(r,e,t)},[k.OwningMembership](r,e,t){return kt.printOwningMembership(r,e,t)},[k.RequirementConstraintMembership](r,e,t){return kt.printRequirementConstraintMembership(r,e,t)},[k.RequirementVerificationMembership](r,e,t){return kt.printRequirementVerificationMembership(r,e,t)},[k.ResultExpressionMembership](r,e,t){return kt.printGenericMembership(void 0,r,e,{previousSibling:t})},[k.ReturnParameterMembership](r,e,t){return kt.printGenericMembership("return",r,e,{previousSibling:t})},[k.StakeholderMembership](r,e,t){return kt.printStakeholderMembership(r,e,t)},[k.StateSubactionMembership](r,e){return ei.printStateSubactionMembership(r,e)},[k.SubjectMembership](r,e,t){return kt.printSubjectMembership(r,e,t)},[k.VariantMembership](r,e,t){return kt.printVariantMembership(r,e,t)},[k.ViewRenderingMembership](r,e,t){return kt.printViewRenderingMembership(r,e,t)},[k.Annotation](r,e){let t=r.source();return(t==null?void 0:t.parent())===r?qq(t,e):kt.printTarget(r,e)},[k.Conjugation](r,e){return kt.printConjugation(r,e)},[k.Dependency](r,e){return kt.printDependency(r,e)},[k.Disjoining](r,e){return kt.printDisjoining(r,e)},[k.FeatureInverting](r,e){return kt.printFeatureInverting(r,e)},[k.FeatureTyping](r,e){return kt.printFeatureTyping(r,e)},[k.FeatureValue](r,e){return kt.printFeatureValue(r,e)},[k.NamespaceExpose](r,e){return Fq(e,r.nodeType()),kt.printNamespaceImport("expose",r,e)},[k.NamespaceImport](r,e){return kt.printNamespaceImport(r.importsAll?"import all":"import",r,e)},[k.MembershipExpose](r,e){return Fq(e,r.nodeType()),kt.printMembershipImport("expose",r,e)},[k.MembershipImport](r,e){return kt.printMembershipImport(r.importsAll?"import all":"import",r,e)},[k.Redefinition](r,e){return kt.printRedefinition(r,e)},[k.Specialization](r,e){return kt.printSpecialization(r,e)},[k.Subclassification](r,e){return kt.printSubclassification(r,e)},[k.Subsetting](r,e){return kt.printSubsetting(r,e)},[k.TypeFeaturing](r,e){return kt.printTypeFeaturing(r,e)},[k.Comment]:C$.printCommentElement,[k.Documentation]:C$.printDocumentation,[k.MetadataFeature]:C$.printMetadataFeature,[k.TextualRepresentation]:C$.printTextualRepresentation,[k.AllocationUsage](r,e){return la.printAllocationUsage(r,e)},[k.BindingConnector](r,e){return la.printBindingConnector(r,e)},[k.BindingConnectorAsUsage](r,e){return la.printBindingConnectorAsUsage(r,e)},[k.ConnectionUsage](r,e){return la.printConnectionUsage(r,e)},[k.Connector](r,e){return la.printConnector(r,e)},[k.FlowConnectionUsage](r,e){return la.printFlowConnectionUsage(r,e)},[k.ItemFlow](r,e){return la.printItemFlow("flow",r,e,{sourceFormat:e.format.item_flow_from_keyword})},[k.ItemFlowEnd](r,e){return la.printItemFlowEnd(r,e)},[k.ItemFeature](r,e){return la.printItemFeature(r,e)},[k.Succession](r,e){return la.printSuccession(r,e)},[k.SuccessionAsUsage](r,e,t){return vie.printSuccessionAsUsage(r,e,t)},[k.SuccessionFlowConnectionUsage](r,e){return la.printGenericFlowConnectionUsage("succession flow",r,e,{sourceFormat:e.format.succession_flow_connection_usage_from_keyword})},[k.SuccessionItemFlow](r,e){return la.printItemFlow("succession flow",r,e,{sourceFormat:e.format.item_flow_from_keyword})},[k.TransitionUsage](r,e,t){return vie.printTransitionUsage(r,e,t)},[k.InterfaceUsage](r,e){return la.printInterfaceUsage(r,e)},[k.Association](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","assoc",r,e)},[k.AssociationStructure](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","assoc struct",r,e)},[k.Behavior](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","behavior",r,e)},[k.BooleanExpression](r,e){return Ti(e,r.nodeType()),Gr.printKerMLFeature("bool",r,e)},[k.Class](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","class",r,e)},[k.Classifier](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","classifier",r,e)},[k.DataType](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","datatype",r,e)},[k.Expression](r,e){return Ns.printExpression(r,e)},[k.Feature](r,e){return Gr.printFeature(r,e)},[k.Interaction](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","interaction",r,e)},[k.Invariant](r,e){return Gr.printInvariant(r,e)},[k.LibraryPackage](r,e){return Gr.printNonTypeNamespace(r.isStandard?"standard library":"library","package",r,e)},[k.Metaclass](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","metaclass",r,e)},[k.Multiplicity](r,e){return Gr.printMultiplicity(r,e)},[k.MultiplicityRange](r,e){return Gr.printMultiplicityRange(r,e)},[k.Namespace](r,e){return Gr.printNamespace(r,e)},[k.Package](r,e){return Gr.printNonTypeNamespace(void 0,"package",r,e)},[k.Predicate](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","predicate",r,e)},[k.Step](r,e){return Ti(e,r.nodeType()),Gr.printKerMLFeature("step",r,e)},[k.Structure](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","struct",r,e)},[k.SysMLFunction](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","function",r,e)},[k.Type](r,e){return Ti(e,r.nodeType()),Gr.printType("auto","type",r,e)},[k.AcceptActionUsage](r,e){return ei.printAcceptActionUsage(r,e)},[k.ActionDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","action def",r,e,{join:ei.actionBodyJoiner()})},[k.ActionUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","action",r,e,{join:ei.actionBodyJoiner()})},[k.AllocationDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","allocation def",r,e)},[k.AnalysisCaseDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","analysis def",r,e)},[k.AnalysisCaseUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","analysis",r,e)},[k.AssertConstraintUsage](r,e){return Ee.printAssertConstraint(r,e)},[k.AssignmentActionUsage](r,e){return ei.printAssignmentAction(r,e)},[k.AttributeDefinition](r,e){return Ee.printGenericDefinition("auto","attribute def",r,e)},[k.AttributeUsage](r,e){return Ee.printAttributeUsage(r,e)},[k.CalculationDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","calc def",r,e)},[k.CalculationUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","calc",r,e)},[k.CaseDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","case def",r,e)},[k.CaseUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","case",r,e)},[k.ConcernDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","concern def",r,e)},[k.ConcernUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","concern",r,e)},[k.ConnectionDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","connection def",r,e)},[k.ConstraintDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","constraint def",r,e)},[k.ConstraintUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","constraint",r,e)},[k.Definition](r,e){return Ee.printGenericDefinition("auto","def",r,e)},[k.EnumerationDefinition](r,e){return Ee.printGenericDefinition([],"enum def",r,e)},[k.EnumerationUsage](r,e){return Ee.printEnumerationUsage(r,e)},[k.EventOccurrenceUsage](r,e){return Ee.printEventOccurrence(r,e)},[k.ExhibitStateUsage](r,e){return Ee.printExhibitState(r,e)},[k.FlowConnectionDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","flow def",r,e)},[k.IncludeUseCaseUsage](r,e){return Ee.printIncludeUseCase(r,e)},[k.InterfaceDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","interface def",r,e)},[k.ItemDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","item def",r,e)},[k.ItemUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","item",r,e)},[k.LifeClass](){return Kr.literals.emptytext},[k.MetadataDefinition](r,e){return Ee.printGenericDefinition("auto","metadata def",r,e)},[k.MetadataUsage]:C$.printMetadataFeature,[k.OccurrenceDefinition](r,e){return Ee.printOccurrenceDefinition(r,e)},[k.OccurrenceUsage](r,e){return Ee.printOccurrenceUsage(r,e)},[k.PartDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","part def",r,e)},[k.PartUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","part",r,e)},[k.PerformActionUsage](r,e){return Ee.printPerformAction(r,e)},[k.PortDefinition](r,e){return Ee.printGenericDefinition("auto","port def",r,e)},[k.PortUsage](r,e){return Ee.printPortUsage(r,e)},[k.ReferenceUsage](r,e){return Ee.printReferenceUsage(r,e)},[k.RenderingDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","rendering def",r,e)},[k.RenderingUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","rendering",r,e)},[k.RequirementDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","requirement def",r,e)},[k.RequirementUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","requirement",r,e)},[k.SatisfyRequirementUsage](r,e){return Ee.printSatisfyRequirement(r,e)},[k.SendActionUsage](r,e){return ei.printSendAction(r,e)},[k.StateDefinition](r,e){return ei.printStateDefinition(r,e)},[k.StateUsage](r,e){return ei.printStateUsage(r,e)},[k.Usage](r,e){return Ee.printGenericUsage("auto",void 0,r,e)},[k.UseCaseDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","use case def",r,e)},[k.UseCaseUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","use case",r,e)},[k.VerificationCaseDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","verification def",r,e)},[k.VerificationCaseUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","verification",r,e)},[k.ViewDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","view def",r,e)},[k.ViewUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","view",r,e)},[k.ViewpointDefinition](r,e){return Ee.printGenericOccurrenceDefinition("auto","viewpoint def",r,e)},[k.ViewpointUsage](r,e){return Ee.printGenericOccurrenceUsage("auto","viewpoint",r,e)},[k.DecisionNode](r,e){return ei.printControlNode("decide",r,e)},[k.ForLoopActionUsage](r,e){return ei.printForLoop(r,e)},[k.ForkNode](r,e){return ei.printControlNode("fork",r,e)},[k.IfActionUsage](r,e){return ei.printIfAction(r,e)},[k.JoinNode](r,e){return ei.printControlNode("join",r,e)},[k.MergeNode](r,e){return ei.printControlNode("merge",r,e)},[k.WhileLoopActionUsage](r,e){return ei.printWhileLoop(r,e)},[k.AnnotatingElement]:La,[k.ConnectorAsUsage]:La,[k.ControlNode]:La,[k.Element]:La,[k.Expose]:La,[k.Featuring]:La,[k.Import]:La,[k.Inheritance]:La,[k.LiteralExpression]:La,[k.LoopActionUsage]:La,[k.Relationship]:La,[k.TextualAnnotatingElement]:La,[k.InlineExpression]:A$,[k.FeatureRelationship]:A$,[k.NonOwnerType]:A$,[k.TransparentElement]:A$,[k.TypeRelationship]:A$,[k.ConjugatedPortDefinition]:qs,[k.ConjugatedPortTyping]:qs,[k.Differencing]:qs,[k.EndFeatureMembership]:qs,[k.FeatureChaining]:qs,[k.Intersecting]:qs,[k.ParameterMembership]:qs,[k.PortConjugation]:qs,[k.ReferenceSubsetting]:qs,[k.TransitionFeatureMembership]:qs,[k.Unioning]:qs},$ie={Namespace:!0};function LQe(r,e,t,n){let i=e.filter(a=>a.localPlacement==="inner"&&!t.printed.has(a));return i.length===0?r:(i.some(a=>a.$cstNode)&&!$ie[n]&&(console.warn(`${n} printer did not print some inner comments, please FIX ME.`),$ie[n]=!0),(0,Kr.inheritLabel)(r,a=>[(0,Kr.join)(Kr.hardline,i.map(s=>(0,Kr.printComment)(s,t)),!0),a]))}function Nq(r,e,t){return r=LQe(r,e.notes,t,e.nodeType()),r=(0,Kr.surroundWithComments)(r,e.notes,t),r}ht.defaultPrintNotes=Nq;var jQe=(r,e,t)=>{let n=r.nodeType();return _ie[n].call(_ie,r,e,t)};ht.DefaultElementPrinter=jQe;function UQe(r,e,t){let n=r.cst(),i=!e.forceFormatting&&(0,pu.hasFormatIgnore)(r)&&n?(0,Kr.printIgnored)(r.document.textDocument.getText(),n,r.notes,e.printed):void 0;return i!=null||(i=t.printer(r,e)),Nq(i,r,e)}ht.printModelReference=UQe;function qq(r,e,t={}){var n,i;let a=!e.forceFormatting&&(0,pu.hasFormatIgnore)(r)?Cie(r,e):void 0;a!=null||(a=((n=t.printer)!==null&&n!==void 0?n:ht.DefaultElementPrinter)(r,e,t.previousSibling)),a=Nq(a,r,e);let{previousSibling:s}=t;if(!s||!((i=r.parent())===null||i===void 0)&&i.is(k.OwningMembership))return a;let o=(0,pu.getElementStart)(r),u=(0,pu.getElementEnd)(s);return a=(0,Kr.newLineCount)(u,o)>1?(0,Kr.inheritLabel)(a,c=>[Kr.hardline,c]):a,a}ht.printModelElement=qq;function bie(r,e,t={}){return r.map((n,i)=>qq(n,e,Object.assign(Object.assign({},t),{previousSibling:i>0?r[i-1]:t.previousSibling})))}ht.printModelElements=bie;function BQe(r,e){return(0,Kr.streamModel)(r).flatMap(t=>t.notes).filter(t=>!e.has(t)).toArray()}ht.collectUnprintedNotes=BQe;function Cie(r,e){let t=r.cst();if(t)return(0,Kr.printIgnored)(r.document.textDocument.getText(),t,(0,Kr.streamModel)(r).flatMap(n=>n.notes),e.printed)}ht.printElementIgnored=Cie;function GQe(r,e){let t=bie(r.elements,e,r.options),n;e.mode==="kerml"?n=(0,Kr.join)(Kr.hardline,t):n=ei.actionBodyJoiner()(r.elements,t,r.leading);for(let i=0;i<r.level;++i)n=(0,Kr.indent)(n);return n}ht.printModelRange=GQe});var ml=p(le=>{"use strict";var KQe=le&&le.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),HQe=le&&le.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),VQe=le&&le.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&KQe(e,r,t);return HQe(e,r),e};Object.defineProperty(le,"__esModule",{value:!0});le.printViewRenderingMembership=le.printObjectiveMembership=le.printRequirementVerificationMembership=le.printRequirementConstraintMembership=le.printFramedConcernMembership=le.printStakeholderMembership=le.printSubjectMembership=le.printActorMembership=le.printRedefinition=le.printVariantMembership=le.printTypeFeaturing=le.printSubsetting=le.printSubclassification=le.printSpecialization=le.printOwningMembership=le.printFeatureValue=le.printAssignmentExpression=le.printFeatureTyping=le.printFeatureInverting=le.printElementFilterMembership=le.printDisjoining=le.printConjugation=le.printMembershipImport=le.printNamespaceImport=le.printDependency=le.selectToken=le.printSourceTargetRelationship=le.printMembership=le.printGenericMembership=le.printWithVisibility=le.printSource=le.printAsTarget=le.printTarget=le.printEdgeEnd=le.printChaining=void 0;var q=Ae(),xq=An(),Dr=Is(),ti=VQe(D()),ua=ks(),_l=yl(),qm=be(),Lq=dg(),WQe=km(),jq=cg();function Aie(r,e){let t=(0,q.fill)((0,q.join)(q.softline,r.chainings.map((n,i)=>{var a,s,o;let u=(0,Dr.defaultPrintNotes)(ca(n,e),(o=(s=(a=n.ast())===null||a===void 0?void 0:a.targetRef)===null||s===void 0?void 0:s.$meta)!==null&&o!==void 0?o:n,e);return i===0?u:(0,q.indent)([q.literals.dot,u])})));return(0,Dr.defaultPrintNotes)(t,r,e)}le.printChaining=Aie;function Sw(r,e,t,n){let{target:i,astNode:a}=e;return(i==null?void 0:i.parent())===r?i.is(ti.Feature)&&r.isAny(ti.Inheritance,ti.FeatureRelationship)?(0,Dr.printModelElement)(i,t,{printer:(s,o)=>(0,q.indent)(Aie(s,o))}):(0,Dr.printModelElement)(i,t,n):(0,ua.printReference)(i,{scope:r,context:t,astNode:a,errorMessage:`${r.nodeType()} is missing ${e.kind} reference`})}le.printEdgeEnd=Sw;function ca(r,e,t){var n;return Sw(r,{target:r.element(),astNode:(n=r.ast())===null||n===void 0?void 0:n.targetRef,kind:"target"},e,t)}le.printTarget=ca;function zQe(r,e,t){return(0,Dr.printModelElement)(r,e,{printer:(n,i,a)=>ca(n,i,Object.assign(Object.assign({},t),{previousSibling:a})),previousSibling:t==null?void 0:t.previousSibling})}le.printAsTarget=zQe;function wie(r,e,t){var n;return Sw(r,{target:r.source(),astNode:(n=r.ast())===null||n===void 0?void 0:n.sourceRef,kind:"source"},e,t)}le.printSource=wie;function Nm(r,e,t){let n=t.format.public_keyword;switch(r.visibility){case 0:return[(0,ua.formatPreserved)(r,n,"always",{find:i=>(0,qm.findNodeForKeyword)(i,"public"),choose:{always:()=>(0,q.keyword)("public "),never:()=>q.literals.emptytext,preserve:i=>i?"always":"never"}}),e];case 1:return[(0,q.keyword)("protected "),e];case 2:return[(0,q.keyword)("private "),e]}}le.printWithVisibility=Nm;function Tc(r,e,t,n){return r?Nm(e,(0,q.group)([(0,q.keyword)(r),q.literals.space,ca(e,t,n)]),t):Nm(e,ca(e,t,n),t)}le.printGenericMembership=Tc;function YQe(r,e,t){var n;return!((n=r.owner())===null||n===void 0)&&n.is(ti.InlineExpression)?(0,q.indent)(ca(r,e)):r.isAlias?Nm(r,[(0,q.group)([(0,q.keyword)("alias"),(0,q.indent)((0,ua.printIdentifiers)(r,e,{leading:q.literals.space})),(0,q.indent)([q.line,(0,q.keyword)("for "),(0,q.indent)(ca(r,e,t))])]),(0,_l.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0})],e):((0,Dr.assertSysML)(e,"Membership (InitialNodeMember)"),[Tc("first",r,e,t),(0,_l.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0})])}le.printMembership=YQe;function $l(r,e,t,n){(0,Dr.assertKerML)(t,e.nodeType());let i=[],a=n.format?(0,ua.formatPreserved)(e,n.format,"always",{find:o=>(0,qm.findNodeForKeyword)(o,r),choose:{always:()=>(0,q.keyword)(r),as_needed:()=>e.declaredName||e.declaredShortName?(0,q.keyword)(r):q.literals.emptytext,preserve:o=>o?"always":"as_needed"}}):(0,q.keyword)(r);a!==q.literals.emptytext&&i.push(a);let s=(0,ua.printIdentifiers)(e,t);return s.length>0&&i.push(s),[(0,q.group)([(0,q.group)((0,q.join)(q.literals.space,i)),(0,q.indent)(i.length>0?q.line:q.literals.emptytext),(0,q.indent)((0,q.group)([n.sourceKw,n.sourceKw.contents?q.literals.space:q.literals.emptytext,wie(e,t),q.line,n.targetKw,q.literals.space,ca(e,t)]))]),(0,_l.printChildrenBlock)(e,e.children,t,{insertSpaceBeforeBrackets:!0})]}le.printSourceTargetRelationship=$l;function xm(r,e,t,n){return(0,ua.formatPreserved)(t,n,"token",{find:i=>(0,qm.findNodeForKeyword)(i,e.contents),choose:{keyword:()=>r,token:()=>e,preserve:i=>i?"token":"keyword"}})}le.selectToken=xm;function XQe(r,e){var t,n;let i=(0,q.join)(q.line,(0,_l.printPrefixes)(r.prefixes,e,f=>f.source())),a=[];i.length>0&&a.push((0,q.indent)((0,q.fill)(i)),q.line),a.push((0,q.keyword)("dependency"));let s=(0,ua.printIdentifiers)(r,e,{leading:q.literals.space}),o=[],u=[(0,q.keyword)("to"),q.line];if(s.length>0)a.push((0,q.indent)(s)),o.push((0,q.keyword)("from"),q.line);else{let f=(0,ua.formatPreserved)(r,e.format.dependency_from_keyword,"always",{find:d=>(0,qm.findNodeForKeyword)(d,"from"),choose:{always:()=>(0,q.keyword)("from"),as_needed:()=>q.literals.emptytext,preserve:d=>d?"always":"as_needed"}});f!==q.literals.emptytext?o.push(f,q.line):o.push((0,q.ifBreak)([(0,q.keyword)("from"),q.line],q.literals.emptytext))}let c=(f,d,m)=>{let h;return f.length===0?(d||(0,ua.throwError)(r,`Invalid dependency - missing ${m}`),h=d.map(y=>(0,ua.printAstReference)(y,e))):h=f.map(y=>{let _=d==null?void 0:d.find(w=>w.$meta.to.target===y);return Sw(r,{target:y,astNode:_,kind:m},e)}),(0,q.join)([q.literals.comma,q.line],h)};return o.push(...c(r.client,(t=r.ast())===null||t===void 0?void 0:t.client,"client")),u.push(...c(r.supplier,(n=r.ast())===null||n===void 0?void 0:n.supplier,"supplier")),[(0,q.group)([(0,q.group)(a),(0,q.indent)([q.line,(0,q.group)((0,q.indent)(o))]),(0,q.indent)([q.line,(0,q.group)((0,q.indent)(u))])]),(0,_l.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0})]}le.printDependency=XQe;function JQe(r,e,t){let n=[(0,q.keyword)(r),q.literals.space],i=[(0,q.group)(n)],a=e.element();if((a==null?void 0:a.parent())===e&&a.nodeType()===ti.Package){let s=a.children;n.push((0,q.indent)(ca(s[0],t))),s[0].is(ti.NamespaceImport)&&n.push((0,q.text)("::*")),i.push((0,q.indent)(s.slice(1).map(o=>(0,Dr.printModelElement)(o,t))))}else n.push((0,q.indent)(ca(e,t)),(0,q.text)("::*"));return e.isRecursive&&n.push((0,q.text)("::**")),i.push((0,_l.printChildrenBlock)(e,e.children,t,{insertSpaceBeforeBrackets:!0})),Nm(e,i,t)}le.printNamespaceImport=JQe;function QQe(r,e,t){return Nm(e,[(0,q.group)([(0,q.keyword)(r),q.literals.space,(0,q.indent)(ca(e,t)),e.isRecursive?(0,q.text)("::**"):q.literals.emptytext]),(0,_l.printChildrenBlock)(e,e.children,t,{insertSpaceBeforeBrackets:!0})],t)}le.printMembershipImport=QQe;function ZQe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("conjugation",r,e,{format:e.format.conjugation_keyword,sourceKw:(0,q.keyword)("conjugate"),targetKw:xm((0,q.keyword)("conjugates"),(0,q.text)("~"),r,e.format.declaration_conjugation)})}le.printConjugation=ZQe;function eZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("disjoining",r,e,{format:e.format.disjoining_keyword,sourceKw:(0,q.keyword)("disjoint"),targetKw:(0,q.keyword)("from")})}le.printDisjoining=eZe;function tZe(r,e){var t,n,i;if(((t=r.parent())===null||t===void 0?void 0:t.nodeType())===ti.Package&&(!((i=(n=r.parent())===null||n===void 0?void 0:n.parent())===null||i===void 0)&&i.is(ti.NamespaceImport)))return(0,q.group)([q.brackets.square.open,(0,q.indent)([q.softline,ca(r,e)]),q.softline,q.brackets.square.close]);let a=[(0,WQe.printCondition)((0,q.keyword)("filter"),r,e,e.format.element_filter_parenthesize),q.literals.semicolon];return Nm(r,(0,q.group)(a),e)}le.printElementFilterMembership=tZe;function rZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("inverting",r,e,{format:e.format.inverting_keyword,sourceKw:(0,q.keyword)("inverse"),targetKw:(0,q.keyword)("of")})}le.printFeatureInverting=rZe;function nZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("specialization",r,e,{format:e.format.specialization_keyword_feature_typing,sourceKw:(0,q.keyword)("typing"),targetKw:xm((0,q.keyword)("typed by"),(0,q.text)(":"),r,e.format.declaration_feature_typing)})}le.printFeatureTyping=nZe;function Die(r,e,t,n){let i;if(n)i=n;else{if(!e)throw new Error("Cannot print an undefined expression");i=(0,Dr.printModelElement)(e,t)}if(r.length===0)return i;if(e){let a=(0,jq.getOperator)(e);if(e.nodeType()===ti.InvocationExpression||(0,jq.precedence)(e)===jq.PREC_LEVELS.ACCESS&&a!==xq.IMPLICIT_OPERATORS.DOT&&a!==xq.IMPLICIT_OPERATORS.METADATA||a===xq.OPERATORS.COMMA)return(0,q.group)([...r,(0,q.group)((0,q.indent)(q.line),{id:"assignment-expr"}),q.lineSuffixBoundary,(0,q.indentIfBreak)((0,q.group)(i),{groupId:"assignment-expr"})])}return(0,q.group)([...r,(0,q.indent)([q.line,(0,q.group)(i)])])}le.printAssignmentExpression=Die;function iZe(r,e){if(r.element().is(ti.TriggerInvocationExpression))return ca(r,e);let t=[],n=[];if(r.isDefault)if(n.push((0,q.keyword)("default")),r.isInitial)n.push((0,q.text)(":="));else{let i=(0,ua.formatPreserved)(r,e.format.feature_value_equals,"always",{find:a=>(0,qm.findNodeForKeyword)(a,"="),choose:{as_needed:()=>{},always:()=>(0,q.text)("="),preserve:a=>a?"always":"as_needed"}});i&&n.push(i)}else r.isInitial?n.push((0,q.text)(":=")):n.push((0,q.text)("="));return t.push(...(0,q.join)(q.literals.space,n)),Die(t,r.element(),e)}le.printFeatureValue=iZe;function aZe(r,e,t){var n,i;return e.mode==="kerml"&&r.element().nodeType()!==ti.MetadataFeature&&(!((n=r.element())===null||n===void 0)&&n.is(ti.Feature))&&!r.element().is(ti.Multiplicity)&&(!((i=r.parent())===null||i===void 0)&&i.is(ti.Type))?Tc("member",r,e,{previousSibling:t}):Tc(void 0,r,e,{previousSibling:t})}le.printOwningMembership=aZe;function sZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("specialization",r,e,{format:e.format.specialization_keyword_specialization,sourceKw:(0,q.keyword)("subtype"),targetKw:xm((0,q.keyword)("specializes"),(0,q.text)(":>"),r,e.format.declaration_specialization)})}le.printSpecialization=sZe;function oZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("specialization",r,e,{format:e.format.specialization_keyword_subclassification,sourceKw:(0,q.keyword)("subclassifier"),targetKw:xm((0,q.keyword)("specializes"),(0,q.text)(":>"),r,e.format.declaration_subclassification)})}le.printSubclassification=oZe;function lZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("specialization",r,e,{format:e.format.specialization_keyword_subsetting,sourceKw:(0,q.keyword)("subset"),targetKw:xm((0,q.keyword)("subsets"),(0,q.text)(":>"),r,e.format.declaration_subsetting)})}le.printSubsetting=lZe;function uZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("featuring",r,e,{sourceKw:(0,ua.formatPreserved)(r,e.format.featuring_of_keyword,"always",{find:t=>(0,qm.findNodeForKeyword)(t,"of"),choose:{always:()=>(0,q.keyword)("of"),as_needed:()=>r.declaredName||r.declaredShortName?(0,q.keyword)("of"):q.literals.emptytext,preserve:t=>t?"always":"as_needed"}}),targetKw:(0,q.keyword)("by")})}le.printTypeFeaturing=uZe;function cZe(r,e,t){var n;return(0,Dr.assertSysML)(e,r.nodeType()),Tc(!((n=r.parent())===null||n===void 0)&&n.is(ti.EnumerationDefinition)?void 0:"variant",r,e,{previousSibling:t})}le.printVariantMembership=cZe;function fZe(r,e){return(0,Dr.assertKerML)(e,r.nodeType()),$l("specialization",r,e,{format:e.format.specialization_keyword_redefinition,sourceKw:(0,q.keyword)("redefinition"),targetKw:xm((0,q.keyword)("redefines"),(0,q.text)(":>>"),r,e.format.declaration_redefinition)})}le.printRedefinition=fZe;function Uq(r,e,t){return(0,Dr.assertSysML)(e,r.nodeType()),Tc(t.keyword,r,e,{previousSibling:t.previousSibling,printer(n,i){return(0,_l.printGenericFeature)([],void 0,n,i)}})}function dZe(r,e,t){return Uq(r,e,{previousSibling:t,keyword:"actor"})}le.printActorMembership=dZe;function pZe(r,e,t){return Uq(r,e,{previousSibling:t,keyword:"subject"})}le.printSubjectMembership=pZe;function mZe(r,e,t){return Uq(r,e,{previousSibling:t,keyword:"stakeholder"})}le.printStakeholderMembership=mZe;function Mw(r,e,t){return(0,Dr.assertSysML)(e,r.nodeType()),Tc(t.memberKeyword,r,e,{previousSibling:t.previousSibling,printer(n,i){let a=(0,Lq.canPrintShorthandUsage)(n,ti.ReferenceSubsetting),s=(0,ua.formatPreserved)(n,i.format.framed_concern_keyword,"always",{find:o=>(0,qm.findNodeForKeyword)(o,t.targetKeyword),choose:{always:()=>t.targetKeyword,as_needed:()=>a||n.prefixes.length>0?void 0:t.targetKeyword,preserve:o=>o?"always":"as_needed"}});return s||!a?(0,Lq.printGenericOccurrenceUsage)([],s,n,i):(0,Lq.printShorthandUsage)(n,i)}})}function yZe(r,e,t){return Mw(r,e,{previousSibling:t,memberKeyword:"frame",targetKeyword:"concern"})}le.printFramedConcernMembership=yZe;function hZe(r,e,t){return Mw(r,e,{previousSibling:t,memberKeyword:r.kind==="assumption"?"assume":"require",targetKeyword:"constraint"})}le.printRequirementConstraintMembership=hZe;function gZe(r,e,t){return Mw(r,e,{previousSibling:t,memberKeyword:"verify",targetKeyword:"requirement"})}le.printRequirementVerificationMembership=gZe;function vZe(r,e,t){return(0,Dr.assertSysML)(e,r.nodeType()),Tc("objective",r,e,{previousSibling:t,printer(n,i){return(0,_l.printGenericFeature)([],void 0,n,i,{appendToDeclaration:(0,_l.featureValueAppender)(n,i)})}})}le.printObjectiveMembership=vZe;function _Ze(r,e,t){return(0,Dr.assertSysML)(e,r.nodeType()),Mw(r,e,{previousSibling:t,memberKeyword:"render",targetKeyword:"rendering"})}le.printViewRenderingMembership=_Ze});var yl=p(Ne=>{"use strict";var $Ze=Ne&&Ne.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),TZe=Ne&&Ne.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),RZe=Ne&&Ne.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&$Ze(e,r,t);return TZe(e,r),e};Object.defineProperty(Ne,"__esModule",{value:!0});Ne.printNamespace=Ne.printMultiplicityRange=Ne.printMultiplicity=Ne.printInvariant=Ne.printFeature=Ne.printKerMLFeature=Ne.printGenericFeature=Ne.featureValueAppender=Ne.kermlFeatureModifiers=Ne.printType=Ne.printNonTypeNamespace=Ne.printGenericNamespace=Ne.printSpecializationPart=Ne.defaultSpecializationGrouper=Ne.printMultiplicityPart=Ne.printDeclaredMultiplicityRange=Ne.printChildrenBlock=Ne.printDeclaredRelationships=Ne.printPrefixes=void 0;var w$=be(),fa=RZe(D()),j=Ae(),Pw=ml(),Fr=Is(),xs=ks(),bZe=cg();function Sie(r,e,t=n=>n.element()){return r.map(n=>(0,Fr.printModelElement)(n,e,{printer:(i,a)=>{let s=t(i);return s||(0,xs.throwError)(i,"Invalid metadata prefix - relationship is missing target element"),(0,Fr.printModelElement)(s,a,{printer(o,u){let c=o.specializations(fa.FeatureTyping).at(0);c||(0,xs.throwError)(o,"Invalid metadata prefix - metadata feature is missing feature typing");let f=(0,Fr.printModelElement)(c,u,{printer:(d,m)=>(0,Pw.printTarget)(d,m)});return[(0,j.text)(c.notes.some(d=>d.localPlacement==="leading")||(0,j.getLabel)(f)==="with-leading-notes"?"# ":"#"),(0,j.indent)(f)]}})}}))}Ne.printPrefixes=Sie;function CZe(r,e){let t=r.nodeType();switch(t){case"ConjugatedPortTyping":return(0,Fr.assertSysML)(e,t),{keyword:(0,j.keyword)("defined by"),token:j.literals.colon,format:e.format.declaration_conjugated_port_typing,prefix:j.literals.tilde,groupable:!0,merge:!1};case"Conjugation":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("conjugates"),token:j.literals.tilde,format:e.format.declaration_conjugation,groupable:!1,merge:!1};case"FeatureTyping":return{keyword:(0,j.keyword)(e.mode==="sysml"?"defined by":"typed by"),token:j.literals.colon,format:e.format.declaration_feature_typing,groupable:!0,merge:!1};case"Inheritance":throw new Error("Cannot format abstract 'Inheritance'");case"PortConjugation":throw new Error("Cannot print 'PortConjugation' - is an empty string in textual syntax");case"Redefinition":return{keyword:(0,j.keyword)("redefines"),token:(0,j.text)(":>>"),format:e.format.declaration_redefinition,groupable:!0,merge:!1};case"ReferenceSubsetting":return{keyword:(0,j.keyword)("references"),token:(0,j.text)("::>"),format:e.format.declaration_reference_subsetting,groupable:!1,merge:!1};case"Specialization":return{keyword:(0,j.keyword)("specializes"),token:(0,j.text)(":>"),format:e.format.declaration_specialization,groupable:!0,merge:!1};case"Subclassification":return{keyword:(0,j.keyword)("specializes"),token:(0,j.text)(":>"),format:e.format.declaration_subclassification,groupable:!0,merge:!1};case"Subsetting":return{keyword:(0,j.keyword)("subsets"),token:(0,j.text)(":>"),format:e.format.declaration_subsetting,groupable:!0,merge:!1};case"Differencing":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("differences"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_differencing};case"Disjoining":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("disjoint from"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_declaration_disjoining};case"FeatureChaining":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("chains"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_feature_chaining,separator:[j.softline,j.literals.dot]};case"Intersecting":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("intersects"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_intersecting};case"Unioning":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("unions"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_unioning};case"FeatureInverting":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("inverse of"),format:{default:"keyword",fallback:"keyword"},groupable:!1,merge:!1};case"TypeFeaturing":return(0,Fr.assertKerML)(e,t),{keyword:(0,j.keyword)("featured by"),format:{default:"keyword",fallback:"keyword"},groupable:!0,merge:e.format.merge_declaration_type_featuring}}}function AZe(r,e){if(!e.token)return e.keyword;let t=e.token,n=e.format.fallback||"token";return(0,xs.formatPreserved)(r,e.format,n,{find:i=>(0,j.getPreviousNode)(i,!1),choose:{keyword:()=>e.keyword,token:()=>t,preserve:i=>{switch(i==null?void 0:i.text){case t.contents:return"token";case e.keyword.contents:return"keyword";default:return n}}}})}function Ew(r,e,t,n={}){let i=e.filter(o=>!o.isImplied&&o.parent()===r);if(i.length===0)return[];let a={},s=[];return i.forEach((o,u)=>{var c;let f=o.nodeType(),d=CZe(o,t),m=AZe(o,d),h;if(d.merge)h=(c=a[f])!==null&&c!==void 0?c:a[f]={parts:[]};else{let _=u>0?i[u-1]:void 0;d.groupable&&(_==null?void 0:_.nodeType())===f?h=s[s.length-1]:h={parts:[]}}let y=(0,Pw.printTarget)(o,t);d.prefix&&(y=[d.prefix,y]),h.parts.length===0?(s.push(h),(u!==0||!n.skipFirstKeyword)&&(h.token=m)):d.separator?h.parts.push(d.separator):h.parts.push(j.literals.comma,j.line),h.parts.push(y)}),s.map((o,u)=>{let c=o.token?(0,j.group)([o.token,(0,j.indent)([j.line,(0,j.group)(o.parts)])]):(0,j.indent)((0,j.group)(o.parts));return u===0?c:(0,j.group)([j.line,c])})}Ne.printDeclaredRelationships=Ew;function Ow(r,e,t,n){var i,a;if(e.length===0&&!(n!=null&&n.result)){let d=y=>(0,j.printInnerComments)(r.notes,Object.assign(Object.assign({},t),{indent:!y}),y?void 0:_=>_.kind==="line"||n!=null&&n.forceBreak?j.hardline:j.line),m=()=>{let y=d(!1),_=[j.brackets.curly.open,j.brackets.curly.close];return y!==j.literals.emptytext?_=[(0,j.group)([_[0],(0,j.indent)(j.line),y,_[1]])]:n!=null&&n.forceBreak&&(_=[_[0],j.hardline,_[1]]),n!=null&&n.insertSpaceBeforeBrackets?[j.literals.space,..._]:_},h=()=>{var y;let _=d(!0),w=(y=n==null?void 0:n.semicolon)!==null&&y!==void 0?y:j.literals.semicolon;return _===j.literals.emptytext?w:(0,j.group)([w,j.line,_])};return n!=null&&n.forceEmptyBrackets?m():(0,xs.formatPreserved)(r,t.format.empty_namespace_brackets,"always",{find:y=>(0,w$.findNodeForKeyword)(y,"{"),choose:{always:m,never:h,preserve:y=>y?"always":"never"}})}let s=n!=null&&n.forceBreak?j.hardline:t.format.bracket_spacing?j.line:j.softline,o=(0,Fr.printModelElements)(e,t,n),u=n!=null&&n.join?n.join(e,o):(0,j.join)(s,o);if(n!=null&&n.result){let d=(0,Fr.printModelElement)(n.result,t,{previousSibling:e.at(-1),printer:n.printer});u=o.length>0?[u,s,d]:[u,d]}let c=[j.brackets.curly.open,(0,j.indent)([s,u]),s,j.brackets.curly.close],f=(a=(i=e.at(0))!==null&&i!==void 0?i:n==null?void 0:n.result)===null||a===void 0?void 0:a.cst();return f&&(0,j.newLineCount)((0,j.getPreviousNode)(f,!1),f)>0&&c.push(j.breakParent),n!=null&&n.insertSpaceBeforeBrackets?[j.literals.space,c]:c}Ne.printChildrenBlock=Ow;function wZe(r,e,t){let n=[],i=[];t.modifiers.length>0&&i.push(...t.modifiers);let a=Sie(r.prefixes,e);a.length>0&&i.push(...a),i.length>0&&n.push((0,j.indent)((0,j.fill)((0,j.join)(j.line,i))));let s=[];t.keyword&&s.push((0,j.keyword)(t.keyword));let o=(0,xs.printIdentifiers)(r,e);switch(o.length>0&&s.push(o),s.length>0&&n.push((0,j.group)((0,j.indent)((0,j.join)(j.literals.space,s)))),n.length){case 0:return[];case 1:return[n[0]];default:return[(0,j.group)((0,j.join)(j.line,n))]}}function Mie(r,e){return[j.brackets.square.open,(0,j.indent)([j.softline,(0,Fr.printModelElement)(r,e)]),j.softline,j.brackets.square.close]}Ne.printDeclaredMultiplicityRange=Mie;function Bq(r,e,t){var n,i,a;t===void 0&&(t=(a=(i=(n=r.multiplicity)===null||n===void 0?void 0:n.element())===null||i===void 0?void 0:i.range)===null||a===void 0?void 0:a.element());let s=[],o=[];if(r.is(fa.Feature)&&(r.isOrderedExplicitly&&s.push((0,j.keyword)("ordered")),r.isNonUnique&&s.push((0,j.keyword)("nonunique")),s.length>1?o=(0,xs.formatPreserved)(r,e.format.ordered_nonunique_priority,"ordered",{find:c=>{let f=(0,w$.findNodeForKeyword)(c,"ordered"),d=(0,w$.findNodeForKeyword)(c,"nonunique");return f?d?f.offset<d.offset?f:d:f:d},choose:{ordered:()=>s,nonunique:()=>s.reverse(),preserve:c=>(c==null?void 0:c.text)==="ordered"?"ordered":"nonunique"}}):o=s),!t)return o.length===0?void 0:(0,j.group)((0,j.join)(j.literals.space,o));let u=Mie(t,e);return o.length>0&&u.push(j.literals.space,(0,j.join)(j.literals.space,o)),(0,j.group)(u)}Ne.printMultiplicityPart=Bq;function Pie(r){return e=>{let t=r.format.multiplicity_placement;(!e.multiplicity&&(!e.is(fa.Feature)||!e.isNonUnique||!e.isOrdered)||r.mode==="kerml"&&e.is(fa.Type)&&!e.is(fa.Feature))&&(t="first");let n=e.specializations().filter(i=>!i.isImplied);switch(t){case"first-specialization":if(n.length>0)return[[n[0]],n.slice(1)];case"first":return[[],n];case"last":return[n,[]]}}}Ne.defaultSpecializationGrouper=Pie;function Eie(r,e,t){let n=t.ignoreMultiplicity?void 0:Bq(r,e),i=Boolean(t.skipFirstKeyword),a=t.specializations(r).map(s=>{let o=Ew(r,s,e,{skipFirstKeyword:i});return i&&(i=o.length===0),o});if(a.length===0||a.every(s=>s.length===0))return n?[(0,j.indent)(n)]:[];if(n){let s=a[0];s.length===0?a[1][0]=[n,j.line,a[1][0]]:s[s.length-1]=[s[s.length-1],j.line,n]}return a.filter(s=>s.length>0).map((s,o)=>{let u=s.map(c=>(0,j.group)(c));return(0,j.indent)(o===0?u:[j.line,u])})}Ne.printSpecializationPart=Eie;function kw(r,e,t){var n;let i=wZe(r,e,t),a=(o,u=(0,j.indent)(j.line))=>{i.length>0&&i.push(u),i.push(o)};if(r.is(fa.Type)){let o=t,u=Eie(r,e,{specializations:(n=o.specializations)!==null&&n!==void 0?n:Pie(e),skipFirstKeyword:o.skipFirstSpecializationKeyword}),c=Ew(r,r.typeRelationships,e);if(c.length>0){let f=(0,j.indent)((0,j.group)(c));u.length>0&&u.push((0,j.indent)(j.line)),u.push(f)}u.length>0&&a((0,j.group)(u))}if(t.appendToDeclaration&&(i.length>0&&(i=[(0,j.group)(i)]),t.appendToDeclaration(i)),t.skipChildren===!0)return(0,j.group)(i);let s=Ow(r,r.children,e,{result:t.result,insertSpaceBeforeBrackets:i.length>0,forceEmptyBrackets:t.forceBrackets,forceBreak:t.forceBreakChildren,join:t.join});return[(0,j.group)(i),s]}Ne.printGenericNamespace=kw;function Oie(r,e,t,n){return kw(t,n,{modifiers:r?[(0,j.keyword)(r)]:[],keyword:e})}Ne.printNonTypeNamespace=Oie;function DZe(r,e,t,n,i={}){return kw(t,n,Object.assign({modifiers:r==="auto"?t.isAbstract?[(0,j.keyword)("abstract")]:[]:r,keyword:t.isSufficient?`${e} all`:e,result:t.result},i))}Ne.printType=DZe;function kie(r){let e=[];return r.explicitDirection!=="none"&&e.push((0,j.keyword)(r.explicitDirection)),r.isAbstract&&e.push((0,j.keyword)("abstract")),r.isPortion?e.push((0,j.keyword)("portion")):r.isComposite&&e.push((0,j.keyword)("composite")),r.isReadonly&&e.push((0,j.keyword)("readonly")),r.isDerived&&e.push((0,j.keyword)("derived")),r.isEnd&&e.push((0,j.keyword)("end")),e}Ne.kermlFeatureModifiers=kie;function Gq(r,e,t=Fr.DefaultElementPrinter){return n=>{r.value&&(n.length>0&&n.push(j.literals.space),n.push((0,Fr.printModelElement)(r.value,e,{printer:t})))}}Ne.featureValueAppender=Gq;function Iie(r,e,t,n,i={appendToDeclaration:Gq(t,n)}){return kw(t,n,Object.assign({modifiers:r,keyword:e,result:t.result},i))}Ne.printGenericFeature=Iie;function Kq(r,e,t,n={appendToDeclaration:Gq(e,t)}){return(0,Fr.assertKerML)(t,e.nodeType()),Iie(kie(e),e.isSufficient?r?`${r} all`:"all":r,e,t,n)}Ne.printKerMLFeature=Kq;function SZe(r,e){var t,n;let i=r.owner();if(i){if(((t=r.parent())===null||t===void 0?void 0:t.nodeType())==fa.ParameterMembership&&i.is(fa.InvocationExpression))return(0,bZe.printArgument)(r,e);switch(i.nodeType()){case fa.FeatureChainExpression:return(0,Pw.printChaining)(r,e);case fa.OperatorExpression:{let s=r.specializations(fa.FeatureTyping)[0];return s||(0,xs.throwError)(r,"Invalid operator expression argument feature - missing feature typing"),(0,Pw.printTarget)(s,e)}case fa.FeatureReferenceExpression:{if(((n=r.parent())===null||n===void 0?void 0:n.nodeType())===fa.ReturnParameterMembership)return j.literals.emptytext;break}default:break}}let a=(0,xs.formatPreserved)(r,e.format.feature_keyword,"always",{find:s=>(0,w$.findNodeForKeyword)(s,"feature"),choose:{always:()=>"feature",as_needed:()=>{if(!(r.prefixes.length>0||r.isSufficient||r.declaredName||r.declaredShortName||r.specializations().some(s=>!s.isImplied)))return"feature"},preserve:s=>s?"always":"as_needed"}});return Kq(a,r,e)}Ne.printFeature=SZe;function MZe(r,e){let t=r.isNegated?j.literals.false:(0,xs.formatPreserved)(r,e.format.invariant_true_keyword,"always",{find:n=>(0,w$.findNodeForKeyword)(n,"true"),choose:{always:()=>j.literals.true,never:()=>j.literals.emptytext,preserve:n=>n?"always":"never"}});return Kq(t.contents?`inv ${t.contents}`:"inv",r,e)}Ne.printInvariant=MZe;function PZe(r,e){return(0,Fr.assertKerML)(e,r.nodeType()),[(0,j.group)([(0,j.group)([(0,j.keyword)("multiplicity"),(0,j.indent)((0,xs.printIdentifiers)(r,e,{leading:j.literals.space}))]),(0,j.indent)([[j.line,...Ew(r,r.specializations(),e)]])]),Ow(r,r.children,e,{insertSpaceBeforeBrackets:!0})]}Ne.printMultiplicity=PZe;function EZe(r,e){var t,n;return(0,Fr.assertKerML)(e,r.nodeType()),[(0,j.group)([(0,j.keyword)("multiplicity"),(0,j.indent)((0,xs.printIdentifiers)(r,e,{leading:j.literals.space})),j.literals.space,(0,j.indent)((n=Bq(r,e,(t=r.range)===null||t===void 0?void 0:t.element()))!==null&&n!==void 0?n:j.literals.emptytext)]),Ow(r,r.children,e,{insertSpaceBeforeBrackets:!0})]}Ne.printMultiplicityRange=EZe;function OZe(r,e){return r.parent()?((0,Fr.assertKerML)(e,r.nodeType()),Oie(void 0,"namespace",r,e)):(0,j.join)(j.hardline,(0,Fr.printModelElements)(r.children,e))}Ne.printNamespace=OZe});var dg=p(we=>{"use strict";var kZe=we&&we.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),IZe=we&&we.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),FZe=we&&we.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&kZe(e,r,t);return IZe(e,r),e};Object.defineProperty(we,"__esModule",{value:!0});we.printAttributeUsage=we.printShorthandUsage=we.canPrintShorthandUsage=we.printReferenceUsage=we.printPortUsage=we.printOccurrenceUsage=we.printOccurrenceDefinition=we.printEnumerationUsage=we.printSatisfyRequirement=we.printPerformAction=we.printIncludeUseCase=we.printExhibitState=we.printEventOccurrence=we.printAssertConstraint=we.printOccurrenceUsageSubtype=we.printGenericOccurrenceDefinition=we.printGenericDefinition=we.printGenericOccurrenceUsage=we.printGenericUsage=we.occurrenceDefinitionModifiers=we.occurrenceUsageModifiers=we.definitionModifiers=we.sysmlUsageModifiers=void 0;var yg=be(),Fi=FZe(D()),Zt=Ae(),Ri=yl(),Iw=Is(),Ni=ks(),NZe=ml(),S$=km();function Fw(r,e=!1){let t=[];return r.explicitDirection!=="none"&&t.push((0,Zt.keyword)(r.explicitDirection)),r.isVariation?t.push((0,Zt.keyword)("variation")):r.isAbstract&&t.push((0,Zt.keyword)("abstract")),r.isReadonly&&t.push((0,Zt.keyword)("readonly")),r.isDerived&&t.push((0,Zt.keyword)("derived")),r.isEndExplicitly&&t.push((0,Zt.keyword)("end")),!e&&r.isReferenceExplicitly&&r.nodeType()!==Fi.ReferenceUsage&&t.push((0,Zt.keyword)("ref")),t}we.sysmlUsageModifiers=Fw;function Nw(r){return r.isVariation?[(0,Zt.keyword)("variation")]:r.isAbstract?[(0,Zt.keyword)("abstract")]:[]}we.definitionModifiers=Nw;function Fie(r,e=!1){let t=Fw(r,e);return r.isIndividual&&t.push((0,Zt.keyword)("individual")),r.portionKind&&t.push((0,Zt.keyword)(r.portionKind)),t}we.occurrenceUsageModifiers=Fie;function Nie(r){let e=Nw(r);return r.isIndividual&&e.push((0,Zt.keyword)("individual")),e}we.occurrenceDefinitionModifiers=Nie;function D$(r,e,t,n,i={appendToDeclaration:(0,Ri.featureValueAppender)(t,n)}){return(0,Iw.assertSysML)(n,t.nodeType()),(0,Ri.printGenericFeature)(r==="auto"?Fw(t,i==null?void 0:i.ignoreRef):r,e,t,n,Object.assign(Object.assign({},i),{join:(0,S$.actionBodyJoiner)()}))}we.printGenericUsage=D$;function qw(r,e,t,n,i={appendToDeclaration:(0,Ri.featureValueAppender)(t,n)}){return(0,Iw.assertSysML)(n,t.nodeType()),(0,Ri.printGenericFeature)(r==="auto"?Fie(t,i==null?void 0:i.ignoreRef):r,e,t,n,Object.assign(Object.assign({},i),{join:(0,S$.actionBodyJoiner)()}))}we.printGenericOccurrenceUsage=qw;function qZe(r,e,t,n,i={}){return(0,Ri.printType)(r==="auto"?Nw(t):r,e,t,n,Object.assign(Object.assign({},i),{join:(0,S$.actionBodyJoiner)()}))}we.printGenericDefinition=qZe;function qie(r,e,t,n,i={}){return(0,Ri.printType)(r==="auto"?Nie(t):r,e,t,n,Object.assign(Object.assign({},i),{join:(0,S$.actionBodyJoiner)()}))}we.printGenericOccurrenceDefinition=qie;function Lm(r,e,t,n){var i;let a=e.declaredName||e.declaredShortName,{suffix:s}=n,o=s==="default"?(0,Ri.featureValueAppender)(e,t):m=>{s&&m.push(s)},u=r.length>1?r[r.length-1]:void 0,c=Boolean(u),f=c?r.slice(0,-1):r;if(u&&!a&&((i=e.specializations().find(m=>!m.isImplied))===null||i===void 0?void 0:i.nodeType())===Fi.ReferenceSubsetting){let m=(0,Ni.formatPreserved)(e,n.format,"always",{find:h=>(0,yg.findNodeForKeyword)(h,u.split(" ").at(-1)),choose:{always:()=>u,as_needed:()=>{},preserve:h=>h?"always":"as_needed"}});c=Boolean(m)}let d=n.declarationOnly?c?u:void 0:(c?r:f).join(" ");return qw(n.declarationOnly?[]:"auto",d,e,t,{skipFirstSpecializationKeyword:!c,specializations:m=>{if(c)return(0,Ri.defaultSpecializationGrouper)(t)(m);let h=m.specializations().filter(y=>!y.isImplied);return[[h[0]],h.slice(1)]},appendToDeclaration:o,skipChildren:Boolean(n.declarationOnly),forceBrackets:n.forceBrackets,join:n.join,ignoreRef:n.ignoreRef})}we.printOccurrenceUsageSubtype=Lm;function xZe(r,e,t){return Lm([r.isNegated?"assert not":"assert","constraint"],r,e,{format:e.format.assert_constraint_usage_keyword,suffix:void 0,declarationOnly:t})}we.printAssertConstraint=xZe;function LZe(r,e,t){return Lm(["event","occurrence"],r,e,{format:e.format.event_occurrence_keyword,declarationOnly:t,suffix:"default",ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.event_occurrence_reference_keyword)})}we.printEventOccurrence=LZe;function jZe(r,e,t){let n="default";return r.isParallel&&(n=[],r.value&&n.push(Zt.literals.space,(0,Iw.printModelElement)(r.value,e)),n.push((0,Zt.indent)([Zt.line,(0,Zt.keyword)("parallel")]))),Lm(["exhibit","state"],r,e,{format:e.format.exhibit_state_usage_keyword,declarationOnly:t,suffix:n,forceBrackets:r.isParallel,join:(0,S$.actionBodyJoiner)(),ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.exhibit_state_reference_keyword)})}we.printExhibitState=jZe;function UZe(r,e,t){return Lm(["include","use case"],r,e,{format:e.format.include_use_case_usage_keyword,declarationOnly:t,suffix:"default",ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.include_use_case_reference_keyword)})}we.printIncludeUseCase=UZe;function BZe(r,e,t){return Lm(["perform","action"],r,e,{format:e.format.perform_action_usage_keyword,declarationOnly:t,suffix:"default",ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.perform_action_reference_keyword)})}we.printPerformAction=BZe;function GZe(r,e,t){var n;let i=[];if(r.value&&i.push(Zt.literals.space,(0,Iw.printModelElement)(r.value,e)),r.satisfactionSubject){let s=(n=r.satisfactionSubject.element())===null||n===void 0?void 0:n.value;s||(0,Ni.throwError)(r.satisfactionSubject,"Invalid satisfaction subject - target element doesn't have value"),i.push(Zt.line,(0,Zt.keyword)("by "),(0,Zt.indent)((0,NZe.printTarget)(s,e)))}let a=(0,Ni.formatPreserved)(r,e.format.satisfy_requirement_assert_keyword,"always",{find:s=>(0,yg.findNodeForKeyword)(s,"assert"),choose:{always:()=>"assert ",never:()=>"",preserve:s=>s?"always":"never"}});return Lm([a+(r.isNegated?"not satisfy":"satisfy"),"requirement"],r,e,{format:e.format.satisfy_requirement_keyword,suffix:(0,Zt.indent)((0,Zt.group)(i)),declarationOnly:t})}we.printSatisfyRequirement=GZe;function KZe(r,e){var t;if(!(!((t=r.owner())===null||t===void 0)&&t.is(Fi.EnumerationDefinition)))return D$("auto","enum",r,e,{appendToDeclaration:(0,Ri.featureValueAppender)(r,e),ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.attribute_usage_reference_keyword)});let n=(0,Ni.formatPreserved)(r,e.format.enum_member_keyword,"always",{find:i=>(0,yg.findNodeForKeyword)(i,"enum"),choose:{always:()=>(0,Zt.keyword)("enum"),never:()=>Zt.literals.emptytext,preserve:i=>i?"always":"never"}});return D$("auto",n===Zt.literals.emptytext?void 0:n.contents,r,e,{appendToDeclaration:(0,Ri.featureValueAppender)(r,e),ignoreRef:!0})}we.printEnumerationUsage=KZe;function HZe(r,e){let t;return r.isIndividual?t=(0,Ni.formatPreserved)(r,e.format.occurrence_keyword,"always",{find:n=>(0,yg.findNodeForKeyword)(n,"occurrence"),choose:{always:()=>"occurrence def",as_needed:()=>"def",preserve:n=>n?"always":"as_needed"}}):t="occurrence def",qie("auto",t,r,e)}we.printOccurrenceDefinition=HZe;function VZe(r,e){let t;return r.isIndividual||r.portionKind?t=(0,Ni.formatPreserved)(r,e.format.occurrence_keyword,"always",{find:n=>(0,yg.findNodeForKeyword)(n,"occurrence"),choose:{always:()=>"occurrence",as_needed:()=>{},preserve:n=>n?"always":"as_needed"}}):t="occurrence",qw("auto",t,r,e)}we.printOccurrenceUsage=VZe;function WZe(r,e){var t,n,i;if(r.isEndExplicitly&&(!((t=r.parent())===null||t===void 0)&&t.is(Fi.FeatureMembership))&&(!((n=r.owner())===null||n===void 0)&&n.isAny(Fi.InterfaceDefinition,Fi.InterfaceUsage))){let a=[];return r.explicitDirection!=="none"&&a.push((0,Zt.keyword)(r.direction)),a.push(...Nw(r),(0,Zt.keyword)("end")),(0,Ri.printGenericFeature)(a,void 0,r,e)}return qw("auto","port",r,e,{appendToDeclaration:(0,Ri.featureValueAppender)(r,e),ignoreRef:!((i=r.owningType)===null||i===void 0)&&i.isAny(Fi.PortUsage,Fi.PortDefinition)?!1:(0,Ni.shouldIgnoreRef)(r,e.format.port_usage_reference_keyword)})}we.printPortUsage=WZe;function zZe(r,e){var t,n,i;let a,s=()=>(a===void 0&&(a=(0,Ni.formatPreserved)(r,e.format.reference_usage_keyword,"always",{find:o=>(0,yg.findNodeForKeyword)(o,"ref"),choose:{always:()=>"ref",as_needed:()=>"missing",preserve:o=>o?"always":"as_needed"}})),a==="missing"?void 0:a);return((t=r.parent())===null||t===void 0?void 0:t.nodeType())===Fi.VariantMembership&&xie(r,Fi.ReferenceSubsetting)&&!s()?Lie(r,e):D$("auto",((n=r.parent())===null||n===void 0?void 0:n.nodeType())===Fi.VariantMembership||!((i=r.owner())===null||i===void 0)&&i.isAny(Fi.InterfaceDefinition,Fi.InterfaceUsage)?"ref":s(),r,e)}we.printReferenceUsage=zZe;function xie(r,e=Fi.ReferenceSubsetting){var t;return r.prefixes.length===0&&Fw(r).length===0&&!r.value&&!r.declaredName&&!r.declaredShortName&&!r.multiplicity&&!r.isOrderedExplicitly&&!r.isNonUnique&&((t=r.specializations().find(n=>!n.isImplied))===null||t===void 0?void 0:t.nodeType())===e}we.canPrintShorthandUsage=xie;function Lie(r,e){return[(0,Ri.printSpecializationPart)(r,e,{skipFirstKeyword:!0,specializations(t){let n=t.specializations().filter(i=>!i.isImplied);return[[n[0]],n.slice(1)]},ignoreMultiplicity:!0}),(0,Ri.printChildrenBlock)(r,r.children,e,{insertSpaceBeforeBrackets:!0})]}we.printShorthandUsage=Lie;function YZe(r,e){return D$("auto","attribute",r,e,{appendToDeclaration:(0,Ri.featureValueAppender)(r,e),ignoreRef:(0,Ni.shouldIgnoreRef)(r,e.format.attribute_usage_reference_keyword)})}we.printAttributeUsage=YZe});var km=p(qt=>{"use strict";Object.defineProperty(qt,"__esModule",{value:!0});qt.actionBodyJoiner=qt.printStateUsage=qt.printStateDefinition=qt.printStateSubactionMembership=qt.printSubaction=qt.printSendAction=qt.printIfAction=qt.printForLoop=qt.printWhileLoop=qt.printCondition=qt.printControlNode=qt.printAcceptActionUsage=qt.printAccepterParameterPart=qt.printAssignmentAction=void 0;var In=D(),te=Ae(),XZe=An(),_g=dg(),hg=ml(),JZe=cg(),jm=yl(),vg=Is(),QZe=Dw(),Ls=ks();function gg(r,e,t,n="node parameter"){return(0,Ls.printDescendant)(r,t,n).descend(i=>i[e]).descend(i=>i.element()).descend(i=>i.value).descend(i=>i.element()).print()}function ZZe(r,e,t,n="payload parameter"){return(0,Ls.printDescendant)(r,t,n).descend(i=>i[e]).descend(i=>i.element()).print({printer(i,a){var s;return(0,jm.printGenericNamespace)(i,a,{modifiers:[],keyword:void 0,skipChildren:!0,skipFirstSpecializationKeyword:Boolean(!i.declaredName&&!i.declaredShortName&&i.specializations().filter(o=>!o.isImplied).length===1&&((s=i.specializations().find(o=>!o.isImplied))===null||s===void 0?void 0:s.is(In.FeatureTyping))&&!i.value),appendToDeclaration:(0,jm.featureValueAppender)(i,a)})}})}function Hq(r,e,t){return(0,_g.printGenericOccurrenceUsage)(t.declarationOnly?[]:"auto",(0,Ls.selectDeclarationKeyword)(r,"action",e.format.action_node_keyword),r,e,{appendToDeclaration(n){let i=(0,te.group)([(0,te.keyword)(t.keyword),te.literals.space,(0,te.group)(t.suffix)]);n.length>0?n.push((0,te.group)([(0,te.indent)(te.line),(0,te.indentIfBreak)(i,{groupId:"action-subtype-suffix"})],{id:"action-subtype-suffix"})):n.push(i)},skipChildren:t.declarationOnly,join:M$()})}function jie(r,e,t){var n,i,a,s,o;let u=[];return((a=(i=(n=r.target)===null||n===void 0?void 0:n.element())===null||i===void 0?void 0:i.value)===null||a===void 0?void 0:a.element())&&u.push((0,Ls.printDescendant)(r,e,"assignment action target").descend(f=>f.target).descend(f=>f.element()).descend(f=>f.value).descend(f=>f.element()).print(),(0,te.indent)([te.softline,te.literals.dot])),r.targetMember||(0,Ls.throwError)(r,"Invalid assignment action - missing target member"),u.push((0,hg.printAsTarget)(r.targetMember,e,{printer(f,d){var m;return!((m=f.parent())===null||m===void 0)&&m.is(In.OwningMembership)?(0,te.indent)((0,hg.printChaining)(f,d)):(0,vg.DefaultElementPrinter)(f,d)}})),(0,Ls.assertMember)(r,r.assignedValue,"assignment action","assigned value"),u.push((0,hg.printAssignmentExpression)([te.literals.space,(0,te.text)(":=")],(o=(s=r.assignedValue)===null||s===void 0?void 0:s.element().value)===null||o===void 0?void 0:o.element(),e,gg(r,"assignedValue",e,"assigned value"))),Hq(r,e,{suffix:u,keyword:"assign",declarationOnly:t})}qt.printAssignmentAction=jie;function Uie(r,e){let t=[ZZe(r,"payload",e)];return r.receiver.isImplied||t.push((0,te.indent)([te.line,(0,te.keyword)("via "),gg(r,"receiver",e,"receiver")])),t}qt.printAccepterParameterPart=Uie;function Bie(r,e,t){return Hq(r,e,{suffix:Uie(r,e),keyword:"accept",declarationOnly:t})}qt.printAcceptActionUsage=Bie;function eet(r,e,t){(0,vg.assertSysML)(t,e.nodeType());let n=(0,_g.occurrenceUsageModifiers)(e);return(0,jm.printGenericFeature)(n,r,e,t,{join:M$(),appendToDeclaration:(0,jm.featureValueAppender)(e,t)})}qt.printControlNode=eet;function Vq(r,e,t){return(0,_g.printGenericOccurrenceUsage)("auto",(0,Ls.selectDeclarationKeyword)(r,"action",e.format.action_node_keyword),r,e,{appendToDeclaration(n){n.length>0&&n.push(te.line),n.push(t.suffix)},skipChildren:!0})}function xw(r,e,t,n){return(0,Ls.printDescendant)(r,t,n.kind).descend(i=>i[e]).descend(i=>i.element()).print({printer(i,a){let s=(0,Ls.selectDeclarationKeyword)(i,"action",a.format.action_node_keyword),o=(0,jm.printGenericFeature)([],s,i,a,{forceBrackets:!0,appendToDeclaration(){},forceBreakChildren:n.mustBreak,join:M$()});return n.mustBreak&&(o=(0,te.ifBreak)(o,(0,te.group)(o))),s?[(0,te.indent)(te.line),o]:[te.literals.space,o]}})}function Lw(r,e,t,n){let i,a;return e.is(In.OwningMembership)?(i=(0,hg.printTarget)(e,t),a=e.element()):(i=(0,vg.printModelElement)(e,t),a=e),(0,JZe.getOperator)(a)===XZe.OPERATORS.COMMA&&(n="never"),n==="always"?i=(0,te.group)([te.brackets.round.open,(0,te.indent)([te.softline,i]),te.softline,te.brackets.round.close]):n==="on_break"&&(i=(0,te.group)([(0,te.ifBreak)(te.brackets.round.open,te.literals.emptytext),(0,te.indent)([te.softline,i]),te.softline,(0,te.ifBreak)(te.brackets.round.close,te.literals.emptytext)])),n!=="never"?[r,(0,te.group)((0,te.indent)(te.line),{id:"condition"}),(0,te.indentIfBreak)(i,{groupId:"condition"})]:(0,hg.printAssignmentExpression)([r],a,t,i)}qt.printCondition=Lw;function tet(r,e){var t;let n=[],i=xw(r,"body",e,{kind:"while loop body parameter",mustBreak:r.until!==void 0});return!r.condition||!(!((t=r.condition.element())===null||t===void 0)&&t.is(In.Expression))?n.push((0,te.keyword)("loop "),i[1]):n.push((0,te.group)(Lw((0,te.keyword)("while"),r.condition,e,e.format.while_loop_parenthesize_condition)),i),r.until&&n.push((0,te.group)([Lw((0,te.keyword)(" until"),r.until,e,e.format.while_loop_parenthesize_until),(0,te.text)(";")])),Vq(r,e,{suffix:(0,te.group)(n)})}qt.printWhileLoop=tet;function ret(r,e){return(0,Ls.printDescendant)(r,e,"for loop").descend(t=>t.variable).descend(t=>t.element()).print({printer(t,n){let i=[];return i.push((0,jm.printGenericFeature)([],void 0,t,n,{appendToDeclaration(){},skipChildren:!0}),te.line,(0,te.keyword)("in "),gg(r,"sequence",n,"for loop sequence")),Vq(r,n,{suffix:(0,te.group)([(0,te.keyword)("for "),(0,te.group)((0,te.indent)(i)),xw(r,"body",n,{kind:"for loop body",mustBreak:!1})])})}})}qt.printForLoop=ret;function Gie(r,e){var t,n;let i=[],a=(t=r.else)===null||t===void 0?void 0:t.element();return r.condition||(0,Ls.throwError)(r,"Invalid if action - missing condition"),i.push((0,te.group)(Lw((0,te.keyword)("if"),r.condition,e,e.format.if_parenthesize_condition)),xw(r,"then",e,{kind:"if then branch",mustBreak:Boolean(a)||((n=r.owner())===null||n===void 0?void 0:n.nodeType())===In.IfActionUsage})),a&&(i.push((0,te.keyword)(" else")),a.is(In.IfActionUsage)?i.push(te.literals.space,Gie(a,e)):i.push(xw(r,"else",e,{kind:"if else branch",mustBreak:!0}))),Vq(r,e,{suffix:(0,te.group)(i)})}qt.printIfAction=Gie;function Kie(r,e,t){let n=[];return n.push(gg(r,"payload",e,"payload")),r.sender.isImplied||n.push((0,te.indent)([te.line,(0,te.keyword)("via "),gg(r,"sender",e)])),r.receiver.isImplied||n.push((0,te.indent)([te.line,(0,te.keyword)("to "),gg(r,"receiver",e)])),Hq(r,e,{keyword:"send",suffix:n,declarationOnly:t})}qt.printSendAction=Kie;function Hie(r,e,t=te.literals.semicolon){let n=(()=>{switch(r.nodeType()){case In.PerformActionUsage:return(0,_g.printPerformAction)(r,e,!0);case In.AcceptActionUsage:return Bie(r,e,!0);case In.SendActionUsage:return Kie(r,e,!0);case In.AssignmentActionUsage:return jie(r,e,!0);default:return}})();return n?(0,vg.printModelElement)(r,e,{printer:(i,a)=>(0,te.group)([n,(0,jm.printChildrenBlock)(i,i.children,a,{insertSpaceBeforeBrackets:!0,semicolon:t,result:i.result,join:M$()})])}):t}qt.printSubaction=Hie;function net(r,e){(0,vg.assertSysML)(e,r.nodeType());let t=(0,vg.printModelElement)(r.element(),e,{printer:(i,a)=>Hie(i,a)}),n=t===te.literals.semicolon?[(0,te.keyword)(r.kind),te.literals.semicolon]:[(0,te.keyword)(r.kind),te.literals.space,t];return(0,hg.printWithVisibility)(r,n,e)}qt.printStateSubactionMembership=net;function iet(r,e){return(0,_g.printGenericOccurrenceDefinition)("auto","state def",r,e,{appendToDeclaration(t){r.isParallel&&t.push([te.line,(0,te.keyword)("parallel")])},forceBrackets:r.isParallel})}qt.printStateDefinition=iet;function aet(r,e){return(0,_g.printGenericOccurrenceUsage)("auto","state",r,e,{appendToDeclaration(t){r.isParallel&&t.push([te.line,(0,te.keyword)("parallel")])},forceBrackets:r.isParallel})}qt.printStateUsage=aet;function M$(){let r={stack:[],continuation:void 0},e=n=>r.stack.reduce(i=>(0,te.indent)(i),n),t=(n,i,a,s)=>{var o,u,c;let f=n;if(f.is(In.OwningMembership)&&(f=f.element()),r.continuation){let d=r.continuation;r.continuation=void 0,a&&(a=[d,(0,te.group)((0,te.indent)(te.line)),a]),i--}else switch(f.nodeType()){case In.TransitionUsage:{if(f.source){r.stack.length=0;break}if(f.else&&((o=r.stack.at(-1))===null||o===void 0?void 0:o.type)===In.DecisionNode){r.stack[r.stack.length-1].isDone=!0;break}!((u=r.stack.at(-1))===null||u===void 0)&&u.isDone&&r.stack.pop();break}case In.SuccessionAsUsage:{let d=(0,QZe.successionAsUsageKind)(f,s);if(d==="regular"?r.stack.length=0:!((c=r.stack.at(-1))===null||c===void 0)&&c.isDone&&r.stack.pop(),d==="empty"){r.continuation=a;return}break}default:{r.stack.length=0;break}}if(a&&i!==0&&(a=e([te.hardline,a])),f.is(In.ControlNode)){let d=f.nodeType();(d===In.DecisionNode||d===In.ForkNode)&&r.stack.push({type:d,isDone:!1})}return a};return function(n,i,a){return a==null||a.forEach((s,o)=>t(s,0,void 0,o>0?a[o-1]:void 0)),n.map((s,o)=>t(s,o,i[o],o===0?a==null?void 0:a.at(-1):n[o-1])).filter(te.NonNullable)}}qt.actionBodyJoiner=M$});var Vie=p(Fn=>{"use strict";var set=Fn&&Fn.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),js=Fn&&Fn.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&set(e,r,t)};Object.defineProperty(Fn,"__esModule",{value:!0});js(km(),Fn);js(Pq(),Fn);js(Cw(),Fn);js(dg(),Fn);js(ml(),Fn);js(cg(),Fn);js(pq(),Fn);js(yl(),Fn);js(Is(),Fn);js(Dw(),Fn);js(ks(),Fn)});var Wie=p(jw=>{"use strict";Object.defineProperty(jw,"__esModule",{value:!0});jw.prettyAnnotationBody=void 0;function oet(r,e=!0){r=r.trim(),r=r.replace("/*","").trimStart(),r.endsWith("*/")&&(r=r.substring(0,r.length-2).trimEnd());let t=r.split(/\r?\n/);return t.forEach((n,i)=>{n=e?n.trimLeft():n.trim(),n.startsWith("*")&&(n=n.replace(/^\* ?/,"")),t[i]=n}),t.join(`
`)}jw.prettyAnnotationBody=oet});var Wn=p(on=>{"use strict";var uet=on&&on.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),qi=on&&on.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&uet(e,r,t)};Object.defineProperty(on,"__esModule",{value:!0});qi(An(),on);qi(tq(),on);qi(Hh(),on);qi(EI(),on);qi(yne(),on);qi(aq(),on);qi(O(),on);qi(qI(),on);qi(kf(),on);qi(jne(),on);qi(Vie(),on);qi(lg(),on);qi(So(),on);qi(Wie(),on)});var $g=p(ln=>{"use strict";Object.defineProperty(ln,"__esModule",{value:!0});ln.followAlias=ln.followAstAlias=ln.resolveAlias=ln.linesDiff=ln.compareRanges=ln.streamModel=ln.streamAllModelContents=ln.streamAst=ln.streamAllContents=void 0;var Uw=be(),Yie=D();function cet(r){return new Uw.TreeStreamImpl(r,e=>e.$children)}ln.streamAllContents=cet;function fet(r){return new Uw.TreeStreamImpl(r,e=>e.$children,{includeRoot:!0})}ln.streamAst=fet;function det(r){return new Uw.TreeStreamImpl(r,e=>e.ownedElements())}ln.streamAllModelContents=det;function pet(r){return new Uw.TreeStreamImpl(r,e=>e.ownedElements(),{includeRoot:!0})}ln.streamModel=pet;var zie={line:0,character:0};function met(r,e){var t,n;let i=(t=r==null?void 0:r.start)!==null&&t!==void 0?t:zie,a=(n=e==null?void 0:e.start)!==null&&n!==void 0?n:zie,s=i.line-a.line;return s!==0?s:i.character-a.character}ln.compareRanges=met;function yet(r,e){return e.range.start.line-r.range.end.line}ln.linesDiff=yet;function het(r,e){let t=Xie(r);return e(t)?t:void 0}ln.resolveAlias=het;function Xie(r){var e;return(0,Yie.isMembership)(r)?(e=r.$meta.element())===null||e===void 0?void 0:e.ast():r}ln.followAstAlias=Xie;function get(r){return r!=null&&r.is(Yie.Membership)?r.element():r}ln.followAlias=get});var Yq=p(xi=>{"use strict";var vet=xi&&xi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),_et=xi&&xi.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),$et=xi&&xi.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&vet(e,r,t);return _et(e,r),e};Object.defineProperty(xi,"__esModule",{value:!0});xi.clearTreeArtifacts=xi.clearArtifacts=xi.astToModel=void 0;var De=$et(D()),Rc=Wn(),Tet=$g(),Ret={default(r,e){var t;r._ast=e,r.setParent((t=e.$container)===null||t===void 0?void 0:t.$meta)},[De.Comment](r,e){e.locale&&(r.locale=e.locale.substring(1,e.locale.length-1))},[De.FeatureReferenceExpression](r,e){r._expression=e.expression.$meta},[De.LiteralBoolean](r,e){r.literal=e.literal},[De.LiteralNumber](r,e){var t,n;r._isInteger=!/[eE.]/.test((n=(t=e.$cstNode)===null||t===void 0?void 0:t.text)!==null&&n!==void 0?n:""),r._literal=e.literal},[De.LiteralString](r,e){r.literal=e.literal.slice(1,e.literal.length-1)},[De.OperatorExpression](r,e){e.operator&&(r.operator=`'${e.operator}'`)},[De.InvocationExpression](r,e){r._operands=e.operands.map(t=>t.$meta)},[De.ElementReference](r,e){var t,n,i;r.text=(i=(t=e.text)!==null&&t!==void 0?t:(n=e.$cstNode)===null||n===void 0?void 0:n.text)!==null&&i!==void 0?i:"",r.found.length=e.parts.length},[De.FeatureValue](r,e){r.isDefault=e.isDefault,r.isInitial=e.isInitial},[De.Import](r,e){r.isRecursive=!!e.isRecursive,r._importsAll=e.importsAll},[De.AnnotatingElement](r,e){r._annotations=e.about.map(t=>t.$meta)},[De.Connector](r,e){r._ends=e.ends.map(t=>t.$meta)},[De.Element](r,e){r.declaredName=(0,Rc.sanitizeName)(e.declaredName),r.declaredShortName=(0,Rc.sanitizeName)(e.declaredShortName)},[De.Expression](r,e){var t;r._result=(t=e.result)===null||t===void 0?void 0:t.$meta},[De.SysMLFunction](r,e){var t;r._result=(t=e.result)===null||t===void 0?void 0:t.$meta},[De.Feature](r,e){var t;r._value=(t=e.value)===null||t===void 0?void 0:t.$meta,r.isOrdered=e.isOrdered,r.direction=(0,Rc.getFeatureDirectionKind)(e.direction),r.isPortion=!!e.isPortion,r.isComposite=!!e.isComposite||r.isPortion,r.isReadonly=!!e.isReadOnly,r.isDerived=!!e.isDerived,r.isEnd=!!e.isEnd,r.isOrdered=e.isOrdered,r.isNonUnique=e.isNonunique},[De.Invariant](r,e){r.isNegated=e.isNegated},[De.LibraryPackage](r,e){r.isStandard=e.isStandard},[De.MultiplicityRange](r,e){var t;r._range=(t=e.range)===null||t===void 0?void 0:t.$meta},[De.Namespace](r,e){r._prefixes.length=0,r._children.clear(),r._prefixes.push(...e.prefixes.map(t=>t.$meta)),r._children.push(...e.children.map(t=>t.$meta))},[De.Dependency](r,e){r._prefixes.length=0,r._children.clear(),r._prefixes.push(...e.prefixes.map(t=>t.$meta)),r._children.push(...e.elements.map(t=>t.$meta))},[De.Relationship](r,e){r._visibility=(0,Rc.getVisibility)(e.visibility),e.target?r._element=e.target.$meta:e.targetChain&&(r._element=e.targetChain.$meta),e.source?r._source=e.source.$meta:e.sourceChain?r._source=e.sourceChain.$meta:e.sourceRef&&(r._source=void 0),r._children.push(...e.elements.map(t=>t.$meta))},[De.TextualAnnotatingElement](r,e){e.body&&(r.body=(0,Rc.prettyAnnotationBody)(e.body))},[De.TextualRepresentation](r,e){r.language=e.language.substring(1,e.language.length-1)},[De.Type](r,e){var t;r._isAbstract=Boolean(e.isAbstract),r.isSufficient=e.isSufficient,r._multiplicity=(t=e.multiplicity)===null||t===void 0?void 0:t.$meta,r._heritage.clear(),r._heritage.push(...e.heritage.map(n=>n.$meta)),r._typeRelationships.clear(),r._typeRelationships.push(...e.typeRelationships.map(n=>n.$meta))},[De.RequirementConstraintMembership](r,e){r.kind=e.kind==="assume"?"assumption":"requirement"},[De.StateSubactionMembership](r,e){r.kind=e.kind},[De.TransitionFeatureMembership](r,e){r._kind=(0,Rc.getTransitionFeatureKind)(e)},[De.AcceptActionUsage](r,e){var t;r._payload=e.payload.$meta,r._receiver=(t=e.receiver)===null||t===void 0?void 0:t.$meta},[De.StateUsage](r,e){r.isParallel=e.isParallel},[De.AssignmentActionUsage](r,e){r._targetMember=e.targetMember.$meta,r._assignedValue=e.assignedValue.$meta},[De.Definition](r,e){r.isIndividual=e.isIndividual,r._isVariation=e.isVariation},[De.ForLoopActionUsage](r,e){r._variable=e.variable.$meta,r._sequence=e.sequence.$meta,r._body=e.body.$meta},[De.IfActionUsage](r,e){var t;r._condition=e.condition.$meta,r._then=e.then.$meta,r._else=(t=e.else)===null||t===void 0?void 0:t.$meta},[De.SatisfyRequirementUsage](r,e){var t;r._satisfactionSubject=(t=e.satisfactionSubject)===null||t===void 0?void 0:t.$meta},[De.SendActionUsage](r,e){var t,n;r._payload=e.payload.$meta,r._sender=(t=e.sender)===null||t===void 0?void 0:t.$meta,r._receiver=(n=e.receiver)===null||n===void 0?void 0:n.$meta},[De.StateDefinition](r,e){r.isParallel=e.isParallel},[De.TransitionUsage](r,e){var t,n,i,a,s,o;r._source=(t=e.source)===null||t===void 0?void 0:t.$meta,r._accepter=(n=e.accepter)===null||n===void 0?void 0:n.$meta,r._guard=(i=e.guard)===null||i===void 0?void 0:i.$meta,r._effect=(a=e.effect)===null||a===void 0?void 0:a.$meta,r._then=(s=e.then)===null||s===void 0?void 0:s.$meta,r._else=(o=e.else)===null||o===void 0?void 0:o.$meta,e.payload&&(e.payload.$meta=r._payload,e.payload.target&&(e.payload.target.$meta=r._payload.element())),e.transitionLinkSource&&(e.transitionLinkSource.$meta=r._transitionLinkSource,e.transitionLinkSource.target&&(e.transitionLinkSource.target.$meta=r._transitionLinkSource.element()))},[De.Usage](r,e){r.isVariation=e.isVariation,r.isIndividual=e.isIndividual,r.isReference=e.isReference,r.portionKind=e.portionKind},[De.WhileLoopActionUsage](r,e){var t,n;r._condition=(t=e.condition)===null||t===void 0?void 0:t.$meta,r._body=e.body.$meta,r._until=(n=e.until)===null||n===void 0?void 0:n.$meta},[De.Membership](r,e){r.isAlias=e.isAlias},[De.ItemFlow](r,e){var t;r._item=(t=e.item)===null||t===void 0?void 0:t.$meta},[De.TriggerInvocationExpression](r,e){r.kind=e.kind},[De.FlowConnectionUsage](r,e){r._messages=e.messages.map(t=>t.$meta)}},bet={default(r){r.setupState="none"},[De.Element](r){r._comments=r._comments.filter(t=>t.owner()===r),r._docs=r._docs.filter(t=>t.owner()===r),r._reps=r._reps.filter(t=>t.owner()===r),r._metadata=r._metadata.filter(t=>t.owner()===r),r._metaclass="unset";let e=[];for(let[t,n]of r.namedMembers)typeof n=="string"&&e.push(t);e.forEach(t=>r._memberLookup.delete(t))},[De.Feature](r){r.setName(r.declaredName),r.setShortName(r.declaredShortName),r._impliedIsOrdered=!1,r.typings=void 0},[De.ElementReference](r){r.to.reset(),r.found.fill(void 0)},[De.Namespace](r){r._importResolutionState="none"},[De.Dependency](r){r.client.length=0,r.supplier.length=0},[De.Relationship](r){var e,t;((e=r.element())===null||e===void 0?void 0:e.parent())!==r&&(r._element=void 0),!(r.source()===r.parent()||((t=r.source())===null||t===void 0?void 0:t.parent())===r)&&(r._source=void 0)},[De.Type](r){let e=r.heritage.filter(n=>!n.isImplied&&n.parent()===r);r._heritage.clear(),r._heritage.push(...e);let t=r.typeRelationships.filter(n=>!n.isImplied&&n.parent()===r);r._typeRelationships.clear(),r._typeRelationships.push(...t),r.resetInputParameters()},[De.Association](r){r.resetEnds()},[De.Connector](r){r.resetEnds()},[De.MultiplicityRange](r){r._bounds="unset"}},Wq;function Cet(r,e){var t;Wq||(Wq=Rc.typeIndex.chain(Ret,"supertype-first")),(t=Wq.get(e.$type))===null||t===void 0||t.forEach(n=>n(r,e))}xi.astToModel=Cet;var zq;function Jie(r){var e;zq||(zq=Rc.typeIndex.chain(bet,"subtype-first")),(e=zq.get(r.nodeType()))===null||e===void 0||e.forEach(t=>t(r))}xi.clearArtifacts=Jie;function Aet(r){(0,Tet.streamModel)(r).forEach(Jie)}xi.clearTreeArtifacts=Aet});var Qie=p(Um=>{"use strict";var wet=Um&&Um.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Det=Um&&Um.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&wet(e,r,t)};Object.defineProperty(Um,"__esModule",{value:!0});Det(dq(),Um)});var Km=p(xt=>{"use strict";Object.defineProperty(xt,"__esModule",{value:!0});xt.makeLinkingScope=xt.makeScope=xt.FilteredScope=xt.ScopeStream=xt.TypeScope=xt.NamespaceScope=xt.NamespaceImportScope=xt.MembershipImportScope=xt.ImportScope=xt.ElementScope=xt.EMPTY_SYSML_SCOPE=xt.SysMLScope=void 0;var br=be(),bc=D(),Bm=Wn(),Cc=Wf(),Met=an(),Gm=class{getAllExportedElements(){let e=new Set;return new br.TreeStreamImpl([e,this],([n,i])=>i.getChildScopes().map(a=>[new Set(n),a]),{includeRoot:!0}).flatMap(([n,i])=>i.getAllLocalElements(n).filter(([a])=>!n.has(a))).distinct(([n])=>n)}getAllElements(){return this.getAllExportedElements().distinct(([e,t])=>t).map(([e,t])=>t.description).nonNullable()}getExportedElement(e){let t=this.getAllScopes(!0).iterator(),n=t.next();for(;!n.done;){let i=n.value.getLocalElement(e);if(i==="prune")t.prune();else if(i&&this.isValidCandidate(i))return i;n=t.next()}}getElement(e){var t;return(t=this.getExportedElement(e))===null||t===void 0?void 0:t.description}getAllScopes(e=!0){return new br.TreeStreamImpl(this,n=>n.getChildScopes(),{includeRoot:e})}isValidCandidate(e){return!0}};xt.SysMLScope=Gm;var Jq=class extends Gm{getLocalElement(e){}getAllLocalElements(){return br.EMPTY_STREAM}getChildScopes(){return br.EMPTY_STREAM}};xt.EMPTY_SYSML_SCOPE=new Jq;var Tg=class extends Gm{constructor(e,t){super(),this.element=e,this.options=t}getChildScopes(){return br.EMPTY_STREAM}getLocalElement(e){let t=this.element.findMember(e);if(typeof t=="string"){if(t==="unresolved reference")throw t;return"prune"}if(t&&this.isVisible(t))return(0,Bm.namedMembership)(t)}getAllLocalElements(e){return(0,br.stream)(this.element.namedMembers).map(([t,n])=>{if(n==="shadow"){e.add(t);return}if(n==="unresolved reference")return;let i=(0,Bm.namedMembership)(n);if(!(!i||!this.isVisible(n)))return[t,i]}).filter(Met.NonNullable)}isVisible(e){var t;return(0,Cc.isVisibleWith)(e.visibility,this.options.inherited.visibility)&&!this.options.visited.has((t=(0,Bm.namedMembership)(e))===null||t===void 0?void 0:t.element())}isValidCandidate(e){return!this.options.visited.has(e.element())}};xt.ElementScope=Tg;var P$=class extends Tg{constructor(e,t){super(e,Object.assign({},t)),this.element=e,this.element.importsAll&&(this.options.inherited={depth:1e6,visibility:2},this.options.imported={depth:1e6,visibility:2})}getLocalElement(e){}getAllLocalElements(){return br.EMPTY_STREAM}makeRecursiveScope(e){if(!e.is(bc.Namespace))return br.EMPTY_STREAM;let t=e.ast(),n;return t?n=new br.TreeStreamImpl(t,i=>i.$children.filter(bc.isOwningMembership).map(a=>a.target).filter(bc.isNamespace),{includeRoot:!0}).map(i=>i.$meta):n=new br.TreeStreamImpl(e,i=>(0,br.stream)(i.children).filter(Bm.BasicMetamodel.is(bc.OwningMembership)).map(a=>a.element()).filter(Bm.BasicMetamodel.is(bc.Namespace)),{includeRoot:!0}),n.map(i=>F$(i,this.options))}};xt.ImportScope=P$;var E$=class extends P${constructor(e,t){super(e,Object.assign({},t)),this.element=e}getChildScopes(){var e;let t=(e=this.element.element())===null||e===void 0?void 0:e.element();return!t||!this.element.isRecursive?br.EMPTY_STREAM:this.makeRecursiveScope(t)}};xt.MembershipImportScope=E$;var O$=class extends P${constructor(e,t){super(e,Object.assign({},t)),this.element=e}getChildScopes(){let e=this.element.element();return e?this.element.isRecursive?this.makeRecursiveScope(e):(0,br.stream)([F$(e,this.options)]):br.EMPTY_STREAM}};xt.NamespaceImportScope=O$;var k$=class extends Tg{constructor(e,t){super(e,Object.assign(Object.assign({},t),{inherited:(0,Cc.decrementVisibility)(t.inherited),imported:(0,Cc.decrementVisibility)(t.imported)})),this.element=e}getChildScopes(){return this.getInheritedScopes().concat((0,br.stream)(this.element.imports).map(e=>!e.importsAll&&e.visibility>this.options.imported.visibility||e.importsNameOnly()||this.options.visited.has(e)?xt.EMPTY_SYSML_SCOPE:(this.options.visited.add(e),e.is(bc.MembershipImport)?new E$(e,this.options):new O$(e,this.options))))}getInheritedScopes(){return br.EMPTY_STREAM}};xt.NamespaceScope=k$;var Rg=class extends k${constructor(e,t){super(e,t),this.element=e}getInheritedScopes(){let e=[],t=this.options.visited,n=this.options.specializations;n.add(this.element);let i=(0,Cc.decrementVisibility)(this.options.inherited);for(let a of this.element.specializations()){let s=a.finalElement();!s||n.has(s)||(n.add(s),e.push(new Rg(s,Object.assign(Object.assign({},this.options),{inherited:i,imported:i,visited:new Set(t),specializations:new Set(n)}))))}return(0,br.stream)(e)}};xt.TypeScope=Rg;var bg=class extends Gm{constructor(e){super(),this.scopes=e}getChildScopes(){return this.scopes instanceof br.StreamImpl?this.scopes:(0,br.stream)(this.scopes)}getLocalElement(e){}getAllLocalElements(){return br.EMPTY_STREAM}};xt.ScopeStream=bg;var I$=class extends Gm{constructor(e,t){super(),this.scope=e,this.predicate=t}getAllScopes(e){return this.scope.getAllScopes(e)}getAllExportedElements(){return this.scope.getAllExportedElements().filter(([e,t])=>this.predicate(t))}getChildScopes(){return this.scope.getChildScopes()}getLocalElement(e){let t=this.scope.getLocalElement(e);return typeof t=="object"?this.predicate(t)?t:void 0:t}getAllLocalElements(e){return this.scope.getAllLocalElements(e).filter(([t,n])=>this.predicate(n))}isValidCandidate(e){return this.predicate(e)}};xt.FilteredScope=I$;var Xq,Pet={Element:Tg,Namespace:k$,NamespaceImport:O$,MembershipImport:E$,Type:Rg};function F$(r,e={}){if(!r)return xt.EMPTY_SYSML_SCOPE;let{element:t,options:n}=(0,Cc.resolveContentInputs)(r,e);if(!t)return xt.EMPTY_SYSML_SCOPE;Xq||(Xq=Bm.typeIndex.expandToDerivedTypes(Pet));let i=t.is(bc.Membership)?t.element():t;i!=null||(i=t);let a=Xq.get(i.nodeType());return a?new a(i,n):xt.EMPTY_SYSML_SCOPE}xt.makeScope=F$;var Eet=new bg(br.EMPTY_STREAM);function Oet(r,e={},t){var n;if(!r)return Eet;(n=e.visited)!==null&&n!==void 0||(e.visited=new Set);let i=br.EMPTY_STREAM,a=r.owner();if(a&&!e.skipParents){let o=(0,Cc.streamParents)(a),u=(0,Cc.fillContentOptions)(Object.assign(Object.assign({},Cc.PARENT_CONTENTS_OPTIONS),{aliasResolver:e.aliasResolver,imported:{visibility:2,depth:1},inherited:{visibility:2,depth:1}}));i=o.filter(Bm.BasicMetamodel.is(bc.Element)).map(c=>F$(c,Object.assign(Object.assign({},u),{visited:new Set,specializations:new Set})))}t&&!e.skipParents&&(r.parent()||!e.skip?i=i.concat([t]):i=i.concat([new I$(t,o=>o.element()!==e.skip)]));let s=F$(r,{aliasResolver:e.aliasResolver,visited:e.visited,imported:{visibility:2,depth:1},inherited:{visibility:2,depth:1,next:{visibility:1,depth:1e6}}});return e.skip?new bg((0,br.stream)([new I$(s,o=>o.element()!==e.skip)]).concat(i)):new bg((0,br.stream)([s]).concat(i))}xt.makeLinkingScope=Oet});var tx=p(Cg=>{"use strict";Object.defineProperty(Cg,"__esModule",{value:!0});Cg.GlobalScope=Cg.getLanguageId=void 0;var N$=be(),ket=_n(),Qq=Km(),Iet=Wn(),Fet=an(),Net=Wf();function Zq(r){return ket.Utils.extname(r).toLowerCase()}Cg.getLanguageId=Zq;function qet(r,e){var t,n;let i;return e?i=(0,N$.stream)((n=(t=r[e])===null||t===void 0?void 0:t.values())!==null&&n!==void 0?n:[]).concat((0,N$.stream)(Object.keys(r)).filter(a=>a!==e).flatMap(a=>r[a].values())):i=(0,N$.stream)(Object.values(r)).flatMap(a=>a.values()),i.map(a=>new Qq.NamespaceScope(a,{imported:{visibility:0,depth:0},inherited:{visibility:0,depth:0},visited:new Set,specializations:new Set,aliasResolver:Net.DEFAULT_ALIAS_RESOLVER}))}function Zie(r,e){var t,n;if(e){let i=(t=r.filter(a=>a.langId===e).at(-1))===null||t===void 0?void 0:t.member;if(i)return i}return(n=r.at(-1))===null||n===void 0?void 0:n.member}var ex=class extends Qq.SysMLScope{constructor(){super(...arguments),this.staticExports=new Map,this.documentStaticExports=new Map,this.dynamicExports={},this.allExports={}}getExportedElement(e,t){let n=this.getLocalElement(e,t);if(typeof n=="object")return n}getStaticExportedElement(e,t){let n=this.staticExports.get(e);if(n){let i=Zie(n,t);if(i)return i}}getDynamicExportedElement(e,t){for(let n of this.getDynamicExports(t)){let i=n.getExportedElement(e);if(i)return i}}getAllExportedElements(e){return this.getAllLocalElements(new Set,e)}getChildScopes(){return N$.EMPTY_STREAM}getLocalElement(e,t){var n;return(n=this.getStaticExportedElement(e,t))!==null&&n!==void 0?n:this.getDynamicExportedElement(e,t)}getAllLocalElements(e,t){return(0,N$.stream)(this.staticExports).map(([n,i])=>[n,Zie(i,t)]).filter(n=>Boolean(n[1])).concat(this.getDynamicExports(t).flatMap(n=>n.getAllExportedElements())).distinct(([n])=>n)}getDynamicExports(e){return qet(this.dynamicExports,e)}invalidateDocuments(e){e.forEach(t=>{var n,i,a;let s=Zq(t),o=t.toString();(n=this.dynamicExports[s])===null||n===void 0||n.delete(o),(i=this.allExports[s])===null||i===void 0||i.delete(o),(a=this.documentStaticExports.get(o))===null||a===void 0||a.forEach(([u,c])=>{let f=this.staticExports.get(u);f&&(0,Fet.erase)(f,c)}),this.documentStaticExports.delete(o)})}collectDocument(e){let t=e.parseResult.value.$meta,n=Zq(e.uri),i=[];for(let[s,o]of t.namedMembers){if(typeof o!="object"||o.visibility!==0)continue;let u=(0,Iet.namedMembership)(o);u&&i.push([s,{langId:n,member:u}])}this.documentStaticExports.set(e.uriString,i),i.forEach(([s,o])=>{let u=this.staticExports.get(s);u||(u=[],this.staticExports.set(s,u)),u.push(o)});let a=s=>{var o;((o=s[n])!==null&&o!==void 0?o:s[n]=new Map).set(e.uriString,t)};a(this.allExports),(t.imports.some(s=>s.visibility===0)||t.featureMembers().some(s=>{if(s.visibility!==0)return!1;let o=s.element();return o?!o.name&&!o.shortName:!1}))&&a(this.dynamicExports)}wrapForLang(e){class t extends Qq.SysMLScope{constructor(i,a){super(),this.scope=i,this.langId=a}getChildScopes(){return this.scope.getChildScopes()}getLocalElement(i){return this.scope.getLocalElement(i,this.langId)}getAllLocalElements(i){return this.scope.getAllLocalElements(i,this.langId)}getExportedElement(i){return this.scope.getExportedElement(i,this.langId)}getAllExportedElements(){return this.scope.getAllExportedElements(this.langId)}}return new t(this,e)}};Cg.GlobalScope=ex});var sae=p(Li=>{"use strict";var xet=Li&&Li.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(Li,"__esModule",{value:!0});Li.printIgnored=Li.print=Li.printDoc=Li.formatDoc=Li.collect=void 0;var Let=xet(require("assert")),Nr=lw(),q$=Symbol("cursor");function jet(r,e){return e.kind==="dedent"?r.queue.slice(0,-1):[...r.queue,e]}function rx(r,e,t){let n=jet(r,e),i=0,a=[];return n.forEach(s=>{let o=s.kind;if(o==="indent"){i+=t.tabWidth,a.push(t.useSpaces?" ".repeat(t.tabWidth):"	");return}else if(typeof o=="number"){(0,Let.default)(o>=0),i+=o,t.useSpaces?a.push(" ".repeat(o)):a.push("	".repeat(Math.floor(o/t.tabWidth))+" ".repeat(o%t.tabWidth));return}else typeof o=="object"&&(i+=o.width,a.push(o.contents))}),{length:i,value:(0,Nr.text)(a.join("")),queue:n,kind:e.kind,root:r.root}}function eae(r,e){return rx(r,{kind:"indent",length:0,queue:[],value:Nr.literals.emptytext},e)}function nx(r){if(r.length===0)return 0;let e=0,t=0,n=r.length;return(()=>{for(;n--;){let a=r[n];if(a===q$){t++;continue}for(let s=a.contents.length-1;s>=0;s--){let o=a.contents[s];if(o===" "||o==="	"){e++;continue}r[n]=(0,Nr.text)(a.contents.slice(0,s+1),{type:a.type,modifiers:a.modifiers});return}}})(),(e>0||t>0)&&(r.length=n+1,r.push(...Array(t).fill(q$))),e}function tae(r,e,t){var n;if(typeof e=="number"){if(e===Number.NEGATIVE_INFINITY)return(n=r.root)!==null&&n!==void 0?n:rae();if(e===0)return r;if(e<0)return rx(r,{kind:"dedent",length:0,queue:[],value:Nr.literals.emptytext},t)}return rx(r,{kind:e,length:0,queue:[],value:Nr.literals.emptytext},t)}function rae(){return{kind:0,value:Nr.literals.emptytext,length:0,queue:[]}}var Uet={text([r,e,t],n,i,a){a.width-=t.width,i.push(t)},array([r,e,t],n){n.push(...t.slice().reverse().map(i=>[r,e,i]))},fill([r,e,t],n){n.push(...t.parts.slice().reverse().map(i=>[r,e,i]))},label([r,e,t],n){n.push([r,e,t.contents])},indent([r,e,t],n,i,a){n.push([eae(r,a.config),e,t.contents])},["indent-if-break"]([r,e,t],n){n.push([r,e,t.contents])},align([r,e,t],n,i,a){n.push([tae(r,t.prefix,a.config),e,t.contents])},group([r,e,t],n,i,a){if(a.mustBeFlat&&t.break)return!1;let s=t.break?"break":e,o=t.expandedStates&&t.expandedStates.length>0&&s==="break"?t.expandedStates[t.expandedStates.length-1]:t.contents;n.push([r,s,o])},cursor(){},root([r,e,t],n){n.push([Object.assign(Object.assign({},r),{root:r}),e,t.contents])},["if-break"]([r,e,t],n,i,a){let o=(t.groupId?a.groupModeMap.get(t.groupId)||"flat":e)==="break"?t.onBreak:t.onFlat;o&&n.push([r,e,o])},["line-suffix"](r,e,t,n){n.hasLineSuffix=!0},["line-suffix-boundary"](r,e,t,n){if(n.hasLineSuffix)return!1},trim(r,e,t,n){n.width+=nx(t)},line([r,e,t],n,i,a){if(e==="break"||t.mode==="hard"||t.mode==="hard-literal")return!0;t.mode!=="soft"&&(i.push(Nr.literals.space),a.width--)},["break-parent"](){}};function Bw(r,e,t){if(t.width===Number.POSITIVE_INFINITY)return!0;let n=e.length,i=[r],a=[];for(;t.width>=0;){if(i.length===0){if(n===0)return!0;i.push(e[--n]);continue}let s=i.pop(),o=(0,Nr.getDocKind)(s[2]),u=Uet[o](s,i,a,t);if(typeof u=="boolean")return u}return!1}function nae(r,e){let t=[],n=[],i=[],a=0;r.forEach(o=>{o===q$?i.push(a):(t.push(o.contents),e&&o.type&&n.push({start:a,end:a+o.contents.length,type:o.type,modifiers:o.modifiers}),a+=o.contents.length)});let s={text:t.join(""),cursors:i};return e&&(s.highlighting=n),s}Li.collect=nae;var Bet={text(r,e,t,n){n.out.push(t),n.position+=t.width},array(r,e,t,n){n.stack.push(...t.slice().reverse().map(i=>[r,e,i]))},indent(r,e,t,n){let i=eae(r,n.config);n.stack.push([i,e,t.contents])},align(r,e,t,n){let i=tae(r,t.prefix,n.config);n.stack.push([i,e,t.contents])},trim(r,e,t,n){n.position-=nx(n.out)},cursor(r,e,t,n){n.out.push(q$)},group(r,e,t,n){var i;(()=>{if(e==="flat"&&!n.shouldRemeasure){n.stack.push([r,t.break?"break":"flat",t.contents]);return}n.shouldRemeasure=!1;let s=[r,"flat",t.contents],o=n.config.lineWidth-n.position,u=n.lineSuffixes.length>0;if(!t.break&&Bw(s,n.stack,{config:n.config,groupModeMap:n.groupModeMap,hasLineSuffix:u,width:o}))n.stack.push(s);else if(t.expandedStates&&t.expandedStates.length>0){let c=t.expandedStates.at(-1);if(t.break){n.stack.push([r,"break",c]);return}for(let f=1;f<t.expandedStates.length+1;f++){if(f>=t.expandedStates.length){n.stack.push([r,"break",c]);return}let d=t.expandedStates[f],m=[r,"flat",d];if(Bw(m,n.stack,{width:o,hasLineSuffix:u,groupModeMap:n.groupModeMap,config:n.config})){n.stack.push(m);return}}}else n.stack.push([r,"break",t.contents])})(),t.id&&n.groupModeMap.set(t.id,(i=n.stack.at(-1))===null||i===void 0?void 0:i[1])},fill(r,e,t,n){let i=t.parts;if(i.length===0)return;let a=n.config.lineWidth-n.position,s=i[0],o=[r,"flat",s],u=[r,"break",s],c=Bw(o,[],{width:a,config:n.config,groupModeMap:n.groupModeMap,hasLineSuffix:n.lineSuffixes.length>0,mustBeFlat:!0});if(i.length===1){n.stack.push(c?o:u);return}let f=i[1],d=[r,"flat",f],m=[r,"break",f];if(i.length===2){c?n.stack.push(d,o):n.stack.push(m,u);return}i=i.slice(2);let h=[r,e,(0,Nr.fill)(i)],y=i[0];Bw([r,"flat",[s,f,y]],[],{width:a,config:n.config,groupModeMap:n.groupModeMap,hasLineSuffix:n.lineSuffixes.length>0,mustBeFlat:!0})?n.stack.push(h,d,o):n.stack.push(h,m,c?o:u)},"line-suffix"(r,e,t,n){n.lineSuffixes.push([r,e,t.contents])},"line-suffix-boundary"(r,e,t,n){n.lineSuffixes.length>0&&n.stack.push([r,e,Nr.hardlineWithoutBreakParent])},line(r,e,t,n){if(e==="flat"){if(t.mode==="auto"){n.out.push((0,Nr.text)(" ")),n.position++;return}if(t.mode==="soft")return;n.shouldRemeasure=!0}if(n.lineSuffixes.length>0){n.stack.push([r,e,t],...n.lineSuffixes.reverse()),n.lineSuffixes.length=0;return}if(t.mode==="hard-literal"){r.root?(n.out.push(n.lineEnd,r.root.value),n.position=r.root.length):(n.out.push(n.lineEnd),n.position=0);return}n.position-=nx(n.out),n.out.push(n.lineEnd),n.position=0,r.length>0&&(n.out.push(r.value),n.position=r.length)},label(r,e,t,n){n.stack.push([r,e,t.contents])},"break-parent"(){},"if-break"(r,e,t,n){var i;let a=(i=t.groupId?n.groupModeMap.get(t.groupId):e)!==null&&i!==void 0?i:e;n.stack.push([r,e,a==="flat"?t.onFlat:t.onBreak])},"indent-if-break"(r,e,t,n){var i;let a=(i=t.groupId?n.groupModeMap.get(t.groupId):e)!==null&&i!==void 0?i:e;n.stack.push([r,e,a==="flat"?t.negate?(0,Nr.indent)(t.contents):t.contents:t.negate?t.contents:(0,Nr.indent)(t.contents)])},root(r,e,t,n){n.stack.push([Object.assign(Object.assign({},r),{root:r}),e,t.contents])}};function Get(r){let e=new Set,t=[],n=()=>{let i=t.at(-1);i&&!i.expandedStates&&!i.break&&(i.break="propagated")};(0,Nr.visitDoc)(r,{traverseOptionalGroups:!0,enter(i){let a=i;if(a.kind==="break-parent")n();else if(a.kind==="group"){if(t.push(a),e.has(a))return!1;e.add(a)}return!0},exit(i){var a;i.kind==="group"&&(!((a=t.pop())===null||a===void 0)&&a.break)&&n()}})}function iae(r,e){let t={position:0,shouldRemeasure:!1,out:[],lineSuffixes:[],groupModeMap:new Map,stack:[[rae(),"break",r]],lineEnd:(0,Nr.text)(e.lineEnd),config:e};for(Get(r);t.stack.length>0;){let[i,a,s]=t.stack.pop(),o=(0,Nr.getDocKind)(s);Bet[o](i,a,s,t),t.stack.length===0&&t.lineSuffixes.length>0&&(t.stack.push(...t.lineSuffixes.reverse()),t.lineSuffixes.length=0)}let n=t.out.findLast(i=>i!==q$);return t.config.addFinalNewline&&(!n||!n.contents.endsWith(e.lineEnd))&&t.out.push((0,Nr.text)(t.config.lineEnd)),t.out}Li.formatDoc=iae;function aae(r,e=Nr.DefaultPrinterConfig){let t=iae(r,e);return nae(t,e.highlighting===!0)}Li.printDoc=aae;function Ket(r,e){return aae(r,Object.assign(Object.assign({},Nr.DefaultPrinterConfig),e)).text}Li.print=Ket;function Het(r,e,t,n){let{offset:i,end:a}=e;return t.forEach(s=>{if(!s.segment)return;let{offset:o,end:u}=s.segment;o>=i&&u<=a&&n.add(s)}),(0,Nr.join)(Nr.literalline,r.slice(i,a).split(/\r?\n/).map(s=>(0,Nr.text)(s)))}Li.printIgnored=Het});var lae=p(Ac=>{"use strict";var Vet=Ac&&Ac.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),oae=Ac&&Ac.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Vet(e,r,t)};Object.defineProperty(Ac,"__esModule",{value:!0});oae(lw(),Ac);oae(sae(),Ac)});var Ae=p(ri=>{"use strict";var Wet=ri&&ri.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Tl=ri&&ri.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Wet(e,r,t)};Object.defineProperty(ri,"__esModule",{value:!0});Tl(Yq(),ri);Tl($g(),ri);Tl(Qie(),ri);Tl(an(),ri);Tl(Mo(),ri);Tl(y$(),ri);Tl(tx(),ri);Tl(lae(),ri);Tl(Wf(),ri);Tl(Km(),ri)});var fae=p(ni=>{"use strict";var zet=ni&&ni.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Yet=ni&&ni.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Xet=ni&&ni.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&zet(e,r,t);return Yet(e,r),e},ix=ni&&ni.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})},Jet=ni&&ni.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(ni,"__esModule",{value:!0});ni.SysMLNodeFileSystem=ni.SysMLNodeFileSystemProvider=void 0;var Qet=dX(),uae=Jet(require("fs")),cae=Wk(),Zet=Ae(),Gw=class extends Qet.NodeFileSystemProvider{get standardLibrary(){return this.stdlib}get extensionDir(){var e;if(this._extensionDir===void 0){let t=(0,Zet.backtrackToDirname)(__dirname,/out|src/);this._extensionDir=t?(0,cae.pathToURI)(t):null}return(e=this._extensionDir)!==null&&e!==void 0?e:void 0}updateStandardLibrary(e){this.stdlib=e?(0,cae.resolvePathURI)(e):void 0}exists(e){return ix(this,void 0,void 0,function*(){return uae.default.promises.stat(e.fsPath).then(()=>!0,()=>!1)})}existsSync(e){return uae.default.existsSync(e.fsPath)}loadScript(e){return ix(this,void 0,void 0,function*(){return Promise.resolve(`${e.fsPath}`).then(t=>Xet(require(t)))})}preloadFiles(){return ix(this,void 0,void 0,function*(){})}};ni.SysMLNodeFileSystemProvider=Gw;ni.SysMLNodeFileSystem={fileSystemProvider:()=>new Gw}});var pae=p(Dn=>{"use strict";Object.defineProperty(Dn,"__esModule",{value:!0});Dn.SysMLGeneratedModule=Dn.KerMLGeneratedModule=Dn.SysMlGeneratedSharedModule=Dn.parserConfig=Dn.SysMLLanguageMetaData=Dn.KerMLLanguageMetaData=void 0;var ett=D(),dae=hq();Dn.KerMLLanguageMetaData={languageId:"kerml",fileExtensions:[".kerml"],caseInsensitive:!1};Dn.SysMLLanguageMetaData={languageId:"sysml",fileExtensions:[".sysml"],caseInsensitive:!1};Dn.parserConfig={recoveryEnabled:!0,nodeLocationTracking:"none"};Dn.SysMlGeneratedSharedModule={AstReflection:()=>new ett.SysMlAstReflection};Dn.KerMLGeneratedModule={Grammar:()=>(0,dae.KerMLGrammar)(),LanguageMetaData:()=>Dn.KerMLLanguageMetaData,parser:{ParserConfig:()=>Dn.parserConfig}};Dn.SysMLGeneratedModule={Grammar:()=>(0,dae.SysMLGrammar)(),LanguageMetaData:()=>Dn.SysMLLanguageMetaData,parser:{ParserConfig:()=>Dn.parserConfig}}});var Ag=p(ji=>{"use strict";var ttt=ji&&ji.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(ji,"__esModule",{value:!0});ji.BaseValidationRegistry=ji.validateSysML=ji.validateKerML=ji.ValidationRules=void 0;var ax=be(),rtt=Pe(),ntt=Wn();ji.ValidationRules={kerml:{},sysml:{}};function mae(r,e=!0,t=!0,n=[]){let i=(a,s,o)=>{var u,c;(c=(u=a[r])!==null&&u!==void 0?u:a[r]=[])===null||c===void 0||c.push({rule:s,bounds:o})};return function(a,s,o){let u=o.value;u&&(e&&i(ji.ValidationRules.kerml,u,n),t&&i(ji.ValidationRules.sysml,u,n))}}function itt(r,e={}){var t,n;return mae(r,!0,(t=e.sysml)!==null&&t!==void 0?t:!0,(n=e.bounds)!==null&&n!==void 0?n:[])}ji.validateKerML=itt;function att(r,e=[]){return mae(r,!1,!0,e)}ji.validateSysML=att;var sx=class extends ax.ValidationRegistry{constructor(){super(...arguments),this.checks=new ax.MultiMap}registerBoundRules(e,t){for(let[n,i]of Object.entries(e))for(let a of i)this.registerModelValidationRule(n,a.rule,t,a.bounds)}registerValidationRule(e,t,n=this,i=[]){return this.registerModelValidationRule(e,this.convertToModelCheck(t),n,i)}registerModelValidationRule(e,t,n=this,i=[]){let a=[e].concat(Array.from(ntt.typeIndex.getSubtypes(e)).filter(o=>!i.some(u=>this.astReflection.isSubtype(o,u)))),s=this.wrapModelValidationException(t,n);return a.forEach(o=>{this.checks.add(o,s)}),rtt.Disposable.create(()=>{a.forEach(o=>this.checks.delete(o,s))})}doRegister(e,t){let n=this.convertToModelCheck(t);this.checks.add(e,n);for(let i of this.astReflection.getSubtypes(e))this.checks.add(i,n)}get astReflection(){return this.reflection}convertToModelCheck(e){return(t,n,i)=>{let a=t.ast(),s=(o,u,c)=>{n(o,u,Object.assign({element:c.node.$meta},this.getSharedInfo(c)))};if(a)return e(a,s,i)}}wrapModelValidationException(e,t){return(n,i,a)=>ttt(this,void 0,void 0,function*(){try{yield e.call(t,n,i,a)}catch(s){if((0,ax.isOperationCancelled)(s))throw s;console.error("An error occurred during validation:",s);let o=s instanceof Error?s.message:String(s);s instanceof Error&&s.stack&&console.error(s.stack),i("error","An error occurred during validation: "+o,{element:n})}})}getChecks(e){return this.getModelChecks(e).map(t=>(n,i,a)=>t(n.$meta,(s,o,u)=>{let c=u.element.ast();c&&i(s,o,Object.assign({node:c},this.getSharedInfo(u)))},a))}getModelChecks(e){return this.checks.get(e)}getSharedInfo(e){return{code:e.code,codeDescription:e.codeDescription,data:e.data,index:e.index,keyword:e.keyword,property:e.property,range:e.range,relatedInformation:e.relatedInformation,tags:e.tags}}};ji.BaseValidationRegistry=sx});var lx=p(Kw=>{"use strict";Object.defineProperty(Kw,"__esModule",{value:!0});Kw.SysMLValidationRegistry=void 0;var yae=Ag(),ox=class extends yae.BaseValidationRegistry{constructor(e){super(e);let t=e.validation.SysMLValidator;this.registerBoundRules(yae.ValidationRules.sysml,t)}};Kw.SysMLValidationRegistry=ox});var fx=p(Dg=>{"use strict";var ux=Dg&&Dg.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Dg,"__esModule",{value:!0});Dg.SysMLScopeComputation=void 0;var x$=be(),hae=Pe(),wg=D(),cx=class extends x$.DefaultScopeComputation{constructor(e){super(e),this.descriptions=e.workspace.AstNodeDescriptionProvider}computeExports(e,t=hae.CancellationToken.None){var n;return ux(this,void 0,void 0,function*(){let i=[this.descriptions.createDescription(e.parseResult.value,"",e)];for(let a of e.parseResult.value.$children)yield(0,x$.interruptAndCheck)(t),(0,wg.isMembership)(a)&&i.push(this.createDescription((n=a.target)!==null&&n!==void 0?n:a,e));return i})}computeLocalScopes(e,t=hae.CancellationToken.None){return ux(this,void 0,void 0,function*(){let n=e.parseResult.value,i=new x$.MultiMap;return yield this.processContainer(n,i,e,!1,t),i})}processContainer(e,t,n,i,a){return ux(this,void 0,void 0,function*(){let s=[];i||(i=(0,wg.isLibraryPackage)(e)&&e.isStandard);let o=e.$meta;o&&(o.isStandardElement=i);for(let u of e.$children){yield(0,x$.interruptAndCheck)(a);let c=yield this.processContainer(u,t,n,i,a),f=this.additionalExports(u,c);f&&s.push(...f),(0,wg.isElement)(u)&&(this.createDescription(u,n),u.$meta.is(wg.Membership)&&s.push(u.$meta))}if(t.addAll(e,(0,x$.stream)(s).map(u=>{var c;return(c=u.element())===null||c===void 0?void 0:c.description}).nonNullable()),(0,wg.isElement)(e)){let u=e.$meta;for(let c of s)u.addLookupMember(c)}return s})}createDescription(e,t){var n,i;let a=this.descriptions.createDescription(e,(i=(n=e.$meta.name)!==null&&n!==void 0?n:e.$meta.shortName)!==null&&i!==void 0?i:`${e.$meta.elementId}`,t);return e.$meta._description=a,a}additionalExports(e,t){if((0,wg.isTransparentElement)(e))return t}};Dg.SysMLScopeComputation=cx});var mx=p(Hw=>{"use strict";Object.defineProperty(Hw,"__esModule",{value:!0});Hw.SysMLNameProvider=void 0;var dx=be(),stt=D(),ott=kf(),px=class extends dx.DefaultNameProvider{getName(e){if((0,stt.isElement)(e))return(0,ott.getName)(e.$meta)}getNameNode(e){var t;return(t=(0,dx.findNodeForProperty)(e.$cstNode,"declaredName"))!==null&&t!==void 0?t:(0,dx.findNodeForProperty)(e.$cstNode,"declaredShortName")}};Hw.SysMLNameProvider=px});var gx=p(wc=>{"use strict";var Sg=wc&&wc.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})},ltt=wc&&wc.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(wc,"__esModule",{value:!0});wc.SysMLDocumentBuilder=void 0;var Ui=be(),utt=Pe(),yx=an(),gae=ltt(I_()),hx=class extends Ui.DefaultDocumentBuilder{constructor(e){super(e),this.openDocuments=new Map,this.documentPhaseListeners={[Ui.DocumentState.Changed]:[],[Ui.DocumentState.Parsed]:[],[Ui.DocumentState.IndexedContent]:[],[Ui.DocumentState.ComputedScopes]:[],[Ui.DocumentState.Linked]:[],[Ui.DocumentState.IndexedReferences]:[],[Ui.DocumentState.Validated]:[]},this.statistics=e.statistics,this.config=e.workspace.ConfigurationProvider,this.indexManager=e.workspace.IndexManager;let t=e.workspace.MetamodelBuilder;this.onBuildPhase(Ui.DocumentState.Parsed,n=>Sg(this,void 0,void 0,function*(){n.forEach(i=>t.onChanged(i))})),e.workspace.TextDocuments.onDidOpen(n=>{this.openDocuments.set(n.document.uri,(0,gae.default)())}),e.workspace.TextDocuments.onDidClose(n=>{this.openDocuments.delete(n.document.uri)})}buildDocuments(e,t,n){return Sg(this,void 0,void 0,function*(){if(e.length!==0)try{e.forEach(i=>i.progress=1),yield this.buildDocumentsImpl(e,t,n),e.forEach(i=>i.progress=2)}catch(i){throw e.forEach(a=>a.progress=3),i}})}buildDocumentsImpl(e,t,n){let i=Object.create(null,{buildDocuments:{get:()=>super.buildDocuments}});return Sg(this,void 0,void 0,function*(){this.statistics.reset(),t=(0,yx.mergeWithPartial)(this.config.get().defaultBuildOptions,t),e.forEach(a=>{a.buildOptions=t,a.modelDiagnostics.clear()}),this.config.get().logStatistics&&console.log(`Building documents:${e.map(a=>`
	${a.uri.toString()} [${Ui.DocumentState[a.state]}]`).join()}`),yield i.buildDocuments.call(this,e,t,n),this.reportStats()})}reportStats(){if(!this.config.get().logStatistics||this.statistics.isEmpty())return;let e=Object.entries(this.statistics.dump()),t=e.map(([i,[a,s]])=>`
	${i}: ${a.toFixed(3)} ms in ${s} hits (avg: ${(a/s).toFixed(3)} ms)`),n=e.reduce((i,[a,[s,o]])=>i+s,0);console.log(`Build statistics ${n.toFixed(3)} ms:${t}`)}runCancelable(e,t,n,i){let a=Object.create(null,{runCancelable:{get:()=>super.runCancelable}});return Sg(this,void 0,void 0,function*(){let s=new yx.Timer;if(yield a.runCancelable.call(this,e,t,n,o=>Sg(this,void 0,void 0,function*(){yield i(o),this.notifyEarlyBuildPhase(o,t)})),!!this.config.get().logStatistics&&(console.log(`${n.isCancellationRequested?"Canceled":"Completed"} ${Ui.DocumentState[t]} in ${s.elapsed().toFixed(3)} ms`),t===Ui.DocumentState.Parsed)){let o=e.filter(f=>f.state===Ui.DocumentState.Parsed),u=o.reduce((f,d)=>f+d.textDocument.getText().length,0),c=o.reduce((f,d)=>f+d.parseDuration,0);console.log("   Average parse speed:",(u/c).toFixed(0),"bytes/ms")}})}notifyEarlyBuildPhase(e,t){for(let n of this.documentPhaseListeners[t])n(e)}update(e,t,n){let i=Object.create(null,{update:{get:()=>super.update}});return Sg(this,void 0,void 0,function*(){if(e=e.filter(a=>{if(!this.langiumDocuments.hasDocument(a))return!0;let s=this.openDocuments.get(a.toString());return!s||(0,gae.default)()-s>10?!0:this.langiumDocuments.getOrCreateDocument(a).state<Ui.DocumentState.Validated}),!(e.length===0&&t.length===0))return this.indexManager.invalidate(e.concat(t)),i.update.call(this,e,t,n)})}onDocumentPhase(e,t){return this.documentPhaseListeners[e].push(t),utt.Disposable.create(()=>{(0,yx.erase)(this.documentPhaseListeners[e],t)})}};wc.SysMLDocumentBuilder=hx});var _x=p(Sc=>{"use strict";var j$=Sc&&Sc.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},ctt=Sc&&Sc.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Sc,"__esModule",{value:!0});Sc.SysMLLinker=void 0;var L$=be(),vx=Pe(),qr=D(),ftt=So(),dtt=kf(),ptt=Wf(),mtt=$g(),ytt=Ae(),vae={};function U$(r){return function(e,t,n){vae[r]=n.value}}var Dc=class extends L$.DefaultLinker{constructor(e){super(e),this.visitedAliases=new Set,this.scopeProvider=e.references.ScopeProvider,this.referenceProvider=e.workspace.ReferenceDescriptionProvider,this.indexManager=e.shared.workspace.IndexManager,this.metamodelBuilder=e.shared.workspace.MetamodelBuilder,this.config=e.shared.workspace.ConfigurationProvider,this.linkFunctions=ftt.typeIndex.expandToDerivedTypes(vae)}link(e,t=vx.CancellationToken.None){return ctt(this,void 0,void 0,function*(){yield this.metamodelBuilder.preLink(void 0,e,t);for(let n of e.astNodes)yield(0,L$.interruptAndCheck)(t),this.linkNode(n,e);e.state=L$.DocumentState.Linked})}linkNode(e,t){let n=this.linkFunctions.get(e.$type);return n==null?void 0:n.call(this,e,t)}resolveImports(e,t){if(!e.imports)return;let n=-1;for(let i of e.imports){++n;let a=i.ast();if(!a)continue;let s=this.linkNode(a,t);if(!s)continue;let o=a.targetRef;(i.isRecursive||i.is(qr.NamespaceImport))&&((s.is(qr.Membership)?s.element():s)||t.modelDiagnostics.add(i,{severity:"error",message:`Could not find Namespace referenced by ${o==null?void 0:o.$meta.text}`,element:i,info:{property:"targetRef",index:n}}))}}setLinkerError(e,t){var n;let i=e,a={message:t,reference:e,container:e.ref.$container,property:(n=e.ref.$containerProperty)!==null&&n!==void 0?n:""};i._ref=a}linkReference(e,t){let n=e.$meta.to;if(n.cached)return n.target;let i=0;for(let a of e.parts)if(this.doLink({reference:a,container:e,property:"parts",index:i},t),++i,!a.ref)return;return n.target}linkFeatureReferenceExpression(e,t){return this.linkNode(e.expression,t)}linkMetadataAccessExpression(e,t){let n=this.linkReference(e.reference,t);return n&&(e.$meta.reference=n),n}linkRelationship(e,t){var n;if(!e.targetRef)return(n=e.target)===null||n===void 0?void 0:n.$meta;let i=this.linkReference(e.targetRef,t);return e.$meta.setElement(i),i}linkMembership(e,t){let n=e.$meta;if(n.element()||this.visitedAliases.has(n))return n.element();let i=this.visitedAliases.size===0;this.visitedAliases.add(n);let a=this.linkRelationship(e,t);return i&&this.visitedAliases.clear(),a}getCandidateImp(e){var t,n,i,a;let s=e.container.$meta,o=(t=e.index)!==null&&t!==void 0?t:0,u=this.scopeProvider.getElementReferenceScope(s,o,this.getAliasResolver());if(!u)return this.createLinkingError(e);let c=(0,dtt.sanitizeName)(e.reference.$refText),f=u.getElement(c);if(!f)return this.createLinkingError(e);let d=this.reflection.getReferenceType(e),m=f.type,h,y=this.loadAstNode(f);return f.type===qr.Membership&&d!==qr.Membership?y&&(h=this.linkMembership(y,y.$meta.document)):h=y==null?void 0:y.$meta,s.found[o]=h,d!==qr.Membership&&h!=null&&h.is(qr.Membership)&&(h=h.element()),d===qr.ConjugatedPortDefinition&&h!=null&&h.is(qr.PortDefinition)&&(h=(n=h.conjugatedDefinition)===null||n===void 0?void 0:n.element()),h&&(f=(i=h.description)!==null&&i!==void 0?i:f),m=(a=h==null?void 0:h.nodeType())!==null&&a!==void 0?a:m,this.reflection.isSubtype(m,d)?f:this.createLinkingError(e,void 0,{found:h,type:m})}getCandidate(e){try{return this.getCandidateImp(e)}catch(t){if(t==="unresolved reference")return Object.assign(Object.assign({},e),{message:`Found an unresolved reference with name '${e.reference.$refText}`});if(t instanceof Error){let n=Object.assign(Object.assign({},e),{message:`An error occurred while resolving reference to '${e.reference.$refText}': ${t}`});return this.config.get().debug.stacktraceInLinkingErrors&&(n.message+=`
${t.stack}`),n}throw t}}createLinkingError(e,t,n={}){var i;let a=super.createLinkingError(e,t);n.type&&(a.message=a.message.slice(0,-1)+`, instead found ${n.type}`),n.found&&(a.message+=` (${n.found.qualifiedName})`),(n.found||n.type)&&(a.message+=".");let s=this.config.get().debug.scopeInLinkingErrors;if(!s||s==="none")return a;if(s==="types"){let u=e.index===0?(i=this.scopeProvider.getContext(e.container.$meta))!==null&&i!==void 0?i:e.container.$meta.owner():e.container.$meta.found[e.index-1];return!u||u==="error"||(u.is(qr.Type)?a.message+=`
	MRO: [${u.allTypes(void 0,!0).map(c=>`${c.qualifiedName} [${c.setupState}]`).join(`,
	      `)}].`:a.message+=`
	NS:  [${(0,ptt.streamParents)(u).map(c=>c.qualifiedName).join(`,
	      `)}].`),a}let o=this.scopeProvider.getElementReferenceScope(e.container.$meta,e.index,this.getAliasResolver());if(o){let u=o.getAllElements().map(c=>`${c.name} [${c.node.$meta.qualifiedName}]`);a.message+=`
Scope:
[
	${u.toArray().join(`,
	`)}
]`}else a.message+=" No scope found!";return a}doLink(e,t){var n;super.doLink(e,t);let i=e.container,a=e.index,s=(n=e.reference.ref)===null||n===void 0?void 0:n.$meta;if(a===i.parts.length-1){if(s!=null&&s.is(qr.Membership)&&i.$type!==qr.MembershipReference){let o=s.ast();s=o?this.linkMembership(o,s.document):(0,mtt.followAlias)(s)}i.$type!==qr.MembershipReference&&(s!=null&&s.is(qr.Membership))&&(s=s.element()),i.$meta.to.set(s),s&&this.metamodelBuilder.onLinkedReference(i,e,t)}else s&&this.metamodelBuilder.onLinkedPart(e,t)}getAliasResolver(){return e=>{let t=e.ast(),n=e.element();return!t||n||this.visitedAliases.has(e)?n:this.linkMembership(t,e.document)}}getLinkedNode(e){var t,n;let i=e.container.$meta?e.container:(t=e.reference.$refNode)===null||t===void 0?void 0:t.element;if(i){let a=i.$meta.document;if(a)return this.metamodelBuilder.preLink(i.$container,a,vx.CancellationToken.None),this.linkReference(i,a),{node:(n=e.reference.$nodeDescription)===null||n===void 0?void 0:n.node,descr:e.reference.$nodeDescription,error:e.reference.error};let s=i.parts.indexOf(e.reference);s>=0&&(e.index=s)}return super.getLinkedNode(e)}buildReference(e,t,n,i){let a=this,s={$refNode:n,$refText:i,get ref(){if((0,qr.isElement)(this._ref))return this._ref;if((0,L$.isAstNodeDescription)(this._nodeDescription)){let o=a.loadAstNode(this._nodeDescription);this._ref=o!=null?o:a.createLinkingError({reference:s,container:e,property:t,index:e.parts.indexOf(s)},this._nodeDescription)}else if(this._ref===void 0)return;return(0,qr.isElement)(this._ref)?this._ref:void 0},get $nodeDescription(){return this._nodeDescription},get error(){return(0,L$.isLinkingError)(this._ref)?this._ref:void 0}};return s}unlink(e){e.astNodes.forEach(t=>{var n;if(t.$meta&&(0,ytt.clearArtifacts)(t.$meta),!(0,qr.isElement)(t))return;let i=(n=e.precomputedScopes)===null||n===void 0?void 0:n.get(t);i==null||i.forEach(a=>{var s;let o=(s=a.node)===null||s===void 0?void 0:s.$meta;o!=null&&o.is(qr.Membership)&&t.$meta._memberLookup.set(a.name,o)})}),super.unlink(e)}loadAstNode(e){let t=super.loadAstNode(e);return t&&!e.node&&this.metamodelBuilder.preLink(t,this.langiumDocuments().getOrCreateDocument(e.documentUri),vx.CancellationToken.None),t}};Sc.SysMLLinker=Dc;j$([U$(qr.ElementReference)],Dc.prototype,"linkReference",null);j$([U$(qr.FeatureReferenceExpression)],Dc.prototype,"linkFeatureReferenceExpression",null);j$([U$(qr.MetadataAccessExpression)],Dc.prototype,"linkMetadataAccessExpression",null);j$([U$(qr.Relationship)],Dc.prototype,"linkRelationship",null);j$([U$(qr.Membership)],Dc.prototype,"linkMembership",null)});var Tx=p(Mg=>{"use strict";var htt=Mg&&Mg.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Mg,"__esModule",{value:!0});Mg.SysMLIndexManager=void 0;var Vw=be(),gtt=Pe(),_ae=D(),vtt=Wn(),$ae=tx(),_tt=Km(),$x=class extends Vw.DefaultIndexManager{constructor(){super(...arguments),this.globalElementsCache=new Map,this.simpleIndex=new Map,this.globalScopeCache=new Map,this.modelDependencies=new Map,this.globalScope=new $ae.GlobalScope}allElements(e=""){if(e.length===0)return this.globalScope.getAllElements();let t=this.globalScopeCache.get(e);if(t)return(0,Vw.stream)(t);{let n=Array.from(this.globalScope.getAllElements().filter(i=>this.astReflection.isSubtype(i.type,e)));return this.globalScopeCache.set(e,n),(0,Vw.stream)(n)}}updateContent(e,t=gtt.CancellationToken.None){var n,i;return htt(this,void 0,void 0,function*(){let a=e.uriString;!((n=e.buildOptions)===null||n===void 0)&&n.standalone||(this.globalScopeCache.clear(),this.globalElementsCache.clear()),this.modelDependencies.delete(a),e.namedElements.clear();let o=yield this.serviceRegistry.getServices(e.uri).references.ScopeComputation.computeExports(e,t);e.exports.clear(),o.forEach(u=>{u.node&&e.exports.set(u.name,u.node.$meta)}),!((i=e.buildOptions)===null||i===void 0)&&i.standalone||(this.simpleIndex.set(a,o),this.globalScope.collectDocument(e)),e.state=Vw.DocumentState.IndexedContent})}getGlobalScope(e){var t;return!((t=e==null?void 0:e.buildOptions)===null||t===void 0)&&t.standalone?(0,_tt.makeScope)(e.parseResult.value.$meta):e?this.globalScope.wrapForLang((0,$ae.getLanguageId)(e.uri)):this.globalScope}findGlobalElement(e,t,n=!1){var i,a,s,o;let u=((i=t==null?void 0:t.buildOptions)===null||i===void 0?void 0:i.standardLibrary)==="local"||((a=t==null?void 0:t.buildOptions)===null||a===void 0?void 0:a.standalone),c=t==null?void 0:t.uriString,f=u&&c?t.namedElements:this.globalElementsCache,d=f.get(e);if(d!==void 0)return d!=null?d:void 0;let m=e.split("::").map(y=>(0,vtt.sanitizeName)(y)),h=m[0];if(m=m.slice(1),d=f.get(h),d!==null){d===void 0&&(u&&c?d=t.exports.get(h):d=(s=this.globalScope.getStaticExportedElement(h))===null||s===void 0?void 0:s.element(),f.set(h,d!=null?d:null));for(let y of m){let _=d==null?void 0:d.findMember(y);if(typeof _=="string"||!_)continue;let w;_.is(_ae.Membership)?w=_.element():w=(o=_.element())===null||o===void 0?void 0:o.element(),d=w}if(f.set(e,d!=null?d:null),!u&&c&&d&&n){let y=this.modelDependencies.get(c);y||(y=new Set,this.modelDependencies.set(c,y));let _=d.document;y.add(_.uriString)}return d}}findType(e,t,n=!1){if(!e)return;if(typeof e!="string")return e;let i=this.findGlobalElement(e,t,n);if(i!=null&&i.is(_ae.Type))return i}remove(e){for(let t of e){let n=t.toString();this.simpleIndex.delete(n),this.referenceIndex.delete(n),this.modelDependencies.delete(n)}}invalidate(e){this.globalScope.invalidateDocuments(e)}isAffected(e,t){if(super.isAffected(e,t))return!0;let n=this.modelDependencies.get(e.uri.toString());return n?n.has(t.toString()):!1}conforms(e,t){var n;return e===t?!0:(typeof e=="string"&&(e=(n=this.findType(e))!==null&&n!==void 0?n:e),typeof e=="string"?e===(typeof t=="string"?t:t.qualifiedName):e.conforms(t))}};Mg.SysMLIndexManager=$x});var bx=p(Yw=>{"use strict";Object.defineProperty(Yw,"__esModule",{value:!0});Yw.SysMLScopeProvider=void 0;var B$=be(),Nn=D(),Ww=Wf(),zw=Km(),$tt=Pe(),Tae=y$(),Rx=class extends B$.DefaultScopeProvider{constructor(e){super(e),this.indexManager=e.shared.workspace.IndexManager,this.metamodelBuilder=e.shared.workspace.MetamodelBuilder}getScope(e){let t=this.getScopeUnfiltered(e),n=this.reflection.getReferenceType(e);return new zw.FilteredScope(t,i=>{var a;return!!(!((a=i.element())===null||a===void 0)&&a.is(n))})}getScopeUnfiltered(e){return(0,zw.makeLinkingScope)(e.container.$meta,{},this.indexManager.getGlobalScope())}getElementReferenceScope(e,t,n=Ww.DEFAULT_ALIAS_RESOLVER){let i;if(t===0){let a=this.getContext(e);if(a==="error")return;if(a)i=a;else return this.initialScope(e.owner(),e.document,{aliasResolver:n})}else i=e.found.at(t-1);if(i)return this.localScope(i,e.document,n)}initialScope(e,t,n){var i,a,s,o,u,c,f;for(n!=null||(n={aliasResolver:Ww.DEFAULT_ALIAS_RESOLVER});e!=null&&e.is(Nn.InlineExpression);)e=e.owner();if(e!=null&&e.is(Nn.FeatureChaining)&&(e=(i=e.owner())===null||i===void 0?void 0:i.owner()),e!=null&&e.isAny(Nn.Specialization,Nn.Conjugation)){e.nodeType()!==Nn.Subsetting&&e.nodeType()!==Nn.FeatureInverting&&(n.skip=e.source());let m=e.parent();if(!((a=m==null?void 0:m.parent())===null||a===void 0)&&a.is(Nn.ParameterMembership)){let h=m.owner();if(h!=null&&h.is(Nn.InvocationExpression)&&m.value)return this.localScope((s=h.invokes())!==null&&s!==void 0?s:h,void 0,n.aliasResolver)}e=e.source()===m?m==null?void 0:m.owner():m,!((u=(o=n.skip)===null||o===void 0?void 0:o.parent())===null||u===void 0)&&u.is(Nn.EndFeatureMembership)&&(e=e==null?void 0:e.owner())}else if(!((c=e==null?void 0:e.parent())===null||c===void 0)&&c.is(Nn.ParameterMembership)){if(!((f=e.owner())===null||f===void 0)&&f.is(Nn.InvocationExpression))return this.initialScope(e.owner(),t,n)}else e!=null&&e.is(Nn.Membership)&&(e=e.owner());if(!e)return;t!=null||(t=e.document);let d=e.is(Nn.Element)?e:e.parent();return d&&this.initializeParents(d,t),(0,zw.makeLinkingScope)(e,n,this.indexManager.getGlobalScope(t))}localScope(e,t,n=Ww.DEFAULT_ALIAS_RESOLVER){let i=e.ast();return i&&t&&this.metamodelBuilder.preLink(i,t,$tt.CancellationToken.None),(0,zw.makeScope)(e,Object.assign(Object.assign({},Ww.CHILD_CONTENTS_OPTIONS),{aliasResolver:n}))}getElementTarget(e){var t,n;if(e.is(Nn.ElementReference))return(t=e.to.target)!==null&&t!==void 0?t:"error";if(e.isAny(Nn.InlineExpression,Nn.Expression,Nn.SysMLFunction)){let i=e.returnType();return(n=this.indexManager.findType(i))!==null&&n!==void 0?n:"error"}}getContext(e){let t=e.ast();if(!t)return;let n=t.$cstNode;if(!n)return;let i=(0,Tae.getPreviousNode)(n,!1);if(i&&!(0,B$.isLeafCstNode)(i)&&(i=(0,B$.findLeafNodeAtOffset)(i,i.end)),!i||![".","::"].includes(i.text))return;let a=(0,Tae.getPreviousNode)(i,!1);if(!a)return;(0,B$.isLeafCstNode)(a)||(a=(0,B$.findLeafNodeAtOffset)(a,a.end));let s=a==null?void 0:a.element;if(s!=null&&s.$meta)return this.getElementTarget(s.$meta)}initializeParents(e,t){for(;e;)this.metamodelBuilder.buildElement(e,t),e=e.parent()}};Yw.SysMLScopeProvider=Rx});var Xw=p(Ec=>{"use strict";var Cx=Ec&&Ec.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Ec,"__esModule",{value:!0});Ec.SysMLCompletionProvider=Ec.SUPPORTED_TRIGGER_CHARACTERS=void 0;var Rl=be(),Mc=D(),Pc=Pe(),Ttt=Km(),Rae=an(),Ax=/[a-zA-z\d_]/,Rtt=/[^a-zA-z\d_\s]/,btt=/[{};]$/,bae=["::",".","'","''"],Cae=new Set([":",":>>",":>","::>","specializes","subsets","redefines","references","by","conjugates","from","unions","intersects","differences","chains","of"]),Aae=["@","@@","#","->"];Ec.SUPPORTED_TRIGGER_CHARACTERS=(0,Rl.stream)(bae,Aae,Cae).map(r=>r.charAt(r.length-1)).filter(r=>!Ax.test(r)).distinct().toArray();var wx=class extends Rl.DefaultCompletionProvider{constructor(e){super(e),this.cancelTokens=new WeakMap,this.indexManager=e.shared.workspace.IndexManager,this.scopeProvider=e.references.ScopeProvider;let t=e.parser.Lexer;this.keywords=new Set((0,Rl.stream)(Object.entries(t.definition)).filter(([n,i])=>n===i.PATTERN).map(([n,i])=>n))}getCompletion(e,t,n=Pc.CancellationToken.None){let i=Object.create(null,{getCompletion:{get:()=>super.getCompletion}});var a;return Cx(this,void 0,void 0,function*(){for(;e.state===Rl.DocumentState.Changed;)yield(0,Rl.interruptAndCheck)(n);let s=yield this.getTriggerCompletion(e,t,n);return!s&&((a=t.context)===null||a===void 0?void 0:a.triggerKind)!==Pc.CompletionTriggerKind.TriggerCharacter&&(this.cancelTokens.set(e,n),s=yield i.getCompletion.call(this,e,t)),s&&(s.items=(0,Rl.stream)(s.items).distinct(o=>o.label).toArray()),s})}getTriggerCompletion(e,t,n){let i=Object.create(null,{buildCompletionTextEdit:{get:()=>super.buildCompletionTextEdit}});var a;return Cx(this,void 0,void 0,function*(){let o=e.parseResult.value.$cstNode;if(!o)return;let u=e.textDocument,c=u.getText(),f=u.offsetAt(t.position),d;!((a=t.context)===null||a===void 0)&&a.triggerCharacter?d=this.backtrackToToken(c,f,t.context.triggerCharacter):(d=this.backtrackToAnyToken(c,f),d<c.length&&btt.test(c.charAt(d))&&d--);let m=(0,Rl.findLeafNodeAtOffset)(o,d),h="",y;if(m)c.substring(m.end,d+1).trim().length>0?(y=this.backtrackToAnyTriggerStart(c,d),h=c.substring(y,d+1)):(h=m.text,y=m.offset);else{y=this.backtrackToAnyTriggerStart(c,d);let L=this.backtrackToAnyToken(c,y-1);m=(0,Rl.findLeafNodeAtOffset)(o,L),m&&(h=c.substring(m.end,d+1).trim())}if(h==="."){let L=this.backtrackToAnyToken(c,y-1);m=(0,Rl.findLeafNodeAtOffset)(o,L)}if(!m)return;let _=L=>{if(!S&&!C||L.textEdit)return this.fillCompletionItem(u,f,L);let W=L.label;if(!W)return;let _e=y,Je=d,Ye=h;if(S&&(_e++,Ye=h.substring(1)),C&&(Je--,Ye=Ye.substring(0,Ye.length-1)),!!this.charactersFuzzyMatch(Ye,W))return L.textEdit={newText:W,range:{start:u.positionAt(_e),end:u.positionAt(Je)}},this.fillCompletionItem(u,f,L)},w=[],S=f!==y&&h.startsWith("'"),C=(h.length>1||!S)&&h.endsWith("'"),b=S&&C,I=L=>{let W=_(L);W&&(!b&&W.textEdit&&this.isRestrictedName(W.textEdit.newText)&&(W.textEdit.newText=`${S?"":"'"}${W.textEdit.newText}${C?"":"'"}`),w.push(W))};if(bae.includes(h)||/^'.*'$/.test(h)){if(!(0,Mc.isElementReference)(m.element))return;let L=b?1:0,W=m.element.$meta.found.at(L-1);(h!=="."||!W||(0,Mc.isFeature)(W))&&(yield this.computeScopeCompletion(m.element,I,e,n,{index:m.element.parts.length-L}));let _e=m.element.$meta.owner();if(h==="."&&(_e!=null&&_e.is(Mc.InlineExpression))&&!_e.is(Mc.FeatureChainExpression)){let Je=this.fillCompletionItem(u,f,{label:"metadata",kind:Pc.CompletionItemKind.Operator,detail:Mc.MetadataAccessExpression,textEdit:i.buildCompletionTextEdit.call(this,u,f,"metadata","metadata"),sortText:"1"});Je&&w.push(Je)}}else if(Cae.has(h)){let L;if(/;|\{|\}/.test(m.text)?L=m.element:L=m.element.$container,!L)return;yield this.computeScopeCompletion(L,I,e,n,{skip:m.element.$meta})}else if(Aae.includes(h)||(0,Mc.isElementReference)(m.element))yield this.computeScopeCompletion(m.element,I,e,n);else return;return Pc.CompletionList.create(w,!0)})}completionForCrossReference(e,t,n){let i=e.node;if(i)return this.computeScopeCompletion(i,n,e.document,Pc.CancellationToken.None)}completionFor(e,t,n,i=Pc.CancellationToken.None){var a;return i===Pc.CancellationToken.None&&(i=(a=this.cancelTokens.get(e.document))!==null&&a!==void 0?a:i),(0,Mc.isElementReference)(e.node)?this.computeScopeCompletion(e.node,n,e.document,i):super.completionFor(e,t,n)}computeScopeCompletion(e,t,n,i,a){return Cx(this,void 0,void 0,function*(){try{let s,o=a==null?void 0:a.index;if((0,Mc.isElementReference)(e)){if(o===void 0&&(o=e.parts.length-1),o<0)return;let f=e.$meta,d=()=>!f.to.cached&&n.progress<=1;if(yield(0,Rae.asyncWaitWhile)(d,{},i),o===0||f.found.at(o-1))s=this.scopeProvider.getElementReferenceScope(f,o);else return;s||(e=e.$container)}if(!s){let f=()=>n.state<Rl.DocumentState.ComputedScopes;yield(0,Rae.asyncWaitWhile)(f,{},i),s=this.scopeProvider.initialScope(e.$meta,n,a)}if(!s)return;let u=new Set,c=(f,d)=>{f.getAllExportedElements().forEach(([m,h])=>{if(u.has(m))return;u.add(m);let y=this.createMemberCompletionItem(h,m);y.sortText=d.toString().padStart(4,"0"),t(y)})};s instanceof Ttt.ScopeStream?s.getChildScopes().forEach(c):c(s,0)}catch(s){console.error(s)}})}isRestrictedName(e){return this.keywords.has(e)||!this.grammarConfig.nameRegexp.test(e)}backtrackToAnyTriggerStart(e,t){if(t>=e.length&&(t=e.length-1),e.charAt(t)==="'")return t;{let i=Ax.test(e.charAt(t))?Ax:Rtt;for(;t>0&&i.test(e.charAt(t-1));)t--}return t}backtrackToToken(e,t,n){if(n.length!==1)return t;for(t>=e.length&&(t=e.length-1);t>0&&e.charAt(t)!==n;)t--;return t}completionForKeyword(e,t,n){return super.completionForKeyword(e,t,i=>{i.label&&(i.textEdit=super.buildCompletionTextEdit(e.document.textDocument,e.offset,i.label,i.label)),n(i)})}createMemberCompletionItem(e,t){var n,i;return{label:t,kind:Pc.CompletionItemKind.Reference,detail:(n=e.element())===null||n===void 0?void 0:n.nodeType(),sortText:"0",labelDetails:{description:(i=e.element())===null||i===void 0?void 0:i.qualifiedName}}}};Ec.SysMLCompletionProvider=wx});var Dx=p(Us=>{"use strict";var Jw=Us&&Us.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Us,"__esModule",{value:!0});Us.getModelDiagnosticRange=Us.getDiagnosticRange=Us.SysMLDocumentValidator=void 0;var G$=be(),wae=Pe(),Dae=an(),Ctt=$g(),K$=class extends G$.DefaultDocumentValidator{constructor(e){super(e),this.linker=e.references.Linker,this.metamodelBuilder=e.shared.workspace.MetamodelBuilder,this.validationRegistry=e.validation.ValidationRegistry}validateElement(e,t,n=wae.CancellationToken.None,i=[]){return Jw(this,void 0,void 0,function*(){let a=(o,u,c)=>{i.push({severity:o,message:u,element:c.element,info:c})},s=this.validationRegistry.getModelChecks(e.nodeType());return yield Promise.all(s.map(o=>o(e,a,n))),i})}validateModel(e,t,n=wae.CancellationToken.None){return Jw(this,void 0,void 0,function*(){let i=[],a=(s,o,u)=>{i.push({severity:s,message:o,element:u.element,info:u})};return yield Promise.all((0,Ctt.streamModel)(e).map(s=>Jw(this,void 0,void 0,function*(){yield(0,G$.interruptAndCheck)(n);let o=this.validationRegistry.getModelChecks(s.nodeType());for(let u of o)yield u(s,a,n)}))),i})}validateAst(e,t,n){return Jw(this,void 0,void 0,function*(){let i=yield this.validateModel(e.$meta,t,n);return i.forEach(a=>t.modelDiagnostics.add(a.element,a)),i.map(a=>this.fromModelDiagnostic(a))})}fromModelDiagnostic(e){return{message:e.message,range:Mae(e.info,e.element),severity:(0,G$.toDiagnosticSeverity)(e.severity),code:e.info.code,codeDescription:e.info.codeDescription,tags:e.info.tags,relatedInformation:e.info.relatedInformation,data:e.info.data,source:this.getSource()}}};Us.SysMLDocumentValidator=K$;(function(r){r.ImportError="import-error",r.MetamodelError="metamodel-error"})(K$||(Us.SysMLDocumentValidator=K$={}));function Sae(r,e){let t;return r.range?r.range:(typeof r.property=="string"?t=(0,G$.findNodeForProperty)(e.$cstNode,r.property,r.index):typeof r.keyword=="string"&&(t=(0,G$.findNodeForKeyword)(e.$cstNode,r.keyword,r.index)),t!=null||(t=e.$cstNode),t?t.range:{start:{line:0,character:0},end:{line:0,character:0}})}function Att(r){return(0,Dae.sanitizeRange)(Sae(r,r.node))}Us.getDiagnosticRange=Att;var wtt={start:{character:0,line:0},end:{character:0,line:0}};function Mae(r,e){let t=e.ast();if(t)return(0,Dae.sanitizeRange)(Sae(r,t));let n=e.parent();for(;n;){if(t=n.ast(),t!=null&&t.$cstNode)return t.$cstNode.range;n=n.parent()}return wtt}Us.getModelDiagnosticRange=Mae});var Mx=p(ja=>{"use strict";var Dtt=ja&&ja.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Stt=ja&&ja.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Mtt=ja&&ja.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Dtt(e,r,t);return Stt(e,r),e};Object.defineProperty(ja,"__esModule",{value:!0});ja.isProgrammaticNode=ja.SysMLAstReflection=void 0;var Ptt=be(),ii=Mtt(D()),Qw=So(),Sx=class extends ii.SysMlAstReflection{constructor(){super(...arguments),this.metadata=new Map}getReferenceType(e){let t=e.container;if(e.index===t.parts.length-1)switch(t.$type){case ii.TypeReference:return ii.Type;case ii.ClassifierReference:return ii.Classifier;case ii.MetaclassReference:return ii.Metaclass;case ii.MembershipReference:return ii.Membership;case ii.NamespaceReference:return ii.Namespace;case ii.FeatureReference:return ii.Feature;case ii.ConjugatedPortReference:return ii.ConjugatedPortDefinition}return ii.Element}isSubtype(e,t){return Qw.typeIndex.isSubtype(e,t)}getTypeMetaData(e){let t=this.metadata.get(e);if(t)return t;let n=new Map(super.getTypeMetaData(e).mandatory.map(i=>[i.name,i.type]));for(let i of Qw.typeIndex.getInheritanceChain(e)){let a=super.getTypeMetaData(i);for(let{name:s,type:o}of a.mandatory)n.has(s)||n.set(s,o)}return t={name:e,mandatory:(0,Ptt.stream)(n.entries()).map(([i,a])=>({name:i,type:a})).toArray()},t.mandatory.push({name:"$children",type:"array"}),this.metadata.set(e,t),t}assignMandatoryProperties(e){let t=this.getTypeMetaData(e.$type),n=e;for(let i of t.mandatory){let a=n[i.name];i.type==="array"&&!Array.isArray(a)?n[i.name]=[]:i.type==="boolean"&&a===void 0&&(n[i.name]=!1)}n.$childIndex===void 0&&(n.$childIndex=0)}createNode(e,t){let n=Object.assign({$type:e},t);if(t.$cstNode){let i=Ett(t.$cstNode);i.element=n,n.$cstNode=i,i.$implicit=!0}return this.assignMandatoryProperties(n),this.assignNode(n,t)}assignNode(e,t){let n=t.$container,i=t.$containerProperty;if(!n||!i)return e;let a=n[i],s=t.$containerIndex;if(Array.isArray(a)){let o=a;s!==void 0?(o.forEach((u,c)=>{c>=s&&(u.$containerIndex=c+1)}),o.splice(s,0,e),e.$containerIndex=s):(o.push(e),e.$containerIndex=o.length-1)}else{if(s!==void 0)throw new Error("Cannot assign with an index to a non-array property");n[i]=e}if(e.$container=n,e.$containerProperty=i,n.$children){let o=e.$cstNode;if(o){let u=n.$children.findIndex(c=>{if(c.$cstNode)return c.$cstNode.offset>o.end});u>=0&&(n.$children.slice(u).forEach(c=>c.$childIndex++),n.$children.splice(u,0,e))}n.$children.push(e),e.$childIndex=n.$children.length-1}return e}getSubtypes(e){return Qw.typeIndex.getSubtypes(e)}getSupertypes(e){return Qw.typeIndex.getInheritanceChain(e)}};ja.SysMLAstReflection=Sx;function Ett(r){return Object.create(Object.getPrototypeOf(r),Object.getOwnPropertyDescriptors(r))}function Ott(r){return!r.$cstNode||"$implicit"in r.$cstNode}ja.isProgrammaticNode=Ott});var Zw=p(Oc=>{"use strict";Object.defineProperty(Oc,"__esModule",{value:!0});Oc.SysMLExpressionEvaluator=Oc.validationLocation=Oc.isExpressionError=void 0;var Pae=Wn();function Px(r){return Boolean(typeof r=="object"&&r&&"message"in r)}Oc.isExpressionError=Px;function ktt(r){var e;return(e=r.stack.map(t=>t.ast()).find(t=>t))!==null&&e!==void 0?e:r.expression.ast()}Oc.validationLocation=ktt;var Ex=class{constructor(e){this.services=e,this.evaluators=(0,Pae.defaultEvaluators)()}evaluate(e,t){let n=new Pae.BuiltinFunctionEvaluator(this.services,this.evaluators);try{return n.evaluate(e,t)}catch(i){return{expression:e,message:String(i),stack:[...n.currentEvaluationStack]}}}evaluateNumber(e,t){let n=this.evaluate(e,t);if(Px(n))return n;let i=n.at(0);return i===void 0?Number.NaN:n.length>1?{expression:e,message:`Too many values (${n.length}), expected 1`,stack:[e]}:typeof i!="number"?{expression:e,message:`Value is not a number (${i})`,stack:[e]}:i}tryCast(e,t,n){let i=this.evaluate(e,t);if(Px(i))return i;let a=i.at(0);return i.length!==1?{expression:e,message:`${i.length===0?"Not enough":"Too many"} values (${i.length}), expected 1`,stack:[e]}:typeof a!==n?{expression:e,message:`Value is not ${n==="object"?"an":"a"} ${n} (${a})`,stack:[e]}:a}evaluateBoolean(e,t){return this.tryCast(e,t,"boolean")}evaluateString(e,t){return this.tryCast(e,t,"string")}evaluateElement(e,t){return this.tryCast(e,t,"object")}};Oc.SysMLExpressionEvaluator=Ex});var Fx=p(Ic=>{"use strict";var at=Ic&&Ic.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},Itt=Ic&&Ic.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Ic,"__esModule",{value:!0});Ic.SysMLMetamodelBuilder=void 0;var kc=be(),V=D(),Vt=Wn(),Ftt=So(),eD=aq(),Eae=Zw(),Ox=Yq(),kx=Ae(),Ntt=["KerML::Root::","KerML::Core::","KerML::Kernel::","SysML::Systems::"],qtt={SysMLFunction:"Function"},Ix={};function et(r,e=0){return function(t,n,i){let a=i.value;a&&(typeof r=="string"&&(r=[r]),r.forEach(s=>{var o;((o=Ix[s])!==null&&o!==void 0?o:Ix[s]=[]).push([e,a])}))}}var ze=class{constructor(e){this.indexManager=e.workspace.IndexManager,this.registry=e.ServiceRegistry,this.config=e.workspace.ConfigurationProvider,this.astReflection=e.AstReflection,this.evaluator=e.Evaluator,this.statistics=e.statistics,this.util=e.Util,this.metaFactories=Vt.META_FACTORY,this.preLinkFunctions=this.registerLinkFunctions(Ix)}buildElement(e,t){this.preLinkModel(e,t)}buildModel(e,t){for(let n of(0,kx.streamModel)(e))this.preLinkModel(n,t)}registerLinkFunctions(e){let t=Ftt.typeIndex.expandAndMerge(e,!0),n=new Map;for(let[i,a]of t)n.set(i,new Set(a.sort(([s],[o])=>s-o).map(([s,o])=>o)));return n}linker(e){return this.registry.getServices(e).references.Linker}onLinkedPart(e,t){this.preLinkNode(e.reference.ref,t)}onLinkedReference(e,t,n){var i;let a=e.$container.$meta;if(a.is(V.MembershipImport)){if(!a.isRecursive)return}else if(a.is(V.Membership)){(i=a.owner())===null||i===void 0||i.invalidateMemberCaches();return}let s=e.$meta.to.target;s&&this.preLinkModel(s)}onParsed(e){let t=e.astNodes;for(let n of t)this.addMeta(n,e);t.forEach(n=>(0,Ox.astToModel)(n.$meta,n))}onChanged(e){let t=[];for(let n of e.astNodes){let i=n.$meta;i?(0,Ox.clearArtifacts)(i):(this.addMeta(n,e),t.push(n))}t.forEach(n=>(0,Ox.astToModel)(n.$meta,n))}addMeta(e,t){let n=this.constructMetamodelAst(e,t);e.$meta=n,(0,V.isElementReference)(e)&&(e.$meta.document=t)}constructMetamodelAst(e,t){return this.constructMetamodel(e.$type,t)}constructMetamodel(e,t){let n=this.metaFactories[e];if(!n)throw new Error(`Invalid type for metamodel: ${e}`);return n(this.util.idProvider,t)}preLink(e,t,n){return Itt(this,void 0,void 0,function*(){if(e)return this.preLinkNode(e,t);let i=t.parseResult.value.$meta;if(i!=null&&i.is(V.Element))for(let a of(0,kx.streamModel)(i))yield(0,kc.interruptAndCheck)(n),this.preLinkModel(a,t);for(let a of t.astNodes)yield(0,kc.interruptAndCheck)(n),this.preLinkNode(a,t)})}preLinkNode(e,t){let n=e.$meta;n&&this.preLinkModel(n,t)}preLinkModel(e,t){if(e.setupState!=="none")return;t!=null||(t=e.document);let n=this.config.get().debug.linkingTrace&&e.is(V.Element);n&&console.log("  ".repeat(this.statistics.currentDepth),`> ${e.qualifiedName} [${e.nodeType()}]`);let i=this.preLinkFunctions.get(e.nodeType());if(e.setupState="active",i)for(let a of i)this.statistics.enter(a.name),n&&console.log("  ".repeat(this.statistics.currentDepth),a.name),a.call(this,e,t),this.statistics.exit(a.name);e.setupState="completed",n&&console.log("  ".repeat(this.statistics.currentDepth),`< ${e.qualifiedName} [${e.nodeType()}]`)}assignMetaclass(e,t){var n;if(((n=t.buildOptions)===null||n===void 0?void 0:n.standardLibrary)==="none")return;let i={node:e,document:t,builder:this};e.setMetaclass(()=>{var a;let{node:s,document:o,builder:u}=i,c=(a=qtt[s.nodeType()])!==null&&a!==void 0?a:s.nodeType(),f;for(let m of Ntt){let h=u.indexManager.findGlobalElement(m+c,o,!0);if(h!=null&&h.is(V.Metaclass)){f=h;break}}let d;return f?(this.preLinkModel(f),d=Vt.MetadataFeatureMeta.create(this.util.idProvider,o),d.addAnnotation([Vt.AnnotationMeta.create(this.util.idProvider,o,{isImplied:!0}),s]),d.addHeritage([Vt.FeatureTypingMeta.create(this.util.idProvider,o),f])):o.modelDiagnostics.add(s,{element:s,message:`Could not find metaclass for ${c}`,severity:"error",info:{}}),d})}resolveNamespaceImports(e,t){if(e.importResolutionState!=="none")return;e.importResolutionState="active";let n=e.parent();for(;n;)this.preLinkModel(n,t),n=n.parent();this.linker(t.uri).resolveImports(e,t),e.importResolutionState="completed";for(let i of e.imports){if(i.is(V.MembershipImport)&&!i.isRecursive)continue;let a=i.element();a&&this.preLinkModel(a)}}linkNamespaceFeatures(e,t){e.featureMembers().forEach(n=>{let i=n.element();i&&i.is(V.Feature)&&!(i.declaredName||i.declaredName)&&i.specializations().length>0&&this.preLinkModel(i,t)})}collectFeatureClassifiers(e,t){e.allTypes().forEach(n=>e._classifier|=n.classifier)}addSemanticMetadata(e,t){var n;for(let i of e.metadata){this.buildTree(i,t);let a=i.allFeatures().filter(s=>{var o;return(o=s.element())===null||o===void 0?void 0:o.conforms("Metaobjects::SemanticMetadata::baseType")});for(let s of a){let o=s.element();if(!o)continue;let u=(n=o.value)===null||n===void 0?void 0:n.element();if(!u)continue;this.buildTree(u,t);let c=this.evaluator.evaluate(u,o);if((0,Eae.isExpressionError)(c)){t.modelDiagnostics.add(u,{element:u,message:c.message,severity:"warning",info:{}});continue}let f=c.at(0);if(!(!f||!(0,Vt.isMetamodel)(f)||!f.is(V.MetadataFeature)))for(let d of f.annotatedElements()){if(!d.is(V.Type))continue;let m=this.constructMetamodel(e.specializationKind(),t);m._isImplied=!0,e.addHeritage([m,d])}}}}linkTypeRelationship(e,t){let n=e.source(),i=e.element();if(i&&i.parent()===e&&this.preLinkModel(i,t),n&&n!==e.parent()&&(this.preLinkModel(n,t),n.is(V.Feature)))return n.basicFeature();if(n!=null&&n.is(V.Type))return n}setupSpecialization(e,t){let n=this.linkTypeRelationship(e,t),i=e.finalElement();i&&(n==null||n.onHeritageAdded(e,i))}setupTypeRelationship(e,t){this.linkTypeRelationship(e,t)}linkTypeRelationships(e,t){e.heritage.forEach(n=>this.preLinkModel(n,t)),e.typeRelationships.forEach(n=>this.preLinkModel(n,t))}addClassifierImplicits(e,t){this.addImplicits(e,t,V.Type)}addFeatureImplicits(e,t){var n;((n=t.buildOptions)===null||n===void 0?void 0:n.standardLibrary)!=="none"&&this.addImplicits(e,t,V.Feature)}redefineEnds(e,t){let n=e.basePositionalFeatures(i=>{var a;return i.is(V.EndFeatureMembership)||!!(!((a=i.element())===null||a===void 0)&&a.isEnd)},i=>i.is(V.Association)).iterator();(0,kc.stream)(e.ownedEnds()).forEach(i=>{let a=n.next();if(a.done||i.specializations(V.Redefinition).length>0)return;let s=a.value.element();if(!s)return;let o=Vt.RedefinitionMeta.create(this.util.idProvider,t,{isImplied:!0});i.addHeritage([o,s])})}addDefinitionImplicits(e,t){var n;if(((n=t.buildOptions)===null||n===void 0?void 0:n.standardLibrary)==="none")return;let i=this.findLibraryElement(e,eD.implicitIndex.get(e.nodeType(),e.defaultSupertype()),t,V.Classifier,`Could not find implicit definition specialization for ${e.nodeType()}`);if(i&&e!==i&&!e.allTypes().includes(i)){let a=Vt.FeatureTypingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addHeritage([a,i])}}addUsageImplicits(e,t){var n;if(((n=t.buildOptions)===null||n===void 0?void 0:n.standardLibrary)==="none")return;let i=this.findLibraryElement(e,eD.implicitIndex.get(e.nodeType(),e.defaultSupertype()),t,V.Feature,`Could not find implicit usage specialization for ${e.nodeType()}`);if(i&&e!==i&&!e.allTypes().includes(i)){let a=Vt.SubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addHeritage([a,i])}}redefineActionParameters(e,t){let n=e.specializationsMatching([V.ActionUsage,V.ActionDefinition]).toArray();if(n.length===0)return;let i=(0,kc.stream)(e.featureMembers()).map(s=>s.element()).nonNullable().filter(s=>s.isParameter).filter(s=>!s.isIgnoredParameter()),a=n.map(s=>{var o,u;return(0,kc.stream)((u=(o=s.element())===null||o===void 0?void 0:o.featureMembers())!==null&&u!==void 0?u:[]).map(c=>c.element()).nonNullable().filter(c=>c.isParameter).filter(c=>!c.isIgnoredParameter()).iterator()});for(let s of i){this.preLinkModel(s,t);let o=s.specializations(V.Redefinition).length>0;for(let u of a){let c=u.next();if(c.done||o)continue;let f=Vt.RedefinitionMeta.create(this.util.idProvider,t,{isImplied:!0});s.addHeritage([f,c.value])}}}redefineSubject(e,t){var n;!((n=e.parent())===null||n===void 0)&&n.is(V.SubjectMembership)&&this.redefineFirstIf(e,i=>{var a;return i.is(V.SubjectMembership)&&!!(!((a=i.element())===null||a===void 0)&&a.is(V.Usage))})}redefineObjective(e,t){var n;!((n=e.parent())===null||n===void 0)&&n.is(V.ObjectiveMembership)&&this.redefineFirstIf(e,i=>{var a;return i.is(V.ObjectiveMembership)&&!!(!((a=i.element())===null||a===void 0)&&a.is(V.RequirementUsage))})}redefineStateSubactions(e,t){let n=e.parent();n!=null&&n.is(V.StateSubactionMembership)&&this.redefineFirstIf(e,i=>{var a;return i.is(V.StateSubactionMembership)&&i.kind===n.kind&&!!(!((a=i.element())===null||a===void 0)&&a.is(V.ActionUsage))})}redefineTransitionUsageFeatures(e,t){let n=(u,c)=>{let f=0;return!("trigger"in c)&&u.accepter&&(c.trigger=u.accepter.element(),++f),!("effect"in c)&&u.effect&&(c.effect=u.effect.element(),++f),!("guard"in c)&&u.guard&&(c.guard=u.guard.element(),++f),f},i=(u,c)=>{let f=0;for(let d of u.typesMatching(V.TransitionUsage))if(f+=n(d,c),f===3)return f;for(let d of u.typesMatching(V.TransitionUsage))if(f=i(d,c),f===3)return f;return f},a={};i(e,a);let s={};n(e,s);let o=(u,c)=>{let f=s[u];if(!f)return;let d=a[u];if(d||(d=this.findLibraryElement(e,c,t,V.Feature,"Could not find implicit redefinition")),d){let m=Vt.RedefinitionMeta.create(this.util.idProvider,t,{isImplied:!0});f.addHeritage([m,d])}};o("trigger","Actions::TransitionAction::accepter"),o("guard","TransitionPerformances::TransitionPerformance::guard"),o("effect","Actions::TransitionAction::effect")}linkAnnotations(e,t){let n=e.ast();if(!n)return;let i=this.linker(t.uri);n.about.forEach(a=>{let s=a.targetRef;if(!s)return;let o=i.linkReference(s,t);o&&(a.$meta.setElement(o),o.addExplicitAnnotatingElement(e))})}addFeatureValueTypings(e,t){var n;let i=(n=e.value)===null||n===void 0?void 0:n.element();if(!i||e.direction!=="none"||e.specializations().some(o=>!o.isImplied))return;this.buildTree(i,t);let a=this.findType(e,i.returnType(),t);if(!a||!a.is(V.Feature))return;let s=Vt.SubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addHeritage([s,a])}setupInvocationArgs(e,t){e.ownedElements().toArray().forEach(i=>this.buildTree(i,t)),e._args=e.arguments()}linkFeatureReferenceExpression(e,t){e.expression&&this.preLinkModel(e.expression,t)}linkRelationship(e,t){let n=e.ast();if(!n)return;let i=this.linker(t.uri);if(n.targetRef&&e.setElement(i.linkReference(n.targetRef,t)),n.sourceRef){let a=i.linkReference(n.sourceRef,t);a&&e.setSource(a)}}lazilyEvaluateMultiplicityBounds(e,t){var n;let i=(n=e.range)===null||n===void 0?void 0:n.element();if(!i){e.setBounds(void 0);return}let a=this.evaluator;e.setBounds(function(){var s;let o=i?a.evaluate(i,(s=e.owner())!==null&&s!==void 0?s:e):void 0;if(!o||(0,Eae.isExpressionError)(o))return;let u=o.at(0);if(u===void 0)return;let c={},f;if(typeof u=="number"?(c.lower=u,f=u):typeof u=="object"&&u.is(V.LiteralInfinity)&&(c.lower=0,f=Number.MAX_SAFE_INTEGER),o.length<2)return c.upper=f,c;let d=o.at(-1);return typeof d=="number"?c.upper=d:typeof d=="object"&&d.is(V.LiteralInfinity)&&(c.upper=Number.MAX_SAFE_INTEGER),c})}addImplicitVariantSpecialization(e,t){let n=e.owner(),i=e.finalElement();if(i&&(n!=null&&n.isAny(V.Usage,V.Definition))&&n.isVariation){let a={isImplied:!0},s=n.is(V.Usage)?Vt.SubsettingMeta.create(this.util.idProvider,t,a):Vt.FeatureTypingMeta.create(this.util.idProvider,t,a);i.addHeritage([s,n])}}addImplicitOccurrenceUsageTyping(e,t){if(!e.portionKind||e.specializations(V.FeatureTyping).length!==0)return;let n=e.owner(),i={isImplied:!0};n!=null&&n.is(V.OccurrenceDefinition)?e.addHeritage([Vt.FeatureTypingMeta.create(this.util.idProvider,t,i),n]):n!=null&&n.is(V.OccurrenceUsage)&&e.addHeritage([Vt.SubsettingMeta.create(this.util.idProvider,t,i),n])}addImplicitConnectorFeaturingType(e,t){if(e.owningType||e.featuredBy.length>0)return;let n=e.contextType();if(!n)return;let i=Vt.TypeFeaturingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addFeatureRelationship([i,n])}addConnectorEndSubsettings(e,t){var n;for(let i of e.connectorEnds()){let a=(0,kc.stream)(i.featureMembers()).filter(Vt.BasicMetamodel.is(V.FeatureMembership)).map(u=>u.element()).filter(Vt.BasicMetamodel.is(V.Expression)).head();if(!a)continue;this.buildTree(a,t);let s=(n=a.resultParameter())===null||n===void 0?void 0:n.element();if(!s)continue;let o=Vt.SubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});i.addHeritage([o,s])}}addItemFlowEndSubsetting(e,t){var n;if(e.specializations(V.Subsetting).some(a=>!a.isImplied))return;let i=(n=e.featureMembers().find(a=>a.is(V.OwningMembership)))===null||n===void 0?void 0:n.element();i&&(this.preLinkModel(i,t),i.types(V.Redefinition).limit(1).map(a=>a.owner()).filter(Vt.BasicMetamodel.is(V.Feature)).forEach(a=>{let s=Vt.SubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addHeritage([s,a])}))}addItemFlowEndMemberRedefinition(e,t){var n;let i=e.owner();if(!(i!=null&&i.is(V.Feature)))return;let a=(n=e.featureMembers().find(f=>f.is(V.OwningMembership)))===null||n===void 0?void 0:n.element();if(!a)return;let s=i.featureMembers().filter(f=>{var d;return f.is(V.EndFeatureMembership)||((d=f.element())===null||d===void 0?void 0:d.isEnd)}).indexOf(e.parent());if(s!==0&&s!==1)return;let o=eD.implicitIndex.get(e.nodeType(),s===0?"sourceOutput":"targetInput");if(!o)return;let u=this.findLibraryElement(e,o,t,V.Feature,"Could not find implicit item flow end redefinition");if(!u)return;let c=Vt.RedefinitionMeta.create(this.util.idProvider,t,{isImplied:!0});a.addHeritage([c,u])}setupTransitionUsageReferenceUsageMembers(e,t){{let n=e.transitionLinkFeature();if(n!=null&&n.is(V.ReferenceUsage)){let i=this.findLibraryElement(e,"TransitionPerformances::TransitionPerformance::transitionLink",t,V.Feature,"Could not find implicit transition link feature");if(i){let a=Vt.RedefinitionMeta.create(this.util.idProvider,t,{isImplied:!0});n.addHeritage([a,i])}}}{let n=e.payloadParameter(),i=e.accepterPayloadParameter();if(n!=null&&n.is(V.ReferenceUsage)&&i){this.preLinkModel(i,t);let a=Vt.SubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});n.addHeritage([a,i]),i.name&&n.setName(i.name)}}}setupSuccessionAsUsageEnds(e,t){let n=e.connectorEnds();for(let[i,a]of[[0,()=>e.previousFeature(s=>this.preLinkModel(s,t))],[1,e.targetFeature]]){let s=n.at(i);if(!s||(this.preLinkModel(s,t),s.specializations().some(f=>f.is(V.ReferenceSubsetting))))continue;let u=a.call(e);if(!u)continue;this.preLinkModel(u,t);let c=u==null?void 0:u.element();if(c){this.preLinkModel(c,t);let f=Vt.ReferenceSubsettingMeta.create(this.util.idProvider,t,{isImplied:!0});s.addHeritage([f,c])}}}cacheImportedName(e,t){var n,i,a,s,o,u;let c=e.ast(),f=c?(i=(n=c.targetRef)===null||n===void 0?void 0:n.parts.at(-1))===null||i===void 0?void 0:i.$refText:(s=(a=e.element())===null||a===void 0?void 0:a.name)!==null&&s!==void 0?s:(o=e.element())===null||o===void 0?void 0:o.shortName;if(!f)return;f=(0,Vt.sanitizeName)(f);let d=(u=e.owner())===null||u===void 0?void 0:u._memberLookup;d&&(d.has(f)||d.set(f,e))}collectDependencyReferences(e,t){let n=e.ast();if(!n)return;let i=this.linker(t.uri);e.client.push(...(0,kc.stream)(n.client).map(a=>i.linkReference(a,t)).nonNullable()),e.supplier.push(...(0,kc.stream)(n.supplier).map(a=>i.linkReference(a,t)).nonNullable())}addOperatorExpressionTyping(e,t){let n=e.getFunction();if(!n)return;let i=this.findLibraryElement(e,n,t,V.Type,"Could not find operator expression type");if(!i)return;let a=Vt.FeatureTypingMeta.create(this.util.idProvider,t,{isImplied:!0});e.addHeritage([a,i])}addNonDeclarationTypeFeaturing(e,t){var n;if(!(!((n=e.parent())===null||n===void 0)&&n.is(V.OwningMembership)))return;let i=e.source();i&&i._typeRelationships.push(e)}setFlowEndDirections(e,t){let n=e.ends,i=(a,s)=>{let o=a==null?void 0:a.element().children[0];o!=null&&o.is(V.FeatureMembership)&&(o.element().direction=s)};i(n[0],"out"),i(n[1],"in")}buildTree(e,t,n=!0){if(e.setupState==="completed")return;let i=this.linker(t.uri);for(let a of(0,kx.streamModel)(e)){this.preLinkModel(a,t);let s=a.ast();s&&i.linkNode(s,t)}!e.is(V.Type)||!n||e.allTypes().forEach(a=>{let s=a.document;s&&a&&a!==e&&this.buildTree(a,s,!1)})}findType(e,t,n){if(t)return typeof t!="string"?t:this.findLibraryElement(e,t,n,V.Type,"Could not find library type")}findLibraryElement(e,t,n,i,a){let s=this.indexManager.findGlobalElement(t,n,!0);if(!(s!=null&&s.is(i))){n.modelDiagnostics.add(e,{element:e,message:`${a} '${t}'`,severity:"error",info:{}});return}return this.preLinkModel(s),s}getImplicitSpecializations(e,t){let n=[];for(let i of e.defaultGeneralTypes()){let a=typeof i=="string"?i:i.type,s=eD.implicitIndex.get(e.nodeType(),a);if(!s){t.modelDiagnostics.add(e,{element:e,message:`Could not find implicit specialization for ${e.nodeType()} (${a})`,severity:"error",info:{}});continue}n.push(typeof i=="string"?s:{type:s,specialization:i.specialization})}return n}addImplicits(e,t,n){var i;if(((i=t.buildOptions)===null||i===void 0?void 0:i.standardLibrary)==="none")return;let a=e.specializationKind();for(let s of this.getImplicitSpecializations(e,t)){let o=typeof s=="string"?s:s.type,u=this.findLibraryElement(e,o,t,n,`Could not find implicit specialization for ${a}`);if(u&&u!==e){let c=this.constructMetamodel(typeof s=="string"?a:s.specialization,t);c._isImplied=!0,e.addHeritage([c,u])}}}redefineFirstIf(e,t,n){var i;let a=e.owner();for(let s of a.allTypes(n)){let o=(i=s.featureMembers().find(t))===null||i===void 0?void 0:i.element();if(!o)continue;let u=Vt.RedefinitionMeta.create(this.util.idProvider,e.document,{isImplied:!0});e.addHeritage([u,o]);return}}};Ic.SysMLMetamodelBuilder=ze;at([et(V.Element)],ze.prototype,"assignMetaclass",null);at([et(V.Namespace)],ze.prototype,"resolveNamespaceImports",null);at([et(V.Namespace,1e4)],ze.prototype,"linkNamespaceFeatures",null);at([et(V.Feature)],ze.prototype,"collectFeatureClassifiers",null);at([et(V.Type)],ze.prototype,"addSemanticMetadata",null);at([et([V.Specialization,V.Conjugation],100)],ze.prototype,"setupSpecialization",null);at([et(V.FeatureRelationship,100)],ze.prototype,"setupTypeRelationship",null);at([et(V.Type)],ze.prototype,"linkTypeRelationships",null);at([et(V.Classifier,10)],ze.prototype,"addClassifierImplicits",null);at([et(V.Feature,10)],ze.prototype,"addFeatureImplicits",null);at([et([V.Association,V.Connector],1e3)],ze.prototype,"redefineEnds",null);at([et(V.Definition,15)],ze.prototype,"addDefinitionImplicits",null);at([et(V.Usage,15)],ze.prototype,"addUsageImplicits",null);at([et([V.ActionUsage,V.ActionDefinition],1e3)],ze.prototype,"redefineActionParameters",null);at([et(V.ReferenceUsage,1e3)],ze.prototype,"redefineSubject",null);at([et(V.RequirementUsage)],ze.prototype,"redefineObjective",null);at([et(V.ActionUsage,1e3)],ze.prototype,"redefineStateSubactions",null);at([et(V.TransitionUsage,1e3)],ze.prototype,"redefineTransitionUsageFeatures",null);at([et(V.Comment),et(V.MetadataFeature)],ze.prototype,"linkAnnotations",null);at([et(V.Feature)],ze.prototype,"addFeatureValueTypings",null);at([et(V.InvocationExpression)],ze.prototype,"setupInvocationArgs",null);at([et(V.FeatureReferenceExpression)],ze.prototype,"linkFeatureReferenceExpression",null);at([et(V.Relationship,-1e3)],ze.prototype,"linkRelationship",null);at([et(V.MultiplicityRange)],ze.prototype,"lazilyEvaluateMultiplicityBounds",null);at([et(V.VariantMembership,5)],ze.prototype,"addImplicitVariantSpecialization",null);at([et(V.OccurrenceUsage,5)],ze.prototype,"addImplicitOccurrenceUsageTyping",null);at([et(V.Connector)],ze.prototype,"addImplicitConnectorFeaturingType",null);at([et(V.Connector)],ze.prototype,"addConnectorEndSubsettings",null);at([et(V.ItemFlowEnd)],ze.prototype,"addItemFlowEndSubsetting",null);at([et(V.ItemFlowEnd)],ze.prototype,"addItemFlowEndMemberRedefinition",null);at([et(V.TransitionUsage)],ze.prototype,"setupTransitionUsageReferenceUsageMembers",null);at([et(V.SuccessionAsUsage,-1e4)],ze.prototype,"setupSuccessionAsUsageEnds",null);at([et(V.MembershipImport,1e4)],ze.prototype,"cacheImportedName",null);at([et(V.Dependency,1e3)],ze.prototype,"collectDependencyReferences",null);at([et(V.OperatorExpression,-1)],ze.prototype,"addOperatorExpressionTyping",null);at([et(V.TypeFeaturing,1e3)],ze.prototype,"addNonDeclarationTypeFeaturing",null);at([et([V.ItemFlow,V.FlowConnectionUsage],1e3)],ze.prototype,"setFlowEndDirections",null)});var qx=p(bl=>{"use strict";Object.defineProperty(bl,"__esModule",{value:!0});bl.prepareSysMLParser=bl.createSysMLParser=bl.SysMLParser=bl.SysMLCstNodeBuilder=void 0;var Pg=be(),xtt=Hb(),Ltt=xb(),Cr=D(),jtt=So(),Utt=$g(),Btt=yt(),Gtt=an(),Ktt=["istype","hastype","@","as"];function Htt(r,e){if(r.operands||(r.operands=[]),r.operands.length===0&&r.operator&&Ktt.includes(r.operator)){let t=e.shared.AstReflection,n=t.createNode(Cr.FeatureReferenceExpression,{$container:r,$containerProperty:"operands",$containerIndex:0}),i=t.createNode(Cr.ReturnParameterMembership,{$container:n,$containerProperty:"expression"});t.createNode(Cr.Feature,{$container:i,$containerProperty:"target"})}}function Vtt(r,e){if(!r.condition){let t=e.shared.AstReflection,n=t.createNode(Cr.ParameterMembership,{$container:r,$containerProperty:"condition"});t.createNode(Cr.Usage,{$container:n,$containerProperty:"target"})}}function Wtt(r,e){let t=r.$type;if(!(t!==Cr.Import&&t!==Cr.Expose))if(r.isNamespace||r.target){if(r.targetRef&&(r.targetRef.$type=r.isNamespace?Cr.NamespaceReference:Cr.MembershipReference),r.$type=t===Cr.Expose?Cr.NamespaceExpose:Cr.NamespaceImport,r.target&&r.targetRef){let n=r.target,i=e.shared.AstReflection.createNode(r.isNamespace?Cr.NamespaceImport:Cr.MembershipImport,{$container:n,$containerProperty:"children",$containerIndex:0,isRecursive:r.isRecursive});e.shared.AstReflection.assignNode(r.targetRef,{$container:i,$containerProperty:"targetRef"}),(0,Gtt.erase)(r.$children,r.targetRef),delete r.targetRef}delete r.isNamespace}else r.targetRef&&(r.targetRef.$type=Cr.MembershipReference),r.$type=t===Cr.Expose?Cr.MembershipExpose:Cr.MembershipImport}function ztt(r,e){let t=e.shared.AstReflection;{let n=t.createNode(Cr.ParameterMembership,{$container:r,$containerProperty:"transitionLinkSource"});t.createNode(Cr.ReferenceUsage,{$container:n,$containerProperty:"target"})}if(r.accepter){let n=t.createNode(Cr.ParameterMembership,{$container:r,$containerProperty:"payload"});t.createNode(Cr.ReferenceUsage,{$container:n,$containerProperty:"target"})}}function Ytt(r,e){var t;(t=r.ends)!==null&&t!==void 0||(r.ends=[]);let n=r.ends.length;if(n>=2)return;let i=e.shared.AstReflection,a=[0,1];n===1&&(r.ends[0].target.multiplicity?a=[1]:a=[0]);for(let s of a){let o=i.createNode(Cr.EndFeatureMembership,{$container:r,$containerProperty:"ends",$containerIndex:s,$cstNode:r.$cstNode});i.createNode(Cr.Feature,{$container:o,$containerProperty:"target",$cstNode:r.$cstNode})}}var tD=class extends Ltt.CstNodeBuilder{constructor(e){super(),this.services=e;let t={OperatorExpression:Htt,WhileLoopActionUsage:Vtt,Import:Wtt,TransitionUsage:ztt,SuccessionAsUsage:Ytt};this.postprocessingMap=jtt.typeIndex.expandToDerivedTypes(t)}construct(e){var t;super.construct(e),typeof e.$type=="string"&&((t=this.postprocessingMap.get(e.$type))===null||t===void 0||t.call(void 0,e,this.services))}};bl.SysMLCstNodeBuilder=tD;function Nx(r){r.$children.length=0,r.$children.push(...(0,Pg.streamContents)(r).toArray()),r.$children.sort((e,t)=>{var n,i;return(0,Utt.compareRanges)((n=e.$cstNode)===null||n===void 0?void 0:n.range,(i=t.$cstNode)===null||i===void 0?void 0:i.range)}),r.$children.forEach((e,t)=>e.$childIndex=t)}var rD=class extends Pg.LangiumParser{constructor(e){super(e),this.nodeBuilder=new tD(e)}fillNode(e){super.assignMandatoryProperties(e),(0,Pg.isAstNode)(e)&&Nx(e)}construct(e){let t=super.construct(e);return(0,Pg.isAstNode)(t)&&Nx(t),t}};bl.SysMLParser=rD;function Xtt(r){let e=Oae(r);return e.finalize(),e}bl.createSysMLParser=Xtt;function Oae(r){let e=r.Grammar,t=r.parser.Lexer,n=new rD(r);return(0,xtt.createParser)(e,n,t.definition)}bl.prepareSysMLParser=Oae;Pg.LangiumParser.prototype.assignWithoutOverride=function(r,e){let t=r.$type!==void 0;for(let[n,i]of Object.entries(e)){let a=r[n];a===void 0?r[n]=i:Array.isArray(a)&&Array.isArray(i)&&(i.push(...a),r[n]=i)}if(!t&&e.$type&&(this.assignMandatoryProperties(r),Nx(r)),e.$cstNode){let n=e.$cstNode.feature;if((0,Btt.isRuleCall)(n)&&n.rule.ref&&!n.rule.ref.fragment){let i=(0,Pg.streamCst)(e.$cstNode).iterator(),a=i.next();for(;!a.done;){let s=a.value;s.element===e?Object.defineProperty(s,"element",{get(){var o;return(o=r.$cstNode.element)!==null&&o!==void 0?o:r},set(o){Object.defineProperty(s,"element",o)},configurable:!0}):i.prune(),a=i.next()}}}return r}});var Lx=p(nD=>{"use strict";Object.defineProperty(nD,"__esModule",{value:!0});nD.SysMLNodeDescriptionProvider=void 0;var Jtt=be(),xx=class{constructor(e){this.astNodeLocator=e.workspace.AstNodeLocator}createDescription(e,t,n=(0,Jtt.getDocument)(e)){return{node:e,name:t,type:e.$type,documentUri:n.uri,path:this.astNodeLocator.getAstNodePath(e)}}};nD.SysMLNodeDescriptionProvider=xx});var Fae=p(Eg=>{"use strict";Object.defineProperty(Eg,"__esModule",{value:!0});Eg.FindStdlibRequest=Eg.RegisterTextEditorCommandsRequest=void 0;var iD=Pe(),kae;(function(r){r.method="sysml/registerTextEditorCommands",r.messageDirection=iD.MessageDirection.serverToClient,r.type=new iD.ProtocolRequestType(r.method)})(kae||(Eg.RegisterTextEditorCommandsRequest=kae={}));var Iae;(function(r){r.method="sysml/findStdlib",r.messageDirection=iD.MessageDirection.serverToClient,r.type=new iD.ProtocolRequestType0(r.method),r.ProgressToken="sysml/findStdlib/progress"})(Iae||(Eg.FindStdlibRequest=Iae={}))});var jx=p(Hm=>{"use strict";var Qtt=Hm&&Hm.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Ztt=Hm&&Hm.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Qtt(e,r,t)};Object.defineProperty(Hm,"__esModule",{value:!0});Ztt(Fae(),Hm)});var Wx=p(Nc=>{"use strict";var Al=Nc&&Nc.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},Bx=Nc&&Nc.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Nc,"__esModule",{value:!0});Nc.SysMLExecuteCommandHandler=void 0;var Ux=be(),Bs=Pe(),Nae=_n(),Fc=D(),Cl=an(),ert=jx(),qae=Km(),Kx=Map,aD=new Kx,Gx=new Kx,xae=new Kx;function trt(r){return function(e,t){return Bx(this,void 0,void 0,function*(){let n=r.call(this,e,t);return Promise.resolve(n).then(i=>{console.log(typeof i=="string"?i:JSON.stringify(i,void 0,2))}),n})}}function Hx(r,e,t){r.set(e,t),r.set(e+".console",trt(t))}function Lae(r,e,t){return function(n,i){if(n.length>0)return e.call(t!=null?t:this,n[0],i);throw new Error(`No arguments provided for ${r}`)}}function Og(r){return function(e,t,n){let i=n.value;i&&Hx(aD,r,Lae(r,i))}}function jae(r,e,t){return function(n,i){return e.call(t!=null?t:this,i)}}function Vx(r){return(e,t,n)=>{let i=n.value;i&&Hx(Gx,r,jae(r,i))}}function Uae(r,e,t){return function(n,i){if(n.length>0)return e.call(t!=null?t:this,n[0],i);throw new Error(`No arguments provided for ${r}`)}}function rrt(r){return(e,t,n)=>{let i=n.value;i&&Hx(xae,r,Uae(r,i))}}var da=class extends Ux.AbstractExecuteCommandHandler{constructor(e){super(),this.documents=e.workspace.LangiumDocuments,this.builder=e.workspace.DocumentBuilder,this.registry=e.ServiceRegistry,this.connection=e.lsp.Connection,this.shared=e,e.lsp.LanguageServer.onInitialized(t=>{var n;this.registerCustomClientCommands(),(n=this.connection)===null||n===void 0||n.sendRequest(ert.RegisterTextEditorCommandsRequest.type,{commands:Array.from(aD.keys())})})}registerEditorCommand(e,t,n=this){return this.registerCustomCommand(e,t,Lae,n)}registerSimpleCommand(e,t,n=this){return this.registerCustomCommand(e,t,jae,n)}registerDocumentCommand(e,t,n=this){return this.registerCustomCommand(e,t,Uae,n)}registerCustomCommand(e,t,n,i){let a=n(e,t,i);return this.registeredCommands.set(e,a),Bs.Disposable.create(()=>{this.registeredCommands.get(e)===a&&this.registeredCommands.delete(e)})}registerCustomClientCommands(){for(let[e,t]of aD.entries())this.registeredCommands.set(e,t)}registerCommands(e){let t=n=>{for(let[i,a]of n.entries())e(i,a)};t(Gx),t(xae)}dumpAst(e,t=Bs.CancellationToken.None){let n=this.findCursorNode(e);if(n)return(0,Cl.toJSON)(n,Cl.JSONreplacer)}dumpMeta(e,t=Bs.CancellationToken.None){let n=this.findCursorNode(e);if(n!=null&&n.$meta)return(0,Cl.toJSON)(n.$meta,Cl.JSONMetaReplacer)}mro(e,t=Bs.CancellationToken.None){var n;let i=(n=this.findCursorNode(e))===null||n===void 0?void 0:n.$meta;return i!=null&&i.is(Fc.Type)?(0,Ux.stream)([[i.qualifiedName,i.nodeType(),"self"]]).concat(i.allSpecializations().map(a=>{var s;return[(s=a.element())===null||s===void 0?void 0:s.qualifiedName,a.nodeType(),a.isImplied?"implicit":"explicit"]})).map(([a,s,o])=>`${a} (${s}, ${o})`).toArray():[]}children(e,t=Bs.CancellationToken.None){var n;let i=(n=this.findCursorNode(e))===null||n===void 0?void 0:n.$meta;return i!=null&&i.is(Fc.Element)?(0,qae.makeLinkingScope)(i,{skipParents:!0}).getAllElements().map(a=>`${a.name} [${(0,Fc.isElement)(a.node)?a.node.$meta.qualifiedName:""}]`).toArray():[]}scope(e,t=Bs.CancellationToken.None){var n;let i=(n=this.findCursorNode(e))===null||n===void 0?void 0:n.$meta;return i!=null&&i.is(Fc.Element)?(0,qae.makeLinkingScope)(i).getAllExportedElements().map(([a,s])=>{var o;return`${a} [${(o=s.element())===null||o===void 0?void 0:o.qualifiedName}]`}).toArray():[]}evaluate(e,t=Bs.CancellationToken.None){var n;let i=(n=this.findCursorNode(e))===null||n===void 0?void 0:n.$meta;if(!i)return;let a=this.shared.Evaluator;if(i.is(Fc.InlineExpression)){let s=i.owner();for(;s&&!s.is(Fc.Element);)s=s.owner();if(s)return(0,Cl.toJSON)(a.evaluate(i,s),Cl.JSONreplacer)}else if(i.is(Fc.Feature)){if(!i.value)return;let s=i.value.element();return s?(0,Cl.toJSON)(a.evaluate(s,i),Cl.JSONreplacer):void 0}else if(i.is(Fc.FeatureValue)){let s=i.element();return s?(0,Cl.toJSON)(a.evaluate(s,i.parent()),Cl.JSONreplacer):void 0}}getEditorCommands(e=Bs.CancellationToken.None){return Array.from(aD.keys())}getSimpleCommands(e=Bs.CancellationToken.None){return Array.from(Gx.keys())}getAllCommands(e=Bs.CancellationToken.None){return this.commands}updateDocument(e,t=Bs.CancellationToken.None){return Bx(this,void 0,void 0,function*(){let n=Nae.URI.from(e);yield this.builder.update([n],[],t)})}executeCommand(e,t,n){return Bx(this,void 0,void 0,function*(){let i=this.registeredCommands.get(e);if(i)return i.call(this,t,n)})}findCursorNode(e){let t=Nae.URI.parse(e.document.uri);if(!this.documents.hasDocument(t))return;let n=this.documents.getOrCreateDocument(t),i=n.parseResult.value.$cstNode;if(!i)return;let a=(0,Ux.findDeclarationNodeAtOffset)(i,n.textDocument.offsetAt(e.selection.active));return a==null?void 0:a.element}};Nc.SysMLExecuteCommandHandler=da;Al([Og("syside.dumpAst")],da.prototype,"dumpAst",null);Al([Og("syside.dumpMeta")],da.prototype,"dumpMeta",null);Al([Og("syside.mro")],da.prototype,"mro",null);Al([Og("syside.children")],da.prototype,"children",null);Al([Og("syside.scope")],da.prototype,"scope",null);Al([Og("syside.evaluate")],da.prototype,"evaluate",null);Al([Vx("syside.editorCommands")],da.prototype,"getEditorCommands",null);Al([Vx("syside.simpleCommands")],da.prototype,"getSimpleCommands",null);Al([Vx("syside.allCommands")],da.prototype,"getAllCommands",null);Al([rrt("syside.updateDocument")],da.prototype,"updateDocument",null)});var Jx=p(qc=>{"use strict";var sD=qc&&qc.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})},Hae=qc&&qc.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(qc,"__esModule",{value:!0});qc.SysMLWorkspaceManager=void 0;var Bae=be(),Gae=Pe(),oD=_n(),zx=jx(),Yx=Hae(I_()),nrt=Hae(require("path")),Kae=Wk(),Xx=class extends Bae.DefaultWorkspaceManager{constructor(e){super(e),this.fileSystemProvider=e.workspace.FileSystemProvider,this.config=e.workspace.ConfigurationProvider,this.connection=e.lsp.Connection,this.extensions=e.ExtensionManager}initializeWorkspace(e,t){let n=Object.create(null,{initializeWorkspace:{get:()=>super.initializeWorkspace}});return sD(this,void 0,void 0,function*(){yield this.config.firstTimeSetup(),!this.config.get().skipWorkspaceInit&&(yield this.loadPlugins(e),yield n.initializeWorkspace.call(this,e,t))})}loadPlugins(e){return sD(this,void 0,void 0,function*(){let t=this.config.get().plugins,n=e.map(i=>{let a=oD.URI.parse(i.uri);this.extensions.loadScripts(t.map(s=>(0,Kae.isUriLike)(s)?oD.URI.parse(s):nrt.default.isAbsolute(s)?oD.URI.file(s):oD.Utils.joinPath(a,s)))});yield Promise.allSettled(n)})}loadAdditionalDocuments(e,t){var n;return sD(this,void 0,void 0,function*(){if(!this.config.get().standardLibrary)return;let a=this.fileSystemProvider.standardLibrary;if(!a||!this.fileSystemProvider.existsSync(a)){if(a){(n=this.connection)===null||n===void 0||n.sendRequest(Gae.ShowMessageRequest.type,{type:Gae.MessageType.Error,message:`Standard library path '${a||""}' does not exist`});return}let c=yield this.requestClientStdlibDir();if(!c)return;a=(0,Kae.pathToURI)(c)}let s=yield this.fileSystemProvider.readDirectory(a),o=[],u=this.serviceRegistry.all.flatMap(c=>c.LanguageMetaData.fileExtensions);for(let c of s)this.includeEntry(e[0],c,u)&&(c.isFile?o.push(c.uri):s.push(...yield this.fileSystemProvider.readDirectory(c.uri)));yield this.fileSystemProvider.preloadFiles(o),o.forEach(c=>t(this.langiumDocuments.getOrCreateDocument(c))),console.log(`Collected standard library:
${JSON.stringify(o.map(c=>c.toString()),void 0,2)}`)})}requestClientStdlibDir(){var e;return sD(this,void 0,void 0,function*(){if(!this.connection)return;let t=(0,Yx.default)()+5e3,n=(e=this.connection)===null||e===void 0?void 0:e.onProgress(zx.FindStdlibRequest.type,zx.FindStdlibRequest.ProgressToken,()=>{t=(0,Yx.default)()+5e3}),i=!1,a=this.connection.sendRequest(zx.FindStdlibRequest.type),s=new Promise((u,c)=>{let f=()=>{i?u():(0,Yx.default)()>t?c(Bae.OperationCancelled):setTimeout(f,1e3)};f()}),o=yield Promise.race([a,s]).finally(()=>{n.dispose(),i=!0});if(typeof o=="string")return o})}};qc.SysMLWorkspaceManager=Xx});var eL=p(xc=>{"use strict";var irt=xc&&xc.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(xc,"__esModule",{value:!0});xc.SysMLDocuments=xc.SysMLDocumentFactory=void 0;var lD=be(),art=Ae(),Vae=irt(I_()),Qx=class extends lD.DefaultLangiumDocumentFactory{constructor(e){super(e),this.metamodelBuilder=e.workspace.MetamodelBuilder,this.config=e.workspace.ConfigurationProvider}update(e){let t=super.update(e);return this.onCreated(t)}createLangiumDocument(e,t,n,i){let a=super.createLangiumDocument(e,t,n,i);return a.parseDuration=e.duration,this.onCreated(a)}onCreated(e){return e.uriString=e.uri.toString(),e.progress=0,e.exports=new Map,e.namedElements=new Map,e.astNodes=(0,art.streamAst)(e.parseResult.value).toArray(),e.modelDiagnostics=new lD.MultiMap,e.onInvalidated=new lD.MultiMap,e.commentsAttached=!1,this.metamodelBuilder.onParsed(e),e}parse(e,t){let n=(0,Vae.default)(),i=super.parse(e,t),a=(0,Vae.default)()-n;return this.config.get().logStatistics&&console.info(`Parsed ${e.toString()} in ${a.toFixed(2)} ms (${(t.length/a).toFixed(0)} bytes/ms)`),Object.assign(Object.assign({},i),{duration:a})}};xc.SysMLDocumentFactory=Qx;var Zx=class extends lD.DefaultLangiumDocuments{invalidateDocument(e){let t=super.invalidateDocument(e);return t&&(t.progress=0,t.exports.clear(),t.namedElements.clear(),t.modelDiagnostics.clear(),t.onInvalidated.values().forEach(n=>n()),t.onInvalidated.clear()),t}deleteDocument(e){let t=super.deleteDocument(e);return t==null||t.onInvalidated.values().forEach(n=>n()),t}};xc.SysMLDocuments=Zx});var tL=p(pa=>{"use strict";Object.defineProperty(pa,"__esModule",{value:!0});pa.DefaultSysMLConfig=pa.DefaultTraceConfig=pa.DefaultBuildOptions=pa.DefaultDebugConfig=void 0;var srt=Wn();pa.DefaultDebugConfig={scopeInLinkingErrors:"none",stacktraceInLinkingErrors:!0,linkingTrace:!1};pa.DefaultBuildOptions={validationChecks:"all",ignoreMetamodelErrors:!1,standardLibrary:"standard",standalone:!1};pa.DefaultTraceConfig={server:"off"};pa.DefaultSysMLConfig={standardLibrary:!0,standardLibraryPath:void 0,skipWorkspaceInit:!1,debug:pa.DefaultDebugConfig,defaultBuildOptions:pa.DefaultBuildOptions,logStatistics:!0,trace:pa.DefaultTraceConfig,plugins:[],formatting:Object.assign(Object.assign({},srt.DefaultFormatOptions),{lineWidth:120})}});var iL=p(kg=>{"use strict";var H$=kg&&kg.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(kg,"__esModule",{value:!0});kg.SysMLSemanticTokenProvider=void 0;var Vm=be(),ort=D(),V$=Pe(),lrt=Wn(),Ua=lg(),nL=class extends Vm.AbstractSemanticTokenProvider{constructor(e){super(e),this.cachedTokens=new Map,this.inBuild=new Set,this.built=0,this.supportsRefresh=!1,this.connection=e.shared.lsp.Connection,this.builder=e.shared.workspace.DocumentBuilder,this.highlightMap=lrt.typeIndex.expandAndMerge({Element:[this.element],ElementReference:[this.elementReference],LiteralNumber:[this.literalNumber],LiteralString:[this.literalString],Comment:[this.comment],TextualRepresentation:[this.textualRep],OperatorExpression:[this.operatorExpression]}),this.builder.onUpdate((n,i)=>H$(this,void 0,void 0,function*(){this.inBuild.clear(),this.built=0,n.forEach(a=>{let s=a.toString(),o=this.cachedTokens.get(s);o?this.cachedTokens.delete(s):o===null&&this.inBuild.add(s)}),i.forEach(a=>this.cachedTokens.delete(a.toString()))})),this.builder.onBuildPhase(Vm.DocumentState.Linked,n=>H$(this,void 0,void 0,function*(){return this.refresh(n)}));let t=e.shared.lsp.LanguageServer.onInitialize(n=>{var i,a,s;this.supportsRefresh=(s=this.connection&&((a=(i=n.capabilities.workspace)===null||i===void 0?void 0:i.semanticTokens)===null||a===void 0?void 0:a.refreshSupport))!==null&&s!==void 0?s:!1,t.dispose()});this.builder.onDocumentPhase(Vm.DocumentState.Linked,n=>{this.inBuild.has(n.uriString)&&(this.built++,this.inBuild.size===this.built&&(this.refresh(this.inBuild),this.inBuild.clear(),this.built=0))})}refresh(e){var t;if(!this.supportsRefresh)return;let n=!1;for(let i of e){let a=typeof i=="string"?i:i.uriString;this.cachedTokens.get(a)===null&&(n=!0,this.tokensBuilders.delete(a),this.cachedTokens.delete(a))}n&&((t=this.connection)===null||t===void 0||t.sendRequest(V$.SemanticTokensRefreshRequest.method))}highlightElement(e,t){let n=this.highlightMap.get(e.$type);if(n)for(let i of n)i.call(this,e,t)}element(e,t,n){if(n!=null||(n=(0,Ua.tokenType)(e.$meta)),!n||!(e.declaredName||e.declaredShortName))return;let i=(0,Ua.tokenModifiers)(e.$meta);i.push(Ua.SysMLSemanticTokenModifiers.declaration),e.declaredName&&t({node:e,property:"declaredName",type:n,modifier:i}),e.declaredShortName&&t({node:e,property:"declaredShortName",type:n,modifier:i})}elementReference(e,t){var n;let i=e.$meta.document;if(!i||i.state<Vm.DocumentState.ComputedScopes||!e.$meta.to.cached)return;let a=-1;for(let s of e.parts){++a;let o=(n=s.ref)===null||n===void 0?void 0:n.$meta;if(o!=null&&o.is(ort.Membership)&&(o=o.element()),!o)continue;let u=(0,Ua.tokenType)(o);u&&t({node:e,property:"parts",index:a,type:u,modifier:(0,Ua.tokenModifiers)(o)})}}literalString(e,t){e.$cstNode&&t({node:e,cst:e.$cstNode,type:Ua.SysMLSemanticTokenTypes.string})}literalNumber(e,t){e.$cstNode&&t({node:e,cst:e.$cstNode,type:Ua.SysMLSemanticTokenTypes.number})}comment(e,t){t({node:e,property:"body",type:Ua.SysMLSemanticTokenTypes.annotationBody}),e.locale&&t({node:e,property:"locale",type:Ua.SysMLSemanticTokenTypes.string})}textualRep(e,t){t({node:e,property:"body",type:Ua.SysMLSemanticTokenTypes.annotationBody}),t({node:e,property:"language",type:Ua.SysMLSemanticTokenTypes.string})}operatorExpression(e,t){e.operator&&t({node:e,property:"operator",type:Ua.SysMLSemanticTokenTypes.operator})}createAcceptor(){let e=super.createAcceptor();return t=>{try{e(t)}catch(n){console.error(`Error while resolving semantic highlighting ${n}`),n instanceof Error&&console.error(n.stack)}}}semanticHighlight(e,t,n=V$.CancellationToken.None){let i=Object.create(null,{semanticHighlight:{get:()=>super.semanticHighlight}});var a;return H$(this,void 0,void 0,function*(){try{let s=(a=e.uriString)!==null&&a!==void 0?a:e.uri.toString();if(e.state>=Vm.DocumentState.Linked){let u=this.cachedTokens.get(s);if(u)return u}let o=yield i.semanticHighlight.call(this,e,t,n);return this.cachedTokens.set(s,e.state>=Vm.DocumentState.Linked?o:null),o}catch(s){return rL(s,"full")}})}semanticHighlightRange(e,t,n=V$.CancellationToken.None){let i=Object.create(null,{semanticHighlightRange:{get:()=>super.semanticHighlightRange}});return H$(this,void 0,void 0,function*(){try{return i.semanticHighlightRange.call(this,e,t,n)}catch(a){return rL(a,"range")}})}semanticHighlightDelta(e,t,n=V$.CancellationToken.None){let i=Object.create(null,{semanticHighlightDelta:{get:()=>super.semanticHighlightDelta}});return H$(this,void 0,void 0,function*(){try{return i.semanticHighlightDelta.call(this,e,t,n)}catch(a){return rL(a,"delta")}})}};kg.SysMLSemanticTokenProvider=nL;function rL(r,e){if(r instanceof V$.ResponseError||(0,Vm.isOperationCancelled)(r))throw r;return console.error(`Uncaught error while computing ${e} semantic highlighting: ${String(r)}`),r instanceof Error&&console.error(r.stack),{data:[]}}});var sL=p(uD=>{"use strict";Object.defineProperty(uD,"__esModule",{value:!0});uD.SysMLLanguageServer=void 0;var urt=be(),crt=Xw(),frt=lg(),aL=class extends urt.DefaultLanguageServer{buildInitializeResult(e){let t=super.buildInitializeResult(e);return t.capabilities.semanticTokensProvider&&(t.capabilities.semanticTokensProvider=frt.DefaultSysMLSemanticTokenOptions),t.capabilities.completionProvider&&(t.capabilities.completionProvider.triggerCharacters=[...crt.SUPPORTED_TRIGGER_CHARACTERS]),t}};uD.SysMLLanguageServer=aL});var lL=p(bi=>{"use strict";var Wae=bi&&bi.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(bi,"__esModule",{value:!0});bi.SysMLConfigurationProvider=bi.SETTINGS_KEY=void 0;var drt=be(),prt=Pe(),mrt=an();bi.SETTINGS_KEY="syside";var oL=class extends drt.DefaultConfigurationProvider{constructor(e){super(e),this.fs=e.workspace.FileSystemProvider,this.updateStdlibPath(e.config),this.services=e,this.configChanged=e.Events.onConfigurationChanged,this.languageConfigChanged=Object.fromEntries(e.ServiceRegistry.all.map(t=>[this.toSectionName(t.LanguageMetaData.languageId),t.Events.onConfigurationChanged])),this.settings[bi.SETTINGS_KEY]=e.config,e.lsp.LanguageServer.onInitialized(t=>{var n;(n=e.lsp.Connection)===null||n===void 0||n.client.register(prt.DidChangeConfigurationNotification.type,{section:bi.SETTINGS_KEY})})}initialize(){let e=Object.create(null,{initialize:{get:()=>super.initialize}});return Wae(this,void 0,void 0,function*(){if(yield e.initialize.call(this),this.workspaceConfig&&this.connection){let t=yield this.connection.workspace.getConfiguration({section:bi.SETTINGS_KEY});this.updateSectionConfiguration(bi.SETTINGS_KEY,t)}})}firstTimeSetup(){return Wae(this,void 0,void 0,function*(){this.initialized||(yield this.initialize())})}getOption(e){return this.get()[e]}get(){return this.settings[bi.SETTINGS_KEY]}updateSectionConfiguration(e,t){var n;let i=this.settings[e];if(e===bi.SETTINGS_KEY){if(!t)return;let a=(0,mrt.mergeWithPartial)(this.services.config,t);super.updateSectionConfiguration(e,a),this.updateStdlibPath(a),this.configChanged.emit(i,a)}else super.updateSectionConfiguration(e,t);(n=this.languageConfigChanged[e])===null||n===void 0||n.emit(i,t)}updateStdlibPath(e){let t=e.standardLibraryPath;this.fs.updateStandardLibrary(t)}toSectionName(e){return e===bi.SETTINGS_KEY?e:`[${e}]`}};bi.SysMLConfigurationProvider=oL});var fL=p(Ig=>{"use strict";var yrt=Ig&&Ig.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Ig,"__esModule",{value:!0});Ig.SysMLHoverProvider=void 0;var zae=be(),hrt=_n(),uL=D(),grt=Ae(),cL=class extends zae.AstNodeHoverProvider{constructor(e){super(e),this.events=e.Events}getAstNodeHoverContent(e){if((0,uL.isElement)(e))return this.getHoverContents(e.$meta,(0,zae.getDocument)(e))}getHoverContent(e,t){let n=Object.create(null,{getHoverContent:{get:()=>super.getHoverContent}});return yrt(this,void 0,void 0,function*(){let i=yield n.getHoverContent.call(this,e,t),a=(yield this.events.onHoverRequest.emit(e,t)).filter(grt.NonNullable);return a.length===0?i:i?(typeof i.contents=="string"?i.contents+=`

`+a.join(`

`):Array.isArray(i.contents)?i.contents.push(...a):i.contents.value+=`

`+a.join(`

`),i):{contents:{value:a.join(`

`),kind:"markdown"}}})}getHoverContents(e,t){let n=`#### \`${e.qualifiedName}\`
\`${e.nodeType()}\``;t&&(n+=` in \`${hrt.Utils.basename(t.uri)}\`  `),n+=`
`;let i=e.documentation;if(i.length===0){if(e.is(uL.Membership)){let a=e.element();a&&(n+=`Alias for \`${a.qualifiedName}\`
`,i=a.documentation,e=a)}if(e.is(uL.Type)){for(let a of e.allTypes())if(i=a.documentation,i.length>0)break}}if(i.length>0&&(n+=`
`,n+=i.map(a=>a.body).join(`

`)),n)return{contents:{kind:"markdown",value:n}}}};Ig.SysMLHoverProvider=cL});var yL=p(Fg=>{"use strict";var dL=Fg&&Fg.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Fg,"__esModule",{value:!0});Fg.SysMLFormatter=void 0;var W$=Pe(),mu=Wn(),pL=_n(),Yae=Ae(),mL=class{constructor(e){this.config=e.shared.workspace.ConfigurationProvider}get contextOptions(){return{forceFormatting:!1,format:this.config.get().formatting,highlighting:!1}}formatDocument(e,t,n){return dL(this,void 0,void 0,function*(){if(e.parseResult.parserErrors.length>0||e.parseResult.lexerErrors.length>0)return[];(0,mu.attachNotes)(e);let i=pL.Utils.extname(e.uri),a=(0,mu.printModelElement)(e.parseResult.value.$meta,i===".sysml"?(0,mu.defaultSysMLPrinterContext)(this.contextOptions):(0,mu.defaultKerMLPrinterContext)(this.contextOptions)),s=(0,Yae.printDoc)(a,yield this.getPrinterOptions(e,t)).text;return[W$.TextEdit.replace(W$.Range.create(e.textDocument.positionAt(0),e.textDocument.positionAt(e.textDocument.getText().length)),s)]})}formatDocumentRange(e,t,n){return this.doFormatRange(e,t.range,t,n)}formatDocumentOnType(e,t,n){return this.doFormatRange(e,W$.Range.create(t.position,t.position),t,n)}get formatOnTypeOptions(){}doFormatRange(e,t,n,i){return dL(this,void 0,void 0,function*(){if(e.parseResult.parserErrors.length>0||e.parseResult.lexerErrors.length>0)return[];(0,mu.attachNotes)(e);let a=pL.Utils.extname(e.uri),s=(0,mu.collectPrintRange)(e,{offset:e.textDocument.offsetAt(t.start),end:e.textDocument.offsetAt(t.end)});if(!s)return[];let o=(0,mu.printModelRange)(s,a===".sysml"?(0,mu.defaultSysMLPrinterContext)(this.contextOptions):(0,mu.defaultKerMLPrinterContext)(this.contextOptions)),u=yield this.getPrinterOptions(e,n);u.addFinalNewline=!1;let c=(0,Yae.printDoc)(o,u).text,f=W$.Range.create(e.textDocument.positionAt(s.range.offset),e.textDocument.positionAt(s.range.end));return[W$.TextEdit.replace(f,c)]})}getPrinterOptions(e,t){var n;return dL(this,void 0,void 0,function*(){let i=(n=yield this.config.getConfiguration(pL.Utils.extname(e.uri).replace(".",""),"syside.formatter.lineWidth"))!==null&&n!==void 0?n:this.config.get().formatting.lineWidth,a=e.textDocument.getText(),s=a.lastIndexOf(`
`);return{lineEnd:a.charAt(s-1)==="\r"?`\r
`:`
`,lineWidth:i!=null?i:100,tabWidth:t.options.tabSize,useSpaces:t.options.insertSpaces,addFinalNewline:t.options.insertFinalNewline||e.textDocument.getText().endsWith(`
`),highlighting:!1}})}};Fg.SysMLFormatter=mL});var gL=p(cD=>{"use strict";Object.defineProperty(cD,"__esModule",{value:!0});cD.createSysMLGrammarConfig=void 0;var vrt=yt(),_rt=l0(),hL,$rt=["ID","UNRESTRICTED_NAME"];function Trt(r){if(hL)return hL;let e=(0,_rt.createGrammarConfig)(r),t=r.Grammar,n="";for(let i of $rt){let a=t.rules.find(o=>o.name===i);if(!a||!(0,vrt.isRegexToken)(a.definition))continue;let s=`^${a.definition.regex}$`;n.length===0?n=s:n+="|"+s}return n.length>0&&(e.nameRegexp=new RegExp(n)),hL=e,e}cD.createSysMLGrammarConfig=Trt});var _L=p(fD=>{"use strict";Object.defineProperty(fD,"__esModule",{value:!0});fD.KerMLValidationRegistry=void 0;var Xae=Ag(),vL=class extends Xae.BaseValidationRegistry{constructor(e){super(e);let t=e.validation.KerMLValidator;this.registerBoundRules(Xae.ValidationRules.kerml,t)}};fD.KerMLValidationRegistry=vL});var dD=p(Ba=>{"use strict";var Rrt=Ba&&Ba.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),brt=Ba&&Ba.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),Be=Ba&&Ba.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},Crt=Ba&&Ba.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&Rrt(e,r,t);return brt(e,r),e},Qae;Object.defineProperty(Ba,"__esModule",{value:!0});Ba.KerMLValidator=void 0;var Jae=be(),x=Crt(D()),Dt=Wn(),qe=Ag(),Art=Ae(),Oe=class{constructor(e){this.typeRelationshipNotSelf={[x.Differencing]:{code:"validateTypeDifferencingTypesNotSelf",message:"A Type cannot be one of its own differencingTypes."},[x.Intersecting]:{code:"validateTypeIntersectingTypesNotSelf",message:"A Type cannot be one of its own intersectingTypes."},[x.Unioning]:{code:"validateTypeUnioningTypesNotSelf",message:"A Type cannot be one of its own unioningTypes."},[x.FeatureChaining]:{code:"validateFeatureChainingFeaturesNotSelf",message:"A Feature cannot be one of its own chainingFeatures."}},this.typeRelationshipNotOne={[x.Differencing]:{code:"validateTypeOwnedDifferencingNotOne",message:"A Type cannot have exactly one ownedDifferencing."},[x.Intersecting]:{code:"validateTypeOwnedIntersectingNotOne",message:"A Type cannot have exactly one ownedIntersecting."},[x.Unioning]:{code:"validateTypeOwnedUnioningNotOne",message:"A Type cannot have exactly one ownedUnioning."},[x.FeatureChaining]:{code:"validateFeatureChainingFeatureNotOne",message:"A Feature cannot have exactly one chainingFeatures."}},this.BooleanOperators=[Dt.OPERATORS.NOT,Dt.OPERATORS.XOR,Dt.OPERATORS.AND,Dt.OPERATORS.BITWISE_AND,Dt.OPERATORS.OR,Dt.OPERATORS.BITWISE_OR],this.ComparisonOperators=[Dt.OPERATORS.EQUALS,Dt.OPERATORS.SAME,Dt.OPERATORS.NOT_EQUALS,Dt.OPERATORS.NOT_SAME,Dt.OPERATORS.IS_TYPE,Dt.OPERATORS.HAS_TYPE,Dt.OPERATORS.LESS,Dt.OPERATORS.LESS_EQUAL,Dt.OPERATORS.GREATER,Dt.OPERATORS.GREATER_EQUAL],this.index=e.workspace.IndexManager,this.fs=e.workspace.FileSystemProvider}validateElementIsImpliedIncluded(e,t){!e.isImpliedIncluded&&e.ownedElements().filter(Dt.BasicMetamodel.is(x.Relationship)).some(n=>n.isImplied)&&t("error","Element cannot have implied relationships included.",{element:e,code:"validateElementIsImpliedIncluded"})}validateNamespaceDistinguishability(e,t){let n=new Jae.MultiMap;for(let i of e.ownedElements()){let a,s;if(i.is(x.Membership)){if(i.nodeType()===x.Membership&&!i.isAlias)return;let o=i.isAlias?i:i.element();if(!o)continue;a=i,s=o}else if(i.is(x.MembershipImport)&&!i.isRecursive){let o=i.element();if(!o)continue;a=o,s=i}else continue;a.name&&n.add(a.name,[s,"declaredName"]),a.shortName&&a.shortName!==a.name&&n.add(a.shortName,[s,"declaredShortName"])}for(let[i,a]of n.entriesGroupedByKey())if(!(a.length<2))for(let[s,o]of a)t("warning",`Duplicate of another member named ${i}.`,{element:s,code:"validateNamespaceDistinguishability",property:o})}validateSpecializationSpecificNotConjugated(e,t){if(e.isImplied)return;let n=e.source();if(n!=null&&n.is(x.Type)&&n.specializations(x.Conjugation).length>0){let i=e.ast();t("error","Conjugated type cannot be a specialized type.",{element:e,code:"validateSpecializationSpecificNotConjugated",property:i!=null&&i.sourceRef?"sourceRef":i!=null&&i.sourceChain?"sourceChain":"source"})}}validateTypeAtMostOneConjugator(e,t){let n=e.specializations(x.Conjugation);n.length>1&&this.apply("warning",n,"Type can have at most one conjugator.",t,{code:"validateTypeAtMostOneConjugator"})}validateTypeRelatesTypesNotSelf(e,t){e.typeRelationships.forEach(n=>{if(n.element()!==e)return;let i=this.typeRelationshipNotSelf[n.nodeType()];i&&t("error",i.message,{element:n,code:i.code})})}validateTypeRelationshipNotOne(e,t){let n={};e.typeRelationships.forEach(i=>{var a,s;((a=n[s=i.nodeType()])!==null&&a!==void 0?a:n[s]=[]).push(i)}),Object.entries(n).forEach(([i,a])=>{let s=this.typeRelationshipNotOne[i];!s||a.length!==1||this.apply("error",a,s.message,t,{code:s.code})})}validateTypeOwnedMultiplicity(e,t){let n=(0,Jae.stream)(e.children).filter(Dt.BasicMetamodel.is(x.OwningMembership)).map(i=>i.element()).nonNullable().filter(Dt.BasicMetamodel.is(x.Multiplicity)).tail(e.multiplicity?0:1);this.apply("warning",n,"A Type may have at most one ownedMember that is a Multiplicity.",t,{code:"validateTypeOwnedMultiplicity"})}validateMultiplicityDomain(e,t){let n=e.owner();if(!(n!=null&&n.is(x.Type)))return;let i=e.featuredBy;if(n.is(x.Feature)){let a=n.featuredBy;i!==a&&i.length!==a.length&&i.some(s=>!a.includes(s))&&this.apply("warning",i,"Feature multiplicity featuringTypes must be the same as those of the Feature itself.",t,{code:"validateFeatureMultiplicityDomain"})}else i.length!==0&&this.apply("warning",i,"Classifier multiplicity featuringTypes must be empty.",t,{code:"validateClassifierMultiplicityDomain"})}validateFeatureTyping(e,t){e.allTypings().length===0&&!e.typeRelationships.find(n=>n.is(x.FeatureTyping))&&t("error","A Feature must be typed by at least one type.",{element:e,property:"heritage",code:"validateFeatureTyping"})}validateFeatureOwnedReferenceSubsetting(e,t){let n=e.specializations(x.ReferenceSubsetting);n.length>1&&this.apply("warning",n,"A Feature must have at most one ownedSubsetting that is a ReferenceSubsetting.",t,{code:"validateFeatureOwnedReferenceSubsetting"})}validateFeatureChainingFeatureConformance(e,t){let n=e.element();if(!n)return;let i=e.source().chainings,a=i.indexOf(e);if(a>0){let s=i[a-1].element();if(!s)return;n.featuredBy.every(o=>s.conforms(o))||t("error","A chainingFeature must be featured by the previous chainingFeature",{element:e,code:"validateFeatureChainingFeatureConformance"})}}validateRedefinitionFeaturingTypes(e,t){let n=e.source(),i=e.element();if(!n||!i||i.parent()===e)return;let a=n.featuredBy,s=i.featuredBy;a.every(o=>s.includes(o))&&t("error",a.length===0?"A package level Feature cannot redefine other Features.":"Owner of redefining feature cannot be the same as owner of the redefined feature.",{element:e,code:"validateRedefinitionFeaturingTypes"})}validateSubsettingMultiplicityConformance(e,t,n,i){var a,s,o,u;let c=(s=(a=t.multiplicity)===null||a===void 0?void 0:a.element())===null||s===void 0?void 0:s.bounds,f=t.isEnd;if(!c||f!==n.isEnd)return;let d=(u=(o=n.multiplicity)===null||o===void 0?void 0:o.element())===null||u===void 0?void 0:u.bounds;if(!d)return;let[m,h]=e.nodeType()===x.Redefinition?["Redefining","redefined"]:["Subsetting","subsetted"];e.nodeType()===x.Redefinition&&!f&&c.lower!==void 0&&d.lower!==void 0&&c.lower<d.lower&&i("warning",`${m} feature should not have smaller multiplicity lower bound (${c.lower}) than ${h} feature (${d.lower})`,{element:t,property:"multiplicity",code:"validateRedefinitionMultiplicityConformance"}),c.upper!==void 0&&d.upper!==void 0&&c.upper>d.upper&&i("warning",`${m} feature should not have larger multiplicity upper bound (${c.upper}) than ${h} feature (${d.upper})`,{element:t,property:"multiplicity",code:"validateSubsettingMultiplicityConformance"})}validateSubsettingUniquenessConformance(e,t,n,i){!n.isNonUnique&&t.isNonUnique&&i("error",e.nodeType()===x.Redefinition?"Redefining feature cannot be nonunique if redefined feature is unique":"Subsetting feature cannot be nonunique if subsetted feature is unique",{element:e,property:"sourceRef",code:"validateSubsettingUniquenessConformance"})}validateSubsettingFeaturingTypes(e,t,n,i){var a;let s=n.featuredBy;s.length>0&&!s.every(o=>this.isAccessibleFrom(t,o))&&i(!((a=t.owner())===null||a===void 0)&&a.is(x.ItemFlowEnd)?"error":"warning","Invalid subsetting, must be an accessible feature (use dot notation for nesting).",{element:e,code:"validateSubsettingFeaturingTypes"})}isAccessibleFrom(e,t){let n=e.featuredBy;return n.length==0&&t.qualifiedName=="Base::Anything"||n.some(i=>i.conforms(t)||i.is(x.Feature)&&this.isAccessibleFrom(i,t))}validateSubsetting(e,t){var n,i;if(e.isImplied)return;let a=e.source(),s=e.element();!a||!s||!((n=a.owner())===null||n===void 0)&&n.is(x.Connector)||!((i=s.owner())===null||i===void 0)&&i.is(x.Connector)||(this.validateSubsettingMultiplicityConformance(e,a,s,t),this.validateSubsettingUniquenessConformance(e,a,s,t),this.validateSubsettingFeaturingTypes(e,a,s,t))}validateDatatypeSpecialization(e,t){this.apply("error",e.specializations(x.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(x.Class,x.Association)}),"A DataType must not specialize a Class or an Association.",t,{code:"validateDatatypeSpecialization",property:"targetRef"})}validateClassSpecialization(e,t){this.apply("error",e.specializations(x.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(x.DataType,x.Association)}),"A Class must not specialize a DataType or an Association.",t,{code:"validateClassSpecialization",property:"targetRef"})}validateAssocStructSpecialization(e,t){this.apply("error",e.specializations(x.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(x.DataType)}),`An ${e.is(x.Interaction)?x.Interaction:x.AssociationStructure} must not specialize a DataType.`,t,{code:"validateClassSpecialization",property:"targetRef"})}validateBinarySpecialization(e,t){if(e.ownedEnds().length>2&&e.conforms("Links::BinaryLink")){let i=e.is(x.Connector);t("error",`Invalid binary ${i?x.Connector:x.Association} - cannot have more than two ends.`,{element:e,code:i?"validateConnectorBinarySpecialization":"validateAssociationBinarySpecialization"})}}validateRelatedTypes(e,t){if(!e.isAbstract&&e.allEnds().length<2){let n=e.is(x.Connector);t("error",`Invalid concrete  ${n?x.Connector:x.Association}, must have at least 2 related elements`,{element:e,code:n?"validateConnectorRelatedFeatures":"validateAssociationRelatedTypes"})}}validateBindingConnectorIsBinary(e,t){e.relatedFeatures().length!==2&&t("error","A BindingConnector must be binary.",{element:e,property:"ends",code:"validateBindingConnectorIsBinary"})}validateBindingConnectorTypeConformance(e,t){let n=e.relatedFeatures().filter(Art.NonNullable);if(n.length!==2)return;let i=a=>{let s=n[a].owningType;return s&&this.isBooleanExpression(s)&&!n[a].allTypings().some(o=>this.index.conforms(o,"Performances::BooleanEvaluation"))};(!this.conformsSymmetrical(n[0].allTypings(),n[1].allTypings())||i(0)||i(1))&&t("warning","Bound features should have conforming types",{element:e,code:"validateBindingConnectorTypeConformance"})}validateConnectorEnds(e,t){var n;let i=e.featuredBy,a=e.connectorEnds();!e.owningType&&e.is(x.ItemFlow)&&(!((n=e.owner())===null||n===void 0)&&n.is(x.Feature))||a.forEach((o,u)=>{var c;let f=(c=o.specializations(x.ReferenceSubsetting).at(0))===null||c===void 0?void 0:c.element();!f||(i.length==0?f.isFeaturedWithin(void 0):i.every(d=>f==null?void 0:f.isFeaturedWithin(d)))||t("warning",`Invalid connector end #${u}, should be an accessible feature (use dot notation for nesting)`,{element:o,code:"checkConnectorTypeFeaturing"})})}validateParameterMembershipOwningType(e,t){let n=e.owner();n&&!n.isAny(x.Behavior,x.Step)&&t("error","A ParameterMembership must be owned by a Behavior or a Step.",{element:e,code:"validateParameterMembershipOwningType"})}validateReturnParameterMembershipCount(e,t){let n=e.is(x.SysMLFunction),i=e.children.filter(Dt.BasicMetamodel.is(x.ReturnParameterMembership));i.length>1&&this.apply("error",i,`${n?"A Function":"An Expression"} must own at most one ReturnParameterMembership.`,t,{code:n?"validateFunctionReturnParameterMembership":"validateExpressionReturnParameterMembership"})}validateResultExpressionMembershipOwningType(e,t){let n=e.owner();n&&!n.isAny(x.SysMLFunction,x.Expression)&&t("error",`The owningType of a ${e.nodeType()} must be a Function or Expression.`,{element:e,code:e.nodeType()===x.ReturnParameterMembership?"validateReturnParameterMembershipOwningType":"validateResultExpressionMembershipOwningType"})}validateFeatureChainExpressionFeatureConformance(e,t){let n=e.targetFeature(),i=e.args.at(0);if(!n||!i)return;let a=i.is(x.Expression)?this.index.findType(i.returnType()):i;a&&n.featuredBy.length>0&&!n.featuredBy.some(s=>a.conforms(s))&&t("error","FeatureChainExpression target must be accessible.",{element:e,property:"children",index:0,code:"validateFeatureChainExpressionFeatureConformance"})}validateFeatureReferenceExpressionReferentIsFeature(e,t){var n;let i=(n=e.expression)===null||n===void 0?void 0:n.element();i&&!i.is(x.Feature)&&t("error","Invalid feature reference expression, must refer to a feature",{element:e,property:"expression",code:"validateFeatureReferenceExpressionReferentIsFeature"})}validateInvocationExpressionArgs(e,t){var n;let i=(n=e.invokes())!==null&&n!==void 0?n:this.index.findType(e.getFunction());if(!i)return;let a=new Set(i.allTypes(void 0,!0).flatMap(o=>o.ownedFeatures()).nonNullable().filter(o=>o.direction!=="out"));if(a.size===0)return;let s=new Set;e.ownedInputParameters().forEach(o=>{let u=o.types(x.Redefinition).toArray();if(u.length===0)return;let c=u.filter(f=>a.has(f));c.length===0?t("error","Input parameter must redefine a parameter of the expression type.",{element:o,code:"validateInvocationExpressionParameterRedefinition"}):c.some(f=>s.has(f))&&t("error","Two parameters cannot redefine the same type parameter.",{element:o,code:"validateInvocationExpressionNoDuplicateParameterRedefinition"}),c.forEach(f=>s.add(f))})}validateOperatorExpressionCastConformance(e,t){if(e.operator!==Dt.OPERATORS.AS)return;let n=e.args.at(0),i=(0,Dt.typeArgument)(e);if(!i||!(n!=null&&n.isAny(x.Expression,x.SysMLFunction)))return;let a=this.index.findType(n.returnType());if(!a)return;let s=a.is(x.Feature)?a.allTypings():[a],o=i.is(x.Feature)?i.allTypings():[i];this.conformsSymmetrical(s,o)||t("error","Cast argument should have conforming types.",{element:e,code:"validateOperatorExpressionCastConformance"})}validateOperatorExpressionBracketOperator(e,t){e.operator===Dt.OPERATORS.QUANTITY&&t("warning","Use #(...) operator instead.",{element:e,property:"operator",code:"validateOperatorExpressionBracketOperator"})}validateItemFlowItemFeature(e,t){this.atMostOne("error",e.ownedFeatures().filter(Dt.BasicMetamodel.is(x.ItemFeature)),t,"An ItemFlow must have at most one ownedFeature that is an ItemFeature.",{code:"validateItemFlowItemFeature"})}validateItemFlowEndNestedFeature(e,t){e.ownedFeatureMemberships().count()!==1&&t("error","An ItemFlowEnd must have exactly one ownedFeature.",{element:e,code:"validateItemFlowEndNestedFeature"})}validateItemFlowEndOwningType(e,t){var n;!((n=e.owningType)===null||n===void 0)&&n.is(x.ItemFlow)||t("error","The owningType of an ItemFlowEnd must be an ItemFlow.",{element:e,code:"validateItemFlowEndOwningType"})}validateItemFlowEndSubsetting(e,t){if(!e.specializations(x.Subsetting).some(n=>n.nodeType()!==x.Redefinition))t("error","Cannot identify ItemFlowEnd (use dot notation).",{element:e,code:"validateItemFlowEndSubsetting"});else if(!e.specializations(x.Subsetting).some(n=>!n.isImplied)){let n=e.ownedFeatures().head();n&&n.specializations(x.Redefinition).some(i=>!i.isImplied)&&t("warning","ItemFlowEnd should use dot notation.",{element:e,code:"validateItemFlowEndImplicitSubsetting"})}}validateFeatureValueOverriding(e,t){let n=e.owner();n!=null&&n.is(x.Feature)&&n.allRedefinedFeatures().map(i=>i.value).some(i=>i&&i!=e&&!i.isDefault)&&t("error","Cannot override a non-default feature value.",{element:e,code:"validateFeatureValueOverriding"})}validateMultiplicityRangeBoundResultTypes(e,t){e.range&&!this.isInteger(e.range.element(),Oe.IntegerRangeOperators)&&t("error","The results of the bound Expression(s) of a MultiplicityRange must be Naturals.",{element:e.range,code:"validateMultiplicityRangeBoundResultTypes"})}validateMetadataFeatureMetaclass(e,t){this.validateExactlyOneTyping(e,x.Metaclass,t,"MetadataFeature must be typed by exactly one Metaclass.",{code:"validateMetadataFeatureMetaclass"})}validateMetadataFeatureMetaclassNotAbstract(e,t){this.apply("error",e.specializations(x.FeatureTyping).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAbstract}),"MetadataFeature must be typed by concrete types.",t,{code:"validateMetadataFeatureMetaclassNotAbstract"})}validateMetadataFeatureAnnotatedElement(e,t){let n=e.allFeatures().map(i=>i.element()).nonNullable().filter(i=>!i.isAbstract&&i.conforms("Metaobjects::Metaobject::annotatedElement")).toArray();n.length!==0&&e.annotatedElements().forEach(i=>{var a;let s=(a=i.metaclass)===null||a===void 0?void 0:a.types().head();s&&(n.find(o=>o.types(x.FeatureTyping).every(u=>s.conforms(u)))||t("error",`Cannot annotate ${s.name}.`,{element:e,code:"validateMetadataFeatureAnnotatedElement"}))})}validateMetadataFeatureBody(e,t){e.ownedFeatures().forEach(n=>{var i;n.types(x.Redefinition).map(s=>s.owner()).find(s=>e.conforms(s))||t("error","MetadataFeature owned features must redefine owning-type feature.",{element:n,code:"validateMetadataFeatureBody"});let a=(i=n.value)===null||i===void 0?void 0:i.element();a&&!a.isModelLevelEvaluable()&&t("error","MetadataFeature owned feature values must be model-level evaluable.",{element:a,code:"validateMetadataFeatureBody"}),this.validateMetadataFeatureBody(n,t)})}validateElementFilterMembership(e,t){let n=e.element();n.getFunction()&&!(n!=null&&n.isModelLevelEvaluable())?t("error","The condition Expression must be model-level evaluable",{element:n,code:"validatePackageElementFilterIsModelLevelEvaluable"}):this.isBoolean(n)||t("error","The result parameter of the condition Expression must directly or indirectly specialize ScalarValues::Boolean.",{element:e,property:"target",code:"validatePackageElementFilterIsBoolean"})}checkStandardLibraryPackage(e,t){if(!e.isStandard)return;let n=()=>{t("error","User library packages should not be marked as standard.",{element:e,property:"isStandard",code:"validateLibraryPackageNotStandard"})},i=this.fs.standardLibrary;if(!i){n();return}e.document.uriString.startsWith(i.toString())||n()}atMostOneMember(e,t,n,i,a){this.atMostOne("error",e.featureMembers().filter(Dt.BasicMetamodel.is(t)),n,i,a)}atMostOne(e,t,n,i,a){let s=Array.from(t);s.length<2||this.apply(e,s,i,n,a)}apply(e,t,n,i,a){t.forEach(s=>i(e,n,Object.assign(Object.assign({},a),{element:s})))}conformsSymmetrical(e,t){return e.every(n=>t.some(i=>i.conforms(n)))||t.every(n=>e.some(i=>i.conforms(n)))}expressionResult(e){let t=e.returnType(),n=e.getFunction();if(!t&&n)if(typeof n=="string"){let i=this.index.findGlobalElement(n);i!=null&&i.isAny(x.SysMLFunction,x.Expression)&&(t=i.returnType())}else t=n.returnType();return t}isBoolean(e){if(e.is(x.LiteralBoolean))return!0;let t=this.expressionResult(e);return t&&this.index.conforms(t,"ScalarValues::Boolean")?!0:e.is(x.OperatorExpression)&&this.BooleanOperators.includes(e.operator)&&e.args.every(n=>!n||n.is(x.Expression)&&this.isBoolean(n))}isBooleanExpression(e){var t;if(!e.is(x.Expression))return!1;if(e.isAny(x.LiteralBoolean,x.Predicate)||e.is(x.OperatorExpression)&&this.ComparisonOperators.includes(e.operator))return!0;let n=this.expressionResult(e);if(n&&this.index.conforms(n,"Performances::BooleanEvaluation"))return!0;if(e.is(x.FeatureReferenceExpression)){let i=(t=e.expression)===null||t===void 0?void 0:t.element();if(!(i!=null&&i.is(x.Expression)))return!1;if(this.isBoolean(i))return!0;let a=this.index.findType(this.expressionResult(i));return Boolean((a==null?void 0:a.is(x.Expression))&&this.isBoolean(a))}return!1}isInteger(e,t=Oe.IntegerOperators){if(e.is(x.LiteralInfinity))return!0;if(e.is(x.LiteralNumber))return e.isInteger;let n=this.expressionResult(e);return n&&this.index.conforms(n,"ScalarValues::Integer")?!0:e.is(x.OperatorExpression)&&t.includes(e.operator)&&e.args.every(i=>this.isInteger(i))}validateExactlyOneTyping(e,t,n,i,a){let s=e.allTypings();return s.length!==1||!s.find(o=>o.is(t))?(n("error",i,Object.assign(Object.assign({},a),{element:e})),!1):!0}};Ba.KerMLValidator=Oe;Qae=Oe;Oe.IntegerOperators=[Dt.OPERATORS.MINUS,Dt.OPERATORS.PLUS,Dt.OPERATORS.MULTIPLY,Dt.OPERATORS.MODULO,Dt.OPERATORS.EXPONENT_1,Dt.OPERATORS.EXPONENT_2];Oe.IntegerRangeOperators=[...Qae.IntegerOperators,Dt.OPERATORS.RANGE];Be([(0,qe.validateKerML)(x.Element)],Oe.prototype,"validateElementIsImpliedIncluded",null);Be([(0,qe.validateKerML)(x.Namespace,{bounds:[x.InlineExpression]})],Oe.prototype,"validateNamespaceDistinguishability",null);Be([(0,qe.validateKerML)(x.Specialization)],Oe.prototype,"validateSpecializationSpecificNotConjugated",null);Be([(0,qe.validateKerML)(x.Type)],Oe.prototype,"validateTypeAtMostOneConjugator",null);Be([(0,qe.validateKerML)(x.Type,{sysml:!1})],Oe.prototype,"validateTypeRelatesTypesNotSelf",null);Be([(0,qe.validateKerML)(x.Type)],Oe.prototype,"validateTypeRelationshipNotOne",null);Be([(0,qe.validateKerML)(x.Type,{sysml:!1})],Oe.prototype,"validateTypeOwnedMultiplicity",null);Be([(0,qe.validateKerML)(x.Multiplicity,{sysml:!1})],Oe.prototype,"validateMultiplicityDomain",null);Be([(0,qe.validateKerML)(x.Feature)],Oe.prototype,"validateFeatureTyping",null);Be([(0,qe.validateKerML)(x.Feature)],Oe.prototype,"validateFeatureOwnedReferenceSubsetting",null);Be([(0,qe.validateKerML)(x.FeatureChaining)],Oe.prototype,"validateFeatureChainingFeatureConformance",null);Be([(0,qe.validateKerML)(x.Redefinition)],Oe.prototype,"validateRedefinitionFeaturingTypes",null);Be([(0,qe.validateKerML)(x.Subsetting)],Oe.prototype,"validateSubsetting",null);Be([(0,qe.validateKerML)(x.DataType,{sysml:!1})],Oe.prototype,"validateDatatypeSpecialization",null);Be([(0,qe.validateKerML)(x.Class,{sysml:!1,bounds:[x.AssociationStructure,x.Interaction]})],Oe.prototype,"validateClassSpecialization",null);Be([(0,qe.validateKerML)(x.AssociationStructure,{sysml:!1}),(0,qe.validateKerML)(x.Interaction,{sysml:!1})],Oe.prototype,"validateAssocStructSpecialization",null);Be([(0,qe.validateKerML)(x.Connector),(0,qe.validateKerML)(x.Association)],Oe.prototype,"validateBinarySpecialization",null);Be([(0,qe.validateKerML)(x.Connector),(0,qe.validateKerML)(x.Association)],Oe.prototype,"validateRelatedTypes",null);Be([(0,qe.validateKerML)(x.BindingConnector)],Oe.prototype,"validateBindingConnectorIsBinary",null);Be([(0,qe.validateKerML)(x.BindingConnector)],Oe.prototype,"validateBindingConnectorTypeConformance",null);Be([(0,qe.validateKerML)(x.Connector)],Oe.prototype,"validateConnectorEnds",null);Be([(0,qe.validateKerML)(x.ParameterMembership)],Oe.prototype,"validateParameterMembershipOwningType",null);Be([(0,qe.validateKerML)(x.SysMLFunction),(0,qe.validateKerML)(x.Expression)],Oe.prototype,"validateReturnParameterMembershipCount",null);Be([(0,qe.validateKerML)(x.ReturnParameterMembership),(0,qe.validateKerML)(x.ResultExpressionMembership)],Oe.prototype,"validateResultExpressionMembershipOwningType",null);Be([(0,qe.validateKerML)(x.FeatureChainExpression)],Oe.prototype,"validateFeatureChainExpressionFeatureConformance",null);Be([(0,qe.validateKerML)(x.FeatureReferenceExpression)],Oe.prototype,"validateFeatureReferenceExpressionReferentIsFeature",null);Be([(0,qe.validateKerML)(x.InvocationExpression)],Oe.prototype,"validateInvocationExpressionArgs",null);Be([(0,qe.validateKerML)(x.OperatorExpression)],Oe.prototype,"validateOperatorExpressionCastConformance",null);Be([(0,qe.validateKerML)(x.OperatorExpression,{sysml:!1,bounds:[x.CollectExpression,x.SelectExpression,x.FeatureChainExpression]})],Oe.prototype,"validateOperatorExpressionBracketOperator",null);Be([(0,qe.validateKerML)(x.ItemFlow)],Oe.prototype,"validateItemFlowItemFeature",null);Be([(0,qe.validateKerML)(x.ItemFlowEnd)],Oe.prototype,"validateItemFlowEndNestedFeature",null);Be([(0,qe.validateKerML)(x.ItemFlowEnd)],Oe.prototype,"validateItemFlowEndOwningType",null);Be([(0,qe.validateKerML)(x.ItemFlowEnd)],Oe.prototype,"validateItemFlowEndSubsetting",null);Be([(0,qe.validateKerML)(x.FeatureValue)],Oe.prototype,"validateFeatureValueOverriding",null);Be([(0,qe.validateKerML)(x.MultiplicityRange)],Oe.prototype,"validateMultiplicityRangeBoundResultTypes",null);Be([(0,qe.validateKerML)(x.MetadataFeature,{bounds:[x.MetadataUsage]})],Oe.prototype,"validateMetadataFeatureMetaclass",null);Be([(0,qe.validateKerML)(x.MetadataFeature)],Oe.prototype,"validateMetadataFeatureMetaclassNotAbstract",null);Be([(0,qe.validateKerML)(x.MetadataFeature)],Oe.prototype,"validateMetadataFeatureAnnotatedElement",null);Be([(0,qe.validateKerML)(x.MetadataFeature)],Oe.prototype,"validateMetadataFeatureBody",null);Be([(0,qe.validateKerML)(x.ElementFilterMembership)],Oe.prototype,"validateElementFilterMembership",null);Be([(0,qe.validateKerML)(x.LibraryPackage)],Oe.prototype,"checkStandardLibraryPackage",null)});var $L=p(Ga=>{"use strict";var wrt=Ga&&Ga.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Drt=Ga&&Ga.__setModuleDefault||(Object.create?function(r,e){Object.defineProperty(r,"default",{enumerable:!0,value:e})}:function(r,e){r.default=e}),pe=Ga&&Ga.__decorate||function(r,e,t,n){var i=arguments.length,a=i<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,s;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(r,e,t,n);else for(var o=r.length-1;o>=0;o--)(s=r[o])&&(a=(i<3?s(a):i>3?s(e,t,a):s(e,t))||a);return i>3&&a&&Object.defineProperty(e,t,a),a},Srt=Ga&&Ga.__importStar||function(r){if(r&&r.__esModule)return r;var e={};if(r!=null)for(var t in r)t!=="default"&&Object.prototype.hasOwnProperty.call(r,t)&&wrt(e,r,t);return Drt(e,r),e};Object.defineProperty(Ga,"__esModule",{value:!0});Ga.SysMLValidator=void 0;var Mrt=be(),A=Srt(D()),Gs=Wn(),Prt=dD(),Z=Ag(),ce=class extends Prt.KerMLValidator{isVariation(e){return e.isAny(A.Usage,A.Definition)?e.isVariation:!1}validateVariationMembership(e,t){if(e.isVariation){let[n,i]=e.is(A.Usage)?[A.Usage,"validateUsageVariationMembership"]:[A.Definition,"validateDefinitionVariationMembership"];this.apply("error",e.ownedElements().filter(Gs.BasicMetamodel.is(A.FeatureMembership)).filter(a=>!a.isAny(A.ParameterMembership,A.ObjectiveMembership)),`All ownedMemberships of variation ${n} must be VariantMemberships.`,t,{code:i})}}validateVariationSpecialization(e,t){if(e.isVariation){let[n,i,a]=e.is(A.Usage)?[A.Usage,"validateUsageVariationSpecialization","Definition or Usage"]:[A.Definition,"validateDefinitionVariationSpecialization",A.Definition];this.apply("error",e.specializations().filter(s=>{let o=s.element();return o&&this.isVariation(o)}),`A variation ${n} may not specialize any other variation ${a}.`,t,{code:i})}}validateVariantMembershipOwningNamespace(e,t){let n=e.parent();(!n||!this.isVariation(n))&&t("error","The membershipOwningNamespace of a VariantMembership must be a variation-point Definition or Usage.",{element:e,keyword:"variant",code:"validateVariantMembershipOwningNamespace"})}validateAttributeUsageTyping(e,t){this.validateAllTypings(e,A.DataType,t,"An AttributeUsage must be typed by DataTypes only.",{code:"validateAttributeUsageTyping"})}validateEnumerationUsageTyping(e,t){this.validateExactlyOneTyping(e,A.EnumerationDefinition,t,"An EnumerationUsage must be typed by exactly one EnumerationDefinition.",{code:"validateEnumerationUsageTyping"})}validateEventOccurrenceUsageReference(e,t){this.checkReferencing(e,t,{type:A.EventOccurrenceUsage,reference:A.OccurrenceUsage,info:{code:"validateEventOccurrenceUsageReference"}})}validateOccurrenceDefinitionLifeClass(e,t){let n=e.children.filter(Gs.BasicMetamodel.is(A.OwningMembership)).filter(i=>i.element().nodeType()===A.LifeClass);e.lifeClass&&n.push(e.lifeClass),e.isIndividual?n.length!==1&&this.apply("error",n,"Individual OccurrenceDefinitions must have exactly one LifeClass ownedMember",t,{code:"validateOccurrenceDefinitionLifeClass"}):n.length>0&&this.apply("error",n,"Non-individual OccurrenceDefinitions must have node LifeClass ownedMember",t,{code:"validateOccurrenceDefinitionLifeClass"})}validateOccurrenceUsageTyping(e,t){this.validateAllTypings(e,A.Class,t,"OccurrenceDefinition must be typed by Classes only.",{code:"validateOccurrenceUsageTyping"})}validateOccurrenceUsageIndividual(e,t){let n=e.allTypings().filter(Gs.BasicMetamodel.is(A.OccurrenceDefinition)).filter(i=>i.isIndividual);n.length>1?t("error","An OccurrenceUsage must have at most one occurrenceDefinition with isIndividual = true.",{element:e,code:"validateOccurrenceUsageIndividualDefinition"}):e.isIndividual&&n.length!==1&&t("error","An individual OccurrenceUsage must an individualDefinition.",{element:e,code:"validateOccurrenceUsageIndividualUsage"})}validateItemUsageTyping(e,t){this.validateAllTypings(e,A.Structure,t,"ItemUsage must be typed by Structures only.",{code:"validateItemUsageTyping"})}validatePartUsageTyping(e,t){this.validateAllTypings(e,A.Structure,t,"PartUsage must be typed by Structures only",{code:"validatePartUsageTyping"})&&this.validateAtLeastTyping(e,A.PartDefinition,t,"At least one of the itemDefinitions of a PartUsage must be a PartDefinition.",{code:"validatePartUsagePartDefinition"})}validateConjugatedPortDefinitionOriginalPortDefinition(e,t){var n;e.originalPortDefinition!==((n=e.specializations(A.PortConjugation).at(0))===null||n===void 0?void 0:n.element())&&t("error","The originalPortDefinition of the ownedPortConjugator of a ConjugatedPortDefinition must be the originalPortDefinition of the ConjugatedPortDefinition.",{element:e,code:"validateConjugatedPortDefinitionOriginalPortDefinition"})}validatePortDefinitionConjugatedPortDefinition(e,t){let n=e.children.filter(Gs.BasicMetamodel.is(A.OwningMembership)).filter(i=>i.element().is(A.ConjugatedPortDefinition));e.conjugatedDefinition&&n.push(e.conjugatedDefinition),n.length!==1&&this.apply("error",n,"A PortDefinition must have exactly one ownedMember that is a ConjugatedPortDefinition.",t,{code:"validatePortDefinitionConjugatedPortDefinition"})}validatePortOwnedUsagesNotComposite(e,t){let n=e.ownedFeatures().filter(Gs.BasicMetamodel.is(A.Usage)).filter(o=>!o.is(A.PortUsage)&&o.isComposite),[i,a,s]=e.is(A.PortDefinition)?[A.PortDefinition,"ownedUsages","validatePortDefinitionOwnedUsagesNotComposite"]:[A.PortUsage,"nestedUsages","validatePortUsageNestedUsagesNotComposite"];this.apply("error",n,`The ${a} of a ${i} that are not PortUsages must not be composite.`,t,{code:s})}validatePortUsageTyping(e,t){this.validateAllTypings(e,A.PortDefinition,t,"PortUsages must be typed by PortDefinitions only.",{code:"validatePortUsageTyping"})}validateConnectionUsageTyping(e,t){this.validateAllTypings(e,A.Association,t,"ConnectionUsages must be typed by Associations only.",{code:"validateConnectionUsageTyping"})}validateFlowConnectionEnd(e,t){let n=e.ownedEnds();n.length<=2||this.apply("error",n,"FlowConnectionDefinition can have at most 2 ends.",t,{code:"validateFlowConnectionEnd"})}validateFlowConnectionUsageTyping(e,t){this.validateAllTypings(e,A.Interaction,t,"FlowConnectionUsages must be typed by Interactions only.",{code:"validateFlowConnectionUsageTyping"})}validateInterfaceEnds(e,t){let[n,i]=e.is(A.InterfaceDefinition)?[A.InterfaceDefinition,"validateInterfaceDefinitionEnd"]:[A.InterfaceUsage,"validateInterfaceUsageEnd"];this.apply("error",e.ownedEnds().filter(a=>!a.is(A.PortUsage)),`An ${n} end must be a port.`,t,{code:i})}validateInterfaceUsageTyping(e,t){this.validateAllTypings(e,A.InterfaceDefinition,t,"InterfaceUsages must be typed by InterfaceDefinitions only.",{code:"validateInterfaceUsageTyping"})}validateAllocationUsageTyping(e,t){this.validateAllTypings(e,A.AllocationDefinition,t,"AllocationUsages must be typed by AllocationDefinitions only.",{code:"validateAllocationUsageTyping"})}validateAcceptActionUsageParameters(e,t){this.checkParameters(e,["payload","receiver"],t,{type:A.AcceptActionUsage,info:{code:"validateAcceptActionUsageParameters"}})}validateActionUsageTyping(e,t){this.validateAllTypings(e,A.Behavior,t,"ActionUsages must be typed by Behaviors only.",{code:"validateActionUsageTyping"})}validateAssignmentActionUsageReferent(e,t){e.targetMember||t("error","An assignment must have a Feature referent.",{element:e,code:"validateAssignmentActionUsageReferent"})}validateTriggerInvocationExpression(e,t){let n=e.args.at(0);switch(e.kind){case"at":(!n||!this.isTime(n))&&t("error","An at expression must be a TimeInstantValue.",{element:e,code:"validateTriggerInvocationActionAtArgument"});break;case"when":(!n||!this.isBooleanExpression(n))&&t("error","A when expression must be Boolean.",{element:e,code:"validateTriggerInvocationActionWhenArgument"});break;case"after":(!n||!this.isDuration(n))&&t("error","An after expression must be a DurationValue.",{element:e,code:"validateTriggerInvocationActionAfterArgument"});break}}isTime(e){let t=this.expressionResult(e);return t&&this.index.conforms(t,"Time::TimeInstantValue")?!0:e.is(A.OperatorExpression)&&ce.IntegerOperators.includes(e.operator)&&e.args.every(n=>this.isTime(n)||this.isDuration(n))}isDuration(e){if(this.isDurationExpression(e))return!0;let t=this.expressionResult(e);return t&&this.index.conforms(t,"ISQBase::DurationValue")?!0:e.is(A.OperatorExpression)&&ce.IntegerOperators.includes(e.operator)&&e.args.every(n=>this.isTime(n)||this.isDuration(n))}isDurationExpression(e){if(!e.is(A.OperatorExpression)||e.operator!=Gs.OPERATORS.QUANTITY)return!1;let t=e.args.at(1);if(!t)return!1;let n=this.expressionResult(t);return Boolean(n&&this.index.conforms(n,"ISQBase::DurationUnit"))}validateControlNodeOwningType(e,t){var n;!((n=e.owningType)===null||n===void 0)&&n.isAny(A.ActionDefinition,A.ActionUsage)||t("error","The owningType of a ControlNode must be an ActionDefinition or ActionUsage.",{element:e,code:"validateControlNodeOwningType"})}validatePerformActionUsageReference(e,t){this.checkReferencing(e,t,{type:A.PerformActionUsage,reference:A.ActionUsage,info:{code:"validatePerformActionUsageReference"}})}validateSendActionParameters(e,t){this.checkParameters(e,["payload","sender","receiver"],t,{type:A.SendActionUsage,info:{code:"validateSendActionParameters"}})}validateSendActionReceiver(e,t){var n,i,a,s,o,u;let c=(a=(i=(n=e.receiver)===null||n===void 0?void 0:n.element())===null||i===void 0?void 0:i.value)===null||a===void 0?void 0:a.element();(c!=null&&c.is(A.FeatureReferenceExpression)&&(!((o=(s=c.expression)===null||s===void 0?void 0:s.element())===null||o===void 0)&&o.is(A.PortUsage))||c!=null&&c.is(A.FeatureChainExpression)&&(!((u=c.featureMembers()[0].element())===null||u===void 0)&&u.basicFeature().is(A.PortUsage)))&&t("warning","Sending to a port should be done through 'via' instead of 'to'",{element:e.receiver,code:"validateSendActionReceiver"})}validateExhibitStateUsageReference(e,t){this.checkReferencing(e,t,{type:A.ExhibitStateUsage,reference:A.StateUsage,info:{code:"validateExhibitStateUsageReference"}})}validateStateSubactionMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.StateDefinition,A.StateUsage)||t("error","The owningType of a StateSubactionMembership must be a StateDefinition or a StateUsage.",{element:e,code:"validateStateSubactionMembershipOwningType"})}validateStateParallelSubactions(e,t){let n=e.owningType;if(n!=null&&n.isAny(A.StateDefinition,A.StateUsage)&&n.isParallel){let[i,a,s]=n.is(A.StateDefinition)?[A.StateDefinition,"ownedActions","validateStateDefinitionParallelSubactions"]:[A.StateUsage,"nestedActions","validateStateUsageParallelSubactions"];t("error",`Parallel ${i} ${a} must not have any incomingTransitions or outgoingTransitions.`,{element:e,code:s})}}validateStateSubactionKind(e,t){let n=e.featureMembers().filter(Gs.BasicMetamodel.is(A.StateSubactionMembership)),[i,a]=e.is(A.StateDefinition)?[A.StateDefinition,"validateStateDefinitionStateSubactionKind"]:[A.StateUsage,"validateStateUsageStateSubactionKind"];for(let s of["do","entry","exit"])this.atMostOne("error",n.filter(o=>o.kind===s),t,`A ${i} must not have more than one owned StateSubactionMembership of kind ${s}.`,{code:a})}validateStateUsageTyping(e,t){this.validateAllTypings(e,A.Behavior,t,"StateUsages must be typed by Behaviors only.",{code:"validateStateUsageTyping"})}validateTransitionFeatureMembership(e,t){let n=e.element();if(n)switch(e.kind){case"effect":{n.is(A.ActionUsage)||t("error","TransitionFeature of kind effect must be an ActionUsage.",{element:n,code:"validateTransitionFeatureMembershipEffectAction"});return}case"guard":{(!n.is(A.Expression)||!this.isBoolean(n))&&t("error","TransitionFeature of kind guard must be a boolean expression.",{element:n,code:"validateTransitionFeatureMembershipGuardExpression"});return}case"trigger":{n.is(A.AcceptActionUsage)||t("error","TransitionFeature of kind trigger must be an AcceptActionUsage.",{element:n,code:"validateTransitionFeatureMembershipTriggerAction"});return}}}validateTransitionFeatureMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.is(A.TransitionUsage)||t("error","The owningType of a TransitionFeatureMembership must be a TransitionUsage.",{element:e,code:"validateTransitionFeatureMembershipOwningType"})}validateTransitionUsageParameters(e,t){e.transitionLinkSource||t("error","A TransitionUsage must have a transitionLinkSource.",{element:e,code:"validateTransitionUsageParameters"}),e.accepter&&!e.payload&&t("error","A TransitionUsage with a triggerAction must have a payload.",{element:e,code:"validateTransitionUsageParameters"})}validateTransitionUsageSuccession(e,t){let n=(0,Mrt.stream)([e.then,e.else],e.children).filter(Gs.BasicMetamodel.is(A.OwningMembership)).map(i=>i.element()).filter(Gs.BasicMetamodel.is(A.SuccessionAsUsage)).head();n!=null&&n.relatedFeatures().slice(1).every(i=>i==null?void 0:i.basicFeature().is(A.ActionUsage))||t("error","A TransitionUsage must have an ownedMember that is a Succession with an ActionUsage as its targetFeature.",{element:n!=null?n:e,code:"validateTransitionUsageSuccession"})}validateCalculationUsageTyping(e,t){this.validateExactlyOneTyping(e,A.SysMLFunction,t,"CalculationUsages must be typed by exactly one Function.",{code:"validateCalculationUsageTyping"})}validateAssertConstraintUsageReference(e,t){this.checkReferencing(e,t,{type:A.AssertConstraintUsage,reference:A.ConstraintUsage,info:{code:"validateAssertConstraintUsageReference"}})}validateConstraintUsageTyping(e,t){this.validateExactlyOneTyping(e,A.Predicate,t,"ConstraintUsages must be typed by exactly one Predicate.",{code:"validateConstraintUsageTyping"})}validateSubjectMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.RequirementUsage,A.RequirementDefinition,A.CaseDefinition,A.CaseUsage)||t("error","The owningType of SubjectMembership must be a RequirementDefinition, RequirementUsage, CaseDefinition, or CaseUsage.",{element:e,code:"validateSubjectMembershipOwningType"})}validateActorMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.RequirementUsage,A.RequirementDefinition,A.CaseDefinition,A.CaseUsage)||t("error","The owningType of ActorMembership must be a RequirementDefinition, RequirementUsage, CaseDefinition, or CaseUsage.",{element:e,code:"validateActorMembershipOwningType"})}validateRequirementConstraintMembershipIsComposite(e,t){var n;!((n=e.element())===null||n===void 0)&&n.isComposite||t("error","The ownedConstraint of a RequirementConstraintMembership must be composite.",{element:e,code:"validateRequirementConstraintMembershipIsComposite"})}validateRequirementMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.RequirementUsage,A.RequirementDefinition)||t("error",`The owningType of an ${e.nodeType()} must be a RequirementDefinition or RequirementUsage.`,{element:e,code:`validate${e.nodeType()}OwningType`})}validateRequirementOnlyOneSubject(e,t){let[n,i]=e.is(A.RequirementDefinition)?[A.RequirementDefinition,"validateRequirementDefinitionOnlyOneSubject"]:[A.RequirementUsage,"validateRequirementUsageOnlyOneSubject"];this.atMostOneMember(e,A.SubjectMembership,t,`A ${n} must have at most one featureMembership that is a SubjectMembership.`,{code:i})}validateRequirementSubjectParameterPosition(e,t){let[n,i]=e.is(A.RequirementDefinition)?[A.RequirementDefinition,"validateRequirementDefinitionSubjectParameterPosition"]:[A.RequirementUsage,"validateRequirementUsageSubjectParameterPosition"];this.checkFirstInput(e,e.featuresByMembership(A.SubjectMembership).head(),t,`The subjectParameter of a ${n} must be its first input.`,{code:i})}validateRequirementUsageTyping(e,t){this.validateExactlyOneTyping(e,A.RequirementDefinition,t,"RequirementUsages must be typed by exactly one RequirementDefinition.",{code:"validateRequirementUsageTyping"})}validateSatisfyRequirementUsageReference(e,t){this.checkReferencing(e,t,{type:A.SatisfyRequirementUsage,reference:A.RequirementUsage,info:{code:"validateSatisfyRequirementUsageReference"}})}validateCaseDefinitionOnlyOneSubject(e,t){let[n,i]=e.is(A.CaseDefinition)?[A.CaseDefinition,"validateCaseDefinitionOnlyOneSubject"]:[A.CaseUsage,"validateCaseUsageOnlyOneSubject"];this.atMostOneMember(e,A.SubjectMembership,t,`A ${n} must have at most one featureMembership that is a SubjectMembership.`,{code:i})}validateCaseOnlyOneObjective(e,t){let[n,i]=e.is(A.CaseDefinition)?[A.CaseDefinition,"validateCaseDefinitionOnlyOneObjective"]:[A.CaseUsage,"validateCaseUsageOnlyOneObjective"];this.atMostOneMember(e,A.ObjectiveMembership,t,`A ${n} must have at most one featureMembership that is a ObjectiveMembership.`,{code:i})}validateCaseSubjectParameterPosition(e,t){let[n,i]=e.is(A.CaseDefinition)?[A.CaseDefinition,"validateCaseDefinitionSubjectParameterPosition"]:[A.CaseUsage,"validateCaseUsageSubjectParameterPosition"];this.checkFirstInput(e,e.featuresByMembership(A.SubjectMembership).head(),t,`The subjectParameter of a ${n} must be its first input.`,{code:i})}validateCaseUsageTyping(e,t){this.validateExactlyOneTyping(e,A.CaseDefinition,t,"CaseUsages must be typed by exactly one CaseDefinition.",{code:"validateCaseUsageTyping"})}validateObjectiveMembershipIsComposite(e,t){var n;!((n=e.element())===null||n===void 0)&&n.isComposite||t("error","The ownedConstraint of a ObjectiveMembership must be composite.",{element:e,code:"validateObjectiveMembershipIsComposite"})}validateObjectiveMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.CaseUsage,A.CaseDefinition)||t("error","The owningType of an ObjectiveMembership must be a CaseDefinition or CaseUsage.",{element:e,code:"validateObjectiveMembershipOwningType"})}validateAnalysisCaseUsageTyping(e,t){this.validateExactlyOneTyping(e,A.AnalysisCaseDefinition,t,"AnalysisCaseUsages must be typed by exactly one AnalysisCaseDefinition",{code:"validateAnalysisCaseUsageTyping"})}validateRequirementVerificationMembershipOwningType(e,t){e.isLegalVerification()||t("error","The owningType of a RequirementVerificationMembership must be a RequirementUsage that is owned by an ObjectiveMembership.",{element:e,code:"validateRequirementVerificationMembershipOwningType"})}validateVerificationCaseUsageTyping(e,t){this.validateExactlyOneTyping(e,A.VerificationCaseDefinition,t,"VerificationCaseUsages must be typed by exactly one VerificationCaseDefinition.",{code:"validateVerificationCaseUsageTyping"})}validateIncludeUseCaseUsageReference(e,t){this.checkReferencing(e,t,{type:A.IncludeUseCaseUsage,reference:A.UseCaseUsage,info:{code:"validateIncludeUseCaseUsageReference"}})}validateUseCaseUsageTyping(e,t){this.validateExactlyOneTyping(e,A.UseCaseDefinition,t,"UseCaseUsages must be typed by exactly one UseCaseDefinition.",{code:"validateUseCaseUsageTyping"})}validateExposeOwningNamespace(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.is(A.ViewUsage)||t("error","The importOwningNamespace of an Expose must be a ViewUsage.",{element:e,code:"validateExposeOwningNamespace"})}validateRenderingUsageTyping(e,t){this.validateExactlyOneTyping(e,A.RenderingDefinition,t,"RenderingUsages must be typed by exactly one RenderingDefinition.",{code:"validateRenderingUsageTyping"})}validateViewDefinitionOnlyOneViewRendering(e,t){let[n,i]=e.is(A.ViewDefinition)?[A.ViewDefinition,"validateViewDefinitionOnlyOneViewRendering"]:[A.ViewUsage,"validateViewUsageOnlyOneViewRendering"];this.atMostOneMember(e,A.ViewRenderingMembership,t,`A ${n} must have at most one ViewRenderingMembership.`,{code:i})}validateViewpointUsageTyping(e,t){this.validateExactlyOneTyping(e,A.ViewpointDefinition,t,"ViewpointUsages must be typed by exactly one ViewpointDefinition.",{code:"validateViewpointUsageTyping"})}validateViewRenderingMembershipOwningType(e,t){var n;!((n=e.owner())===null||n===void 0)&&n.isAny(A.ViewUsage,A.ViewDefinition)||t("error","The owningType of an ViewRenderingMembership must be a CaseDefinition or CaseUsage.",{element:e,code:"validateViewRenderingMembershipOwningType"})}validateViewUsageTyping(e,t){this.validateExactlyOneTyping(e,A.ViewDefinition,t,"ViewUsages must be typed by exactly one ViewDefinition.",{code:"validateViewUsageTyping"})}validateMetadataUsageTyping(e,t){this.validateExactlyOneTyping(e,A.Metaclass,t,"MetadataUsages must be typed by exactly one Metaclass.",{code:"validateMetadataUsageTyping"})}validateDatatypeSpecialization(e,t){this.apply("error",e.specializations(A.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(A.Class,A.Association)}),"An AttributeDefinition must not specialize a Class or an Association.",t,{code:"validateDatatypeSpecialization",property:"targetRef"})}validateClassSpecialization(e,t){this.apply("error",e.specializations(A.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(A.DataType,A.Association)}),"An ItemDefinition must not specialize a DataType or an Association.",t,{code:"validateClassSpecialization",property:"targetRef"})}validateAssocStructSpecialization(e,t){this.apply("error",e.specializations(A.Specialization).filter(n=>{var i;return(i=n.element())===null||i===void 0?void 0:i.isAny(A.DataType)}),"A ConnectionDefinition must not specialize a DataType.",t,{code:"validateClassSpecialization",property:"targetRef"})}validateOperatorExpressionQuantity(e,t){if(e.operator===Gs.OPERATORS.QUANTITY){let n=e.operands.at(1);if(!n)return;this.resultConforms(n,"MeasurementReferences::TensorMeasurementReference")||t("warning","Invalid quantity expression, expected a measurement reference unit",{element:e,property:"operands",index:1,code:"validateOperatorExpressionQuantity"})}}resultConforms(e,t){let n=e.returnType();if(n&&this.index.conforms(n,t))return!0;if(e.is(A.OperatorExpression)){if(!n){let i=this.index.findType(n);if(i&&!i.types().some(a=>this.index.conforms(t,a)))return!1}return e.args.filter(Gs.BasicMetamodel.is(A.Expression)).some(i=>this.resultConforms(i,t))}return!1}validateAllTypings(e,t,n,i,a){return e.allTypings().some(s=>!s.is(t))?(n("error",i,Object.assign(Object.assign({},a),{element:e})),!1):!0}validateAtLeastTyping(e,t,n,i,a){return e.allTypings().find(s=>s.is(t))?!0:(n("error",i,Object.assign(Object.assign({},a),{element:e})),!1)}checkReferencing(e,t,n){let i=e.specializations(A.ReferenceSubsetting).at(0),a=i==null?void 0:i.finalElement();i&&a&&!a.is(n.reference)&&t("error",`ReferenceSubsettings owned by ${n.type} must reference ${n.reference}`,Object.assign(Object.assign({},n.info),{element:i}))}checkParameters(e,t,n,i){t.forEach(a=>{e[a]||n("error",`${i.type} must have ${a} parameter.`,Object.assign(Object.assign({},i.info),{element:e}))})}checkFirstInput(e,t,n,i,a){if(!t)return;e.ownedInputParameters()[0]!==t&&n("error",i,Object.assign(Object.assign({},a),{element:e.ownedInputParameters()[0]}))}};Ga.SysMLValidator=ce;pe([(0,Z.validateSysML)(A.Definition),(0,Z.validateSysML)(A.Usage)],ce.prototype,"validateVariationMembership",null);pe([(0,Z.validateSysML)(A.Definition),(0,Z.validateSysML)(A.Usage)],ce.prototype,"validateVariationSpecialization",null);pe([(0,Z.validateSysML)(A.VariantMembership)],ce.prototype,"validateVariantMembershipOwningNamespace",null);pe([(0,Z.validateSysML)(A.AttributeUsage)],ce.prototype,"validateAttributeUsageTyping",null);pe([(0,Z.validateSysML)(A.EnumerationUsage)],ce.prototype,"validateEnumerationUsageTyping",null);pe([(0,Z.validateSysML)(A.EventOccurrenceUsage)],ce.prototype,"validateEventOccurrenceUsageReference",null);pe([(0,Z.validateSysML)(A.OccurrenceDefinition)],ce.prototype,"validateOccurrenceDefinitionLifeClass",null);pe([(0,Z.validateSysML)(A.OccurrenceUsage,[A.ItemUsage,A.PortUsage,A.Step])],ce.prototype,"validateOccurrenceUsageTyping",null);pe([(0,Z.validateSysML)(A.OccurrenceUsage)],ce.prototype,"validateOccurrenceUsageIndividual",null);pe([(0,Z.validateSysML)(A.ItemUsage,[A.PartUsage,A.PortUsage,A.MetadataUsage])],ce.prototype,"validateItemUsageTyping",null);pe([(0,Z.validateSysML)(A.PartUsage,[A.ConnectionUsage])],ce.prototype,"validatePartUsageTyping",null);pe([(0,Z.validateSysML)(A.ConjugatedPortDefinition)],ce.prototype,"validateConjugatedPortDefinitionOriginalPortDefinition",null);pe([(0,Z.validateSysML)(A.PortDefinition,[A.ConjugatedPortDefinition])],ce.prototype,"validatePortDefinitionConjugatedPortDefinition",null);pe([(0,Z.validateSysML)(A.PortDefinition),(0,Z.validateSysML)(A.PortUsage)],ce.prototype,"validatePortOwnedUsagesNotComposite",null);pe([(0,Z.validateSysML)(A.PortUsage)],ce.prototype,"validatePortUsageTyping",null);pe([(0,Z.validateSysML)(A.ConnectionUsage,[A.FlowConnectionUsage,A.InterfaceUsage,A.AllocationUsage])],ce.prototype,"validateConnectionUsageTyping",null);pe([(0,Z.validateSysML)(A.FlowConnectionDefinition)],ce.prototype,"validateFlowConnectionEnd",null);pe([(0,Z.validateSysML)(A.FlowConnectionUsage)],ce.prototype,"validateFlowConnectionUsageTyping",null);pe([(0,Z.validateSysML)(A.InterfaceDefinition),(0,Z.validateSysML)(A.InterfaceUsage)],ce.prototype,"validateInterfaceEnds",null);pe([(0,Z.validateSysML)(A.InterfaceUsage)],ce.prototype,"validateInterfaceUsageTyping",null);pe([(0,Z.validateSysML)(A.AllocationUsage)],ce.prototype,"validateAllocationUsageTyping",null);pe([(0,Z.validateSysML)(A.AcceptActionUsage)],ce.prototype,"validateAcceptActionUsageParameters",null);pe([(0,Z.validateSysML)(A.ActionUsage,[A.StateUsage,A.CalculationUsage,A.FlowConnectionUsage])],ce.prototype,"validateActionUsageTyping",null);pe([(0,Z.validateSysML)(A.AssignmentActionUsage)],ce.prototype,"validateAssignmentActionUsageReferent",null);pe([(0,Z.validateSysML)(A.TriggerInvocationExpression)],ce.prototype,"validateTriggerInvocationExpression",null);pe([(0,Z.validateSysML)(A.ControlNode)],ce.prototype,"validateControlNodeOwningType",null);pe([(0,Z.validateSysML)(A.PerformActionUsage,[A.ExhibitStateUsage,A.IncludeUseCaseUsage])],ce.prototype,"validatePerformActionUsageReference",null);pe([(0,Z.validateSysML)(A.SendActionUsage)],ce.prototype,"validateSendActionParameters",null);pe([(0,Z.validateSysML)(A.SendActionUsage)],ce.prototype,"validateSendActionReceiver",null);pe([(0,Z.validateSysML)(A.ExhibitStateUsage)],ce.prototype,"validateExhibitStateUsageReference",null);pe([(0,Z.validateSysML)(A.StateSubactionMembership)],ce.prototype,"validateStateSubactionMembershipOwningType",null);pe([(0,Z.validateSysML)(A.SuccessionAsUsage),(0,Z.validateSysML)(A.TransitionUsage)],ce.prototype,"validateStateParallelSubactions",null);pe([(0,Z.validateSysML)(A.StateDefinition),(0,Z.validateSysML)(A.StateUsage)],ce.prototype,"validateStateSubactionKind",null);pe([(0,Z.validateSysML)(A.StateUsage)],ce.prototype,"validateStateUsageTyping",null);pe([(0,Z.validateSysML)(A.TransitionFeatureMembership)],ce.prototype,"validateTransitionFeatureMembership",null);pe([(0,Z.validateSysML)(A.TransitionFeatureMembership)],ce.prototype,"validateTransitionFeatureMembershipOwningType",null);pe([(0,Z.validateSysML)(A.TransitionUsage)],ce.prototype,"validateTransitionUsageParameters",null);pe([(0,Z.validateSysML)(A.TransitionUsage)],ce.prototype,"validateTransitionUsageSuccession",null);pe([(0,Z.validateSysML)(A.CalculationUsage,[A.CaseUsage])],ce.prototype,"validateCalculationUsageTyping",null);pe([(0,Z.validateSysML)(A.AssertConstraintUsage)],ce.prototype,"validateAssertConstraintUsageReference",null);pe([(0,Z.validateSysML)(A.ConstraintUsage,[A.RequirementUsage])],ce.prototype,"validateConstraintUsageTyping",null);pe([(0,Z.validateSysML)(A.SubjectMembership)],ce.prototype,"validateSubjectMembershipOwningType",null);pe([(0,Z.validateSysML)(A.ActorMembership)],ce.prototype,"validateActorMembershipOwningType",null);pe([(0,Z.validateSysML)(A.RequirementConstraintMembership)],ce.prototype,"validateRequirementConstraintMembershipIsComposite",null);pe([(0,Z.validateSysML)(A.RequirementConstraintMembership),(0,Z.validateSysML)(A.StakeholderMembership)],ce.prototype,"validateRequirementMembershipOwningType",null);pe([(0,Z.validateSysML)(A.RequirementDefinition),(0,Z.validateSysML)(A.RequirementUsage)],ce.prototype,"validateRequirementOnlyOneSubject",null);pe([(0,Z.validateSysML)(A.RequirementDefinition),(0,Z.validateSysML)(A.RequirementUsage)],ce.prototype,"validateRequirementSubjectParameterPosition",null);pe([(0,Z.validateSysML)(A.RequirementUsage,[A.ViewpointUsage])],ce.prototype,"validateRequirementUsageTyping",null);pe([(0,Z.validateSysML)(A.SatisfyRequirementUsage)],ce.prototype,"validateSatisfyRequirementUsageReference",null);pe([(0,Z.validateSysML)(A.CaseDefinition),(0,Z.validateSysML)(A.CaseUsage)],ce.prototype,"validateCaseDefinitionOnlyOneSubject",null);pe([(0,Z.validateSysML)(A.CaseDefinition),(0,Z.validateSysML)(A.CaseUsage)],ce.prototype,"validateCaseOnlyOneObjective",null);pe([(0,Z.validateSysML)(A.CaseDefinition),(0,Z.validateSysML)(A.CaseUsage)],ce.prototype,"validateCaseSubjectParameterPosition",null);pe([(0,Z.validateSysML)(A.CaseUsage,[A.AnalysisCaseUsage,A.VerificationCaseUsage,A.UseCaseUsage])],ce.prototype,"validateCaseUsageTyping",null);pe([(0,Z.validateSysML)(A.ObjectiveMembership)],ce.prototype,"validateObjectiveMembershipIsComposite",null);pe([(0,Z.validateSysML)(A.ObjectiveMembership)],ce.prototype,"validateObjectiveMembershipOwningType",null);pe([(0,Z.validateSysML)(A.AnalysisCaseUsage)],ce.prototype,"validateAnalysisCaseUsageTyping",null);pe([(0,Z.validateSysML)(A.RequirementVerificationMembership)],ce.prototype,"validateRequirementVerificationMembershipOwningType",null);pe([(0,Z.validateSysML)(A.VerificationCaseUsage)],ce.prototype,"validateVerificationCaseUsageTyping",null);pe([(0,Z.validateSysML)(A.IncludeUseCaseUsage)],ce.prototype,"validateIncludeUseCaseUsageReference",null);pe([(0,Z.validateSysML)(A.UseCaseUsage)],ce.prototype,"validateUseCaseUsageTyping",null);pe([(0,Z.validateSysML)(A.Expose)],ce.prototype,"validateExposeOwningNamespace",null);pe([(0,Z.validateSysML)(A.RenderingUsage)],ce.prototype,"validateRenderingUsageTyping",null);pe([(0,Z.validateSysML)(A.ViewDefinition),(0,Z.validateSysML)(A.ViewUsage)],ce.prototype,"validateViewDefinitionOnlyOneViewRendering",null);pe([(0,Z.validateSysML)(A.ViewpointUsage)],ce.prototype,"validateViewpointUsageTyping",null);pe([(0,Z.validateSysML)(A.ViewRenderingMembership)],ce.prototype,"validateViewRenderingMembershipOwningType",null);pe([(0,Z.validateSysML)(A.ViewUsage)],ce.prototype,"validateViewUsageTyping",null);pe([(0,Z.validateSysML)(A.MetadataUsage)],ce.prototype,"validateMetadataUsageTyping",null);pe([(0,Z.validateSysML)(A.DataType)],ce.prototype,"validateDatatypeSpecialization",null);pe([(0,Z.validateSysML)(A.Class,[A.AssociationStructure,A.Interaction])],ce.prototype,"validateClassSpecialization",null);pe([(0,Z.validateSysML)(A.AssociationStructure),(0,Z.validateSysML)(A.Interaction)],ce.prototype,"validateAssocStructSpecialization",null);pe([(0,Z.validateSysML)(A.OperatorExpression,[A.CollectExpression,A.SelectExpression,A.FeatureChainExpression])],ce.prototype,"validateOperatorExpressionQuantity",null)});var bL=p(Ka=>{"use strict";var Ert=Ka&&Ka.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Ka,"__esModule",{value:!0});Ka.LanguageEvents=Ka.SharedEvents=Ka.Event=Ka.AsyncEvent=void 0;var Ort=Pe(),krt=an(),pD=class{constructor(){this.listeners=[]}add(e,t,n){let i={context:t,listener:e};this.listeners.push(i);let a=Ort.Disposable.create(()=>{(0,krt.erase)(this.listeners,i)});return n&&n.push(a),a}reportFailure(e,t){let n=`'${this.listeners[e].listener.name}' failed: ${t}`;t instanceof Error&&(n+=`
`+t.stack),console.error(n)}dispatch(...e){let t=[];return this.listeners.forEach((n,i)=>{try{t.push(n.listener.call(n.context,...e))}catch(a){this.reportFailure(i,a)}}),t}},mD=class extends pD{emit(...e){return Ert(this,void 0,void 0,function*(){let t=yield Promise.allSettled(this.dispatch(...e)),n=[];return t.forEach((i,a)=>{i.status==="rejected"?this.reportFailure(a,i.reason):n.push(i.value)}),n})}};Ka.AsyncEvent=mD;var z$=class extends pD{emit(...e){return this.dispatch(...e)}};Ka.Event=z$;var TL=class{constructor(){this.onConfigurationChanged=new z$}};Ka.SharedEvents=TL;var RL=class{constructor(){this.onHoverRequest=new mD,this.onConfigurationChanged=new z$}};Ka.LanguageEvents=RL});var wL=p(Ng=>{"use strict";var CL=Ng&&Ng.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(Ng,"__esModule",{value:!0});Ng.ExtensionManager=void 0;var Zae=_n(),ese=an(),AL=class{constructor(e){this.services=e,this.fileSystem=e.workspace.FileSystemProvider}loadScripts(e){return CL(this,void 0,void 0,function*(){Array.isArray(e)||(e=[e]),yield(0,ese.waitAllPromises)(e.map(t=>this.loadFromPath(t)),(t,n)=>`Failed to load script path ${e[n].fsPath}: ${t.reason}`)})}loadFromPath(e){return CL(this,void 0,void 0,function*(){let t=Zae.Utils.extname(e);if(t.length===0){let n=yield this.fileSystem.readDirectory(e).then(i=>i.filter(a=>a.isFile&&Zae.Utils.extname(a.uri)===".js"));yield(0,ese.waitAllPromises)(n.map(i=>this.loadScript(i.uri)))}else t===".js"&&(yield this.loadScript(e))})}loadScript(e){return CL(this,void 0,void 0,function*(){let t=yield this.fileSystem.loadScript(e),n="no 'activate' function found";if(t&&"activate"in t){if(typeof t.activate=="function"){yield t.activate(this.services),console.log(`Plugin '${e.fsPath}' was activated.`);return}n="'activate' is not a function"}console.log(`Could not load plugin at ${e.fsPath}: ${n}`)})}};Ng.ExtensionManager=AL});var ML=p(yD=>{"use strict";Object.defineProperty(yD,"__esModule",{value:!0});yD.ModelUtil=void 0;var DL=Wn(),SL=class{constructor(){this.idProvider=(0,DL.basicIdProvider)()}createId(){return this.idProvider()}addChainingFeature(e,t){let n=DL.FeatureChainingMeta.create(this.idProvider,e.document);return e.addFeatureRelationship([n,t]),e}chainFeatures(e,...t){let n=DL.FeatureMeta.create(this.idProvider,e.document);for(let i of[e,...t]){let a=i.chainingFeatures;a.length===0?this.addChainingFeature(n,i):a.forEach(s=>this.addChainingFeature(n,s))}return n}};yD.ModelUtil=SL});var tse=p(Ha=>{"use strict";var Irt=Ha&&Ha.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),qg=Ha&&Ha.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Irt(e,r,t)};Object.defineProperty(Ha,"__esModule",{value:!0});qg(Xw(),Ha);qg(Wx(),Ha);qg(yL(),Ha);qg(fL(),Ha);qg(sL(),Ha);qg(iL(),Ha)});var nse=p(Lc=>{"use strict";var Frt=Lc&&Lc.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),rse=Lc&&Lc.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Frt(e,r,t)};Object.defineProperty(Lc,"__esModule",{value:!0});rse(gL(),Lc);rse(qx(),Lc)});var ise=p(wl=>{"use strict";var Nrt=wl&&wl.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),hD=wl&&wl.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Nrt(e,r,t)};Object.defineProperty(wl,"__esModule",{value:!0});hD(_x(),wl);hD(mx(),wl);hD(fx(),wl);hD(bx(),wl)});var sse=p(ase=>{"use strict";Object.defineProperty(ase,"__esModule",{value:!0})});var ose=p(gD=>{"use strict";Object.defineProperty(gD,"__esModule",{value:!0});gD.SysMLServiceRegistry=void 0;var qrt=be(),PL=class extends qrt.DefaultServiceRegistry{getServices(e){var t,n;try{return super.getServices(e)}catch(i){let a=(t=this.singleton)!==null&&t!==void 0?t:(n=this.map)===null||n===void 0?void 0:n[".sysml"];if(!a)throw new Error("No services registered!");return a}}};gD.SysMLServiceRegistry=PL});var use=p(jc=>{"use strict";var lse=jc&&jc.__awaiter||function(r,e,t,n){function i(a){return a instanceof t?a:new t(function(s){s(a)})}return new(t||(t=Promise))(function(a,s){function o(f){try{c(n.next(f))}catch(d){s(d)}}function u(f){try{c(n.throw(f))}catch(d){s(d)}}function c(f){f.done?a(f.value):i(f.value).then(o,u)}c((n=n.apply(r,e||[])).next())})};Object.defineProperty(jc,"__esModule",{value:!0});jc.SysMLEmptyFileSystem=jc.SysMLEmptyFileSystemProvider=void 0;var xrt=be(),vD=class extends xrt.EmptyFileSystemProvider{get standardLibrary(){}updateStandardLibrary(e){}get extensionDir(){}exists(e){return lse(this,void 0,void 0,function*(){return!1})}existsSync(e){return!1}loadScript(e){throw new Error("Method not implemented.")}preloadFiles(e){return lse(this,void 0,void 0,function*(){})}};jc.SysMLEmptyFileSystemProvider=vD;jc.SysMLEmptyFileSystem={fileSystemProvider:()=>new vD}});var cse=p(Bi=>{"use strict";var Lrt=Bi&&Bi.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Uc=Bi&&Bi.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Lrt(e,r,t)};Object.defineProperty(Bi,"__esModule",{value:!0});Uc(Lx(),Bi);Uc(lL(),Bi);Uc(gx(),Bi);Uc(eL(),Bi);Uc(use(),Bi);Uc(Tx(),Bi);Uc(Fx(),Bi);Uc(Jx(),Bi)});var fse=p(Ks=>{"use strict";var jrt=Ks&&Ks.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Y$=Ks&&Ks.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&jrt(e,r,t)};Object.defineProperty(Ks,"__esModule",{value:!0});Y$(Zw(),Ks);Y$(wL(),Ks);Y$(ML(),Ks);Y$(ose(),Ks);Y$(cse(),Ks)});var dse=p(_D=>{"use strict";Object.defineProperty(_D,"__esModule",{value:!0});_D.makeError=void 0;var Urt=be();function Brt(r,e,t){if(!(0,Urt.isAstNode)(r)){let n=r.ast();return n?Object.assign(Object.assign(Object.assign({},e),{node:n}),t==null?void 0:t.call(void 0,n)):Object.assign(Object.assign({},e),{model:r})}return Object.assign(Object.assign(Object.assign({},e),{node:r}),t==null?void 0:t.call(void 0,r))}_D.makeError=Brt});var pse=p(Va=>{"use strict";var Grt=Va&&Va.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),xg=Va&&Va.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Grt(e,r,t)};Object.defineProperty(Va,"__esModule",{value:!0});xg(Dx(),Va);xg(_L(),Va);xg(dD(),Va);xg(lx(),Va);xg($L(),Va);xg(Ag(),Va)});var mse=p(ai=>{"use strict";var Krt=ai&&ai.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Dl=ai&&ai.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&Krt(e,r,t)};Object.defineProperty(ai,"__esModule",{value:!0});Dl(tL(),ai);Dl(bL(),ai);Dl(tse(),ai);Dl(nse(),ai);Dl(ise(),ai);Dl(sse(),ai);Dl(fse(),ai);Dl(Mx(),ai);Dl(dse(),ai);Dl(pse(),ai)});var $se=p(qn=>{"use strict";Object.defineProperty(qn,"__esModule",{value:!0});qn.createSysMLServices=qn.SysMLSharedModule=qn.KerMLModule=qn.SysMLModule=qn.SysMLDefaultModule=void 0;var Lg=be(),EL=pae(),Hrt=lx(),Vrt=fx(),Wrt=mx(),zrt=gx(),Yrt=_x(),Xrt=Tx(),Jrt=bx(),Qrt=Xw(),Zrt=Dx(),ent=Mx(),tnt=Fx(),rnt=qx(),nnt=rC(),hse=Lx(),int=Wx(),ant=Jx(),yse=eL(),gse=tL(),vse=an(),snt=iL(),ont=sL(),lnt=lL(),unt=fL(),cnt=yL(),fnt=gL(),dnt=_L(),pnt=dD(),mnt=$L(),_se=bL(),ynt=wL(),hnt=ML(),gnt=Zw(),vnt=mse();qn.SysMLDefaultModule={parser:{LangiumParser:r=>(0,rnt.createSysMLParser)(r),GrammarConfig:r=>(0,fnt.createSysMLGrammarConfig)(r)},references:{ScopeComputation:r=>new Vrt.SysMLScopeComputation(r),ScopeProvider:r=>new Jrt.SysMLScopeProvider(r),NameProvider:()=>new Wrt.SysMLNameProvider,Linker:r=>new Yrt.SysMLLinker(r)},validation:{DocumentValidator:r=>new Zrt.SysMLDocumentValidator(r)},lsp:{Formatter:r=>new cnt.SysMLFormatter(r),CompletionProvider:r=>new Qrt.SysMLCompletionProvider(r),SemanticTokenProvider:r=>new snt.SysMLSemanticTokenProvider(r),HoverProvider:r=>new unt.SysMLHoverProvider(r)},workspace:{AstNodeDescriptionProvider:r=>new hse.SysMLNodeDescriptionProvider(r.shared)},Events:()=>new _se.LanguageEvents};qn.SysMLModule={validation:{ValidationRegistry:r=>new Hrt.SysMLValidationRegistry(r),SysMLValidator:r=>new mnt.SysMLValidator(r.shared)}};qn.KerMLModule={validation:{ValidationRegistry:r=>new dnt.KerMLValidationRegistry(r),KerMLValidator:r=>new pnt.KerMLValidator(r.shared)}};qn.SysMLSharedModule={ServiceRegistry:()=>new vnt.SysMLServiceRegistry,AstReflection:()=>new ent.SysMLAstReflection,workspace:{DocumentBuilder:r=>new zrt.SysMLDocumentBuilder(r),IndexManager:r=>new Xrt.SysMLIndexManager(r),MetamodelBuilder:r=>new tnt.SysMLMetamodelBuilder(r),AstNodeLocator:()=>new nnt.DefaultAstNodeLocator,AstNodeDescriptionProvider:r=>new hse.SysMLNodeDescriptionProvider(r),WorkspaceManager:r=>new ant.SysMLWorkspaceManager(r),LangiumDocumentFactory:r=>new yse.SysMLDocumentFactory(r),ConfigurationProvider:r=>new lnt.SysMLConfigurationProvider(r),LangiumDocuments:r=>new yse.SysMLDocuments(r)},lsp:{ExecuteCommandHandler:r=>new int.SysMLExecuteCommandHandler(r),LanguageServer:r=>new ont.SysMLLanguageServer(r)},config:()=>gse.DefaultSysMLConfig,Evaluator:r=>new gnt.SysMLExpressionEvaluator(r),statistics:()=>new vse.Statistics,ExtensionManager:r=>new ynt.ExtensionManager(r),Events:()=>new _se.SharedEvents,Util:()=>new hnt.ModelUtil};function _nt(r,e){let t=Object.assign(Object.assign({},qn.SysMLSharedModule),{config:()=>(0,vse.mergeWithPartial)(gse.DefaultSysMLConfig,e)}),n=(0,Lg.inject)((0,Lg.createDefaultSharedModule)(r),EL.SysMlGeneratedSharedModule,t),i=(0,Lg.inject)((0,Lg.createDefaultModule)({shared:n}),EL.SysMLGeneratedModule,qn.SysMLDefaultModule,qn.SysMLModule),a=(0,Lg.inject)((0,Lg.createDefaultModule)({shared:n}),EL.KerMLGeneratedModule,qn.SysMLDefaultModule,qn.KerMLModule);return n.ServiceRegistry.register(i),n.ServiceRegistry.register(a),{shared:n,SysML:i,KerML:a}}qn.createSysMLServices=_nt});var Tse=p($D=>{"use strict";Object.defineProperty($D,"__esModule",{value:!0});$D.startServer=void 0;var $nt=be(),Tnt=$se();function Rnt(r,e,t){let n=(0,Tnt.createSysMLServices)(Object.assign({connection:r},e),t);return(0,$nt.startLanguageServer)(n.shared),n}$D.startServer=Rnt});var Rse=p(Wm=>{"use strict";var bnt=Wm&&Wm.__createBinding||(Object.create?function(r,e,t,n){n===void 0&&(n=t);var i=Object.getOwnPropertyDescriptor(e,t);(!i||("get"in i?!e.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(r,n,i)}:function(r,e,t,n){n===void 0&&(n=t),r[n]=e[t]}),Cnt=Wm&&Wm.__exportStar||function(r,e){for(var t in r)t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t)&&bnt(e,r,t)};Object.defineProperty(Wm,"__esModule",{value:!0});Cnt(Tse(),Wm)});var Cse=p(TD=>{"use strict";Object.defineProperty(TD,"__esModule",{value:!0});TD.startServer=void 0;var bse=Uk(),Ant=Kk(),wnt=fae(),Dnt=Rse();function Snt(r){let[e,t]=(0,Ant.createTransport)(r),n=(0,bse.createConnection)(bse.ProposedFeatures.all,e,t);return(0,Dnt.startServer)(n,wnt.SysMLNodeFileSystem,r)}TD.startServer=Snt});var Dse=p(wse=>{"use strict";Object.defineProperty(wse,"__esModule",{value:!0});var Ase=Kk(),Mnt=Cse(),Pnt=(0,Ase.createArgParser)(Ase.DefaultNodeLauncherOptions).parse();(0,Mnt.startServer)(Pnt)});var CRt=bD(Dse());
//! import metamodel types last to let decorators run
//! Changes to the following need to be reflected in package.json
//! -------------------------------------------------------------------
